import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from unidecode import unidecode
import re
from natsort import natsorted # ordenar por número
import time
# import os
import getpass
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
# import subprocess
# import sys
import torch
import scipy.special
# import torch.nn as nn
# import torch.nn.functional as F
# import torch.optim as optim
from sklearn.decomposition import PCA
from sklearn.model_selection import train_test_split, StratifiedKFold
import pickle
import json
import sys
from concurrent.futures import ThreadPoolExecutor, as_completed
import os
import seaborn as sns
import opt_einsum as oe
from scipy.stats import norm
import math
from collections import defaultdict
from sklearn.cross_decomposition import PLSRegression
from sklearn.metrics import r2_score
from matplotlib.gridspec import GridSpec
import matplotlib.cm as cm
import itertools
from collections import Counter
from collections import OrderedDict
from matplotlib.ticker import LogLocator, LogFormatterMathtext
import matplotlib.ticker as mtick
from matplotlib.ticker import FuncFormatter
import plotly.graph_objects as go

# Obtener el nombre de usuario
nombre_usuario = getpass.getuser()  # Funciona en Windows y Unix

# Comparar el nombre de usuario y definir COD_FOLDER
COD_FOLDER = "" if nombre_usuario in ['charlesthraves','cthraves', 'lmeneses', 'Leonardo', 'Usuario'] else "Codigo/"
# COD_FOLDER = "" if pwd.getpwuid(os.getuid())[0] == 'charlesthraves' else "Codigo/"

device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

atributos_filtro_2021 = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'numper',
 'n_ocupados',
 'n_inactivos',
 'v27',
 'zona_Rural',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'tipohogar_Censal',
 'pobreza_Pobres extremos',
 'pobreza_No pobres',
 'v1_No Casa',
 'v13_No Propia',
 'v20_No Red',
 'edad',
 'sexo_Mujer',
 'ecivil_En Pareja',
 'ecivil_Soltero',
 'o31_No',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'r1b_En Otra',
 'r2_En Otra',
 'inmigrante_Inmigrante',
 'etnia_Pertenece a pueblos indígenas',
 'ypchtotcor',
 'educ_Universidad',
 'prom_soc8b_com',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_AGUA SANTA',
 'Circunscripcion_AISEN',
 'Circunscripcion_ALAMEDA',
 'Circunscripcion_ALERCE',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO ACONCAGUA',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ALTO JAHUEL',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANDALIEN',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTIHUALA',
 'Circunscripcion_ANTILHUE',
 'Circunscripcion_ANTOFAGASTA NORTE',
 'Circunscripcion_ANTOFAGASTA SUR',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_APIAO',
 'Circunscripcion_APOQUINDO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_ARICA NORTE',
 'Circunscripcion_ARRAU-MENDEZ',
 'Circunscripcion_BAHIA MANSA',
 'Circunscripcion_BAHIA MURTA',
 'Circunscripcion_BAJOS DE MENA',
 'Circunscripcion_BALMACEDA',
 'Circunscripcion_BARON',
 'Circunscripcion_BARRAZA',
 'Circunscripcion_BARROS ARANA',
 'Circunscripcion_BATUCO',
 'Circunscripcion_BELEN',
 'Circunscripcion_BELLAVISTA',
 'Circunscripcion_BUCALEMU',
 'Circunscripcion_BUCHUPUREO',
 'Circunscripcion_BUENOS AIRES',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_BUSTAMANTE',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CACHAPOAL',
 'Circunscripcion_CAIMANES',
 'Circunscripcion_CAJON',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CAMPANARIO',
 'Circunscripcion_CANCURA',
 'Circunscripcion_CANELA (CANELA BAJA)',
 'Circunscripcion_CANETE',
 'Circunscripcion_CANITAS',
 'Circunscripcion_CAPITAN AVALOS',
 'Circunscripcion_CAPITAN PASTENE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARAMPANGUE',
 'Circunscripcion_CARELMAPU',
 'Circunscripcion_CAREN',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASMA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CASTRO SUR',
 'Circunscripcion_CATAPILCO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CATILLO',
 'Circunscripcion_CAUNICU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CAYURRUCA',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRILLOS DE TAMAYA',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CERRO NEGRO',
 'Circunscripcion_CERRO NIELOL',
 'Circunscripcion_CHACAO',
 'Circunscripcion_CHACAYAL',
 'Circunscripcion_CHAMIZA',
 'Circunscripcion_CHAMPA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANARAL ALTO',
 'Circunscripcion_CHANAVAYITA',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHAULINEC',
 'Circunscripcion_CHELLEPIN',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHERQUENCO',
 'Circunscripcion_CHICUREO',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHINCOLCO',
 'Circunscripcion_CHIU CHIU',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CHOSHUENCO',
 'Circunscripcion_CHUQUICAMATA',
 'Circunscripcion_CIRUELOS',
 'Circunscripcion_CISNES',
 'Circunscripcion_CIUDAD DE LOS VALLES',
 'Circunscripcion_CIUDAD SATELITE',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_CODPA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIGUE',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COIHUECO SUR',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLACO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLIN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_COMUY',
 'Circunscripcion_CONARIPE',
 'Circunscripcion_CONCEPCION CENTRO',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONCORDIA',
 'Circunscripcion_CONSISTORIAL',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COPIULEMU',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORCOVADO',
 'Circunscripcion_CORINTO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_CORRENTOSO',
 'Circunscripcion_CORTE ALTO',
 'Circunscripcion_COSTA BLANCA',
 'Circunscripcion_COYA',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CRUCERO',
 'Circunscripcion_CUCAO',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CUNCUMEN',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_CURRINE',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DICHATO',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DOMEYKO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_DUAO',
 'Circunscripcion_EL BELLOTO',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL CENTRO',
 'Circunscripcion_EL CORTIJO',
 'Circunscripcion_EL GOLF',
 'Circunscripcion_EL MELON',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL PALQUI',
 'Circunscripcion_EL PRINCIPAL',
 'Circunscripcion_EL PUERTO',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL SALVADOR',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EL TAMBO',
 'Circunscripcion_EL TRANSITO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ENSENADA',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESMERALDA',
 'Circunscripcion_ESTACION LO ESPEJO',
 'Circunscripcion_ESTADIO NACIONAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FOLILCO',
 'Circunscripcion_FORESTAL',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUNDO EL CARMEN',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GENERAL CRUZ',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_GUALLECO',
 'Circunscripcion_GUARILIHUE',
 'Circunscripcion_GULTRO',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALPIN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUAQUEN',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_HUELMO',
 'Circunscripcion_HUELQUEN',
 'Circunscripcion_HUEQUEN',
 'Circunscripcion_HUERTA DEL MAULE',
 'Circunscripcion_HUERTOS FAMILIARES',
 'Circunscripcion_HUEYUSCA',
 'Circunscripcion_HUISCAPI',
 'Circunscripcion_HURTADO',
 'Circunscripcion_ICALMA',
 'Circunscripcion_IGNAO',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_ILOCA',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_IQUIQUE SUR',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_ISLA DEL REY',
 'Circunscripcion_ISLA GUAR',
 'Circunscripcion_ISLA MAILLEN',
 'Circunscripcion_ISLA MOCHA',
 'Circunscripcion_ISLA PULUQUI',
 'Circunscripcion_ISLA SANTA MARIA',
 'Circunscripcion_JOSE PEDRO ALESSANDRI',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA HUERTA',
 'Circunscripcion_LA JUNTA',
 'Circunscripcion_LA LAJA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PASADA',
 'Circunscripcion_LA PAZ',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA PUNTA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA TIRANA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LA VARA',
 'Circunscripcion_LABRANZA',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAGO RAPEL (EL MANZANO)',
 'Circunscripcion_LAGUNA VERDE',
 'Circunscripcion_LAGUNILLAS',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LARAQUETE',
 'Circunscripcion_LAS AMERICAS',
 'Circunscripcion_LAS ANIMAS',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CANTERAS',
 'Circunscripcion_LAS CASCADAS',
 'Circunscripcion_LAS COMPANIAS',
 'Circunscripcion_LAS QUEMAS',
 'Circunscripcion_LASTARRIA',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LENCA',
 'Circunscripcion_LICAN-RAY',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LIQUINE',
 'Circunscripcion_LIRQUEN',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LIUCURA',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LLAY-LLAY',
 'Circunscripcion_LLICO',
 'Circunscripcion_LLICO DE MATAQUITO',
 'Circunscripcion_LLIFEN',
 'Circunscripcion_LLIUCO',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO HERRERA',
 'Circunscripcion_LO MIRANDA',
 'Circunscripcion_LO NEGRETE',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LO VALLEDOR',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LOMAS COLORADAS',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LONTUE',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS CERROS',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS LAURELES',
 'Circunscripcion_LOS LIBERTADORES',
 'Circunscripcion_LOS LIRIOS',
 'Circunscripcion_LOS LOROS',
 'Circunscripcion_LOS MOLLES',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS NICHES',
 'Circunscripcion_LOS PAJARITOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOS VOLCANES',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUIS CRUZ MARTINEZ',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MAIPU PONIENTE',
 'Circunscripcion_MALALCAHUELLO',
 'Circunscripcion_MALALHUE',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MAMINA',
 'Circunscripcion_MANIHUALES',
 'Circunscripcion_MANTILHUE',
 'Circunscripcion_MARCHIGUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MECHUQUE',
 'Circunscripcion_MEDIO CAMINO',
 'Circunscripcion_MEHUIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELEFQUEN',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MELOZAL',
 'Circunscripcion_METAHUE',
 'Circunscripcion_MEULIN',
 'Circunscripcion_MILLANTU',
 'Circunscripcion_MINCHA',
 'Circunscripcion_MININCO',
 'Circunscripcion_MIRAFLORES',
 'Circunscripcion_MISION DE LA COSTA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MOLULCO',
 'Circunscripcion_MONTE AGUILA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MONTEMAR',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NANCUL',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NEHUENTUE',
 'Circunscripcion_NELTUME',
 'Circunscripcion_NIEBLA',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NIREHUAO',
 'Circunscripcion_NIRIVILO',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NONTUELA',
 'Circunscripcion_NUEVA BRAUNAU',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUEVA TOLTEN',
 'Circunscripcion_OBSERVATORIO',
 'Circunscripcion_OLIVAR (ALTO)',
 'Circunscripcion_OLMOPULLI',
 'Circunscripcion_OLMUE',
 'Circunscripcion_ORILLA DEL MAULE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_P AGUIRRE CERDA N.',
 'Circunscripcion_P AGUIRRE CERDA S.',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAIHUANO',
 'Circunscripcion_PAILAHUEQUE',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAILLIHUE',
 'Circunscripcion_PAINE',
 'Circunscripcion_PAIPOTE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PALOMAR',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARGUA',
 'Circunscripcion_PARQUE ALMAGRO',
 "Circunscripcion_PARQUE O'HIGGINS",
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO DE VALDIVIA',
 'Circunscripcion_PEDRO DE VALDIVIA (TEMUCO)',
 'Circunscripcion_PEHUEN',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELCHUQUIN',
 'Circunscripcion_PELEQUEN',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCAHUE-BATUCO',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEULLA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHICUY',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PICHIPELLAHUEN',
 'Circunscripcion_PICHIRROPULLI',
 'Circunscripcion_PILLANLELBUN',
 'Circunscripcion_PILLUCO',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PISAGUA',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PLACILLA DE PENUELAS',
 'Circunscripcion_PLAYA ANCHA',
 'Circunscripcion_PLAYA LOS MOLLES',
 'Circunscripcion_PLAZA EGANA',
 'Circunscripcion_PLAZA NUNOA',
 'Circunscripcion_POCILLAS',
 'Circunscripcion_POLCURA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUDAHUEL SUR',
 'Circunscripcion_PUEBLO SECO',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUENTE NEGRO',
 'Circunscripcion_PUENTE NUBLE',
 'Circunscripcion_PUERTO AGUIRRE',
 'Circunscripcion_PUERTO CHACABUCO',
 'Circunscripcion_PUERTO DOMINGUEZ',
 'Circunscripcion_PUERTO GUADAL',
 'Circunscripcion_PUERTO MONTT CENTRO E ISLA TENGLO',
 'Circunscripcion_PUERTO MONTT MIRASOL',
 'Circunscripcion_PUERTO MONTT NORTE',
 'Circunscripcion_PUERTO NUEVO',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PULLALLY',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUNTA LAVAPIE',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUTU',
 'Circunscripcion_PUYEHUE (ENTRE LAGOS)',
 'Circunscripcion_PUYUHUAPI',
 'Circunscripcion_QUEHUI',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUENAC',
 'Circunscripcion_QUENUIR',
 'Circunscripcion_QUEPE',
 'Circunscripcion_QUEULE',
 'Circunscripcion_QUILACAHUIN',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILIMARI',
 'Circunscripcion_QUILLAGUA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAMALI',
 'Circunscripcion_QUINCHAO (ACHAO)',
 'Circunscripcion_QUINO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_QUITRATUE',
 'Circunscripcion_RADAL',
 'Circunscripcion_RAFAEL',
 'Circunscripcion_RAHUE',
 'Circunscripcion_RAHUE SUR',
 'Circunscripcion_RALCO LEPOY',
 'Circunscripcion_RALUN',
 'Circunscripcion_RAMADILLAS',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANCAGUA ORIENTE',
 'Circunscripcion_RANGUELMO',
 'Circunscripcion_RANQUIL (NIPAS)',
 'Circunscripcion_RAPEL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECINTO',
 'Circunscripcion_RECOLETA NORTE',
 'Circunscripcion_RECOLETA SUR',
 'Circunscripcion_RENACA BAJO',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RERE',
 'Circunscripcion_RETIRO',
 'Circunscripcion_REUMEN',
 'Circunscripcion_RIACHUELO',
 'Circunscripcion_RILAN',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RINIHUE',
 'Circunscripcion_RININAHUE',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO CLARO (CUMPEO)',
 'Circunscripcion_RIO COLORADO',
 'Circunscripcion_RIO HURTADO (SAMO ALTO)',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_RIO TRANQUILO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_ROSARIO',
 'Circunscripcion_RUCAPEQUEN',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SALTOS DEL LAJA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CARLOS DE PUREN',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FELIX',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE COLICO',
 'Circunscripcion_SAN JOSE DE LA ESTRELLA',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN LORENZO DE TARAPACA',
 'Circunscripcion_SAN LUIS',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN MIGUEL DE AZAPA',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ALCANTARA',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN PEDRO DE QUILLOTA',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN RAMON (PADRE LAS CASAS)',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CLARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA FE',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTA OLGA',
 'Circunscripcion_SANTA ROSA',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SARMIENTO',
 'Circunscripcion_SAUSALITO',
 'Circunscripcion_SAUZAL',
 'Circunscripcion_SECTOR EX BARRIO INDUSTRIAL DE ARICA',
 'Circunscripcion_SELVA OBSCURA',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_SIERRA GORDA NORTE',
 'Circunscripcion_SOTERO DEL RIO',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALCAMAVIDA',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEGUALDA',
 'Circunscripcion_TEMUCO CENTRO',
 'Circunscripcion_TEMUCO NORTE',
 'Circunscripcion_TEMUCO SUR',
 'Circunscripcion_TENAUN',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TIERRAS BLANCAS',
 'Circunscripcion_TIJERAL',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCONEY',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOME',
 'Circunscripcion_TOMECO',
 'Circunscripcion_TONGOY',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREGUACO',
 'Circunscripcion_TRES ESQUINAS',
 'Circunscripcion_TRINIDAD',
 'Circunscripcion_TROVOLHUE',
 'Circunscripcion_TRUPAN',
 'Circunscripcion_TUBUL',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_TUCAPEL (HUEPIL)',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALDIVIA DE PAINE',
 'Circunscripcion_VALLE GRANDE',
 'Circunscripcion_VALLE SIMPSON',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VEGAS DE ITATA',
 'Circunscripcion_VENTANAS',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCHES',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLA CERRO CASTILLO',
 'Circunscripcion_VILLA ORTEGA',
 'Circunscripcion_VILLA PRAT',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUMBEL ESTACION',
 'Circunscripcion_YUNGAY',
 'Circunscripcion_ZAPALLAR']
    
atributos_filtro_2021_comuna_circ_dummies = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'tot_per',
 'v27',
 'zona_Urbano',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'pobreza_Pobres no extremos',
 'pobreza_No pobres',
 'v13_Propia',
 'esc2',
 'ecivil_En Pareja',
 'o31_Sí',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'sist_salud_Privado',
 'r1b_En [comuna de ubicación la vivienda]',
 'ytotcor',
 'educ_Universidad',
 'prom_lect8b_com',
 'prom_mate8b_com',
 'prom_soc8b_com',
 'Frac_Inmigrantes',
 'Frac_Pueblos',
 'Frac_Viv_Ocupada',
 'Frac_Viv_Particular',
 'Frac_Viv_Colectiva',
 'Frac_Casa',
 'Frac_Depa',
 'Frac_Pared_Horm',
 'Frac_Techo_Bueno',
 'Frac_Techo_Medio',
 'Frac_Piso_Bueno',
 'Frac_Mat_Aceptable',
 'Frac_Agua_Aceptable',
 'Densidad_Poblacion',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_AGUA SANTA',
 'Circunscripcion_ALAMEDA',
 'Circunscripcion_ALERCE',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO ACONCAGUA',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ALTO JAHUEL',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANDALIEN',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTIHUALA',
 'Circunscripcion_ANTILHUE',
 'Circunscripcion_ANTOFAGASTA NORTE',
 'Circunscripcion_ANTOFAGASTA SUR',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_APIAO',
 'Circunscripcion_APOQUINDO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_ARICA NORTE',
 'Circunscripcion_ARRAU-MENDEZ',
 'Circunscripcion_BAHIA MANSA',
 'Circunscripcion_BAHIA MURTA',
 'Circunscripcion_BAJOS DE MENA',
 'Circunscripcion_BALMACEDA',
 'Circunscripcion_BARON',
 'Circunscripcion_BARRAZA',
 'Circunscripcion_BARROS ARANA',
 'Circunscripcion_BATUCO',
 'Circunscripcion_BELEN',
 'Circunscripcion_BELLAVISTA',
 'Circunscripcion_BUCALEMU',
 'Circunscripcion_BUCHUPUREO',
 'Circunscripcion_BUENOS AIRES',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_BUSTAMANTE',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CACHAPOAL',
 'Circunscripcion_CAIMANES',
 'Circunscripcion_CAJON',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CAMPANARIO',
 'Circunscripcion_CANCURA',
 'Circunscripcion_CANELA (CANELA BAJA)',
 'Circunscripcion_CANETE',
 'Circunscripcion_CANITAS',
 'Circunscripcion_CAPITAN AVALOS',
 'Circunscripcion_CAPITAN PASTENE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARAMPANGUE',
 'Circunscripcion_CARELMAPU',
 'Circunscripcion_CAREN',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASMA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CASTRO SUR',
 'Circunscripcion_CATAPILCO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CATILLO',
 'Circunscripcion_CAUNICU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CAYURRUCA',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRILLOS DE TAMAYA',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CERRO NEGRO',
 'Circunscripcion_CERRO NIELOL',
 'Circunscripcion_CHACAO',
 'Circunscripcion_CHACAYAL',
 'Circunscripcion_CHAMIZA',
 'Circunscripcion_CHAMPA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANARAL ALTO',
 'Circunscripcion_CHANAVAYITA',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHAULINEC',
 'Circunscripcion_CHELLEPIN',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHERQUENCO',
 'Circunscripcion_CHICUREO',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHINCOLCO',
 'Circunscripcion_CHIU CHIU',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CHOSHUENCO',
 'Circunscripcion_CHUQUICAMATA',
 'Circunscripcion_CIRUELOS',
 'Circunscripcion_CISNES',
 'Circunscripcion_CIUDAD DE LOS VALLES',
 'Circunscripcion_CIUDAD SATELITE',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_CODPA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIGUE',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COIHUECO SUR',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLACO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLIN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_COMUY',
 'Circunscripcion_CONARIPE',
 'Circunscripcion_CONCEPCION CENTRO',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONCORDIA',
 'Circunscripcion_CONSISTORIAL',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COPIULEMU',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORCOVADO',
 'Circunscripcion_CORINTO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_CORRENTOSO',
 'Circunscripcion_CORTE ALTO',
 'Circunscripcion_COSTA BLANCA',
 'Circunscripcion_COYA',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CRUCERO',
 'Circunscripcion_CUCAO',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CUNCUMEN',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_CURRINE',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DICHATO',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DOMEYKO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_DUAO',
 'Circunscripcion_EL BELLOTO',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL CENTRO',
 'Circunscripcion_EL CORTIJO',
 'Circunscripcion_EL GOLF',
 'Circunscripcion_EL MELON',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL PALQUI',
 'Circunscripcion_EL PRINCIPAL',
 'Circunscripcion_EL PUERTO',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL SALVADOR',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EL TAMBO',
 'Circunscripcion_EL TRANSITO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ENSENADA',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESMERALDA',
 'Circunscripcion_ESTACION LO ESPEJO',
 'Circunscripcion_ESTADIO NACIONAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FOLILCO',
 'Circunscripcion_FORESTAL',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUNDO EL CARMEN',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GENERAL CRUZ',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_GUALLECO',
 'Circunscripcion_GUARILIHUE',
 'Circunscripcion_GULTRO',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALPIN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUAQUEN',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_HUELMO',
 'Circunscripcion_HUELQUEN',
 'Circunscripcion_HUEQUEN',
 'Circunscripcion_HUERTA DEL MAULE',
 'Circunscripcion_HUERTOS FAMILIARES',
 'Circunscripcion_HUEYUSCA',
 'Circunscripcion_HUISCAPI',
 'Circunscripcion_HURTADO',
 'Circunscripcion_ICALMA',
 'Circunscripcion_IGNAO',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_ILOCA',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_IQUIQUE SUR',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_ISLA DEL REY',
 'Circunscripcion_ISLA GUAR',
 'Circunscripcion_ISLA MAILLEN',
 'Circunscripcion_ISLA MOCHA',
 'Circunscripcion_ISLA PULUQUI',
 'Circunscripcion_ISLA SANTA MARIA',
 'Circunscripcion_JOSE PEDRO ALESSANDRI',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA HUERTA',
 'Circunscripcion_LA JUNTA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PASADA',
 'Circunscripcion_LA PAZ',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA PUNTA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA TIRANA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LA VARA',
 'Circunscripcion_LABRANZA',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAGO RAPEL (EL MANZANO)',
 'Circunscripcion_LAGUNA VERDE',
 'Circunscripcion_LAGUNILLAS',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LARAQUETE',
 'Circunscripcion_LAS AMERICAS',
 'Circunscripcion_LAS ANIMAS',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CANTERAS',
 'Circunscripcion_LAS CASCADAS',
 'Circunscripcion_LAS COMPANIAS',
 'Circunscripcion_LAS QUEMAS',
 'Circunscripcion_LASTARRIA',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LENCA',
 'Circunscripcion_LICAN-RAY',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LIQUINE',
 'Circunscripcion_LIRQUEN',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LIUCURA',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LLICO',
 'Circunscripcion_LLICO DE MATAQUITO',
 'Circunscripcion_LLIFEN',
 'Circunscripcion_LLIUCO',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO HERRERA',
 'Circunscripcion_LO MIRANDA',
 'Circunscripcion_LO NEGRETE',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LO VALLEDOR',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LOMAS COLORADAS',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LONTUE',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS CERROS',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS LAURELES',
 'Circunscripcion_LOS LIBERTADORES',
 'Circunscripcion_LOS LIRIOS',
 'Circunscripcion_LOS LOROS',
 'Circunscripcion_LOS MOLLES',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS NICHES',
 'Circunscripcion_LOS PAJARITOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOS VOLCANES',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUIS CRUZ MARTINEZ',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MAIPU PONIENTE',
 'Circunscripcion_MALALCAHUELLO',
 'Circunscripcion_MALALHUE',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MAMINA',
 'Circunscripcion_MANIHUALES',
 'Circunscripcion_MANTILHUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MECHUQUE',
 'Circunscripcion_MEDIO CAMINO',
 'Circunscripcion_MEHUIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELEFQUEN',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MELOZAL',
 'Circunscripcion_METAHUE',
 'Circunscripcion_MEULIN',
 'Circunscripcion_MILLANTU',
 'Circunscripcion_MINCHA',
 'Circunscripcion_MININCO',
 'Circunscripcion_MIRAFLORES',
 'Circunscripcion_MISION DE LA COSTA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MOLULCO',
 'Circunscripcion_MONTE AGUILA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MONTEMAR',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NANCUL',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NEHUENTUE',
 'Circunscripcion_NELTUME',
 'Circunscripcion_NIEBLA',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NIREHUAO',
 'Circunscripcion_NIRIVILO',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NONTUELA',
 'Circunscripcion_NUEVA BRAUNAU',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUEVA TOLTEN',
 'Circunscripcion_OBSERVATORIO',
 'Circunscripcion_OLIVAR (ALTO)',
 'Circunscripcion_OLMOPULLI',
 'Circunscripcion_OLMUE',
 'Circunscripcion_ORILLA DEL MAULE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_P AGUIRRE CERDA N.',
 'Circunscripcion_P AGUIRRE CERDA S.',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAILAHUEQUE',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAILLIHUE',
 'Circunscripcion_PAINE',
 'Circunscripcion_PAIPOTE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PALOMAR',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARGUA',
 'Circunscripcion_PARQUE ALMAGRO',
 "Circunscripcion_PARQUE O'HIGGINS",
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO DE VALDIVIA',
 'Circunscripcion_PEDRO DE VALDIVIA (TEMUCO)',
 'Circunscripcion_PEHUEN',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELCHUQUIN',
 'Circunscripcion_PELEQUEN',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCAHUE-BATUCO',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEULLA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHICUY',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PICHIPELLAHUEN',
 'Circunscripcion_PICHIRROPULLI',
 'Circunscripcion_PILLANLELBUN',
 'Circunscripcion_PILLUCO',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PISAGUA',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PLACILLA DE PENUELAS',
 'Circunscripcion_PLAYA ANCHA',
 'Circunscripcion_PLAYA LOS MOLLES',
 'Circunscripcion_PLAZA EGANA',
 'Circunscripcion_PLAZA NUNOA',
 'Circunscripcion_POCILLAS',
 'Circunscripcion_POLCURA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUDAHUEL SUR',
 'Circunscripcion_PUEBLO SECO',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUENTE NEGRO',
 'Circunscripcion_PUENTE NUBLE',
 'Circunscripcion_PUERTO AGUIRRE',
 'Circunscripcion_PUERTO CHACABUCO',
 'Circunscripcion_PUERTO DOMINGUEZ',
 'Circunscripcion_PUERTO GUADAL',
 'Circunscripcion_PUERTO MONTT CENTRO E ISLA TENGLO',
 'Circunscripcion_PUERTO MONTT MIRASOL',
 'Circunscripcion_PUERTO MONTT NORTE',
 'Circunscripcion_PUERTO NUEVO',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PULLALLY',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUNTA LAVAPIE',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUTU',
 'Circunscripcion_PUYUHUAPI',
 'Circunscripcion_QUEHUI',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUENAC',
 'Circunscripcion_QUENUIR',
 'Circunscripcion_QUEPE',
 'Circunscripcion_QUEULE',
 'Circunscripcion_QUILACAHUIN',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILIMARI',
 'Circunscripcion_QUILLAGUA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAMALI',
 'Circunscripcion_QUINCHAO (ACHAO)',
 'Circunscripcion_QUINO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_QUITRATUE',
 'Circunscripcion_RADAL',
 'Circunscripcion_RAFAEL',
 'Circunscripcion_RAHUE',
 'Circunscripcion_RAHUE SUR',
 'Circunscripcion_RALCO LEPOY',
 'Circunscripcion_RALUN',
 'Circunscripcion_RAMADILLAS',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANCAGUA ORIENTE',
 'Circunscripcion_RANGUELMO',
 'Circunscripcion_RAPEL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECINTO',
 'Circunscripcion_RECOLETA NORTE',
 'Circunscripcion_RECOLETA SUR',
 'Circunscripcion_RENACA BAJO',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RERE',
 'Circunscripcion_RETIRO',
 'Circunscripcion_REUMEN',
 'Circunscripcion_RIACHUELO',
 'Circunscripcion_RILAN',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RINIHUE',
 'Circunscripcion_RININAHUE',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO COLORADO',
 'Circunscripcion_RIO HURTADO (SAMO ALTO)',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_RIO TRANQUILO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_ROSARIO',
 'Circunscripcion_RUCAPEQUEN',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SALTOS DEL LAJA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CARLOS DE PUREN',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FELIX',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE COLICO',
 'Circunscripcion_SAN JOSE DE LA ESTRELLA',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN LORENZO DE TARAPACA',
 'Circunscripcion_SAN LUIS',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN MIGUEL DE AZAPA',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ALCANTARA',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN PEDRO DE QUILLOTA',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN RAMON (PADRE LAS CASAS)',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CLARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA FE',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTA OLGA',
 'Circunscripcion_SANTA ROSA',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SARMIENTO',
 'Circunscripcion_SAUSALITO',
 'Circunscripcion_SAUZAL',
 'Circunscripcion_SECTOR EX BARRIO INDUSTRIAL DE ARICA',
 'Circunscripcion_SELVA OBSCURA',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_SIERRA GORDA NORTE',
 'Circunscripcion_SOTERO DEL RIO',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALCAMAVIDA',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEGUALDA',
 'Circunscripcion_TEMUCO CENTRO',
 'Circunscripcion_TEMUCO NORTE',
 'Circunscripcion_TEMUCO SUR',
 'Circunscripcion_TENAUN',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TIERRAS BLANCAS',
 'Circunscripcion_TIJERAL',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCONEY',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOME',
 'Circunscripcion_TOMECO',
 'Circunscripcion_TONGOY',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREGUACO',
 'Circunscripcion_TRES ESQUINAS',
 'Circunscripcion_TRINIDAD',
 'Circunscripcion_TROVOLHUE',
 'Circunscripcion_TRUPAN',
 'Circunscripcion_TUBUL',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_TUCAPEL (HUEPIL)',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALDIVIA DE PAINE',
 'Circunscripcion_VALLE GRANDE',
 'Circunscripcion_VALLE SIMPSON',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VEGAS DE ITATA',
 'Circunscripcion_VENTANAS',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCHES',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLA CERRO CASTILLO',
 'Circunscripcion_VILLA ORTEGA',
 'Circunscripcion_VILLA PRAT',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUMBEL ESTACION',
 'Circunscripcion_YUNGAY',
 'Circunscripcion_ZAPALLAR']

atributos_filtro_2021_comuna_circ = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'tot_per',
 'v27',
 'zona_Urbano',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'pobreza_Pobres no extremos',
 'pobreza_No pobres',
 'v13_Propia',
 'esc2',
 'ecivil_En Pareja',
 'o31_Sí',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'sist_salud_Privado',
 'r1b_En [comuna de ubicación la vivienda]',
 'ytotcor',
 'educ_Universidad',
 'prom_lect8b_com',
 'prom_mate8b_com',
 'prom_soc8b_com',
 'Frac_Inmigrantes',
 'Frac_Pueblos',
 'Frac_Viv_Ocupada',
 'Frac_Viv_Particular',
 'Frac_Viv_Colectiva',
 'Frac_Casa',
 'Frac_Depa',
 'Frac_Pared_Horm',
 'Frac_Techo_Bueno',
 'Frac_Techo_Medio',
 'Frac_Piso_Bueno',
 'Frac_Mat_Aceptable',
 'Frac_Agua_Aceptable',
 'Densidad_Poblacion',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 ]

atributos_filtro_2021_comuna_dummies = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'tot_per',
 'v27',
 'zona_Urbano',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'pobreza_Pobres no extremos',
 'pobreza_No pobres',
 'v13_Propia',
 'esc2',
 'ecivil_En Pareja',
 'o31_Sí',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'sist_salud_Privado',
 'r1b_En [comuna de ubicación la vivienda]',
 'ytotcor',
 'educ_Universidad',
 'prom_lect8b_com',
 'prom_mate8b_com',
 'prom_soc8b_com',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_AGUA SANTA',
 'Circunscripcion_ALAMEDA',
 'Circunscripcion_ALERCE',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO ACONCAGUA',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ALTO JAHUEL',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANDALIEN',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTIHUALA',
 'Circunscripcion_ANTILHUE',
 'Circunscripcion_ANTOFAGASTA NORTE',
 'Circunscripcion_ANTOFAGASTA SUR',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_APIAO',
 'Circunscripcion_APOQUINDO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_ARICA NORTE',
 'Circunscripcion_ARRAU-MENDEZ',
 'Circunscripcion_BAHIA MANSA',
 'Circunscripcion_BAHIA MURTA',
 'Circunscripcion_BAJOS DE MENA',
 'Circunscripcion_BALMACEDA',
 'Circunscripcion_BARON',
 'Circunscripcion_BARRAZA',
 'Circunscripcion_BARROS ARANA',
 'Circunscripcion_BATUCO',
 'Circunscripcion_BELEN',
 'Circunscripcion_BELLAVISTA',
 'Circunscripcion_BUCALEMU',
 'Circunscripcion_BUCHUPUREO',
 'Circunscripcion_BUENOS AIRES',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_BUSTAMANTE',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CACHAPOAL',
 'Circunscripcion_CAIMANES',
 'Circunscripcion_CAJON',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CAMPANARIO',
 'Circunscripcion_CANCURA',
 'Circunscripcion_CANELA (CANELA BAJA)',
 'Circunscripcion_CANETE',
 'Circunscripcion_CANITAS',
 'Circunscripcion_CAPITAN AVALOS',
 'Circunscripcion_CAPITAN PASTENE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARAMPANGUE',
 'Circunscripcion_CARELMAPU',
 'Circunscripcion_CAREN',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASMA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CASTRO SUR',
 'Circunscripcion_CATAPILCO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CATILLO',
 'Circunscripcion_CAUNICU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CAYURRUCA',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRILLOS DE TAMAYA',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CERRO NEGRO',
 'Circunscripcion_CERRO NIELOL',
 'Circunscripcion_CHACAO',
 'Circunscripcion_CHACAYAL',
 'Circunscripcion_CHAMIZA',
 'Circunscripcion_CHAMPA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANARAL ALTO',
 'Circunscripcion_CHANAVAYITA',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHAULINEC',
 'Circunscripcion_CHELLEPIN',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHERQUENCO',
 'Circunscripcion_CHICUREO',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHINCOLCO',
 'Circunscripcion_CHIU CHIU',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CHOSHUENCO',
 'Circunscripcion_CHUQUICAMATA',
 'Circunscripcion_CIRUELOS',
 'Circunscripcion_CISNES',
 'Circunscripcion_CIUDAD DE LOS VALLES',
 'Circunscripcion_CIUDAD SATELITE',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_CODPA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIGUE',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COIHUECO SUR',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLACO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLIN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_COMUY',
 'Circunscripcion_CONARIPE',
 'Circunscripcion_CONCEPCION CENTRO',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONCORDIA',
 'Circunscripcion_CONSISTORIAL',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COPIULEMU',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORCOVADO',
 'Circunscripcion_CORINTO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_CORRENTOSO',
 'Circunscripcion_CORTE ALTO',
 'Circunscripcion_COSTA BLANCA',
 'Circunscripcion_COYA',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CRUCERO',
 'Circunscripcion_CUCAO',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CUNCUMEN',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_CURRINE',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DICHATO',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DOMEYKO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_DUAO',
 'Circunscripcion_EL BELLOTO',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL CENTRO',
 'Circunscripcion_EL CORTIJO',
 'Circunscripcion_EL GOLF',
 'Circunscripcion_EL MELON',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL PALQUI',
 'Circunscripcion_EL PRINCIPAL',
 'Circunscripcion_EL PUERTO',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL SALVADOR',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EL TAMBO',
 'Circunscripcion_EL TRANSITO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ENSENADA',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESMERALDA',
 'Circunscripcion_ESTACION LO ESPEJO',
 'Circunscripcion_ESTADIO NACIONAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FOLILCO',
 'Circunscripcion_FORESTAL',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUNDO EL CARMEN',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GENERAL CRUZ',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_GUALLECO',
 'Circunscripcion_GUARILIHUE',
 'Circunscripcion_GULTRO',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALPIN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUAQUEN',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_HUELMO',
 'Circunscripcion_HUELQUEN',
 'Circunscripcion_HUEQUEN',
 'Circunscripcion_HUERTA DEL MAULE',
 'Circunscripcion_HUERTOS FAMILIARES',
 'Circunscripcion_HUEYUSCA',
 'Circunscripcion_HUISCAPI',
 'Circunscripcion_HURTADO',
 'Circunscripcion_ICALMA',
 'Circunscripcion_IGNAO',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_ILOCA',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_IQUIQUE SUR',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_ISLA DEL REY',
 'Circunscripcion_ISLA GUAR',
 'Circunscripcion_ISLA MAILLEN',
 'Circunscripcion_ISLA MOCHA',
 'Circunscripcion_ISLA PULUQUI',
 'Circunscripcion_ISLA SANTA MARIA',
 'Circunscripcion_JOSE PEDRO ALESSANDRI',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA HUERTA',
 'Circunscripcion_LA JUNTA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PASADA',
 'Circunscripcion_LA PAZ',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA PUNTA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA TIRANA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LA VARA',
 'Circunscripcion_LABRANZA',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAGO RAPEL (EL MANZANO)',
 'Circunscripcion_LAGUNA VERDE',
 'Circunscripcion_LAGUNILLAS',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LARAQUETE',
 'Circunscripcion_LAS AMERICAS',
 'Circunscripcion_LAS ANIMAS',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CANTERAS',
 'Circunscripcion_LAS CASCADAS',
 'Circunscripcion_LAS COMPANIAS',
 'Circunscripcion_LAS QUEMAS',
 'Circunscripcion_LASTARRIA',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LENCA',
 'Circunscripcion_LICAN-RAY',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LIQUINE',
 'Circunscripcion_LIRQUEN',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LIUCURA',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LLICO',
 'Circunscripcion_LLICO DE MATAQUITO',
 'Circunscripcion_LLIFEN',
 'Circunscripcion_LLIUCO',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO HERRERA',
 'Circunscripcion_LO MIRANDA',
 'Circunscripcion_LO NEGRETE',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LO VALLEDOR',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LOMAS COLORADAS',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LONTUE',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS CERROS',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS LAURELES',
 'Circunscripcion_LOS LIBERTADORES',
 'Circunscripcion_LOS LIRIOS',
 'Circunscripcion_LOS LOROS',
 'Circunscripcion_LOS MOLLES',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS NICHES',
 'Circunscripcion_LOS PAJARITOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOS VOLCANES',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUIS CRUZ MARTINEZ',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MAIPU PONIENTE',
 'Circunscripcion_MALALCAHUELLO',
 'Circunscripcion_MALALHUE',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MAMINA',
 'Circunscripcion_MANIHUALES',
 'Circunscripcion_MANTILHUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MECHUQUE',
 'Circunscripcion_MEDIO CAMINO',
 'Circunscripcion_MEHUIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELEFQUEN',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MELOZAL',
 'Circunscripcion_METAHUE',
 'Circunscripcion_MEULIN',
 'Circunscripcion_MILLANTU',
 'Circunscripcion_MINCHA',
 'Circunscripcion_MININCO',
 'Circunscripcion_MIRAFLORES',
 'Circunscripcion_MISION DE LA COSTA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MOLULCO',
 'Circunscripcion_MONTE AGUILA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MONTEMAR',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NANCUL',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NEHUENTUE',
 'Circunscripcion_NELTUME',
 'Circunscripcion_NIEBLA',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NIREHUAO',
 'Circunscripcion_NIRIVILO',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NONTUELA',
 'Circunscripcion_NUEVA BRAUNAU',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUEVA TOLTEN',
 'Circunscripcion_OBSERVATORIO',
 'Circunscripcion_OLIVAR (ALTO)',
 'Circunscripcion_OLMOPULLI',
 'Circunscripcion_OLMUE',
 'Circunscripcion_ORILLA DEL MAULE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_P AGUIRRE CERDA N.',
 'Circunscripcion_P AGUIRRE CERDA S.',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAILAHUEQUE',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAILLIHUE',
 'Circunscripcion_PAINE',
 'Circunscripcion_PAIPOTE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PALOMAR',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARGUA',
 'Circunscripcion_PARQUE ALMAGRO',
 "Circunscripcion_PARQUE O'HIGGINS",
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO DE VALDIVIA',
 'Circunscripcion_PEDRO DE VALDIVIA (TEMUCO)',
 'Circunscripcion_PEHUEN',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELCHUQUIN',
 'Circunscripcion_PELEQUEN',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCAHUE-BATUCO',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEULLA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHICUY',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PICHIPELLAHUEN',
 'Circunscripcion_PICHIRROPULLI',
 'Circunscripcion_PILLANLELBUN',
 'Circunscripcion_PILLUCO',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PISAGUA',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PLACILLA DE PENUELAS',
 'Circunscripcion_PLAYA ANCHA',
 'Circunscripcion_PLAYA LOS MOLLES',
 'Circunscripcion_PLAZA EGANA',
 'Circunscripcion_PLAZA NUNOA',
 'Circunscripcion_POCILLAS',
 'Circunscripcion_POLCURA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUDAHUEL SUR',
 'Circunscripcion_PUEBLO SECO',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUENTE NEGRO',
 'Circunscripcion_PUENTE NUBLE',
 'Circunscripcion_PUERTO AGUIRRE',
 'Circunscripcion_PUERTO CHACABUCO',
 'Circunscripcion_PUERTO DOMINGUEZ',
 'Circunscripcion_PUERTO GUADAL',
 'Circunscripcion_PUERTO MONTT CENTRO E ISLA TENGLO',
 'Circunscripcion_PUERTO MONTT MIRASOL',
 'Circunscripcion_PUERTO MONTT NORTE',
 'Circunscripcion_PUERTO NUEVO',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PULLALLY',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUNTA LAVAPIE',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUTU',
 'Circunscripcion_PUYUHUAPI',
 'Circunscripcion_QUEHUI',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUENAC',
 'Circunscripcion_QUENUIR',
 'Circunscripcion_QUEPE',
 'Circunscripcion_QUEULE',
 'Circunscripcion_QUILACAHUIN',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILIMARI',
 'Circunscripcion_QUILLAGUA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAMALI',
 'Circunscripcion_QUINCHAO (ACHAO)',
 'Circunscripcion_QUINO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_QUITRATUE',
 'Circunscripcion_RADAL',
 'Circunscripcion_RAFAEL',
 'Circunscripcion_RAHUE',
 'Circunscripcion_RAHUE SUR',
 'Circunscripcion_RALCO LEPOY',
 'Circunscripcion_RALUN',
 'Circunscripcion_RAMADILLAS',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANCAGUA ORIENTE',
 'Circunscripcion_RANGUELMO',
 'Circunscripcion_RAPEL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECINTO',
 'Circunscripcion_RECOLETA NORTE',
 'Circunscripcion_RECOLETA SUR',
 'Circunscripcion_RENACA BAJO',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RERE',
 'Circunscripcion_RETIRO',
 'Circunscripcion_REUMEN',
 'Circunscripcion_RIACHUELO',
 'Circunscripcion_RILAN',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RINIHUE',
 'Circunscripcion_RININAHUE',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO COLORADO',
 'Circunscripcion_RIO HURTADO (SAMO ALTO)',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_RIO TRANQUILO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_ROSARIO',
 'Circunscripcion_RUCAPEQUEN',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SALTOS DEL LAJA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CARLOS DE PUREN',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FELIX',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE COLICO',
 'Circunscripcion_SAN JOSE DE LA ESTRELLA',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN LORENZO DE TARAPACA',
 'Circunscripcion_SAN LUIS',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN MIGUEL DE AZAPA',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ALCANTARA',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN PEDRO DE QUILLOTA',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN RAMON (PADRE LAS CASAS)',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CLARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA FE',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTA OLGA',
 'Circunscripcion_SANTA ROSA',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SARMIENTO',
 'Circunscripcion_SAUSALITO',
 'Circunscripcion_SAUZAL',
 'Circunscripcion_SECTOR EX BARRIO INDUSTRIAL DE ARICA',
 'Circunscripcion_SELVA OBSCURA',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_SIERRA GORDA NORTE',
 'Circunscripcion_SOTERO DEL RIO',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALCAMAVIDA',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEGUALDA',
 'Circunscripcion_TEMUCO CENTRO',
 'Circunscripcion_TEMUCO NORTE',
 'Circunscripcion_TEMUCO SUR',
 'Circunscripcion_TENAUN',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TIERRAS BLANCAS',
 'Circunscripcion_TIJERAL',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCONEY',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOME',
 'Circunscripcion_TOMECO',
 'Circunscripcion_TONGOY',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREGUACO',
 'Circunscripcion_TRES ESQUINAS',
 'Circunscripcion_TRINIDAD',
 'Circunscripcion_TROVOLHUE',
 'Circunscripcion_TRUPAN',
 'Circunscripcion_TUBUL',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_TUCAPEL (HUEPIL)',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALDIVIA DE PAINE',
 'Circunscripcion_VALLE GRANDE',
 'Circunscripcion_VALLE SIMPSON',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VEGAS DE ITATA',
 'Circunscripcion_VENTANAS',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCHES',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLA CERRO CASTILLO',
 'Circunscripcion_VILLA ORTEGA',
 'Circunscripcion_VILLA PRAT',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUMBEL ESTACION',
 'Circunscripcion_YUNGAY',
 'Circunscripcion_ZAPALLAR']

atributos_filtro_2021_circ_dummies = [
 'Frac_Inmigrantes',
 'Frac_Pueblos',
 'Frac_Viv_Ocupada',
 'Frac_Viv_Particular',
 'Frac_Viv_Colectiva',
 'Frac_Casa',
 'Frac_Depa',
 'Frac_Pared_Horm',
 'Frac_Techo_Bueno',
 'Frac_Techo_Medio',
 'Frac_Piso_Bueno',
 'Frac_Mat_Aceptable',
 'Frac_Agua_Aceptable',
 'Densidad_Poblacion',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_AGUA SANTA',
 'Circunscripcion_ALAMEDA',
 'Circunscripcion_ALERCE',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO ACONCAGUA',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ALTO JAHUEL',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANDALIEN',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTIHUALA',
 'Circunscripcion_ANTILHUE',
 'Circunscripcion_ANTOFAGASTA NORTE',
 'Circunscripcion_ANTOFAGASTA SUR',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_APIAO',
 'Circunscripcion_APOQUINDO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_ARICA NORTE',
 'Circunscripcion_ARRAU-MENDEZ',
 'Circunscripcion_BAHIA MANSA',
 'Circunscripcion_BAHIA MURTA',
 'Circunscripcion_BAJOS DE MENA',
 'Circunscripcion_BALMACEDA',
 'Circunscripcion_BARON',
 'Circunscripcion_BARRAZA',
 'Circunscripcion_BARROS ARANA',
 'Circunscripcion_BATUCO',
 'Circunscripcion_BELEN',
 'Circunscripcion_BELLAVISTA',
 'Circunscripcion_BUCALEMU',
 'Circunscripcion_BUCHUPUREO',
 'Circunscripcion_BUENOS AIRES',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_BUSTAMANTE',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CACHAPOAL',
 'Circunscripcion_CAIMANES',
 'Circunscripcion_CAJON',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CAMPANARIO',
 'Circunscripcion_CANCURA',
 'Circunscripcion_CANELA (CANELA BAJA)',
 'Circunscripcion_CANETE',
 'Circunscripcion_CANITAS',
 'Circunscripcion_CAPITAN AVALOS',
 'Circunscripcion_CAPITAN PASTENE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARAMPANGUE',
 'Circunscripcion_CARELMAPU',
 'Circunscripcion_CAREN',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASMA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CASTRO SUR',
 'Circunscripcion_CATAPILCO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CATILLO',
 'Circunscripcion_CAUNICU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CAYURRUCA',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRILLOS DE TAMAYA',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CERRO NEGRO',
 'Circunscripcion_CERRO NIELOL',
 'Circunscripcion_CHACAO',
 'Circunscripcion_CHACAYAL',
 'Circunscripcion_CHAMIZA',
 'Circunscripcion_CHAMPA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANARAL ALTO',
 'Circunscripcion_CHANAVAYITA',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHAULINEC',
 'Circunscripcion_CHELLEPIN',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHERQUENCO',
 'Circunscripcion_CHICUREO',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHINCOLCO',
 'Circunscripcion_CHIU CHIU',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CHOSHUENCO',
 'Circunscripcion_CHUQUICAMATA',
 'Circunscripcion_CIRUELOS',
 'Circunscripcion_CISNES',
 'Circunscripcion_CIUDAD DE LOS VALLES',
 'Circunscripcion_CIUDAD SATELITE',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_CODPA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIGUE',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COIHUECO SUR',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLACO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLIN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_COMUY',
 'Circunscripcion_CONARIPE',
 'Circunscripcion_CONCEPCION CENTRO',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONCORDIA',
 'Circunscripcion_CONSISTORIAL',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COPIULEMU',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORCOVADO',
 'Circunscripcion_CORINTO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_CORRENTOSO',
 'Circunscripcion_CORTE ALTO',
 'Circunscripcion_COSTA BLANCA',
 'Circunscripcion_COYA',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CRUCERO',
 'Circunscripcion_CUCAO',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CUNCUMEN',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_CURRINE',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DICHATO',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DOMEYKO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_DUAO',
 'Circunscripcion_EL BELLOTO',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL CENTRO',
 'Circunscripcion_EL CORTIJO',
 'Circunscripcion_EL GOLF',
 'Circunscripcion_EL MELON',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL PALQUI',
 'Circunscripcion_EL PRINCIPAL',
 'Circunscripcion_EL PUERTO',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL SALVADOR',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EL TAMBO',
 'Circunscripcion_EL TRANSITO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ENSENADA',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESMERALDA',
 'Circunscripcion_ESTACION LO ESPEJO',
 'Circunscripcion_ESTADIO NACIONAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FOLILCO',
 'Circunscripcion_FORESTAL',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUNDO EL CARMEN',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GENERAL CRUZ',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_GUALLECO',
 'Circunscripcion_GUARILIHUE',
 'Circunscripcion_GULTRO',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALPIN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUAQUEN',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_HUELMO',
 'Circunscripcion_HUELQUEN',
 'Circunscripcion_HUEQUEN',
 'Circunscripcion_HUERTA DEL MAULE',
 'Circunscripcion_HUERTOS FAMILIARES',
 'Circunscripcion_HUEYUSCA',
 'Circunscripcion_HUISCAPI',
 'Circunscripcion_HURTADO',
 'Circunscripcion_ICALMA',
 'Circunscripcion_IGNAO',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_ILOCA',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_IQUIQUE SUR',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_ISLA DEL REY',
 'Circunscripcion_ISLA GUAR',
 'Circunscripcion_ISLA MAILLEN',
 'Circunscripcion_ISLA MOCHA',
 'Circunscripcion_ISLA PULUQUI',
 'Circunscripcion_ISLA SANTA MARIA',
 'Circunscripcion_JOSE PEDRO ALESSANDRI',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA HUERTA',
 'Circunscripcion_LA JUNTA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PASADA',
 'Circunscripcion_LA PAZ',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA PUNTA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA TIRANA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LA VARA',
 'Circunscripcion_LABRANZA',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAGO RAPEL (EL MANZANO)',
 'Circunscripcion_LAGUNA VERDE',
 'Circunscripcion_LAGUNILLAS',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LARAQUETE',
 'Circunscripcion_LAS AMERICAS',
 'Circunscripcion_LAS ANIMAS',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CANTERAS',
 'Circunscripcion_LAS CASCADAS',
 'Circunscripcion_LAS COMPANIAS',
 'Circunscripcion_LAS QUEMAS',
 'Circunscripcion_LASTARRIA',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LENCA',
 'Circunscripcion_LICAN-RAY',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LIQUINE',
 'Circunscripcion_LIRQUEN',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LIUCURA',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LLICO',
 'Circunscripcion_LLICO DE MATAQUITO',
 'Circunscripcion_LLIFEN',
 'Circunscripcion_LLIUCO',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO HERRERA',
 'Circunscripcion_LO MIRANDA',
 'Circunscripcion_LO NEGRETE',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LO VALLEDOR',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LOMAS COLORADAS',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LONTUE',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS CERROS',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS LAURELES',
 'Circunscripcion_LOS LIBERTADORES',
 'Circunscripcion_LOS LIRIOS',
 'Circunscripcion_LOS LOROS',
 'Circunscripcion_LOS MOLLES',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS NICHES',
 'Circunscripcion_LOS PAJARITOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOS VOLCANES',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUIS CRUZ MARTINEZ',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MAIPU PONIENTE',
 'Circunscripcion_MALALCAHUELLO',
 'Circunscripcion_MALALHUE',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MAMINA',
 'Circunscripcion_MANIHUALES',
 'Circunscripcion_MANTILHUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MECHUQUE',
 'Circunscripcion_MEDIO CAMINO',
 'Circunscripcion_MEHUIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELEFQUEN',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MELOZAL',
 'Circunscripcion_METAHUE',
 'Circunscripcion_MEULIN',
 'Circunscripcion_MILLANTU',
 'Circunscripcion_MINCHA',
 'Circunscripcion_MININCO',
 'Circunscripcion_MIRAFLORES',
 'Circunscripcion_MISION DE LA COSTA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MOLULCO',
 'Circunscripcion_MONTE AGUILA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MONTEMAR',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NANCUL',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NEHUENTUE',
 'Circunscripcion_NELTUME',
 'Circunscripcion_NIEBLA',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NIREHUAO',
 'Circunscripcion_NIRIVILO',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NONTUELA',
 'Circunscripcion_NUEVA BRAUNAU',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUEVA TOLTEN',
 'Circunscripcion_OBSERVATORIO',
 'Circunscripcion_OLIVAR (ALTO)',
 'Circunscripcion_OLMOPULLI',
 'Circunscripcion_OLMUE',
 'Circunscripcion_ORILLA DEL MAULE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_P AGUIRRE CERDA N.',
 'Circunscripcion_P AGUIRRE CERDA S.',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAILAHUEQUE',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAILLIHUE',
 'Circunscripcion_PAINE',
 'Circunscripcion_PAIPOTE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PALOMAR',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARGUA',
 'Circunscripcion_PARQUE ALMAGRO',
 "Circunscripcion_PARQUE O'HIGGINS",
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO DE VALDIVIA',
 'Circunscripcion_PEDRO DE VALDIVIA (TEMUCO)',
 'Circunscripcion_PEHUEN',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELCHUQUIN',
 'Circunscripcion_PELEQUEN',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCAHUE-BATUCO',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEULLA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHICUY',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PICHIPELLAHUEN',
 'Circunscripcion_PICHIRROPULLI',
 'Circunscripcion_PILLANLELBUN',
 'Circunscripcion_PILLUCO',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PISAGUA',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PLACILLA DE PENUELAS',
 'Circunscripcion_PLAYA ANCHA',
 'Circunscripcion_PLAYA LOS MOLLES',
 'Circunscripcion_PLAZA EGANA',
 'Circunscripcion_PLAZA NUNOA',
 'Circunscripcion_POCILLAS',
 'Circunscripcion_POLCURA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUDAHUEL SUR',
 'Circunscripcion_PUEBLO SECO',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUENTE NEGRO',
 'Circunscripcion_PUENTE NUBLE',
 'Circunscripcion_PUERTO AGUIRRE',
 'Circunscripcion_PUERTO CHACABUCO',
 'Circunscripcion_PUERTO DOMINGUEZ',
 'Circunscripcion_PUERTO GUADAL',
 'Circunscripcion_PUERTO MONTT CENTRO E ISLA TENGLO',
 'Circunscripcion_PUERTO MONTT MIRASOL',
 'Circunscripcion_PUERTO MONTT NORTE',
 'Circunscripcion_PUERTO NUEVO',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PULLALLY',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUNTA LAVAPIE',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUTU',
 'Circunscripcion_PUYUHUAPI',
 'Circunscripcion_QUEHUI',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUENAC',
 'Circunscripcion_QUENUIR',
 'Circunscripcion_QUEPE',
 'Circunscripcion_QUEULE',
 'Circunscripcion_QUILACAHUIN',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILIMARI',
 'Circunscripcion_QUILLAGUA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAMALI',
 'Circunscripcion_QUINCHAO (ACHAO)',
 'Circunscripcion_QUINO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_QUITRATUE',
 'Circunscripcion_RADAL',
 'Circunscripcion_RAFAEL',
 'Circunscripcion_RAHUE',
 'Circunscripcion_RAHUE SUR',
 'Circunscripcion_RALCO LEPOY',
 'Circunscripcion_RALUN',
 'Circunscripcion_RAMADILLAS',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANCAGUA ORIENTE',
 'Circunscripcion_RANGUELMO',
 'Circunscripcion_RAPEL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECINTO',
 'Circunscripcion_RECOLETA NORTE',
 'Circunscripcion_RECOLETA SUR',
 'Circunscripcion_RENACA BAJO',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RERE',
 'Circunscripcion_RETIRO',
 'Circunscripcion_REUMEN',
 'Circunscripcion_RIACHUELO',
 'Circunscripcion_RILAN',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RINIHUE',
 'Circunscripcion_RININAHUE',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO COLORADO',
 'Circunscripcion_RIO HURTADO (SAMO ALTO)',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_RIO TRANQUILO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_ROSARIO',
 'Circunscripcion_RUCAPEQUEN',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SALTOS DEL LAJA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CARLOS DE PUREN',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FELIX',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE COLICO',
 'Circunscripcion_SAN JOSE DE LA ESTRELLA',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN LORENZO DE TARAPACA',
 'Circunscripcion_SAN LUIS',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN MIGUEL DE AZAPA',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ALCANTARA',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN PEDRO DE QUILLOTA',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN RAMON (PADRE LAS CASAS)',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CLARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA FE',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTA OLGA',
 'Circunscripcion_SANTA ROSA',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SARMIENTO',
 'Circunscripcion_SAUSALITO',
 'Circunscripcion_SAUZAL',
 'Circunscripcion_SECTOR EX BARRIO INDUSTRIAL DE ARICA',
 'Circunscripcion_SELVA OBSCURA',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_SIERRA GORDA NORTE',
 'Circunscripcion_SOTERO DEL RIO',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALCAMAVIDA',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEGUALDA',
 'Circunscripcion_TEMUCO CENTRO',
 'Circunscripcion_TEMUCO NORTE',
 'Circunscripcion_TEMUCO SUR',
 'Circunscripcion_TENAUN',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TIERRAS BLANCAS',
 'Circunscripcion_TIJERAL',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCONEY',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOME',
 'Circunscripcion_TOMECO',
 'Circunscripcion_TONGOY',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREGUACO',
 'Circunscripcion_TRES ESQUINAS',
 'Circunscripcion_TRINIDAD',
 'Circunscripcion_TROVOLHUE',
 'Circunscripcion_TRUPAN',
 'Circunscripcion_TUBUL',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_TUCAPEL (HUEPIL)',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALDIVIA DE PAINE',
 'Circunscripcion_VALLE GRANDE',
 'Circunscripcion_VALLE SIMPSON',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VEGAS DE ITATA',
 'Circunscripcion_VENTANAS',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCHES',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLA CERRO CASTILLO',
 'Circunscripcion_VILLA ORTEGA',
 'Circunscripcion_VILLA PRAT',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUMBEL ESTACION',
 'Circunscripcion_YUNGAY',
 'Circunscripcion_ZAPALLAR']

atributos_filtro_2021_comuna = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'tot_per',
 'v27',
 'zona_Urbano',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'pobreza_Pobres no extremos',
 'pobreza_No pobres',
 'v13_Propia',
 'esc2',
 'ecivil_En Pareja',
 'o31_Sí',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'sist_salud_Privado',
 'r1b_En [comuna de ubicación la vivienda]',
 'ytotcor',
 'educ_Universidad',
 'prom_lect8b_com',
 'prom_mate8b_com',
 'prom_soc8b_com',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 ]

atributos_filtro_2021_circ = [
 'Frac_Inmigrantes',
 'Frac_Pueblos',
 'Frac_Viv_Ocupada',
 'Frac_Viv_Particular',
 'Frac_Viv_Colectiva',
 'Frac_Casa',
 'Frac_Depa',
 'Frac_Pared_Horm',
 'Frac_Techo_Bueno',
 'Frac_Techo_Medio',
 'Frac_Piso_Bueno',
 'Frac_Mat_Aceptable',
 'Frac_Agua_Aceptable',
 'Densidad_Poblacion',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 ]

atributos_filtro_2021_dummies = [
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_AGUA SANTA',
 'Circunscripcion_ALAMEDA',
 'Circunscripcion_ALERCE',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO ACONCAGUA',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ALTO JAHUEL',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANDALIEN',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTIHUALA',
 'Circunscripcion_ANTILHUE',
 'Circunscripcion_ANTOFAGASTA NORTE',
 'Circunscripcion_ANTOFAGASTA SUR',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_APIAO',
 'Circunscripcion_APOQUINDO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_ARICA NORTE',
 'Circunscripcion_ARRAU-MENDEZ',
 'Circunscripcion_BAHIA MANSA',
 'Circunscripcion_BAHIA MURTA',
 'Circunscripcion_BAJOS DE MENA',
 'Circunscripcion_BALMACEDA',
 'Circunscripcion_BARON',
 'Circunscripcion_BARRAZA',
 'Circunscripcion_BARROS ARANA',
 'Circunscripcion_BATUCO',
 'Circunscripcion_BELEN',
 'Circunscripcion_BELLAVISTA',
 'Circunscripcion_BUCALEMU',
 'Circunscripcion_BUCHUPUREO',
 'Circunscripcion_BUENOS AIRES',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_BUSTAMANTE',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CACHAPOAL',
 'Circunscripcion_CAIMANES',
 'Circunscripcion_CAJON',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CAMPANARIO',
 'Circunscripcion_CANCURA',
 'Circunscripcion_CANELA (CANELA BAJA)',
 'Circunscripcion_CANETE',
 'Circunscripcion_CANITAS',
 'Circunscripcion_CAPITAN AVALOS',
 'Circunscripcion_CAPITAN PASTENE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARAMPANGUE',
 'Circunscripcion_CARELMAPU',
 'Circunscripcion_CAREN',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASMA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CASTRO SUR',
 'Circunscripcion_CATAPILCO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CATILLO',
 'Circunscripcion_CAUNICU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CAYURRUCA',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRILLOS DE TAMAYA',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CERRO NEGRO',
 'Circunscripcion_CERRO NIELOL',
 'Circunscripcion_CHACAO',
 'Circunscripcion_CHACAYAL',
 'Circunscripcion_CHAMIZA',
 'Circunscripcion_CHAMPA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANARAL ALTO',
 'Circunscripcion_CHANAVAYITA',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHAULINEC',
 'Circunscripcion_CHELLEPIN',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHERQUENCO',
 'Circunscripcion_CHICUREO',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHINCOLCO',
 'Circunscripcion_CHIU CHIU',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CHOSHUENCO',
 'Circunscripcion_CHUQUICAMATA',
 'Circunscripcion_CIRUELOS',
 'Circunscripcion_CISNES',
 'Circunscripcion_CIUDAD DE LOS VALLES',
 'Circunscripcion_CIUDAD SATELITE',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_CODPA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIGUE',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COIHUECO SUR',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLACO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLIN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_COMUY',
 'Circunscripcion_CONARIPE',
 'Circunscripcion_CONCEPCION CENTRO',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONCORDIA',
 'Circunscripcion_CONSISTORIAL',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COPIULEMU',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORCOVADO',
 'Circunscripcion_CORINTO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_CORRENTOSO',
 'Circunscripcion_CORTE ALTO',
 'Circunscripcion_COSTA BLANCA',
 'Circunscripcion_COYA',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CRUCERO',
 'Circunscripcion_CUCAO',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CUNCUMEN',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_CURRINE',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DICHATO',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DOMEYKO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_DUAO',
 'Circunscripcion_EL BELLOTO',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL CENTRO',
 'Circunscripcion_EL CORTIJO',
 'Circunscripcion_EL GOLF',
 'Circunscripcion_EL MELON',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL PALQUI',
 'Circunscripcion_EL PRINCIPAL',
 'Circunscripcion_EL PUERTO',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL SALVADOR',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EL TAMBO',
 'Circunscripcion_EL TRANSITO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ENSENADA',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESMERALDA',
 'Circunscripcion_ESTACION LO ESPEJO',
 'Circunscripcion_ESTADIO NACIONAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FOLILCO',
 'Circunscripcion_FORESTAL',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUNDO EL CARMEN',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GENERAL CRUZ',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_GUALLECO',
 'Circunscripcion_GUARILIHUE',
 'Circunscripcion_GULTRO',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALPIN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUAQUEN',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_HUELMO',
 'Circunscripcion_HUELQUEN',
 'Circunscripcion_HUEQUEN',
 'Circunscripcion_HUERTA DEL MAULE',
 'Circunscripcion_HUERTOS FAMILIARES',
 'Circunscripcion_HUEYUSCA',
 'Circunscripcion_HUISCAPI',
 'Circunscripcion_HURTADO',
 'Circunscripcion_ICALMA',
 'Circunscripcion_IGNAO',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_ILOCA',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_IQUIQUE SUR',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_ISLA DEL REY',
 'Circunscripcion_ISLA GUAR',
 'Circunscripcion_ISLA MAILLEN',
 'Circunscripcion_ISLA MOCHA',
 'Circunscripcion_ISLA PULUQUI',
 'Circunscripcion_ISLA SANTA MARIA',
 'Circunscripcion_JOSE PEDRO ALESSANDRI',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA HUERTA',
 'Circunscripcion_LA JUNTA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PASADA',
 'Circunscripcion_LA PAZ',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA PUNTA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA TIRANA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LA VARA',
 'Circunscripcion_LABRANZA',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAGO RAPEL (EL MANZANO)',
 'Circunscripcion_LAGUNA VERDE',
 'Circunscripcion_LAGUNILLAS',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LARAQUETE',
 'Circunscripcion_LAS AMERICAS',
 'Circunscripcion_LAS ANIMAS',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CANTERAS',
 'Circunscripcion_LAS CASCADAS',
 'Circunscripcion_LAS COMPANIAS',
 'Circunscripcion_LAS QUEMAS',
 'Circunscripcion_LASTARRIA',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LENCA',
 'Circunscripcion_LICAN-RAY',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LIQUINE',
 'Circunscripcion_LIRQUEN',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LIUCURA',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LLICO',
 'Circunscripcion_LLICO DE MATAQUITO',
 'Circunscripcion_LLIFEN',
 'Circunscripcion_LLIUCO',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO HERRERA',
 'Circunscripcion_LO MIRANDA',
 'Circunscripcion_LO NEGRETE',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LO VALLEDOR',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LOMAS COLORADAS',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LONTUE',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS CERROS',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS LAURELES',
 'Circunscripcion_LOS LIBERTADORES',
 'Circunscripcion_LOS LIRIOS',
 'Circunscripcion_LOS LOROS',
 'Circunscripcion_LOS MOLLES',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS NICHES',
 'Circunscripcion_LOS PAJARITOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOS VOLCANES',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUIS CRUZ MARTINEZ',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MAIPU PONIENTE',
 'Circunscripcion_MALALCAHUELLO',
 'Circunscripcion_MALALHUE',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MAMINA',
 'Circunscripcion_MANIHUALES',
 'Circunscripcion_MANTILHUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MECHUQUE',
 'Circunscripcion_MEDIO CAMINO',
 'Circunscripcion_MEHUIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELEFQUEN',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MELOZAL',
 'Circunscripcion_METAHUE',
 'Circunscripcion_MEULIN',
 'Circunscripcion_MILLANTU',
 'Circunscripcion_MINCHA',
 'Circunscripcion_MININCO',
 'Circunscripcion_MIRAFLORES',
 'Circunscripcion_MISION DE LA COSTA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MOLULCO',
 'Circunscripcion_MONTE AGUILA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MONTEMAR',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NANCUL',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NEHUENTUE',
 'Circunscripcion_NELTUME',
 'Circunscripcion_NIEBLA',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NIREHUAO',
 'Circunscripcion_NIRIVILO',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NONTUELA',
 'Circunscripcion_NUEVA BRAUNAU',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUEVA TOLTEN',
 'Circunscripcion_OBSERVATORIO',
 'Circunscripcion_OLIVAR (ALTO)',
 'Circunscripcion_OLMOPULLI',
 'Circunscripcion_OLMUE',
 'Circunscripcion_ORILLA DEL MAULE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_P AGUIRRE CERDA N.',
 'Circunscripcion_P AGUIRRE CERDA S.',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAILAHUEQUE',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAILLIHUE',
 'Circunscripcion_PAINE',
 'Circunscripcion_PAIPOTE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PALOMAR',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARGUA',
 'Circunscripcion_PARQUE ALMAGRO',
 "Circunscripcion_PARQUE O'HIGGINS",
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO DE VALDIVIA',
 'Circunscripcion_PEDRO DE VALDIVIA (TEMUCO)',
 'Circunscripcion_PEHUEN',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELCHUQUIN',
 'Circunscripcion_PELEQUEN',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCAHUE-BATUCO',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEULLA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHICUY',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PICHIPELLAHUEN',
 'Circunscripcion_PICHIRROPULLI',
 'Circunscripcion_PILLANLELBUN',
 'Circunscripcion_PILLUCO',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PISAGUA',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PLACILLA DE PENUELAS',
 'Circunscripcion_PLAYA ANCHA',
 'Circunscripcion_PLAYA LOS MOLLES',
 'Circunscripcion_PLAZA EGANA',
 'Circunscripcion_PLAZA NUNOA',
 'Circunscripcion_POCILLAS',
 'Circunscripcion_POLCURA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUDAHUEL SUR',
 'Circunscripcion_PUEBLO SECO',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUENTE NEGRO',
 'Circunscripcion_PUENTE NUBLE',
 'Circunscripcion_PUERTO AGUIRRE',
 'Circunscripcion_PUERTO CHACABUCO',
 'Circunscripcion_PUERTO DOMINGUEZ',
 'Circunscripcion_PUERTO GUADAL',
 'Circunscripcion_PUERTO MONTT CENTRO E ISLA TENGLO',
 'Circunscripcion_PUERTO MONTT MIRASOL',
 'Circunscripcion_PUERTO MONTT NORTE',
 'Circunscripcion_PUERTO NUEVO',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PULLALLY',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUNTA LAVAPIE',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUTU',
 'Circunscripcion_PUYUHUAPI',
 'Circunscripcion_QUEHUI',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUENAC',
 'Circunscripcion_QUENUIR',
 'Circunscripcion_QUEPE',
 'Circunscripcion_QUEULE',
 'Circunscripcion_QUILACAHUIN',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILIMARI',
 'Circunscripcion_QUILLAGUA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAMALI',
 'Circunscripcion_QUINCHAO (ACHAO)',
 'Circunscripcion_QUINO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_QUITRATUE',
 'Circunscripcion_RADAL',
 'Circunscripcion_RAFAEL',
 'Circunscripcion_RAHUE',
 'Circunscripcion_RAHUE SUR',
 'Circunscripcion_RALCO LEPOY',
 'Circunscripcion_RALUN',
 'Circunscripcion_RAMADILLAS',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANCAGUA ORIENTE',
 'Circunscripcion_RANGUELMO',
 'Circunscripcion_RAPEL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECINTO',
 'Circunscripcion_RECOLETA NORTE',
 'Circunscripcion_RECOLETA SUR',
 'Circunscripcion_RENACA BAJO',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RERE',
 'Circunscripcion_RETIRO',
 'Circunscripcion_REUMEN',
 'Circunscripcion_RIACHUELO',
 'Circunscripcion_RILAN',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RINIHUE',
 'Circunscripcion_RININAHUE',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO COLORADO',
 'Circunscripcion_RIO HURTADO (SAMO ALTO)',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_RIO TRANQUILO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_ROSARIO',
 'Circunscripcion_RUCAPEQUEN',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SALTOS DEL LAJA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CARLOS DE PUREN',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FELIX',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE COLICO',
 'Circunscripcion_SAN JOSE DE LA ESTRELLA',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN LORENZO DE TARAPACA',
 'Circunscripcion_SAN LUIS',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN MIGUEL DE AZAPA',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ALCANTARA',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN PEDRO DE QUILLOTA',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN RAMON (PADRE LAS CASAS)',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CLARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA FE',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTA OLGA',
 'Circunscripcion_SANTA ROSA',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SARMIENTO',
 'Circunscripcion_SAUSALITO',
 'Circunscripcion_SAUZAL',
 'Circunscripcion_SECTOR EX BARRIO INDUSTRIAL DE ARICA',
 'Circunscripcion_SELVA OBSCURA',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_SIERRA GORDA NORTE',
 'Circunscripcion_SOTERO DEL RIO',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALCAMAVIDA',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEGUALDA',
 'Circunscripcion_TEMUCO CENTRO',
 'Circunscripcion_TEMUCO NORTE',
 'Circunscripcion_TEMUCO SUR',
 'Circunscripcion_TENAUN',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TIERRAS BLANCAS',
 'Circunscripcion_TIJERAL',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCONEY',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOME',
 'Circunscripcion_TOMECO',
 'Circunscripcion_TONGOY',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREGUACO',
 'Circunscripcion_TRES ESQUINAS',
 'Circunscripcion_TRINIDAD',
 'Circunscripcion_TROVOLHUE',
 'Circunscripcion_TRUPAN',
 'Circunscripcion_TUBUL',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_TUCAPEL (HUEPIL)',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALDIVIA DE PAINE',
 'Circunscripcion_VALLE GRANDE',
 'Circunscripcion_VALLE SIMPSON',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VEGAS DE ITATA',
 'Circunscripcion_VENTANAS',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCHES',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLA CERRO CASTILLO',
 'Circunscripcion_VILLA ORTEGA',
 'Circunscripcion_VILLA PRAT',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUMBEL ESTACION',
 'Circunscripcion_YUNGAY',
 'Circunscripcion_ZAPALLAR']

atributos_filtro_2023 = [
 'ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
 'ALEJANDRO NAVARRO BRAIN_Porcentaje',
 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
 'CAROLINA GOIC BOROEVIC_Porcentaje',
 'EDUARDO ARTES BRICHETTI_Porcentaje',
 'JOSE ANTONIO KAST RIST_Porcentaje',
 'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje',
 'numper',
 'n_ocupados',
 'n_inactivos',
 'v27',
 'zona_Rural',
 'tipohogar_Unipersonal',
 'tipohogar_Nuclear Monoparental',
 'tipohogar_Nuclear Biparental',
 'tipohogar_Extenso Monoparental',
 'tipohogar_Extenso Biparental',
 'tipohogar_Censal',
 'pobreza_Pobres extremos',
 'pobreza_No pobres',
 'v1_No Casa',
 'v13_No Propia',
 'v20_No Red',
 'edad',
 'sexo_Mujer',
 'ecivil_En Pareja',
 'ecivil_Soltero',
 'o31_No',
 'activ_Ocupados',
 'activ_Desocupados',
 'activ_Inactivos',
 's28_Sano',
 'r1b_En Otra',
 'r2_En Otra',
 'inmigrante_Inmigrante',
 'etnia_Pertenece a pueblos indígenas',
 'ypchtotcor',
 'educ_Universidad',
 'prom_soc8b_com',
 'Region_DE ANTOFAGASTA',
 'Region_DE ARICA Y PARINACOTA',
 'Region_DE ATACAMA',
 'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
 'Region_DE COQUIMBO',
 'Region_DE LA ARAUCANIA',
 'Region_DE LOS LAGOS',
 'Region_DE LOS RIOS',
 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
 'Region_DE TARAPACA',
 'Region_DE VALPARAISO',
 'Region_DEL BIOBIO',
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 'Region_DEL MAULE',
 'Region_METROPOLITANA DE SANTIAGO',
 'Circunscripcion_ALGARROBO',
 'Circunscripcion_ALHUE',
 'Circunscripcion_ALTO BIOBIO',
 'Circunscripcion_ALTO DEL CARMEN',
 'Circunscripcion_ALTO HOSPICIO',
 'Circunscripcion_ANCUD',
 'Circunscripcion_ANDACOLLO',
 'Circunscripcion_ANGOL',
 'Circunscripcion_ANTOFAGASTA',
 'Circunscripcion_ANTUCO',
 'Circunscripcion_ARAUCO',
 'Circunscripcion_ARICA',
 'Circunscripcion_AYSEN',
 'Circunscripcion_BUIN',
 'Circunscripcion_BULNES',
 'Circunscripcion_CABILDO',
 'Circunscripcion_CABRERO',
 'Circunscripcion_CALAMA',
 'Circunscripcion_CALBUCO',
 'Circunscripcion_CALDERA',
 'Circunscripcion_CALERA',
 'Circunscripcion_CALERA DE TANGO',
 'Circunscripcion_CALLE LARGA',
 'Circunscripcion_CAMARONES',
 'Circunscripcion_CAMINA',
 'Circunscripcion_CANELA',
 'Circunscripcion_CANETE',
 'Circunscripcion_CARAHUE',
 'Circunscripcion_CARTAGENA',
 'Circunscripcion_CASABLANCA',
 'Circunscripcion_CASTRO',
 'Circunscripcion_CATEMU',
 'Circunscripcion_CAUQUENES',
 'Circunscripcion_CERRILLOS',
 'Circunscripcion_CERRO NAVIA',
 'Circunscripcion_CHANARAL',
 'Circunscripcion_CHANCO',
 'Circunscripcion_CHEPICA',
 'Circunscripcion_CHIGUAYANTE',
 'Circunscripcion_CHILE CHICO',
 'Circunscripcion_CHILLAN',
 'Circunscripcion_CHILLAN VIEJO',
 'Circunscripcion_CHIMBARONGO',
 'Circunscripcion_CHOLCHOL',
 'Circunscripcion_CHONCHI',
 'Circunscripcion_CISNES',
 'Circunscripcion_COBQUECURA',
 'Circunscripcion_COCHRANE',
 'Circunscripcion_CODEGUA',
 'Circunscripcion_COELEMU',
 'Circunscripcion_COIHUECO',
 'Circunscripcion_COINCO',
 'Circunscripcion_COLBUN',
 'Circunscripcion_COLINA',
 'Circunscripcion_COLLIPULLI',
 'Circunscripcion_COLTAUCO',
 'Circunscripcion_COMBARBALA',
 'Circunscripcion_CONCEPCION',
 'Circunscripcion_CONCHALI',
 'Circunscripcion_CONCON',
 'Circunscripcion_CONSTITUCION',
 'Circunscripcion_CONTULMO',
 'Circunscripcion_COPIAPO',
 'Circunscripcion_COQUIMBO',
 'Circunscripcion_CORONEL',
 'Circunscripcion_CORRAL',
 'Circunscripcion_COYHAIQUE',
 'Circunscripcion_CUNCO',
 'Circunscripcion_CURACAUTIN',
 'Circunscripcion_CURACAVI',
 'Circunscripcion_CURACO DE VELEZ',
 'Circunscripcion_CURANILAHUE',
 'Circunscripcion_CURARREHUE',
 'Circunscripcion_CUREPTO',
 'Circunscripcion_CURICO',
 'Circunscripcion_DALCAHUE',
 'Circunscripcion_DIEGO DE ALMAGRO',
 'Circunscripcion_DONIHUE',
 'Circunscripcion_EL BOSQUE',
 'Circunscripcion_EL CARMEN',
 'Circunscripcion_EL MONTE',
 'Circunscripcion_EL QUISCO',
 'Circunscripcion_EL TABO',
 'Circunscripcion_EMPEDRADO',
 'Circunscripcion_ERCILLA',
 'Circunscripcion_ESTACION CENTRAL',
 'Circunscripcion_FLORIDA',
 'Circunscripcion_FREIRE',
 'Circunscripcion_FREIRINA',
 'Circunscripcion_FRESIA',
 'Circunscripcion_FRUTILLAR',
 'Circunscripcion_FUTRONO',
 'Circunscripcion_GALVARINO',
 'Circunscripcion_GORBEA',
 'Circunscripcion_GRANEROS',
 'Circunscripcion_HIJUELAS',
 'Circunscripcion_HUALANE',
 'Circunscripcion_HUALPEN',
 'Circunscripcion_HUALQUI',
 'Circunscripcion_HUARA',
 'Circunscripcion_HUASCO',
 'Circunscripcion_HUECHURABA',
 'Circunscripcion_ILLAPEL',
 'Circunscripcion_INDEPENDENCIA',
 'Circunscripcion_IQUIQUE',
 'Circunscripcion_ISLA DE MAIPO',
 'Circunscripcion_LA CISTERNA',
 'Circunscripcion_LA CRUZ',
 'Circunscripcion_LA ESTRELLA',
 'Circunscripcion_LA FLORIDA',
 'Circunscripcion_LA GRANJA',
 'Circunscripcion_LA HIGUERA',
 'Circunscripcion_LA LIGUA',
 'Circunscripcion_LA PINTANA',
 'Circunscripcion_LA REINA',
 'Circunscripcion_LA SERENA',
 'Circunscripcion_LA UNION',
 'Circunscripcion_LAGO RANCO',
 'Circunscripcion_LAJA',
 'Circunscripcion_LAMPA',
 'Circunscripcion_LANCO',
 'Circunscripcion_LAS CABRAS',
 'Circunscripcion_LAS CONDES',
 'Circunscripcion_LAUTARO',
 'Circunscripcion_LEBU',
 'Circunscripcion_LICANTEN',
 'Circunscripcion_LIMACHE',
 'Circunscripcion_LINARES',
 'Circunscripcion_LITUECHE',
 'Circunscripcion_LLANQUIHUE',
 'Circunscripcion_LO BARNECHEA',
 'Circunscripcion_LO ESPEJO',
 'Circunscripcion_LO PRADO',
 'Circunscripcion_LOLOL',
 'Circunscripcion_LONCOCHE',
 'Circunscripcion_LONGAVI',
 'Circunscripcion_LONQUIMAY',
 'Circunscripcion_LOS ALAMOS',
 'Circunscripcion_LOS ANDES',
 'Circunscripcion_LOS ANGELES',
 'Circunscripcion_LOS LAGOS',
 'Circunscripcion_LOS MUERMOS',
 'Circunscripcion_LOS SAUCES',
 'Circunscripcion_LOS VILOS',
 'Circunscripcion_LOTA',
 'Circunscripcion_LUMACO',
 'Circunscripcion_MACHALI',
 'Circunscripcion_MACUL',
 'Circunscripcion_MAFIL',
 'Circunscripcion_MAIPU',
 'Circunscripcion_MALLOA',
 'Circunscripcion_MARCHIGUE',
 'Circunscripcion_MARIA ELENA',
 'Circunscripcion_MARIA PINTO',
 'Circunscripcion_MARIQUINA',
 'Circunscripcion_MAULE',
 'Circunscripcion_MAULLIN',
 'Circunscripcion_MEJILLONES',
 'Circunscripcion_MELIPEUCO',
 'Circunscripcion_MELIPILLA',
 'Circunscripcion_MOLINA',
 'Circunscripcion_MONTE PATRIA',
 'Circunscripcion_MOSTAZAL',
 'Circunscripcion_MULCHEN',
 'Circunscripcion_NACIMIENTO',
 'Circunscripcion_NANCAGUA',
 'Circunscripcion_NATALES',
 'Circunscripcion_NAVIDAD',
 'Circunscripcion_NEGRETE',
 'Circunscripcion_NINHUE',
 'Circunscripcion_NIQUEN',
 'Circunscripcion_NOGALES',
 'Circunscripcion_NUEVA IMPERIAL',
 'Circunscripcion_NUNOA',
 'Circunscripcion_OLIVAR',
 'Circunscripcion_OLMUE',
 'Circunscripcion_OSORNO',
 'Circunscripcion_OVALLE',
 'Circunscripcion_PADRE HURTADO',
 'Circunscripcion_PADRE LAS CASAS',
 'Circunscripcion_PAIHUANO',
 'Circunscripcion_PAILLACO',
 'Circunscripcion_PAINE',
 'Circunscripcion_PALMILLA',
 'Circunscripcion_PANGUIPULLI',
 'Circunscripcion_PANQUEHUE',
 'Circunscripcion_PAPUDO',
 'Circunscripcion_PAREDONES',
 'Circunscripcion_PARRAL',
 'Circunscripcion_PEDRO AGUIRRE CERDA',
 'Circunscripcion_PELARCO',
 'Circunscripcion_PELLUHUE',
 'Circunscripcion_PEMUCO',
 'Circunscripcion_PENAFLOR',
 'Circunscripcion_PENALOLEN',
 'Circunscripcion_PENCAHUE',
 'Circunscripcion_PENCO',
 'Circunscripcion_PERALILLO',
 'Circunscripcion_PERQUENCO',
 'Circunscripcion_PETORCA',
 'Circunscripcion_PEUMO',
 'Circunscripcion_PICA',
 'Circunscripcion_PICHIDEGUA',
 'Circunscripcion_PICHILEMU',
 'Circunscripcion_PINTO',
 'Circunscripcion_PIRQUE',
 'Circunscripcion_PITRUFQUEN',
 'Circunscripcion_PLACILLA',
 'Circunscripcion_PORTEZUELO',
 'Circunscripcion_PORVENIR',
 'Circunscripcion_POZO ALMONTE',
 'Circunscripcion_PROVIDENCIA',
 'Circunscripcion_PUCHUNCAVI',
 'Circunscripcion_PUCON',
 'Circunscripcion_PUDAHUEL',
 'Circunscripcion_PUENTE ALTO',
 'Circunscripcion_PUERTO MONTT',
 'Circunscripcion_PUERTO OCTAY',
 'Circunscripcion_PUERTO VARAS',
 'Circunscripcion_PUMANQUE',
 'Circunscripcion_PUNITAQUI',
 'Circunscripcion_PUNTA ARENAS',
 'Circunscripcion_PUQUELDON',
 'Circunscripcion_PUREN',
 'Circunscripcion_PURRANQUE',
 'Circunscripcion_PUTAENDO',
 'Circunscripcion_PUTRE',
 'Circunscripcion_PUYEHUE',
 'Circunscripcion_QUEILEN',
 'Circunscripcion_QUELLON',
 'Circunscripcion_QUEMCHI',
 'Circunscripcion_QUILACO',
 'Circunscripcion_QUILICURA',
 'Circunscripcion_QUILLECO',
 'Circunscripcion_QUILLON',
 'Circunscripcion_QUILLOTA',
 'Circunscripcion_QUILPUE',
 'Circunscripcion_QUINCHAO',
 'Circunscripcion_QUINTA DE TILCOCO',
 'Circunscripcion_QUINTA NORMAL',
 'Circunscripcion_QUINTERO',
 'Circunscripcion_QUIRIHUE',
 'Circunscripcion_RANCAGUA',
 'Circunscripcion_RANQUIL',
 'Circunscripcion_RAUCO',
 'Circunscripcion_RECOLETA',
 'Circunscripcion_RENAICO',
 'Circunscripcion_RENCA',
 'Circunscripcion_RENGO',
 'Circunscripcion_REQUINOA',
 'Circunscripcion_RETIRO',
 'Circunscripcion_RINCONADA',
 'Circunscripcion_RIO BUENO',
 'Circunscripcion_RIO CLARO',
 'Circunscripcion_RIO HURTADO',
 'Circunscripcion_RIO IBANEZ',
 'Circunscripcion_RIO NEGRO',
 'Circunscripcion_ROMERAL',
 'Circunscripcion_SAAVEDRA',
 'Circunscripcion_SAGRADA FAMILIA',
 'Circunscripcion_SALAMANCA',
 'Circunscripcion_SAN ANTONIO',
 'Circunscripcion_SAN BERNARDO',
 'Circunscripcion_SAN CARLOS',
 'Circunscripcion_SAN CLEMENTE',
 'Circunscripcion_SAN ESTEBAN',
 'Circunscripcion_SAN FABIAN',
 'Circunscripcion_SAN FELIPE',
 'Circunscripcion_SAN FERNANDO',
 'Circunscripcion_SAN IGNACIO',
 'Circunscripcion_SAN JAVIER',
 'Circunscripcion_SAN JOAQUIN',
 'Circunscripcion_SAN JOSE DE MAIPO',
 'Circunscripcion_SAN JUAN DE LA COSTA',
 'Circunscripcion_SAN MIGUEL',
 'Circunscripcion_SAN NICOLAS',
 'Circunscripcion_SAN PABLO',
 'Circunscripcion_SAN PEDRO',
 'Circunscripcion_SAN PEDRO DE ATACAMA',
 'Circunscripcion_SAN PEDRO DE LA PAZ',
 'Circunscripcion_SAN RAFAEL',
 'Circunscripcion_SAN RAMON',
 'Circunscripcion_SAN ROSENDO',
 'Circunscripcion_SAN VICENTE',
 'Circunscripcion_SANTA BARBARA',
 'Circunscripcion_SANTA CRUZ',
 'Circunscripcion_SANTA JUANA',
 'Circunscripcion_SANTA MARIA',
 'Circunscripcion_SANTIAGO',
 'Circunscripcion_SANTO DOMINGO',
 'Circunscripcion_SIERRA GORDA',
 'Circunscripcion_TALAGANTE',
 'Circunscripcion_TALCA',
 'Circunscripcion_TALCAHUANO',
 'Circunscripcion_TALTAL',
 'Circunscripcion_TEMUCO',
 'Circunscripcion_TENO',
 'Circunscripcion_TEODORO SCHMIDT',
 'Circunscripcion_TIERRA AMARILLA',
 'Circunscripcion_TILTIL',
 'Circunscripcion_TIRUA',
 'Circunscripcion_TOCOPILLA',
 'Circunscripcion_TOLTEN',
 'Circunscripcion_TOME',
 'Circunscripcion_TRAIGUEN',
 'Circunscripcion_TREHUACO',
 'Circunscripcion_TUCAPEL',
 'Circunscripcion_VALDIVIA',
 'Circunscripcion_VALLENAR',
 'Circunscripcion_VALPARAISO',
 'Circunscripcion_VICHUQUEN',
 'Circunscripcion_VICTORIA',
 'Circunscripcion_VICUNA',
 'Circunscripcion_VILCUN',
 'Circunscripcion_VILLA ALEGRE',
 'Circunscripcion_VILLA ALEMANA',
 'Circunscripcion_VILLARRICA',
 'Circunscripcion_VINA DEL MAR',
 'Circunscripcion_VITACURA',
 'Circunscripcion_YERBAS BUENAS',
 'Circunscripcion_YUMBEL',
 'Circunscripcion_YUNGAY']

atributos_filtro_2023_comuna_circ_dummies = [
 "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
 "ALEJANDRO NAVARRO BRAIN_Porcentaje",
 "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
 "CAROLINA GOIC BOROEVIC_Porcentaje",
 "EDUARDO ARTES BRICHETTI_Porcentaje",
 "JOSE ANTONIO KAST RIST_Porcentaje",
 "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
 "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
 "tot_per",
 "v27",
 "zona_Urbano",
 "tipohogar_Unipersonal",
 "tipohogar_Nuclear Monoparental",
 "tipohogar_Nuclear Biparental",
 "tipohogar_Extenso Monoparental",
 "tipohogar_Extenso Biparental",
 "pobreza_Pobres no extremos",
 "pobreza_No pobres",
 "v13_Propia",
 "esc2",
 "ecivil_En Pareja",
 "o31_Sí",
 "activ_Ocupados",
 "activ_Desocupados",
 "activ_Inactivos",
 "s28_Sano",
 "sist_salud_Privado",
 "r1b_En [comuna de ubicación la vivienda]",
 "ytotcor",
 "educ_Universidad",
 "prom_lect8b_com",
 "prom_mate8b_com",
 "prom_soc8b_com",
 "Frac_Inmigrantes",
 "Frac_Pueblos",
 "Frac_Viv_Ocupada",
 "Frac_Viv_Particular",
 "Frac_Viv_Colectiva",
 "Frac_Casa",
 "Frac_Depa",
 "Frac_Pared_Horm",
 "Frac_Techo_Bueno",
 "Frac_Techo_Medio",
 "Frac_Piso_Bueno",
 "Frac_Mat_Aceptable",
 "Frac_Agua_Aceptable",
 "Densidad_Poblacion",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
 "Local_ALIANZA FRANCESA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA L2 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_ANEXO DE COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_ANEXO ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ANEXO INSTITUTO PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ANEXO LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_AUTOSERVICIO LA TEJUELA PUERTO VARAS DE LOS LAGOS",
 "Local_AZAPA VALLEY SCHOOL ARICA DE ARICA Y PARINACOTA",
 "Local_C.C.P. COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_C.C.P. DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_C.C.P. DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_C.D.P. DE CALAMA CALAMA DE ANTOFAGASTA",
 "Local_C.D.P. DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE SANTIAGO SUR SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE TOCOPILLA TOCOPILLA DE ANTOFAGASTA",
 "Local_C.D.P. SANTIAGO I SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.E.I.A. LOS CASTANOS VINA DEL MAR DE VALPARAISO",
 "Local_C.P. ALTO HOSPICIO ALTO HOSPICIO DE TARAPACA",
 "Local_C.P. DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_C.P. DE PUERTO MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_C.P. DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_C.P. DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_C.P. LA SERENA LA SERENA DE COQUIMBO",
 "Local_C.P. RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_C.P.F. DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_C.P.F. DE SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CASA DEL ENCUENTRO CIUDADANO Y GIMNASIO ANDACOLLO DE COQUIMBO",
 "Local_CASINO PARQUE LOS TACOS COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO CIVICO EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO COMUNITARIO SERGIO SILVA ACUNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL COPIAPO DE ATACAMA",
 "Local_CENTRO CULTURAL EL TRANQUE LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L3 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE CAPACITACION LABORAL REINO DE BELGICA ARICA DE ARICA Y PARINACOTA",
 "Local_CENTRO DE EDUCACION INTEGRADA DE ADULTOS COPIAPO DE ATACAMA",
 "Local_CENTRO DE EDUCACION PAULA JARAQUEMADA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EDUCACION TECNICO PROFESIONAL CODEDUC MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE FORMACION ACADEMICA PERFECTO DE LA FUENTE DEL VILLAR RINCONADA DE VALPARAISO",
 "Local_CENTRO DEPORTIVO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_CENTRO DEPORTIVO ROLF NATHAN LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUC.ADULTOS LUIS MOLL BRIONES VALDIVIA DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL AMERICO VESPUCIO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL AQUELARRE LICEO BICENTENARIO TENO DEL MAULE",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BICENTENARIO ALTOS DE TOME TOME DEL BIOBIO",
 "Local_CENTRO EDUCACIONAL CARDENAL JOSE MARIA CARO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DIEGO DE ALMAGRO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DOCTOR AMADOR NEGHME R. ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L1 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L2 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ERNESTO YANEZ RIVERA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ESCRITORES DE CHILE RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL GOYENECHEA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ISLA DE MAIPO ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL JOSE MIGUEL CARRERA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LARUN RAYUN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LAURA VICUNA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO LATORRE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MILLANTU MACUL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MIRADOR SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL NUEVA CREACION PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PADRE ALBERTO HURTADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PIAMARTINO CAROLINA LLONA DE CUEVAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL POETA EUSEBIO LILLO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PRINCIPADO DE ASTURIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PROVINCIA DE NUBLE SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ROUSSEAU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN ANDRES MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN LORENZO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN RAMON SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN SEBASTIAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL SANTA CLARA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL VALLE HERMOSO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO FERNANDO SANTIVAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCATIVO FLORIDA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REINO DE SUECIA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REPUBLICA MEXICANA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO SIGLO XXI PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO INTEGRADO DE EDUCACION ESPECIAL CONCEPCION DEL BIOBIO",
 "Local_CENTRO POLITECNICO PARTICULAR DE NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE-LA PINTANA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COL. DE ARTES, CIENCIA Y TEC. DA VINCI PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO ABATE MOLINA LONGAVI DEL MAULE",
 "Local_COLEGIO ACADEMIA TARAPACA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ACHIGA COMEDUC LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ACONCAGUA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ACROPOLIS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ADOLFO BEYZAGA OVANDO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ADVENTISTA DE TEMUCO SEDE LOS CREADORES TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO ADVENTISTA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ADVENTISTA SANTIAGO SUR SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AGRICOLA CUNCUMEN GONZALO BARROS AMUNATEGUI SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO AGUSTIN EDWARDS VALPARAISO DE VALPARAISO",
 "Local_COLEGIO AJIAL RETIRO DEL MAULE",
 "Local_COLEGIO ALBERTO BLEST GANA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA BASICA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO SEGUNDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ALBERTO MOLINA CASTILLO PARRAL DEL MAULE",
 "Local_COLEGIO ALBERTO PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBORADA DEL MAR CONCON DE VALPARAISO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LOS ALTOS DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEMAN DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ALEMAN DE CONCEPCION SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO ALEMAN DE SANTIAGO LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEXANDER FLEMING VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO ALICANTE DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL VALLE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMA MATER LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMONDALE LOMAS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO ALONKURA HUALPEN DEL BIOBIO",
 "Local_COLEGIO ALONSO DE ERCILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE BAQUEDANO) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE RITOQUE) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALTA CORDILLERA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO ALTAS CUMBRES PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO ALTAZOR CONCON DE VALPARAISO",
 "Local_COLEGIO ALTAZOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTO LAUQUEN LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO ALTO PALENA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTOMONTE L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO AMANECER CORONEL CORONEL DEL BIOBIO",
 "Local_COLEGIO AMANECER TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO AMERICA VILCUN DE LA ARAUCANIA",
 "Local_COLEGIO ANA MARIA JANER VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ANDREE ENGLISH SCHOOL LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANDRES BELLO MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ANGEL DE PEREDO LOTA DEL BIOBIO",
 "Local_COLEGIO ANGLO MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTAMARA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ANTARTICA CHILENA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO ANTONIO ACEVEDO HERNANDEZ PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTONIO VARAS VICUNA DE COQUIMBO",
 "Local_COLEGIO ANTU LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTUPIREN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ARAUCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO COSTA MAUCO QUINTERO DE VALPARAISO",
 "Local_COLEGIO ARTISTICO ROBERTO MATTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO SANTA CECILIA EDUCACION MEDIA OSORNO DE LOS LAGOS",
 "Local_COLEGIO ARTURO EDWARDS (SEDE CARRERA) VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ARTURO PRAT CHACON LA SERENA DE COQUIMBO",
 "Local_COLEGIO ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ARTURO PRAT PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ATENAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AUGUSTO WINTER TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO AURORA DE CHILE CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AURORA DE CHILE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO AURORA DE CHILE SUR CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AUSTRALIA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BAJO MOLLE IQUIQUE DE TARAPACA",
 "Local_COLEGIO BALMACEDA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BASICO ARAGON ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO BASICO CONSOLIDADO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO DE CHEPICA CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO NUEVA LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO SAN VICENTE TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO VILLA ACERO HUALPEN DEL BIOBIO",
 "Local_COLEGIO BASICO VIOLETA PARRA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BATALLA DE LA CONCEPCION EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BELLAVISTA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BENJAMIN VICUNA MACKENNA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BERNARDA MORIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO BERNARDO FELMER NIKLITSCHEK LANCO DE LOS RIOS",
 "Local_COLEGIO BETANIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO BICENTENARIO APRENDER LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO CABILDO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO ESPANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO BICENTENARIO LIONS SCHOOL L1 CARTAGENA DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO MATILDE HUICI NAVAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO PADRE ALBERTO HURTADO CHILLAN DE NUBLE",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L1 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L2 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO POLITECNICO ALEMAN ALBERT EINSTEIN CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO SANTO CURA DE ARS SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BLANCO ENCALADA CAUQUENES DEL MAULE",
 "Local_COLEGIO BORDEMAR VALPARAISO DE VALPARAISO",
 "Local_COLEGIO BOSQUEMAR PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO BOSQUES DE GAIA CONSTITUCION DEL MAULE",
 "Local_COLEGIO BRASILIA L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L1 CONCON DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L2 CONCON DE VALPARAISO",
 "Local_COLEGIO BUEN PASTOR COPIAPO DE ATACAMA",
 "Local_COLEGIO CALAMA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CALETA SAN PEDRO LA SERENA DE COQUIMBO",
 "Local_COLEGIO CAMILO HENRIQUEZ CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CAMILO HENRIQUEZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN PASTENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL ANTONIO SAMORE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL CARLOS OVIEDO CAVADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA LA SERENA DE COQUIMBO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO CARLOS COUSINO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CATOLICO NAZARET ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO CERRO GUAYAQUIL MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO CHAMPAGNAT L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHAMPAGNAT L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHARLES DARWIN VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHILE NORTE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHRISTIAN GARDEN SCHOOL LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHUQUICAMATA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CIRUJANO PEDRO VIDELA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CIUDAD DE FRANKFORT SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CLARA BRINCEFIELD PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COLEGIO CLEMENTINOS SAN CLEMENTE DEL MAULE",
 "Local_COLEGIO COLONIAL DE PIRQUE PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO COMPANIA DE MARIA PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CONCEPCION CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO CONCEPCION DE CHILLAN L1 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION DE CHILLAN L2 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION LOS HUERTOS SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO CONFEDERACION SUIZA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CORDILLERA DE LOS ANDES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COSTA CORDILLERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO COYAM CHILLAN DE NUBLE",
 "Local_COLEGIO CREACION CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CREACIONES LA ARAUCANA PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO CRECER PURRANQUE DE LOS LAGOS",
 "Local_COLEGIO CUMBRES DE BOCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO D-91 CENTENARIO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DARIO SALAS PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO DARIO SALAS TALCA DEL MAULE",
 "Local_COLEGIO DE ADMINISTRACION Y COMERCIO EL INGENIO OVALLE DE COQUIMBO",
 "Local_COLEGIO DE APLICACION TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO DE ARTES CLAUDIO ARRAU COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DE CULTURA Y DIFUSION ARTISTICA LA UNION DE LOS RIOS",
 "Local_COLEGIO DE HUMANIDADES DE VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO DE LA PROVIDENCIA CARMELA LARRAIN DE INFANTE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LA PURISIMA CONCEPCION CHILLAN DE NUBLE",
 "Local_COLEGIO DE LA SALLE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES HUALPEN DEL BIOBIO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MAIPO BUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MUSICA JUAN SEBASTIAN BACH VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DE NINAS CANADA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DEL ALBA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DEL REAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEPORTIVO MUNICIPAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DEPORTIVO SANTIAGO ESCUTI ORREGO L1 QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DIEGO DUBLE URRUTIA ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO DIEGO PORTALES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIEGO THOMPSON CURICO DEL MAULE",
 "Local_COLEGIO DIFERENCIAL MADRE TIERRA LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIFERENCIAL PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DISCOVERY SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DIVINA PASTORA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR LUIS SEPULVEDA SALVATIERRA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR MANUEL AVILES INOSTROZA LICANTEN DEL MAULE",
 "Local_COLEGIO DOMINGO EYZAGUIRRE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOMINGO MATTE MESIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DON ORIONE LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO DON ORIONE QUINTERO DE VALPARAISO",
 "Local_COLEGIO ECHAURREN ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL ALBA DE MACUL MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL BOLDO CURICO DEL MAULE",
 "Local_COLEGIO EL LABRADOR VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO EL MELON L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO EL NARANJAL RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO EL QUISCO EL QUISCO DE VALPARAISO",
 "Local_COLEGIO EL REFUGIO PENCO DEL BIOBIO",
 "Local_COLEGIO EL SEMBRADOR ANEXO 2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL SEMBRADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL TABO L1 EL TABO DE VALPARAISO",
 "Local_COLEGIO EL TABO L2 EL TABO DE VALPARAISO",
 "Local_COLEGIO ELENA BETTINI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ELVIRA HURTADO DE MATTE DE SANTIAGO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EMPRENDER ENSENANZA MEDIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO EMPRENDER OBISPO ALVEAR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ESPANA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ESPANA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ESPANA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO ESPERANZA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ESPIRITU SANTO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ETCHEGOYEN TALCAHUANO SEDE BRISAS DEL SOL TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO EVEREST LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXTREMADURA DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EYZAGUIRRE MEDIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FAMILIA DE NAZARETH LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FERNANDO DURAN VILLARREAL QUILPUE DE VALPARAISO",
 "Local_COLEGIO FILIPENSE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FINLANDIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FOR LIFE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO FORESTAL DE QUILACAHUIN SAN PABLO DE LOS LAGOS",
 "Local_COLEGIO FRANCIS SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO FRANCISCO DE ASIS PINTO DE NUBLE",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L1 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L2 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO PALAU LA SERENA DE COQUIMBO",
 "Local_COLEGIO FRATERNIDAD SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO GABRIELA MISTRAL MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GALVARINO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO GENERAL JOSE VELASQUEZ BORQUEZ L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO GERMANIA DEL VERBO DIVINO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO GERONIMO DE ALDERETE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GERONIMO RENDIC LA SERENA DE COQUIMBO",
 "Local_COLEGIO GIUSEPPE BERTOLUZZI DE FELIP SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GOBERNADOR CONCHA Y SALVATIERRA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO GRACE COLLEGE L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE COLLEGE L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE SCHOOL PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRAN BRETANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO GUARDIAMARINA GUILLERMO ZANARTU IRIGOYEN QUILPUE DE VALPARAISO",
 "Local_COLEGIO HARAS LOS CONDORES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HAYDN DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HELLEN KELLER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERMANO FERNANDO DE LA FUENTE SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO HERNAN OLGUIN LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERNANDO DE MAGALLANES ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HEROES DE LA CONCEPCION LA SERENA DE COQUIMBO",
 "Local_COLEGIO HISPANO AMERICANO RIO VIEJO CHILLAN DE NUBLE",
 "Local_COLEGIO HISPANO VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO HISPANOAMERICANO VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO HUELEN VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO IGNACIO CARRERA PINTO VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO INFOCAP SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INGLES IQUIQUE DE TARAPACA",
 "Local_COLEGIO INGLES SAN JOSE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INGLES WOODLAND LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA CONCEPCION NUESTRA SENORA DE LOURDES PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA DE LOURDES L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INMACULADA DE LOURDES L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INNOV-ARTE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO INSTITUCION TERESIANA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUCION TERESIANA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUTO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO INSTITUTO SANTA MARIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INTEGRADO EDUARDO FREI MONTALVA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ITALIANO SANTA ANA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JACQUES COUSTEAU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JACQUES COUSTEAU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JESUS ANDINO CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JESUS SERVIDOR PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOHN WALL HOLCOMB ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JORGE HUNEEUS ZEGERS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JORGE PRIETO LETELIER PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE ANTONIO MANSO DE VELASCO RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JOSE ARRIETA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE MANUEL BALMACEDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL CARRERA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL INFANTE QUILPUE DE VALPARAISO",
 "Local_COLEGIO JOSEFINO SANTISIMA TRINIDAD PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JUAN PABLO II CUNCO DE LA ARAUCANIA",
 "Local_COLEGIO JUAN TACHOIRE MOENA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JUAN XXIII VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO JUANITA FERNANDEZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO JUANITA FERNANDEZ L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO LA GIROUETTE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LA HERRADURA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO LA PAZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LA PROVIDENCIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO LAS AMERICAS L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO LAS RASTRAS TALCA DEL MAULE",
 "Local_COLEGIO LAURA VICUNA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LEONARDO DA VINCI ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO LEONARDO DA VINCI DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LEONARDO DA VINCI L1 LA CRUZ DE VALPARAISO",
 "Local_COLEGIO LEONARDO DA VINCI RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LEONARDO MURIALDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO LIAHONA PUCON DE LA ARAUCANIA",
 "Local_COLEGIO LIAHONA QUILPUE DE VALPARAISO",
 "Local_COLEGIO LIBERTADOR SAN MARTIN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LICARAYEN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ERRAZURIZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LORENZO MONDANELLI COIHUECO DE NUBLE",
 "Local_COLEGIO LORENZO SAZIE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO LOS ALPES MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ANDES DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS CONDORES TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO LOS CONQUISTADORES CURICO DEL MAULE",
 "Local_COLEGIO LOS CONQUISTADORES VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LOS EDUCADORES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO LOS LIBERTADORES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS LLANOS MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LOS REYES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS ROBLES DE LABRANZA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO LUIS CRUZ MARTINEZ LA LIGUA DE VALPARAISO",
 "Local_COLEGIO LUIS GALDAMES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MADRE ADMIRABLE DE SCHOENSTATT TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MADRE ANA EUGENIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE ANA EUGENIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE PAULINA CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO MADRES DOMINICAS CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MAHATMA GANDHI IQUIQUE DE TARAPACA",
 "Local_COLEGIO MAIPO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANANTIAL VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MANQUECURA CIUDAD DE LOS VALLES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA VALLE LO CAMPINO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANUEL BULNES PRIETO QUILPUE DE VALPARAISO",
 "Local_COLEGIO MANUEL FRANCISCO CORREA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL MONTT VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO MANUEL RODRIGUEZ ERDOIZA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARGOT LOYOLA PALACIOS LINARES DEL MAULE",
 "Local_COLEGIO MARIA ANA MOGAS PAINE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA AUXILIADORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MARIA AUXILIADORA PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_COLEGIO MARIA AUXILIADORA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO MARIA EDUCA  SEDE LAS PARCELA LA SERENA DE COQUIMBO",
 "Local_COLEGIO MARIA EDUCA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO MARIA ELENA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA INMACULADA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARIA INMACULADA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO MARIA SYLVESTER RASCH ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO MARIA TERESA CANCINO AGUILAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA VILLALOBOS ARTEAGA OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARIE POUSSEPIN PUTAENDO DE VALPARAISO",
 "Local_COLEGIO MARINA DE CHILE CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARISTA HERMANO FERNANDO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MASTERS COLLEGE VALDIVIA DE LOS RIOS",
 "Local_COLEGIO MATER DEI CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELFORD COLLEGE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MERRYLAND PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO METODISTA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO METODISTA WILLIAM TAYLOR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MINERAL EL TENIENTE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MINISTRO DIEGO PORTALES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MIRADOR DEL LAGO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO MIRAFLORES D-329 L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MIRAMAR ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO MIXTO INMACULADA CONCEPCION TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO MONSENOR JAIME LARRAIN BUNSTER MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTANER DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTESSORI SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTEVERDE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MOUNTAIN GREEN SCHOOL PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO MULTICULTURAL RAYEN MAPU CURICO DEL MAULE",
 "Local_COLEGIO MUNDO MAGICO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MUNICIPAL DIVINA GABRIELA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL EDUARDO DE GEYTER RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL HUALLILEN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MUSTAFA KEMAL ATATURK LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NACIONAL L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO NACIONAL L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONAL L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONES UNIDAS LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NAVARRA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NERUDA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NEW LITTLE COLLEGE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVA TERRA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVO MUNDO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE LA PRESENTACION MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL CARMEN DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL ROSARIO LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA ALERCE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO NUEVA BRAUNAU PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI SEDE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA PROVIDENCIA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO NUEVO HORIZONTE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVO MILENIO L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVO MILENIO L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVOS HORIZONTES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO OZANAM L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO OZANAM L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PABLO GARRIDO VARGAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO PABLO NERUDA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PABLO NERUDA PARRAL DEL MAULE",
 "Local_COLEGIO PABLO NERUDA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PADRE JOSE KENTENICH PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALESTINO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALMARES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARQUE CENTRAL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PARQUE LAS AMERICAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SANTA MARIA GORETTI CONCON DE VALPARAISO",
 "Local_COLEGIO PART. SUB. CUMBRES DEL CHOAPA SALAMANCA DE COQUIMBO",
 "Local_COLEGIO PARTICULAR ALBERTO BLEST GANA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO PARTICULAR AURORA DE CHILE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO PARTICULAR EVANGELICO BETANIA CHILLAN DE NUBLE",
 "Local_COLEGIO PARTICULAR IGNACIO CARRERA PINTO L1 OLMUE DE VALPARAISO",
 "Local_COLEGIO PARTICULAR LEONARDO DA VINCI COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PARTICULAR MARTA BRUNET LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO PARTICULAR POLITECNICO EYZAGUIRRE BASICA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARTICULAR SAN JOSE LA SERENA DE COQUIMBO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PATRONA SENORA DE LOURDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO AGUIRRE CERDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO PEDRO APOSTOL PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO DE VALDIVIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO MONTT C-100 L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PELCHUQUIN MARIQUINA DE LOS RIOS",
 "Local_COLEGIO PICHASCA RIO HURTADO DE COQUIMBO",
 "Local_COLEGIO PIERRE TEILHARD DE CHARDIN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POLITECNICO SAN JOSE CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE DOMINGO PARRA CORVALAN CORONEL DEL BIOBIO",
 "Local_COLEGIO POLIVALENTE JAPON CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE LAS CAMELIAS RETIRO DEL MAULE",
 "Local_COLEGIO POLIVALENTE PRESIDENTE JOSE MANUEL BALMACEDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POMAIRE MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALIANO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRESIDENTE PEDRO AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO PRESTON SCHOOL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PROCERES DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROFESOR ILDEFONSO CALDERON PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROVIDENCIA DEL SAGRADO CORAZON TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PROVIDENCIA PARRAL DEL MAULE",
 "Local_COLEGIO PUERTO VARAS PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE CHICAUMA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PUMAHUE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PUMAHUE VALPARAISO DE VALPARAISO",
 "Local_COLEGIO QUILLON QUILLON DE NUBLE",
 "Local_COLEGIO QUITALMAHUE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO RAKIDUAM COQUIMBO DE COQUIMBO",
 "Local_COLEGIO RAMON ANGEL JARA LOS MUERMOS DE LOS LAGOS",
 "Local_COLEGIO RAYEN CAVEN CONCON DE VALPARAISO",
 "Local_COLEGIO REBECA FERNANDEZ VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REDLAND SCHOOL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REGINA PACIS PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REMODELACION SIMONS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO REPUBLICA ARGENTINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE CHILE DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO REPUBLICA DE CHILE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO REPUBLICA DE COLOMBIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE CROACIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE GUATEMALA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE ITALIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE MEXICO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE MEXICO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO RIACHUELO RIO NEGRO DE LOS LAGOS",
 "Local_COLEGIO RIO GRANDE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO ROBERTO BRAVO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ROSA ELVIRA MATTE DE PRIETO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ROSITA NOVARO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO RUBEN CASTRO VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO RUCALHUE HUALPEN DEL BIOBIO",
 "Local_COLEGIO RUPANIC SCHOOL ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS DE LA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS SAN CARLOS DE NUBLE",
 "Local_COLEGIO SAGRADOS CORAZONES MONJAS FRANCESAS VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAINT GEORGE'S L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT GEORGE'S L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT LOUIS SCHOOL TILTIL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT MARY LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAINT MATTHEW VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO SAINT MAURICES CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT PATRICK SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAINT-LAWRENCE QUILPUE DE VALPARAISO",
 "Local_COLEGIO SALESIANO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SALESIANO DON BOSCO IQUIQUE IQUIQUE DE TARAPACA",
 "Local_COLEGIO SALESIANO EL PATROCINIO DE SAN JOSE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SALESIANO SANTO DOMINGO SAVIO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SALESIANOS VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SAN ADRIAN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN AGUSTIN L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO CONSTITUCION DEL MAULE",
 "Local_COLEGIO SAN ALBERTO HURTADO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANDRES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN BUENAVENTURA CHILLAN DE NUBLE",
 "Local_COLEGIO SAN CARLOS DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CAYETANO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CONSTANTINO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CRISTOBAL APOSTOL PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN DAMIAN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ESTEBAN DE BULNES - ANEXO BASICA BULNES DE NUBLE",
 "Local_COLEGIO SAN FELIPE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FERNANDO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS CHOLCHOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN FRANCISCO DE ASIS DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TECNICO PROFESIONAL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAN GABRIEL ARCANGEL LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAN GUILLERMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN HERNALDO PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO SAN ISAAC JOGUES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOAQUIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAN JOSE ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN JOSE CALLE LARGA DE VALPARAISO",
 "Local_COLEGIO SAN JOSE DE CHICUREO COLINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE RENCA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE MARIQUINA DE LOS RIOS",
 "Local_COLEGIO SAN JUAN DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO DE GUADALUPE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUCAS DE LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUIS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SAN MARCOS MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN MARCOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COLEGIO SAN MARCOS VALDIVIA DE LOS RIOS",
 "Local_COLEGIO SAN MATEO OSORNO DE LOS LAGOS",
 "Local_COLEGIO SAN MIGUEL DE LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN NICOLAS HIJUELAS DE VALPARAISO",
 "Local_COLEGIO SAN NICOLAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAN PATRICIO CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VICENTE DE PAUL CHILLAN DE NUBLE",
 "Local_COLEGIO SANTA BARBARA H.S. QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BEATRIZ PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BERNARDITA TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO SANTA CATALINA LABOURE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA CRUZ DE FREIRE FREIRE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA CRUZ DE LONCOCHE LONCOCHE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA EUFRASIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA FAMILIA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO SANTA FILOMENA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA ISABEL L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO SANTA ISABEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA JUANA DE ARCO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO SANTA LUISA DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA MARIA DE ACONCAGUA SANTA MARIA DE VALPARAISO",
 "Local_COLEGIO SANTA MARIA DE LA CORDILLERA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE LA PROVIDENCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA SABINA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA SOFIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE JESUS DE LOS ANDES HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE LOS ANDES MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA TERESA DE LOS MORROS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA URSULA VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO - QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO DOMINGO HELEN LEE LASSEN SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO SANTO TOMAS DE AQUINO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS DE TALCA MAULE DEL MAULE",
 "Local_COLEGIO SANTO TOMAS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAUCACHE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SCOLE CREARE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SEBASTIAN ELCANO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEBASTIAN ELCANO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L1 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L2 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SENDA DEL SABER PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SIMON BOLIVAR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SIMON BOLIVAR LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SUYAI MAULE DEL MAULE",
 "Local_COLEGIO SYDNEY COLLEGE CHILLAN DE NUBLE",
 "Local_COLEGIO TECNICO INDUSTRIAL DON BOSCO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO TECNICO PROFESIONAL HONORIO OJEDA VALDERAS LA UNION DE LOS RIOS",
 "Local_COLEGIO TECNICO PROFESIONAL LOS ACACIOS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO TECNICO PROFESIONAL MISION SAN JUAN DE LA COSTA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_COLEGIO TECNICO PROFESIONAL NOCEDAL LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TECNICO PROFESIONAL PIEDRA AZUL PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO TECNOLOGICO DARIO SALAS CHILLAN VIEJO DE NUBLE",
 "Local_COLEGIO TECNOLOGICO DON BOSCO DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO TENIENTE HERNAN MERINO CORREA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO TERESA DE LOS ANDES-ALGARROBO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERRAUSTRAL DEL SOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE KENT SCHOOL PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE PACIFIC SCHOOL CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO TOMAS MORO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UMBRAL DE CURAUMA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VALLE DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO VICENTE VALDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VICHUQUEN CURICO DEL MAULE",
 "Local_COLEGIO VICTOR DOMINGO SILVA LA SERENA DE COQUIMBO",
 "Local_COLEGIO VILLA CARTAGO CARTAGENA DE VALPARAISO",
 "Local_COLEGIO VILLA MARIA ACADEMY L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA MARIA ACADEMY L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA NONGUEN CONCEPCION DEL BIOBIO",
 "Local_COLEGIO WINDSOR SCHOOL VALDIVIA DE LOS RIOS",
 "Local_COLEGIO WINTERHILL VINA DEL MAR DE VALPARAISO",
 "Local_COMPLEJO DEPORTIVO SAUCACHE UNIVERSIDAD DE TARAPACA ARICA DE ARICA Y PARINACOTA",
 "Local_COMPLEJO EDUCACIONAL ALBERTO WIDMER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARDENAL ANTONIO SAMORE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARLOS HOLZAPFEL PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL CERRO NAVIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CHIMBARONGO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L1 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L2 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL COLLIPULLI COLLIPULLI DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL DARIO SALAS DIAZ CARAHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL ESPERANZA MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL FELIPE HERRERA LANE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL IGNAO LAGO RANCO DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL JOAQUIN EDWARDS BELLO MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JOSE MIGUEL CARRERA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JUAN SCHLEYER FREIRE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUAN XXIII LONCOCHE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUANITA FERNANDEZ SOLAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA FRONTERA TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA GRANJA VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION BASICA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LAS ACACIAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LUIS DURAND DURAND TRAIGUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MAIPU ANEXO RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MANUEL PLAZA REYES LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MARTIN KLEINKNECHT TOLTEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR FRANCISCO VALDES SUBERCASEAUX CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR GUILLERMO HARTL PITRUFQUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MUNICIPAL BRIGIDA WALKER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL NUEVA ALBORADA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PABLO SEXTO PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE LAS CASAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE NICOLAS VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE OSCAR MOSER PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL PENCAHUE PENCAHUE DEL MAULE",
 "Local_COMPLEJO EDUCACIONAL PRINCIPE DE GALES NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL RUKA NGEN CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SAN AGUSTIN VILLARRICA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SARGENTO ALDEA L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL TIERRA DE ESPERANZA PANGUIPULLI DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL UNION AMANECER TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL VICTORIA VICTORIA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCATIVO CARACOLES SIERRA GORDA DE ANTOFAGASTA",
 "Local_COMPLEJO EDUCATIVO JUAN JOSE LATORRE BENAVENTE MEJILLONES DE ANTOFAGASTA",
 "Local_CORPORACION DOCENTE SAINT DOMINIC L1 VINA DEL MAR DE VALPARAISO",
 "Local_CORPORACION EDUCACIONAL COLEGIO INGLES DE TALCA TALCA DEL MAULE",
 "Local_DENVER COLORADO SCHOOL EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_DINABEC COLLEGE SAN CARLOS DE NUBLE",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DUOC UC, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_DUOC UC, SEDE VINA DEL MAR L2 VINA DEL MAR DE VALPARAISO",
 "Local_EDUCADOR ARTURO ALVEAR RAMOS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESC. BASICA MARTA EMILIANA AGUILAR ZERON TIERRA AMARILLA DE ATACAMA",
 "Local_ESC. BASICA PARTICULAR SAN PABLO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESC. DE CONCENTRACION FRONTERIZA DOROTEA NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESC. HEBERTO VELAZQUEZ VELAZQUEZ OVALLE DE COQUIMBO",
 "Local_ESC.BASICA CAPITAN RAFAEL TORREBLANCA VALLENAR DE ATACAMA",
 "Local_ESCUELA  BERNARDO O'HIGGINS RIQUELME TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA  G-582 COIPUE FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA 04 DE OCTUBRE CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA 10 ANGELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 1287 SAN MARCOS APOSTOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA 21 DE MAYO SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA 7 ARABE-SIRIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 88 CANADA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ABRAHAM SEPULVEDA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA ACAPULCO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADELAIDA LA FETRA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADOLFO QUIROZ HERNANDEZ CAUQUENES DEL MAULE",
 "Local_ESCUELA ADVENTISTA DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_ESCUELA AGUAS Y GAVIOTAS TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA ALBERT EINSTEIN PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBERTO HURTADO PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA ALBORADA DE TALAGANTE TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBORADA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA ALCALDE MAXIMILIANO POBLETE CORTES ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ALCIDES REYES FRIAS L1 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALCIDES REYES FRIAS L2 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALEJANDRO CHELEN ROJAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA ALEJANDRO GIDI LINARES DEL MAULE",
 "Local_ESCUELA ALEJANDRO GOROSTIAGA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ALEJANDRO PEREZ URBANO TUCAPEL DEL BIOBIO",
 "Local_ESCUELA ALEMANIA PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ALEMANIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ALERCE HISTORICO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA ALESSANDRI CURICO DEL MAULE",
 "Local_ESCUELA ALGARROBAL COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIANZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALICIA ARIZTIA DE SILVA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIRO LAMAS CASTILLO DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ALIVEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALLIPEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH IQUIQUE DE TARAPACA",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH PENCO DEL BIOBIO",
 "Local_ESCUELA ALMIRANTE SIMPSON AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ALONSO DE ERCILLA LA SERENA DE COQUIMBO",
 "Local_ESCUELA ALONSO DE ERCILLA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ALTO CABRERO CABRERO DEL BIOBIO",
 "Local_ESCUELA ALTO PANGUE SAN RAFAEL DEL MAULE",
 "Local_ESCUELA AMANDA LABARCA HUBERSTONE CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA AMERICA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA AMERICA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ANA FRANK QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDALIEN DE COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDES DEL SUR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDRES ALCAZAR LAJA DEL BIOBIO",
 "Local_ESCUELA ANDRES BELLO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ANEXA ANCUD DE LOS LAGOS",
 "Local_ESCUELA ANGACHILLA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ANIBAL PINTO CAUQUENES DEL MAULE",
 "Local_ESCUELA ANTILHUE DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANTONIO DE ZUNIGA PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTONIO TIRADO LANAS OVALLE DE COQUIMBO",
 "Local_ESCUELA ANTONIO TREDAN ARKO GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTUMALAL QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AONIKENK RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ARAUCARIAS DE CHILE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARGENTINA CURICO DEL MAULE",
 "Local_ESCUELA ARMANDO ARANCIBIA OLIVOS LEBU DEL BIOBIO",
 "Local_ESCUELA ARNALDO FALABELLA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARRAU MENDEZ PARRAL DEL MAULE",
 "Local_ESCUELA ARTISTICA ARMANDO DUFEY BLANC TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTISTICA VIOLETA PARRA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_ESCUELA ARTURO EBENSPERGER RICHTER LEBU DEL BIOBIO",
 "Local_ESCUELA ARTURO HUGHES CERNA CORONEL DEL BIOBIO",
 "Local_ESCUELA ARTURO MATTE LARRAIN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO MERINO BENITEZ CHILLAN DE NUBLE",
 "Local_ESCUELA ARTURO PEREZ CANTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT CHACON CANETE DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ARTURO PRAT CHACON SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ARTURO PRAT TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTURO VILLALON SIEULANNE OVALLE DE COQUIMBO",
 "Local_ESCUELA ATENAS OLMUE DE VALPARAISO",
 "Local_ESCUELA ATENEA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE TALCA DEL MAULE",
 "Local_ESCUELA AURORA SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA AVIADOR DAGOBERTO GODOY F. CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AVIADORES EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AYTUE CASTRO DE LOS LAGOS",
 "Local_ESCUELA BABILONIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BALMACEDA SAAVEDRA LAULHERE CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BAQUEDANO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BARBA RUBIA HUALANE DEL MAULE",
 "Local_ESCUELA BARBARA KAST RIST PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BARRAZA BAJO OVALLE DE COQUIMBO",
 "Local_ESCUELA BASE EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA 11 DE SEPTIEMBRE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA 21 DE MAYO CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ABEL GUERRERO AGUIRRE QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA AGUA DE LA GLORIA CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA AMANECER RIO HURTADO DE COQUIMBO",
 "Local_ESCUELA BASICA AMELIA GODOY PENA LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA AMERICA COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA ANGELINA SALAS OLIVARES CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA ANTUPILLAN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA ARTURO ALESSANDRI PALMA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA ARTURO PRAT TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLAVISTA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLO HORIZONTE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA BENJAMIN MATTE LARRAIN HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA BERNARDO O'HIGGINS RIQUELME OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA BOCA BIO BIO SUR SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA BRISAS DEL MAR ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA BUCHUPUREO COBQUECURA DE NUBLE",
 "Local_ESCUELA BASICA BUENA VISTA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CACIQUE LEVIAN SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA CALETA DEL MEDIO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CAMILO MORI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CARILEUFU - CABURGUA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CATALUNYA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO SAN FRANCISCO TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CHACAYAL SUR LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA CHILLEPIN SALAMANCA DE COQUIMBO",
 "Local_ESCUELA BASICA CHORRILLOS E-323 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA CINCO GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CLARA ESTRELLA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CLAUDIO ARRAU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA COCHOLGUE F-426 TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CRISTO REDENTOR CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA CRISTOBAL COLON HUALPEN DEL BIOBIO",
 "Local_ESCUELA BASICA CRUZ DEL SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA D-318 UNESCO VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA BASICA DARIO SALAS E-423 QUILPUE DE VALPARAISO",
 "Local_ESCUELA BASICA DE CHANAVAYITA IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA DE CHILE CHICO CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA DE COLBUN COLBUN DEL MAULE",
 "Local_ESCUELA BASICA DE CORRAL CORRAL DE LOS RIOS",
 "Local_ESCUELA BASICA DICHATO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA EL CASINO QUILLON DE NUBLE",
 "Local_ESCUELA BASICA EL NOGAL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA EMILIA ROMAGNA TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA BASICA EMILIO SOTOMAYOR CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ENRIQUE BERNSTEIN CARABANTES SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ESCUELA BASICA ERCOLE BENCINI LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA ESPANA LINARES DEL MAULE",
 "Local_ESCUELA BASICA ESPANA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ESTACION BAQUEDANO SIERRA GORDA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ESTRELLA DEL SUR POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA FLORIDA FLORIDA DEL BIOBIO",
 "Local_ESCUELA BASICA FRANCISCO FORGIONE IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA FRONTERIZA HUARA DE TARAPACA",
 "Local_ESCUELA BASICA G-45 LA VEGA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA GABRIELA MISTRAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA GENERAL CRUZ PEMUCO DE NUBLE",
 "Local_ESCUELA BASICA GUALBERTO KONG FERNANDEZ VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA HECTOR JORQUERA VALENCIA CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA HEROES DE CHILE LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA HEROES DEL ITATA QUILLON DE NUBLE",
 "Local_ESCUELA BASICA HUMBERTO VILCHES ALZAMORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA ISABEL LA CATOLICA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA ITILHUE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA JAVIERA CARRERA CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA JOHN FITZGERALD KENNEDY CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JOHN KENNEDY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA JORGE ARACENA RAMOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA JOSE MANUEL BALMACEDA F. FUTRONO DE LOS RIOS",
 "Local_ESCUELA BASICA JOSE MARIA CARO RODRIGUEZ CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JOSE TOMAS OVALLE B. OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA JUAN LOPEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUAN LUIS SANFUENTES ANDONAEGUI RIO CLARO DEL MAULE",
 "Local_ESCUELA BASICA JUAN MADRID AZOLA CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JUAN PABLO II ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUANITA FERNANDEZ SOLAR COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA KAMAC MAYU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON A CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON B CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIMUN LAWAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LA AGUADA DE CUEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA CHOCOTA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA LA DAMA BLANCA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA LA LEYENDA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA PAMPILLA CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA LA PENA NOGALES DE VALPARAISO",
 "Local_ESCUELA BASICA LA QUEBRADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA RINCONADA DEL SALTO LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA SOMBRA HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA LA TIRANA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA LAFQUEN ICALMA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAGUNILLAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_ESCUELA BASICA LAS CAMELIAS PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LAS CRUCES EL TABO DE VALPARAISO",
 "Local_ESCUELA BASICA LAS HORTENSIAS - VILLA LAS HORTENSIAS CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAS PATAGUAS QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS QUINTAS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LICARAYEN GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LITORAL AUSTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA LO DE LOBO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA LO VELASQUEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS CERRILLOS CATEMU DE VALPARAISO",
 "Local_ESCUELA BASICA LOS CONQUISTADORES PENCO DEL BIOBIO",
 "Local_ESCUELA BASICA LOS HEROES DE YUNGAY LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS LIBERTADORES HUALQUI DEL BIOBIO",
 "Local_ESCUELA BASICA LOS MAITENES LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA LOS MOLLES LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA LOS NOGALES RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LOS PERALES GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LUCILA GODOY ALCAYAGA VICUNA DE COQUIMBO",
 "Local_ESCUELA BASICA LUIS ALBERTO ACEVEDO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MAITENCILLO PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA MALAL MAHUIDA - PEDREGOSO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA MAMINA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA MANUEL DE SALAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MARE NOSTRUM ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA MARIO MUNOZ SILVA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MERCEDES URZUA DIAZ PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA MICHAIHUE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MIL PAISAJES Y GIMNASIO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA MILLANTU LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA MINCHA NORTE CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA MIXTA LO CALVO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA MULCHEN MULCHEN DEL BIOBIO",
 "Local_ESCUELA BASICA MUNICIPAL ARAUCARIA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA NAHUELBUTA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NEHUENTUE CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO 1 LOS CACHORROS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO SEIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA ORLANDO DELGADO ZUNIGA LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA BASICA ORO NEGRO D-367 L1 CONCON DE VALPARAISO",
 "Local_ESCUELA BASICA OSCAR ARAYA MOLINA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA PAPUDO PAPUDO DE VALPARAISO",
 "Local_ESCUELA BASICA PATAGUAL CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA PATRICIO LYNCH RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA PATRICIO LYNCH VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA PEDRO LUJAN CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA PEDRO VERGARA KELLER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA PENINSULA DE TUMBES TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA PICHICUY LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA PLAYAS NEGRAS CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA POZO ALMONTE POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA PUEBLO SECO SAN IGNACIO DE NUBLE",
 "Local_ESCUELA BASICA PUNTA DE PARRA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA QUINCHAMALI CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RABUCO HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA RAFAEL TOME DEL BIOBIO",
 "Local_ESCUELA BASICA RENE ANDRADES TOLEDO CANETE DEL BIOBIO",
 "Local_ESCUELA BASICA RENE LOUVEL BERT CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE CHILE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ISRAEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA REPUBLICA DEL ECUADOR L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BLANCO LOS ANDES DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA ROBERTO CUADRA ALQUINTA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ROSITA O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RURAL EL YECO ALGARROBO DE VALPARAISO",
 "Local_ESCUELA BASICA SALVADOR ALLENDE ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN CARLOS CHONCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA SAN PEDRO DE ATACAMA SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA SAN PEDRO DE LARAQUETE ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA SAN RAFAEL DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA SAN SEBASTIAN DE MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN VICENTE DE LO ARCAYA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA SANTA INES PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA SANTA JULIA D-334 L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA SANTA MARIA DE GUADALUPE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA SECTOR ORIENTE QUELLON DE LOS LAGOS",
 "Local_ESCUELA BASICA SILVIO ZENTENO VERGARA L1 SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA TALCA DEL MAULE",
 "Local_ESCUELA BASICA TERESA CANNON DE BARRIOLHET. LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA THOMPSON MATTHEWS LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA UNION DE MUJERES AMERICANAS PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA VALENTIN LETELIER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA VALLE DE COLCURA LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA VALLE DEL CHOAPA ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VALLE LONQUEN TREGUACO DE NUBLE",
 "Local_ESCUELA BASICA VICTOR DURAN PEREZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VILLA COIGUE NEGRETE DEL BIOBIO",
 "Local_ESCUELA BASICA VILLA LOS NARANJOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VISTA VERDE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VOLCAN LLAIMA MELIPEUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA WENCESLAO VARGAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA BASICA YANGTSE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BAU LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELGICA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BELGICA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELLAVISTA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN CLARO VELASCO NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN VICUNA MACKENNA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO O HIGGINS COPIAPO DE ATACAMA",
 "Local_ESCUELA BERNARDO O'HIGGINS L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERNARDO O'HIGGINS RIQUELME (E-58) SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA BERNARDO OA'HIGGINS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO OA'HIGGINS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OA'HIGGINS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OHIGGINS SAN JAVIER DEL MAULE",
 "Local_ESCUELA BERTA SAAVEDRA SEGURA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERTOLDO HOFMANN KAHLER PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA BLANCA ESTELA PRAT CARVAJAL HUALPEN DEL BIOBIO",
 "Local_ESCUELA BLANCO ENCALADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BLAS CUEVAS RAMON ALLENDE D-307 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA BOROA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE LA FARFANA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRASILIA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRITANICA GUILLERMINA DRAKE WOOD COIHUECO DE NUBLE",
 "Local_ESCUELA BRUNO ZAVALA FREDES COPIAPO DE ATACAMA",
 "Local_ESCUELA BUENA ESPERANZA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA CACIQUE COLIN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CADETE ARTURO PRAT CHACON SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CALICANTO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMILO HENRIQUEZ CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DE MAIPU - CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DEPORTIVOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA CANADA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CANAL BEAGLE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA CAPITAN ARTURO PRAT CHACON PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CAPITAN AVALOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JOSE LUIS ARANEDA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JUAN LADRILLERO NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CARDENAL JOSE MARIA CARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CARLOS ALBERTO FERNANDEZ CASTILLO HUALQUI DEL BIOBIO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL OSORNO DE LOS LAGOS",
 "Local_ESCUELA CARLOS FERNANDEZ PENA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS MARIA SAYAGO COPIAPO DE ATACAMA",
 "Local_ESCUELA CARLOS PRATS GONZALEZ HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS SALINAS LAGOS TALCA DEL MAULE",
 "Local_ESCUELA CARLOS SPANO TALCA DEL MAULE",
 "Local_ESCUELA CARLOS TRUPP WANNER TALCA DEL MAULE",
 "Local_ESCUELA CARMELA CARVAJAL DE PRAT SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA CARMEN GALLEGOS DE ROBLES SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CARMEN REVECO NUNEZ PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARMEN ROMERO AGUIRRE CARTAGENA DE VALPARAISO",
 "Local_ESCUELA CAROLINA VERGARA AYARES D-276 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CASAS VIEJAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CATALUNA CURICO DEL MAULE",
 "Local_ESCUELA CAYENEL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CENTENARIO IQUIQUE DE TARAPACA",
 "Local_ESCUELA CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CERRO ALTO JOSE OPAZO DIAZ CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHACARILLAS CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHARRUA CABRERO DEL BIOBIO",
 "Local_ESCUELA CHIAPA HUARA DE TARAPACA",
 "Local_ESCUELA CHILHUE QUEILEN DE LOS LAGOS",
 "Local_ESCUELA CHIPANA IQUIQUE DE TARAPACA",
 "Local_ESCUELA CIUDAD DE BARCELONA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD DE LYON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD SANTO DOMINGO DE GUZMAN CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLARA VIAL ORREGO LOS VILOS DE COQUIMBO",
 "Local_ESCUELA CLAUDIO ARRAU LEON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO ARRAU OSORNO DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO MATTE PEREZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA CLEMENTINA MAUREIRA ALMANZA COELEMU DE NUBLE",
 "Local_ESCUELA CLORINDO ALVEAR CAUQUENES DEL MAULE",
 "Local_ESCUELA CLUB HIPICO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA COLICO SUR CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA COLIN MAULE DEL MAULE",
 "Local_ESCUELA COLONIA ARABE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA COLONIA ESMERALDA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COLPANAO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA COMALLE TENO DEL MAULE",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L1 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L2 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMUNIDADES DE VALLE HERMOSO LA LIGUA DE VALPARAISO",
 "Local_ESCUELA CONCENTRACION RURAL SERGIO VERDUGO HERRERA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CONDORES DE PLATA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA DAVILA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONTRAMAESTRE CONSTANTINO MICALVI LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COPIHUE RETIRO DEL MAULE",
 "Local_ESCUELA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CORINTO PENCAHUE DEL MAULE",
 "Local_ESCUELA CORRALONES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA COSTA BLANCA CONSTITUCION DEL MAULE",
 "Local_ESCUELA CRISTINA DURAN QUILLOTA DE VALPARAISO",
 "Local_ESCUELA CRISTO DEL MAIPO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA CROACIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CUYUNCAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-10 GENERAL JOSE MIGUEL CARRERA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-11 MANUEL RODRIGUEZ ERDOYZA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-114 GENERAL BERNALES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-12 ROMULO PENA MATURANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-14 REGIMIENTO RANCAGUA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-16 SUBTENIENTE LUIS CRUZ MARTINEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-18 HUMBERTO VALENZUELA GARCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-314 JOAQUIN EDWARDS BELLO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA D-4 REPUBLICA DE ISRAEL ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-6 REPUBLICA DE FRANCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-7 GENERAL PEDRO LAGOS MARCHANT ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA DAFNE ELVIRA ZAPATA ROZAS PEMUCO DE NUBLE",
 "Local_ESCUELA DAGOBERTO GODOY - SAN PATRICIO VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA DARIO SALAS DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DARIO SALAS MARCHANT SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA DARIO SALAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA DE ARTES ESCENICAS PROFESOR ELMO FUNEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DE ARTES Y CULTURA OSORNO Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA DE ARTES Y MUSICA OVALLE DE COQUIMBO",
 "Local_ESCUELA DE CONCENTRACION D-43, LOS LOROS TIERRA AMARILLA DE ATACAMA",
 "Local_ESCUELA DE CONCENTRACION FRONTERIZA RALCO ALTO BIOBIO ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA DE DESARROLLO ARTISTICO CALDERA DE ATACAMA",
 "Local_ESCUELA DE EDUCACION GENERAL BASICA MONSENOR ENRIQUE CORNEJO SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA DE INGENIERIA QUIMICA PUCV VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DE LA INDUSTRIA GRAFICA HECTOR GOMEZ SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LAS ROJAS LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE LENGUAJE CAMINA ALTO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LIUCURA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA DE MAITENCILLO YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA DE NIEBLA JUAN BOSCH VALDIVIA DE LOS RIOS",
 "Local_ESCUELA DE PENUELAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA DE PUERTO HARRIS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DE ROMERO LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE TRIPULANTES Y PORTUARIA DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DEIDAMIA PAREDES BELLO SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA DELFINA ALARCON HENRIQUEZ QUILPUE DE VALPARAISO",
 "Local_ESCUELA DELICIO CARDENAS BUSTAMANTE Y GIMNASIO SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA DEPORTIVA OSORNO (EX LAGO RUPANCO) OSORNO DE LOS LAGOS",
 "Local_ESCUELA DIECIOCHO DE SEPTIEMBRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DIEGO PORTALES D 475 TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES P. CURICO DEL MAULE",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS CONCEPCION DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DIEGO PORTALES QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA DIFERENCIAL AMAPOLAS NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL JUAN SANDOVAL CARRASCO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL MARIA LUZ LANZA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA DIFERENCIAL VILLA SAN JOSE LA UNION DE LOS RIOS",
 "Local_ESCUELA DIGNA CAMILO AGUILAR PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DIVINO MAESTRO PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DOCTOR TREVISO GIRARDI TONELLI CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L1 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L2 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMINGO ORTIZ DE ROZAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA DOMINGO SANTA MARIA GONZALEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMITILA PINNA PARRA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA E 741 JAVIERA CARRERA EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA E-15 RICARDO SILVA ARRIAGADA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA E-5 ESMERALDA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ECOLOGICA NUESTRO MUNDO QUILLOTA DE VALPARAISO",
 "Local_ESCUELA ECOLOGICA PADRE ALBERTO HURTADO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA EDELMIRA VERGARA QUINONES ARAUCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO CAMPBELL SAAVEDRA PENCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO FREI MONTALVA PERQUENCO DE LA ARAUCANIA",
 "Local_ESCUELA EDUARDO LLANOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA EDUCACION DIFERENCIAL SANTA TERESA DE AVILA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EDUCADORA EULOGIA BORQUEZ PEREZ QUELLON DE LOS LAGOS",
 "Local_ESCUELA EDUCADORES DE CHILE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EFRAIN MALDONADO TORRES ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO DE SALVACION ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA EJERCITO LIBERTADOR DE CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO LIBERTADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL BOSQUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL CARMEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL CLARO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA EL EDEN TALCA DEL MAULE",
 "Local_ESCUELA EL LAUREL VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL LIBERTADOR PARRAL DEL MAULE",
 "Local_ESCUELA EL LLANO DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL MAITEN LA UNION DE LOS RIOS",
 "Local_ESCUELA EL PALPAL DE SANTA CLARA BULNES DE NUBLE",
 "Local_ESCUELA EL PALQUI MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA EL REMANSO EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL ROTO CHILENO TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SABER NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA EL SALITRE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SAUCE SAN CARLOS DE NUBLE",
 "Local_ESCUELA ELBA OJEDA GOMEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ELENA ARMIJO MORALES CUREPTO DEL MAULE",
 "Local_ESCUELA ELEUTERIO RAMIREZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ELIAS SANCHEZ ORTUZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELIODORO YANEZ PONCE DE LEON SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELOISA GONZALEZ TIRUA DEL BIOBIO",
 "Local_ESCUELA ELVIRA SANTA CRUZ OSSA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMA CORNEJO DE CARDOEN VICHUQUEN DEL MAULE",
 "Local_ESCUELA EMILIA LASCAR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMPRENDER LARAPINTA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENCARNACION OLIVARES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA ENRIQUE DONN MULLER CONSTITUCION DEL MAULE",
 "Local_ESCUELA ENRIQUE PUFFE KIND YUMBEL DEL BIOBIO",
 "Local_ESCUELA ENRIQUE REYMOND ALDUNATE SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENRIQUE SERRANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ENRIQUE SORO BARRIGA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA ENTRE AGUAS DE LLICO VICHUQUEN DEL MAULE",
 "Local_ESCUELA EPU NEWEN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ERNESTO CASTRO ARELLANO CURICO DEL MAULE",
 "Local_ESCUELA ERNESTO SOTO NEGRETE COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESCRITORA MARCELA PAZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ESPANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ESPANA CURICO DEL MAULE",
 "Local_ESCUELA ESPANA L1 LOS ANDES DE VALPARAISO",
 "Local_ESCUELA ESPANA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ESPANA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPANA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ESPANA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ESPANA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESPECIAL AVANCEMOS JUNTOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE AYLLU DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE Y ESCUELA BASICA MY COLLEGE CHILLAN DE NUBLE",
 "Local_ESCUELA ESPECIAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL FLOR DEL INCA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ESPECIAL HUMBERTO MOATH CASABLANCA DE VALPARAISO",
 "Local_ESCUELA ESPECIAL JUANITA DE AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ESPECIAL PAULA JARAQUEMADA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL TAMARUGAL LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL `ANA AICHELE CARRASCO` OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPERANZA JOVEN L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA JOVEN L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA TALCA DEL MAULE",
 "Local_ESCUELA ESTADO DE FLORIDA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE ISRAEL VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESTADO DE MICHIGAN QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE PALESTINA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADOS UNIDOS DE NORTEAMERICA TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA ESTRELLA REINA DE CHILE CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EUGENIO TAGLE VALDES SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA EULOGIO GOYCOLEA GARAY Y GIMNASIO CALBUCO DE LOS LAGOS",
 "Local_ESCUELA EUSEBIO IBAR SCHEPELER CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA EVANGELICA BETH-EL CHILLAN DE NUBLE",
 "Local_ESCUELA F-174 VALLE DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA F-22 DOCTOR RICARDO OLEA GUERRA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA F-90 RAUL CASTRO MARQUEZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA FATIMA ANCUD DE LOS LAGOS",
 "Local_ESCUELA FEDERICO ACEVEDO SALAZAR CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FELIPE BARTHOU LANCO DE LOS RIOS",
 "Local_ESCUELA FELIX EYHERAMENDY LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA FERNANDA AEDO FAUNDEZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO ARENAS ALMARZA CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO BAQUEDANO YUNGAY DE NUBLE",
 "Local_ESCUELA FERNANDO CARVAJAL PINTO CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FERNANDO SANTIVAN VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCISCO COLOANE CORONEL DEL BIOBIO",
 "Local_ESCUELA FRANCISCO CORTES OJEDA MAULLIN DE LOS LAGOS",
 "Local_ESCUELA FRANCISCO DE AGUIRRE PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO PETRINOVIC KARLOVAC COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO URRUTIA URRUTIA LONGAVI DEL MAULE",
 "Local_ESCUELA FRAY BERNABE DE LUCERNA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA FRAY CAMILO HENRIQUEZ SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRAY PEDRO ARMENGOL VALENZUELA CUREPTO DEL MAULE",
 "Local_ESCUELA FRESIA GRACIELA MULLER RUIZ LEBU DEL BIOBIO",
 "Local_ESCUELA FRONTERIZA ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA FRONTERIZA DE LLIFEN FUTRONO DE LOS RIOS",
 "Local_ESCUELA FUNDACION PAUL HARRIS OSORNO DE LOS LAGOS",
 "Local_ESCUELA GABRIEL BENAVENTE BENAVENTE LONGAVI DEL MAULE",
 "Local_ESCUELA GABRIELA MISTRAL IQUIQUE DE TARAPACA",
 "Local_ESCUELA GABRIELA MISTRAL L1 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL L2 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GABRIELA MISTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA GABRIELA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GALVARINO VALENZUELA MORAGA LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GARCIA HURTADO DE MENDOZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA GASPAR CABRALES VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GENARO RIOS CAMPOS CORONEL DEL BIOBIO",
 "Local_ESCUELA GENERAL ALBERTO BACHELET MARTINEZ EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL ALEJANDRO GOROSTIAGA ORREGO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL JOSE DE SAN MARTIN LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA GENERAL MANUEL BULNES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA GENERAL OHIGGINS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL RENE ESCAURIAZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SAN MARTIN MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SOFANOR PARRA HERMOSILLA SAN CARLOS DE NUBLE",
 "Local_ESCUELA GERTRUDIS ALARCON ARCE RETIRO DEL MAULE",
 "Local_ESCUELA GLADYS CANALES PAREDES PELLUHUE DEL MAULE",
 "Local_ESCUELA GOLDA MEIR LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GRACIELA LETELIER LINARES DEL MAULE",
 "Local_ESCUELA GRECIA (D-251) VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GRECIA CURICO DEL MAULE",
 "Local_ESCUELA GRENOBLE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUARILIHUE ALTO COELEMU DE NUBLE",
 "Local_ESCUELA GUILLERMO BANADOS HONORATO SANTA MARIA DE VALPARAISO",
 "Local_ESCUELA GUILLERMO RODRIGUEZ RIOBIO LEBU DEL BIOBIO",
 "Local_ESCUELA GUILLERMO ZANARTU IRIGOYEN NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUSTAVO LE PAIGE WALQUE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GUSTAVO VASQUEZ DIAZ LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA HAMBURGO CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA HELEN KELLER ADAMS HUALPEN DEL BIOBIO",
 "Local_ESCUELA HERMANA MARIA GORETTI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERMANOS CARRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA HERMINDA DE LA VICTORIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERNAN OLGUIN MAYBE GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HERNAN OLGUIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA HERNANDO DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA HEROES DE CHILE YUMBEL DEL BIOBIO",
 "Local_ESCUELA HEROES DE IQUIQUE COIHUECO DE NUBLE",
 "Local_ESCUELA HEROES DE IQUIQUE VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA HEROES DE LA CONCEPCION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA HOGAR MARIA LUISA BOUCHON SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HOGAR NIEVES VASQUEZ PALACIOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA HOGAR VICTORIANO QUINTEROS SOTO TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HOLANDA CURICO DEL MAULE",
 "Local_ESCUELA HORACIO JOHNSON GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HORIZONTES TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA HUILQUILEMU TALCA DEL MAULE",
 "Local_ESCUELA HUMANISTA VICTOR HUGO CARVAJAL MEZA TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HUMBERTO MORENO RAMIREZ BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HUMBERTO VALENZUELA GARCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA IGNACIO CARRERA PINTO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA IGNACIO CARRERA PINTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA INDEPENDENCIA CAUQUENES DEL MAULE",
 "Local_ESCUELA INDEPENDENCIA PANQUEHUE DE VALPARAISO",
 "Local_ESCUELA INDUSTRIAL SAN ANTONIO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA INES GALLARDO ALVARADO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA INGLATERRA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTEGRADORA EL MANZANO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTERNADO LAS PALMAS TRES ESQUINAS MOLINA DEL MAULE",
 "Local_ESCUELA INTERNADO POTRERO GRANDE CURICO DEL MAULE",
 "Local_ESCUELA IRENE FREI LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA IRMA SALAS SILVA CONCON DE VALPARAISO",
 "Local_ESCUELA ISABEL LE BRUN RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISABEL RIQUELME SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISIDORA GOYENECHEA LOTA DEL BIOBIO",
 "Local_ESCUELA ISLA DE LAJA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ISLA DE MARCHANT CURICO DEL MAULE",
 "Local_ESCUELA ISLA DE PASCUA PENCO DEL BIOBIO",
 "Local_ESCUELA ISLAS DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAIME GOMEZ GARCIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JANUARIO ESPINOSA LINARES DEL MAULE",
 "Local_ESCUELA JAPON ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JAPON VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA JAVIER EYZAGUIRE ECHAURREN PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAVIERA CARRERA VERDUGO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JERONIMO NEKULPAN - QUINENAHUIN CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA JERUSALEN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOAQUIN DEL PINO ROZAS Y NEGRETE SAN CARLOS DE NUBLE",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JORGE GONZALEZ BASTIAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA JORGE MUNOZ SILVA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JORGE ROJAS MIRANDA CORONEL DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ LAJA DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ MAULLIN DE LOS LAGOS",
 "Local_ESCUELA JOSE ABELARDO NUNEZ VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA JOSE ALFARO ALFARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA JOSE ANTOLIN SILVA ORMENO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA JOSE ANTONIO LECAROS ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE BERNARDO SUAREZ MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE CAROCA LAFLOR VALLENAR DE ATACAMA",
 "Local_ESCUELA JOSE DE SAN MARTIN SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA JOSE ELIAS BOLIVAR HERRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA JOSE JOAQUIN PRIETO VIAL CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE M. BALMACEDA Y FERNANDEZ TALCA DEL MAULE",
 "Local_ESCUELA JOSE MANUEL BALMACEDA CALBUCO DE LOS LAGOS",
 "Local_ESCUELA JOSE MANUEL BALMACEDA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MARTI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE MATTA CALLEJON PARRAL DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL CARRERA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL MARTINEZ SOTO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA JOSE NUEZ MARTIN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE PAPIC RADNIC ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JOSE TOHA SOLDEVILLA PINTO DE NUBLE",
 "Local_ESCUELA JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE ULLOA FIERRO LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA JUAN BAUTISTA CHESTA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JUAN BAUTISTA PASTENE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE DIOS ALDEA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE LA CRUZ DOMINGUEZ GONZALEZ LONGAVI DEL MAULE",
 "Local_ESCUELA JUAN DE SAAVEDRA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN JOSE LATORRE BENAVENTE CORONEL DEL BIOBIO",
 "Local_ESCUELA JUAN LUIS SANFUENTES TALCA DEL MAULE",
 "Local_ESCUELA JUAN MARTINEZ DE ROZAS LINARES DEL MAULE",
 "Local_ESCUELA JUAN MOYA MORALES NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN RICARDO SANCHEZ ASCENCIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA JUAN SEGUEL ANEXO FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN SEGUEL FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN VALDES ORTUZAR PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JUAN WACQUEZ MOURFIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN WILLIAMS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JULIA HERRERA VARAS MEJILLONES DE ANTOFAGASTA",
 "Local_ESCUELA JULIETA BECERRA ALVAREZ SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA E-194 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JUSTA NARVAEZ SAN JAVIER DEL MAULE",
 "Local_ESCUELA KARELMAPU SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA KAROL CARDENAL DE CRACOVIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA ARAUCANIA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA BANDERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LA ESPERANZA FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA LA ESPERANZA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA FLORIDA TALCA DEL MAULE",
 "Local_ESCUELA LA GREDA PENCO DEL BIOBIO",
 "Local_ESCUELA LA GREDA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA LA HUERTA DE MATAQUITO HUALANE DEL MAULE",
 "Local_ESCUELA LA ISLA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LA MERCED TILTIL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA NOBEL GABRIELA RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA LA OBRA CURICO DEL MAULE",
 "Local_ESCUELA LA VARA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LA VICTORIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAGO VICHUQUEN DE AQUELARRE VICHUQUEN DEL MAULE",
 "Local_ESCUELA LAS AMERICAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS AMERICAS PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA LAS AMERICAS PROFESOR JUSTO VALLADARES ORELLANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LAS ARAUCARIAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS CANTERAS HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS HORNILLAS LINARES DEL MAULE",
 "Local_ESCUELA LAS LILAS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS LILAS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS PALMAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS ROCAS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LATINA INES GALLARDO ORELLANA VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA LAURA MATUS MELENDEZ DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LAURA VICUNA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA LEON HUMBERTO VALENZUELA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LEONARDO DA VINCI VALDIVIA DE LOS RIOS",
 "Local_ESCUELA LEONCIO ARANEDA FIGUEROA CANETE DEL BIOBIO",
 "Local_ESCUELA LEOVIGILDO KLEY CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA LIBERTAD PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LIBERTADOR BERNARDO O'HIGGINS VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LIBERTADOR BERNARDO OA'HIGGINS RIQUELME CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO O'HIGGINS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO OHIGGINS RIQUELME CALBUCO DE LOS LAGOS",
 "Local_ESCUELA LIMACHITO LIMACHE DE VALPARAISO",
 "Local_ESCUELA LLANKANAO MANUEL FRANCISCO MEZA SECO LINARES DEL MAULE",
 "Local_ESCUELA LLANO SUBERCASEAUX SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO FRANCO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO MIRANDA DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LO VALDIVIA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LO VALLEDOR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LORD COCHRANE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ALERCES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS AVELLANOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOS AVELLANOS TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LOS BOSQUINOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS CONQUISTADORES CAUQUENES DEL MAULE",
 "Local_ESCUELA LOS GUALLES LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA LOS HEROES CHANCO DEL MAULE",
 "Local_ESCUELA LOS MOLLES QUILPUE DE VALPARAISO",
 "Local_ESCUELA LOS MONTES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA LOS PRINCIPES VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ROSALES DEL BAJO BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS SAUCES LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA LOS TRIGALES TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOTHAR KOMMER BRUGER CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUCILA GODOY ALCAYAGA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA LUCILA GODOY LINARES DEL MAULE",
 "Local_ESCUELA LUIS ARMANDO GOMEZ MUNOZ PARRAL DEL MAULE",
 "Local_ESCUELA LUIS ARRIETA CANAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS MARTINEZ GONZALEZ TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LUIS MATTE LARRAIN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS URIBE DIAZ Y GIMNASIO CASTRO DE LOS LAGOS",
 "Local_ESCUELA MADRE DE LA DIVINA PROVIDENCIA CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA MAHUIDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MALLOCO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MAND EDUARDO FREI MONTALVA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL ANABALON SAEZ PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MANUEL BRAVO REYES L1 CASABLANCA DE VALPARAISO",
 "Local_ESCUELA MANUEL DE SALAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA MANUEL MAGALLANES MOURE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL MATUS HERMOSILLA COIHUECO DE NUBLE",
 "Local_ESCUELA MANUEL MONTT RETIRO DEL MAULE",
 "Local_ESCUELA MANUEL ORELLA ECHANEZ CALDERA DE ATACAMA",
 "Local_ESCUELA MANUEL RECABARREN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MANUEL RODRIGUEZ ERDOIZA SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA MANUEL SEGOVIA MONTENEGRO LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA MARCIAL MARTINEZ FERRARI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCOS GOYCOOLEA CORTES COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA ALONSO CHACON LA CRUZ DE VALPARAISO",
 "Local_ESCUELA MARIA ALVARADO GARAY PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MARIA ARAYA VALDES SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MARIA LUISA BOMBAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA OLGA FIGUEROA LEYTON CURICO DEL MAULE",
 "Local_ESCUELA MARIA TERESA DEL CANTO MOLINA CATEMU DE VALPARAISO",
 "Local_ESCUELA MARIA TERESA MARCHANT CONTRERAS COELEMU DE NUBLE",
 "Local_ESCUELA MARIANO LATORRE SAN JAVIER DEL MAULE",
 "Local_ESCUELA MARIANO LATORRE VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA MARISCAL DE AYACUCHO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARTIN ALONQUEO PIUTRIN - GENERAL LOPEZ VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA MATILDE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_ESCUELA MAULE MAULE DEL MAULE",
 "Local_ESCUELA MAULE SUR COLBUN DEL MAULE",
 "Local_ESCUELA MELIPULLI PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA MELVIN JONES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES FONTECILLA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES MATURANA GALLARDO ZAPALLAR DE VALPARAISO",
 "Local_ESCUELA METODISTA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA METRENCO F-471 - METRENCO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MEXICO DE MICHOACAN OSORNO DE LOS LAGOS",
 "Local_ESCUELA MICHIGAN EL AMANECER COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL JOSE ZANARTU SANTA MARIA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA MIGUEL MONTECINOS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA MILLAHUE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MILLARAY TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MIRAVALLE L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIRAVALLE L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MODULAR SAN ANDRES FRESIA DE LOS LAGOS",
 "Local_ESCUELA MONSENOR CARLOS OVIEDO PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MONSENOR FRANCISCO VALDES SUBERCASEAUX OSORNO DE LOS LAGOS",
 "Local_ESCUELA MONSENOR GUIDO DE RAMBERGA PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MONSENOR MANUEL LARRAIN ERRAZURIZ HUALANE DEL MAULE",
 "Local_ESCUELA MONSERRAT ROBERT DE GARCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MUNICIPAL AMERICA MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE CUNACO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE GULTRO OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PALMILLA PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PANIAHUE SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PELEQUEN MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL E-456 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL COBRE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL TRENCITO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL FRONTERIZA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL GABRIELA MISTRAL GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL HERMANOS CARRERA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL ISABEL RIQUELME RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL JEAN PIAGET RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LAS QUEZADAS F-413 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LOS ARRAYANES PUCON DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL LUIS OYARZUN PENA SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MARCELA PAZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MONICA GEBERT MEIER VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL OSVALDO RUIZ GARCIA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PATRICIO MEKIS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PICHIPELLAHUEN LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL RENE SCHNEIDER CHEREAU RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL RERE YUMBEL DEL BIOBIO",
 "Local_ESCUELA MUNICIPAL RIO QUILLEM GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MUNICIPAL SAN PEDRO DE ALCANTARA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL TROYO - VILLA TROYO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL ZUNIGA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NACIMIENTO DE NUESTRO SENOR NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA NACIONES UNIDAS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA NANIHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEVADA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NEW HARVEST TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA NIDER ORREGO QUEVEDO PARRAL DEL MAULE",
 "Local_ESCUELA NIRRIMAPU - MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA NIVEQUETEN LAJA DEL BIOBIO",
 "Local_ESCUELA NONATO COO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NORMA GONZALEZ GUERRA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUESTRA SENORA DE FATIMA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA NUESTRA SENORA DE LA MERCED OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NUESTRA SENORA Y MADRE DEL CARMEN MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUEVA AMERICA QUIRIHUE DE NUBLE",
 "Local_ESCUELA NUEVA AURORA PAILLACO DE LOS RIOS",
 "Local_ESCUELA NUEVA COLLILELFU LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA ESPANA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA REPUBLICA HUALQUI DEL BIOBIO",
 "Local_ESCUELA NUMERO 1, ALEMANIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA OCTAVIO PALMA PEREZ CAUQUENES DEL MAULE",
 "Local_ESCUELA OCTAVIO SALINAS CARIAGA CORONEL DEL BIOBIO",
 "Local_ESCUELA OLEGARIO LAZO BAEZA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA OLEGARIO MORALES OLIVA PAILLACO DE LOS RIOS",
 "Local_ESCUELA ORLANDO LETELIER EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR BONILLA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR CASTRO LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR ENCALADA YOVANOVICH LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR GUERRERO QUINSAC NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA OSVALDO FUENTES BARRERA CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA P-34 BAUTISTA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PABLO CORREA MONTT PELARCO DEL MAULE",
 "Local_ESCUELA PABLO DE ROKHA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PABLO NERUDA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA PABLO NERUDA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PABLO NERUDA SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA PACTO ANDINO L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PACTO ANDINO L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PADRE ANDRE COINDRE SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PADRE ESTEBAN GUMUCIO VIVES LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE JOSEPH BENEDIKT STEGMEIER OVALLE DE COQUIMBO",
 "Local_ESCUELA PADRE LUIS OLIVA NAVARRETE PENCAHUE DEL MAULE",
 "Local_ESCUELA PADRE PEDRO CAMPOS MENCHACA YUMBEL DEL BIOBIO",
 "Local_ESCUELA PAHUIL CHANCO DEL MAULE",
 "Local_ESCUELA PALESTINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PALMARES ORIENTE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAMPA RIOS RIO BUENO DE LOS RIOS",
 "Local_ESCUELA PANGUE ARRIBA SAN RAFAEL DEL MAULE",
 "Local_ESCUELA PANGUILEMO EDITA GALLEGOS RODRIGUEZ TALCA DEL MAULE",
 "Local_ESCUELA PANIMAVIDA COLBUN DEL MAULE",
 "Local_ESCUELA PARTICULAR 167 RAMON GUINEZ PUCON DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR ALFA Y OMEGA LAJA DEL BIOBIO",
 "Local_ESCUELA PARTICULAR ARTURO PRAT FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CATRIPULLI CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CAUNICU ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA PARTICULAR CORAZON DE JESUS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR EL PORVENIR PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR FRANCIA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR HABIT-ART PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA DEHESA CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA MILAGROSA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PARTICULAR LUIS ISRAEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR MARGARITA NASEAU TOME DEL BIOBIO",
 "Local_ESCUELA PARTICULAR MONO PAINE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUESTRA SENORA DEL CARMEN PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUEVA LIQUINE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR NUMERO 8 VILCUN VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE ALEJANDRO ORTEGA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE JUAN WEVERING SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR SAGRADA FAMILIA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN BERNARDO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN FRANCISCO DE ASIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN JOSE OBRERO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PARTICULAR SAN JOSE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA PARTICULAR SAN JUAN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN RAFAEL ARCANGEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN SEBASTIAN SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SANTA MARIA DE LA RIBERA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SUBVENCIONADA PADRE ISIDORO TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR TRES CERROS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PASO INTERNACIONAL PEHUENCHE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA PATAGONIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PATRICIO CHAVEZ SOTO CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA PATRICIO LYNCH ZALDIVAR VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PAUL HARRIS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR IQUIQUE DE TARAPACA",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULO FREIRE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA LINARES DEL MAULE",
 "Local_ESCUELA PEDRO ANTONIO GONZALEZ CUREPTO DEL MAULE",
 "Local_ESCUELA PEDRO DE ONA PUREN DE LA ARAUCANIA",
 "Local_ESCUELA PEDRO MARIN ALEMANY MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO PABLO LEMAITRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEDRO QUINTANA MANSILLA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO RUIZ ALDEA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA PEDRO SARMIENTO DE GAMBOA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEHUEN LEBU DEL BIOBIO",
 "Local_ESCUELA PENCO PENCO DEL BIOBIO",
 "Local_ESCUELA PILAR MOLINER DE NUEZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PILOTO PARDO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PISAGUA HUARA DE TARAPACA",
 "Local_ESCUELA PLACIDO VILLARROEL IQUIQUE DE TARAPACA",
 "Local_ESCUELA PLAYA LINDA DE LIPIMAVIDA VICHUQUEN DEL MAULE",
 "Local_ESCUELA POETA NERUDA DE ISLA NEGRA EL QUISCO DE VALPARAISO",
 "Local_ESCUELA POETA NERUDA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA OSCAR CASTRO ZUNIGA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA VICENTE HUIDOBRO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETAS DE CHILE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETISA GABRIELA MISTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA POLONIA GUTIERREZ LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PORONGO CAUQUENES DEL MAULE",
 "Local_ESCUELA PORTUGAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PORVENIR DE CATO COIHUECO DE NUBLE",
 "Local_ESCUELA POZA VERDE LA LIGUA DE VALPARAISO",
 "Local_ESCUELA PREMIO NOBEL PABLO NERUDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESBITERO JOSE AGUSTIN GOMEZ GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA PRESIDENTE AGUIRRE CERDA CARTAGENA DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE CARLOS IBANEZ DEL CAMPO LINARES DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA MOLINA DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE JORGE ALESSANDRI R. LA UNION DE LOS RIOS",
 "Local_ESCUELA PRESIDENTE JOSE MANUEL BALMACEDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE PEDRO AGUIRRE CERDA SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE ROOSEVELT CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE SALVADOR ALLENDE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PROFESOR MANUEL CASTRO RAMOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA PROFESOR MANUEL GUERRERO CEBALLOS CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESOR RAMON DEL RIO ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA AURELIA ROJAS BURGOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA GLADYS VALENZUELA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA MARIA LUISA SEPULVEDA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROSPERIDAD TALCA DEL MAULE",
 "Local_ESCUELA PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE ARAUCO CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE CHILOE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROYECTO DE FUTURO PAILLACO DE LOS RIOS",
 "Local_ESCUELA PUBLICA REPUBLICA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA PUDETO ANCUD DE LOS LAGOS",
 "Local_ESCUELA PUERTO RICO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PUQUELDON PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA PURISIMA CONCEPCION DE POCILLAS CAUQUENES DEL MAULE",
 "Local_ESCUELA QUEBRADA DE ALVARADO OLMUE DE VALPARAISO",
 "Local_ESCUELA QUECHEREGUAS DE PICHINGAL MOLINA DEL MAULE",
 "Local_ESCUELA RADIMADI LA UNION DE LOS RIOS",
 "Local_ESCUELA RAFAEL VALDIVIESO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RAIMAPU FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA RALCO LEPOY ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA RAMON BELMAR SALDIAS LINARES DEL MAULE",
 "Local_ESCUELA RAMON EDUARDO RAMIREZ HENRIQUEZ CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA RAUCO RAUCO DEL MAULE",
 "Local_ESCUELA REBECA MATTE BELLO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RECAREDO VIGUERAS ARANEDA SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA REINA DE SUECIA L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINA DE SUECIA L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINO DE DINAMARCA MOLINA DEL MAULE",
 "Local_ESCUELA RENE SCHNEIDER SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARABE SIRIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA ARGENTINA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARGENTINA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA REPUBLICA ARGENTINA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA REPUBLICA ARGENTINA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA CHECA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ALEMANIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE AUSTRIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE BOLIVIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE BRASIL CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA DE COLOMBIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE COSTA RICA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ESTADOS UNIDOS DE NORTEAMERICA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE FRANCIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE FRANCIA QUINTERO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DE FRANCIA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA DE GRECIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA REPUBLICA DE GRECIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE HONDURAS EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE INDONESIA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA REPUBLICA DE ITALIA - LOCAL 2 CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE ITALIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE ITALIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ITALIA PENCO DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DE LA INDIA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LAS FILIPINAS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LOS EE.UU. DE AMERICA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE MEXICO CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE MEXICO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE PANAMA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE POLONIA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL ECUADOR ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DEL ECUADOR EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DEL PERU HUALPEN DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DEL PERU SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ESTADOS UNIDOS CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REVERENDO PADRE PATRICIO CARIOLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA RICARDO CAMPILLAY CONTRERAS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA RICARDO EDUARDO LATCHAM PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIO COLORADO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA RIO NEGRO RIO NEGRO DE LOS LAGOS",
 "Local_ESCUELA RISOPATRON PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIVERA DEL MAULE PENCAHUE DEL MAULE",
 "Local_ESCUELA ROBERTO OJEDA TORRES PAILLACO DE LOS RIOS",
 "Local_ESCUELA ROCIO DE LOS ANGELES PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROMILIO ARELLANO TRONCOSO LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ROMULO PENA MATURANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ROSA YANEZ RODRIGUEZ CORONEL DEL BIOBIO",
 "Local_ESCUELA ROSALINA PESCIO VARGAS PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSARIO CONCHA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSITA RENARD CORONEL DEL BIOBIO",
 "Local_ESCUELA RUBEN DARIO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RURAL 21 DE MAYO PAILLACO DE LOS RIOS",
 "Local_ESCUELA RURAL ADELA GARCIA GARCIA QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL ALFONSO OSSES PEREZ MARIQUINA DE LOS RIOS",
 "Local_ESCUELA RURAL AMANECER 2000 QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL ANTILHUE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL ARTISTICA ALUMNO MARCELO GUENTEO SOLIS QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL BAHIA MANSA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_ESCUELA RURAL BORDEMAR (NUEVA) QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CALCURRUPE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL CANITAS LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL CARBONEROS CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL CARRETERA AUSTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CHAUQUEAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHAYAHUE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHOROICO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA DIUMEN RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA RIO SUR PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CON INTERNADO RIO BLANCO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CORRENTOSO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL CRISTO REY PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CRUCERO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL CUCAO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CURINANCO VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL CURRINE FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL DORILA AGUILA AGUILAR MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL DUAO MAULE DEL MAULE",
 "Local_ESCUELA RURAL EL AVELLANAL CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL EL ENCANTO PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL EL PULPITO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ENRIQUE HEVIA LABBE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL EPSON PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTACION NUEVO PORVENIR PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTAQUILLA LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL FOLILCO LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL HILDA HUNQUEN MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL HUELLELHUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL HUELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL HUILLINCO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ISLA HUAPI FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL JOSE DANIEL BAHAMONDE BAHAMONDE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL JUAN VICTORINO TANGOL DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA AGUADA CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL LA CAPILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA CHAMIZA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LA PAZ PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA POZA SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA RINCONADA PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LA VILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LAGO AZUL PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LAS CAMPANAS PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA RURAL LAS CASCADAS PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA RURAL LENCA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LINDA VISTA QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LLINGUA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LLIUCO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LONCOTORO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ANGELES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ARCES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS LINARES DE CASMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PELLINES LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PINOS QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LUZ Y SABER OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL MAILLEN ESTERO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL MALLINLEMU DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL MASHUE LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL MIRTA OYARZO VERA CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL MONTEMAR QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL NONTUELA FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL NUEVA ISRAEL PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL NUMPAY MAULE DEL MAULE",
 "Local_ESCUELA RURAL OSTRICULTURA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL PABLO CEA VASQUEZ COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PABLO NERUDA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PARGA FRESIA DE LOS LAGOS",
 "Local_ESCUELA RURAL PEDRO VELAZQUEZ BONTES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL PICHIL OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL PUENTE COLMO CONCON DE VALPARAISO",
 "Local_ESCUELA RURAL PUERTO NUEVO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL PULLALLY PAPUDO DE VALPARAISO",
 "Local_ESCUELA RURAL RININAHUE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL RUNCA MAFIL DE LOS RIOS",
 "Local_ESCUELA RURAL SAN FRANCISCO QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL SAN JOSE DE TRANQUI QUEILEN DE LOS LAGOS",
 "Local_ESCUELA RURAL SOL DEL PACIFICO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL TAC QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL TEPUAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL TRAPEN PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL VALLE DE LA LUNA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VALLE MANTILHUE BAJO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL VALLE SIMPSON COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VILLA CHACAO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL VIVANCO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA SALOMON SACK LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALOMON SALMAN DABUD LINARES DEL MAULE",
 "Local_ESCUELA SALTOS DEL LAJA CABRERO DEL BIOBIO",
 "Local_ESCUELA SALVADOR SANFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALVADOR SANFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN ANDRES DE PICA PICA DE TARAPACA",
 "Local_ESCUELA SAN ANTONIO LINARES DEL MAULE",
 "Local_ESCUELA SAN CLEMENTE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA SAN DANIEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS DE ERCILLA ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA SAN FRANCISCO DE ASIS MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SAN FRANCISCO DE CHIU CHIU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA SAN FRANCISCO DE LA SELVA COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN JOSE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA SAN JOSE DE COLICO CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA SAN JOSE OBRERO DE CURACAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JOSE OBRERO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JUAN BAUTISTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LEONARDO MURIALDO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LUIS DE CONTULMO CONTULMO DEL BIOBIO",
 "Local_ESCUELA SAN LUIS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN PEDRO COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN PEDRO DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SAN PEDRO DE QUINTAY CASABLANCA DE VALPARAISO",
 "Local_ESCUELA SAN RAFAEL COQUIMBO DE COQUIMBO",
 "Local_ESCUELA SAN RAFAEL SAN RAFAEL DEL MAULE",
 "Local_ESCUELA SAN SANTIAGO DE BELEN PUTRE DE ARICA Y PARINACOTA",
 "Local_ESCUELA SAN VICENTE DE PAUL COPIAPO DE ATACAMA",
 "Local_ESCUELA SANITAS LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ADRIANA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ANA L1 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA SANTA BARBARA LINARES DEL MAULE",
 "Local_ESCUELA SANTA CLARA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA DELFINA RETIRO DEL MAULE",
 "Local_ESCUELA SANTA FE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA IRENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA JOAQUINA DE VEDRUNA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA LEONOR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA MARIA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA MARTA DE LIRAY COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA DE CHENA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA SANTA TERESA DEL CARMELO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA DE HUECHURABA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTIAGO AMENGUAL B. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA SANTIAGO BUERAS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA SANTIAGO DE GUAYAQUIL HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2 DANIEL REBOLLEDO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2DO DANIEL REBOLLEDO TALCA DEL MAULE",
 "Local_ESCUELA SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO CANDELARIA PEREZ SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA SELVA OSCURA VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA SENDERO DEL SABER SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SERAFIN GUTIERREZ VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA SILVANO FERNANDEZ YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA SIXTO MENDEZ PARADA GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SOCIEDAD DEL SOCORRO DE SENORAS OSORNO DE LOS LAGOS",
 "Local_ESCUELA SOL NACIENTE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SONIA PLAZA CASTRO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOR TERESA DE LOS ANDES LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SU SANTIDAD JUAN XXIII SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SUIZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA SUPERIOR DE NINAS DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SUPERIOR NUEVA BILBAO CONSTITUCION DEL MAULE",
 "Local_ESCUELA SUSANA MONTES VELASCO TENO DEL MAULE",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L2 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNO SUR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TEGUALDA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L1 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L2 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENO ANEXO TENO DEL MAULE",
 "Local_ESCUELA TENO TENO DEL MAULE",
 "Local_ESCUELA TEODORO LOWEY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TERESA DE CALCUTA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TERRITORIO ANTARTICO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THE LITTLE SCHOOL CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THEODOR HEUSS QUILPUE DE VALPARAISO",
 "Local_ESCUELA THILDA PORTILLO OLIVARES IQUIQUE DE TARAPACA",
 "Local_ESCUELA THOMAS ALVA EDISON COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA THOMAS JEFFERSON D 465 HUALPEN DEL BIOBIO",
 "Local_ESCUELA THOMAS JEFFERSON LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA TIMOTEO ARAYA ALEGRIA VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA TOBALABA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOQUI LAUTARO NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA TULIO BURGOS RIVERA CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA TUPAHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ULDA ARACENA GONZALEZ F-203 NOGALES DE VALPARAISO",
 "Local_ESCUELA UNESCO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNIFICADA ISLA GUAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA UNION LATINOAMERICANA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNION LATINOAMERICANA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA UNION NACIONAL ARABE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNO ISABEL RIQUELME LINARES DEL MAULE",
 "Local_ESCUELA VADO DE TOPATER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA VALDIVIA DE PAINE BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALENTIN LETELIER VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VALLE DE CUYA CAMARONES DE ARICA Y PARINACOTA",
 "Local_ESCUELA VALLE DE MARIQUINA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA VALLE DE PUANGUE CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE DEL INCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE RAMADILLAS ARAUCO DEL BIOBIO",
 "Local_ESCUELA VEGAS DE ITATA COELEMU DE NUBLE",
 "Local_ESCUELA VICENTE HUIDOBRO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA VICENTE REYES PALAZUELOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR CUCCUINI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR DOMINGO SILVA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA VILLA ALEGRE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CAROLINA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CENTINELA SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA CULENAR TALCA DEL MAULE",
 "Local_ESCUELA VILLA HUEQUEN ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA VILLA INDEPENDENCIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA INDEPENDENCIA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA INDEPENDENCIA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA JESUS DE COELEMU COELEMU DE NUBLE",
 "Local_ESCUELA VILLA LA CULTURA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA LA GRANJA MULCHEN DEL BIOBIO",
 "Local_ESCUELA VILLA LA PAZ TALCA DEL MAULE",
 "Local_ESCUELA VILLA LAS DUNAS SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA VILLA LAS NIEVES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA VILLA LO BURGOS PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA VILLA MONTE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA PEDRO AGUIRRE CERDA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA PRAT SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA VILLA SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SAN PEDRO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA VILLA SANTA ELENA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SUR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLASECA BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VINA PURISIMA TALCA DEL MAULE",
 "Local_ESCUELA VIOLETA PARRA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VIOLETA PARRA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VIRGEN DEL CARMEN EL CARMEN DE NUBLE",
 "Local_ESCUELA VISTA HERMOSA CORONEL DEL BIOBIO",
 "Local_ESCUELA VOIPIR DE NANCUL VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VOLCAN ANTUCO ANTUCO DEL BIOBIO",
 "Local_ESCUELA WASHINGTON OMAR VENEGAS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA WELCOME SCHOOL PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA YERBAS BUENAS Y GIMNASIO ANCUD DE LOS LAGOS",
 "Local_ESCUELA ZAIDA ARANEDA VIGUERAS LOS ALAMOS DEL BIOBIO",
 "Local_ESTADIO DIAGUITA OVALLE DE COQUIMBO",
 "Local_ESTADIO LA PORTADA LA SERENA DE COQUIMBO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L1 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L2 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO MONUMENTAL L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L3 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_FACULTAD DE ARQUITECTURA UNIVERSIDAD DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_FACULTAD DE FILOSOFIA Y EDUCACION PUCV, CAMPUS SAUSALITO VINA DEL MAR DE VALPARAISO",
 "Local_FACULTAD DE INGENIERIA PUCV VALPARAISO DE VALPARAISO",
 "Local_GEORGE CHAYTOR ENGLISH COLLEGE TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO AUGUSTO ZUBIRI (EX EPICENTRO I) ARICA DE ARICA Y PARINACOTA",
 "Local_GIMNASIO DEPORTIVO LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO FISCAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_GIMNASIO LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO MUNICIPAL CASTRO DE LOS LAGOS",
 "Local_GIMNASIO MUNICIPAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL DE RAUCO RAUCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL LOTA DEL BIOBIO",
 "Local_GIMNASIO MUNICIPAL MACUL METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL PELARCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL RINCONADA DE VALPARAISO",
 "Local_GIMNASIO MUNICIPAL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL SAN JAVIER DEL MAULE",
 "Local_GIMNASIO MUNICIPAL SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL TENO DEL MAULE",
 "Local_GIMNASIO OLIMPICO UFRO TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO POLIDEPORTIVO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_GIMNASIO POLIDEPORTIVO MARTIN VARGAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO UNIVERSIDAD DE LOS LAGOS PUERTO MONTT DE LOS LAGOS",
 "Local_GIMNASIOS INSTITUTO SALESIANO VALDIVIA DE LOS RIOS",
 "Local_GREEN HOUSE SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_HERNAN MERINO CORREA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_HRVATSKA SKOLA SAN ESTEBAN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INST. SUPERIOR DE ADMINISTRACION Y TURISMO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO BICENTENARIO JAVIERA CARRERA VERDUGO SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO CHACABUCO LOS ANDES DE VALPARAISO",
 "Local_INSTITUTO CHILE ASIA PACIFICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO CIENTIFICO EDUCACIONAL JOSE MAZA SANCHO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO CLARET TEMUCO DE LA ARAUCANIA",
 "Local_INSTITUTO COMERCIAL ALBERTO VALENZUELA LLANOS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO COMERCIAL ELIODORO DOMINGUEZ DOMINGUEZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL LINARES DEL MAULE",
 "Local_INSTITUTO COMERCIAL MARITIMO PACIFICO SUR L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO COMERCIAL OSORNO DE LOS LAGOS",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE ADMINISTRACION Y COMERCIO ESTADO DE ISRAEL COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO DE HUMANIDADES ALFREDO SILVA SANTIAGO CONCEPCION DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES ANTONIO MORENO CASAMITJANA CORONEL DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE MATEMATICAS PUCV MALAQUIAS MORALES MUNOZ VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L2 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO EDUCACIONAL COLLICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO HERMANOS MATTE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO HUMANIDADES MONSENOR JOSE MANUEL SANTO ASCARZA CHIGUAYANTE DEL BIOBIO",
 "Local_INSTITUTO HUMANIDADES SAN FRANCISCO DE ASIS LOTA DEL BIOBIO",
 "Local_INSTITUTO INDUSTRIAL SUPERIOR DE CHILLAN CHILLAN DE NUBLE",
 "Local_INSTITUTO INGLES CURICO DEL MAULE",
 "Local_INSTITUTO ITALIA DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO LINARES LINARES DEL MAULE",
 "Local_INSTITUTO MIGUEL LEON PRADO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO O'HIGGINS DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO OBISPO SILVA LEZAETA CALAMA DE ANTOFAGASTA",
 "Local_INSTITUTO POLITECNICO SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO POLITECNICO SUPERIOR EGIDIO ROZ CONSTITUCION DEL MAULE",
 "Local_INSTITUTO POLITECNICO SUPERIOR JUAN TERRIER DAILLY CURICO DEL MAULE",
 "Local_INSTITUTO PRESIDENTE ERRAZURIZ LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO PROFESIONAL DUOC PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO RAFAEL ARIZTIA L1 QUILLOTA DE VALPARAISO",
 "Local_INSTITUTO SAN MIGUEL COLINA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SAN SEBASTIAN BASICO YUMBEL DEL BIOBIO",
 "Local_INSTITUTO SAN VICENTE DE TAGUA TAGUA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO SANTA MARIA CHILLAN DE NUBLE",
 "Local_INSTITUTO SANTO TOMAS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO ENRIQUE MALDONADO TALCA DEL MAULE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO JERARDO MUNOZ CAMPOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PROFESOR FERNANDO PEREZ BECERRA CHILLAN DE NUBLE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO (2) L1 VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNOLOGICO Y COMERCIAL RECOLETA-INTECO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_INTERNADO FEMENINO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_JARDIN INFANTIL RUCAPEQUEN CHILLAN VIEJO DE NUBLE",
 "Local_JUNIOR COLLEGE ARICA DE ARICA Y PARINACOTA",
 "Local_LIC.DE CIENC.Y HUM.SAN JOSEMARIA ESCRIVA COQUIMBO DE COQUIMBO",
 "Local_LICEO A- 5 JOVINA NARANJO FERNANDEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 OCTAVIO PALMA PEREZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 VALENTIN LETELIER L1 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-1 VALENTIN LETELIER L2 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-127 FIDEL PINOCHET LE-BRUN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-2 POLITECNICO ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L2 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ABATE MOLINA TALCA DEL MAULE",
 "Local_LICEO ABDON CIFUENTES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ACADEMIA NACIONAL ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO ADVENTISTA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO AGRICOLA CHOLCHOL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO AGRICOLA JOSE ABELARDO NUNEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGRICOLA PADRE FRANCISCO NAPOLITANO ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGROINDUSTRIAL RIO CLARO RIO CLARO DEL MAULE",
 "Local_LICEO AGUSTIN ROSS EDWARDS PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ALBERTO BLEST GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALBERTO BLEST GANA LOS LAGOS DE LOS RIOS",
 "Local_LICEO ALCALDE SERGIO GONZALEZ GUTIERREZ POZO ALMONTE DE TARAPACA",
 "Local_LICEO ALEJANDRO ALVAREZ JOFRE OVALLE DE COQUIMBO",
 "Local_LICEO ALEMAN DEL VERBO DIVINO L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE GALVARINO RIVEROS CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE PEDRO ESPINA RITCHIE TALCAHUANO DEL BIOBIO",
 "Local_LICEO ALONSO DE ERCILLA Y ZUNIGA ERCILLA DE LA ARAUCANIA",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO JAHUEL BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO AMANDA LABARCA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANDRES ALCAZAR DE TUCAPEL TUCAPEL DEL BIOBIO",
 "Local_LICEO ANDRES BELLO PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO ANDRES BELLO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO SALAMANCA MORALES CORONEL DEL BIOBIO",
 "Local_LICEO ANTONIO VARAS CAUQUENES DEL MAULE",
 "Local_LICEO ANTONIO VARAS L1 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ANTONIO VARAS L2 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ARAUCANIA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTISTICO ARMANDO CARRERA GONZALEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO ARTISTICO D-13 JUAN NOE CREVANI ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO ARTURO ALESSANDRI PALMA LONGAVI DEL MAULE",
 "Local_LICEO ARTURO ALESSANDRI PALMA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_LICEO ARTURO PEREZ CANTO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO PRAT CHACON CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO ARTURO VALENZUELA CUNCO DE LA ARAUCANIA",
 "Local_LICEO AUGUSTO D HALMAR NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO AUGUSTO SANTELICES VALENZUELA LICANTEN DEL MAULE",
 "Local_LICEO AVENIDA RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO B 42 TAJAMAR PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN MUNOZ GAMERO PUERTO OCTAY DE LOS LAGOS",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BERTA ZAMORANO LIZANA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L1 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L2 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO A-71 GUILLERMO FELIU CRUZ ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO AGRICOLA DE LA PATAGONIA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO AGRICOLA MARTA MARTINEZ CRUZ YERBAS BUENAS DEL MAULE",
 "Local_LICEO BICENTENARIO AGROPECUARIO LIKAN ANTAI SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ANDRES SABELLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ARAUCANIA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO ARTISTICO ALEXANDER GRAHAM BELL VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CHACABUCO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO CIUDAD DE LOS RIOS VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO BICENTENARIO CLAUDIO ARRAU LEON COIHUECO DE NUBLE",
 "Local_LICEO BICENTENARIO COLEGIO DIOCESANO OBISPO LABBE IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO NIRVANA ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO PANQUEHUE PANQUEHUE DE VALPARAISO",
 "Local_LICEO BICENTENARIO COMPLEJO EDUCACIONAL ANDRES ANTONIO GORBEA GORBEA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CORDILLERA DE SAN FELIPE SAN FELIPE DE VALPARAISO",
 "Local_LICEO BICENTENARIO DE ANCUD ANCUD DE LOS LAGOS",
 "Local_LICEO BICENTENARIO DE CAUQUENES CAUQUENES DEL MAULE",
 "Local_LICEO BICENTENARIO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA CARLOS MONTANE CASTRO QUIRIHUE DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA DIEGO PORTALES PALAZUELOS SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA NUEVO MUNDO MULCHEN DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE JUVENAL HERNANDEZ JAQUE EL CARMEN DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE SAN NICOLAS, CAMPUS SERGIO MARTIN ALAMOS SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNICO PUENTE NUBLE SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNOLOGICO FEDERICO SCHWAGER CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TREHUACO TREGUACO DE NUBLE",
 "Local_LICEO BICENTENARIO DE HOTELERIA Y TURISMO PUCON DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE MOLINA MARIA DEL TRANSITO DE LA CRUZ MOLINA DEL MAULE",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE VALLENAR VALLENAR DE ATACAMA",
 "Local_LICEO BICENTENARIO DE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO BICENTENARIO DIEGO PORTALES PALAZUELOS CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ENRIQUE BALLACEY COTTEREAU ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO FRANCISCO BILBAO BARQUIN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO INDOMITO DE PUREN PUREN DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO INGENIERO RICARDO FENNER RUEDI LA UNION DE LOS RIOS",
 "Local_LICEO BICENTENARIO ISIDORA RAMOS DE GAJARDO LEBU DEL BIOBIO",
 "Local_LICEO BICENTENARIO LUIS CRUZ MARTINEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO LUIS GONZALEZ VASQUEZ NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO MANUEL DE SALAS L1 CASABLANCA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MANUEL JESUS ORTIZ SAN IGNACIO DE NUBLE",
 "Local_LICEO BICENTENARIO MARTA NAREA DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MERCEDES FRITIS MACKENNEY COPIAPO DE ATACAMA",
 "Local_LICEO BICENTENARIO ORIENTE DE TALCA TALCA DEL MAULE",
 "Local_LICEO BICENTENARIO PABLO NERUDA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA PICA DE TARAPACA",
 "Local_LICEO BICENTENARIO PAUL HARRIS PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO POLITECNICO CESAREO AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO POLITECNICO EMA ESPINOZA CORREA LAUTARO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO JOSE MANUEL PINTO ARIAS PINTO DE NUBLE",
 "Local_LICEO BICENTENARIO POLITECNICO JUANITA FERNANDEZ SOLAR ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO MANUEL MONTT VICTORIA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLIVALENTE NUESTRA SENORA DE LA MERCED SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO QUEMCHI QUEMCHI DE LOS LAGOS",
 "Local_LICEO BICENTENARIO RURAL CERRO CASTILLO RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO SAN FELIPE DE ARAUCO ARAUCO DEL BIOBIO",
 "Local_LICEO BICENTENARIO SAN PEDRO DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA CRUZ DE LARQUI BULNES DE NUBLE",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO SANTA TERESA DE LOS ANDES COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SIMON BOLIVAR LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL DE MINERIA CABILDO DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL MARY GRAHAM (MEDIA) VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO TERESA PRATS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L2 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO ZAPALLAR ZAPALLAR DE VALPARAISO",
 "Local_LICEO CAMILO HENRIQUEZ DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CAMPANARIO YUNGAY DE NUBLE",
 "Local_LICEO CAPITAN IGNACIO CARRERA PINTO COLBUN DEL MAULE",
 "Local_LICEO CARDENAL ANTONIO SAMORE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL ANTONIO SAMORE SANTA BARBARA DEL BIOBIO",
 "Local_LICEO CARDENAL CARO BASICA BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARLOS CONDELL TALCA DEL MAULE",
 "Local_LICEO CARLOS COUSINO GOYENECHEA LOTA DEL BIOBIO",
 "Local_LICEO CARLOS IBANEZ DEL CAMPO FRESIA DE LOS LAGOS",
 "Local_LICEO CARLOS ROBERTO MONDACA CORTES VICUNA DE COQUIMBO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMEN AURORA RODRIGUEZ HENRIQUEZ COQUIMBO DE COQUIMBO",
 "Local_LICEO CATOLICO ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_LICEO CHILOE L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHILOE L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CIENTIFICO HUMANISTA BRAINSTORM TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CIENTIFICO HUMANISTA LA CHIMBA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO CIUDAD DE BRASILIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLARA SOLOVERA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLAUDINA URRUTIA DE LAVIN CAUQUENES DEL MAULE",
 "Local_LICEO CLAUDIO ARRAU DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO CLAUDIO FLORES SOTO LOS ALAMOS DEL BIOBIO",
 "Local_LICEO COEDUCACIONAL LA IGUALDAD VALPARAISO DE VALPARAISO",
 "Local_LICEO COEDUCACIONAL SANTA MARIA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ALEJANDRO LUBET VERGARA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO COMERCIAL ANDRES BELLO LOPEZ CORONEL DEL BIOBIO",
 "Local_LICEO COMERCIAL CAMILO HENRIQUEZ LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_LICEO COMERCIAL DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO COMERCIAL DEL DESARROLLO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL DIEGO PORTALES L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL DIEGO PORTALES PALAZUELO LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ENRIQUE OYARZUN MONDACA CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL FEMENINO DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL GABRIEL GONZALEZ VIDELA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL JORGE ALESSANDRI RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL MIRAMAR PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL MOLINA LAVIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL PRESIDENTE FREI MONTALVA LOTA DEL BIOBIO",
 "Local_LICEO COMERCIAL PROFESOR SERGIO MORAGA ARCIL TALCAHUANO DEL BIOBIO",
 "Local_LICEO COMERCIAL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL REPUBLICA DE BRASIL PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL TEMUCO BICENTENARIO DE EXCELENCIA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL VATE VICENTE HUIDOBRO SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMPLEJO EDUCACIONAL JAVIERA CARRERA TALCA DEL MAULE",
 "Local_LICEO CONFEDERACION SUIZA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CONSTITUCION CONSTITUCION DEL MAULE",
 "Local_LICEO COPIULEMU FLORIDA DEL BIOBIO",
 "Local_LICEO CORDILLERA CHINCOLCO PETORCA DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CRISTO REDENTOR LOS ALAMOS DEL BIOBIO",
 "Local_LICEO DARIO SALAS L1 SANTA MARIA DE VALPARAISO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 21 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE CIENCIAS Y HUMANIDADES PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO DE CULTURA Y DIFUSION ARTISTICA TALCA DEL MAULE",
 "Local_LICEO DE ESTUDIOS CONTABLES Y ADMINISTR. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES DE ANTOFAGASTA MARIO BAHAMONDE SILVA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES MANUEL MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO DE HOMBRES NEANDRO SCHILLING SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE HUARA HUARA DE TARAPACA",
 "Local_LICEO DE HUEPIL TUCAPEL DEL BIOBIO",
 "Local_LICEO DE LIMACHE L1 LIMACHE DE VALPARAISO",
 "Local_LICEO DE NINAS CONCEPCION DEL BIOBIO",
 "Local_LICEO DE NINAS EDUARDO CHARME SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE NINAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE OLMUE OLMUE DE VALPARAISO",
 "Local_LICEO DE PELARCO PELARCO DEL MAULE",
 "Local_LICEO DE REQUINOA L1 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE REQUINOA L2 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_LICEO DE YUNGAY YUNGAY DE NUBLE",
 "Local_LICEO DEPORTIVO ELENA DUVAUCHELLE CABEZON IQUIQUE DE TARAPACA",
 "Local_LICEO DIEGO PORTALES COQUIMBO DE COQUIMBO",
 "Local_LICEO DOCTOR ALEJANDRO DEL RIO LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR JUAN VERDAGUER PLANAS RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR VICTOR RIOS RUIZ ANTUCO DEL BIOBIO",
 "Local_LICEO DOMINGO HERRERA RIVERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DOMINGO ORTIZ DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_LICEO DOMINGO SANTA MARIA CONCEPCION DEL BIOBIO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO EDUARDO DE LA BARRA VALPARAISO DE VALPARAISO",
 "Local_LICEO EL BOLLENAR MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL PRINCIPAL PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROBLE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROSARIO DE LITUECHE L1 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO EL ROSARIO DE LITUECHE L2 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ELEUTERIO RAMIREZ MOLINA CALAMA DE ANTOFAGASTA",
 "Local_LICEO ELEUTERIO RAMIREZ OSORNO DE LOS LAGOS",
 "Local_LICEO ELVIRA BRADY MALDONADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ELVIRA SANCHEZ DE GARCES MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ENRIQUE BACKAUSSE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ERASMO ESCALA ARRIAGADA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESMERALDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESPIRITU SANTO DEL VERBO DIVINO SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIA SUBERCASEAUX L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO EUGENIO MARIA DE HOSTOS LA REINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIO PEREIRA SALAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL ARTISTICO Y DE APLICACION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL UMAG PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO FEDERICO ALBERT FAUPP CHANCO DEL MAULE",
 "Local_LICEO FEDERICO HEISE MARTI PARRAL DEL MAULE",
 "Local_LICEO FEDERICO VARELA CHANARAL DE ATACAMA",
 "Local_LICEO FERMIN DEL REAL CASTILLO CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FERNANDO ARIZTIA RUIZ COPIAPO DE ATACAMA",
 "Local_LICEO FERNANDO BINVIGNAT MARIN COQUIMBO DE COQUIMBO",
 "Local_LICEO FERNANDO LAZCANO CURICO DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA ARMANET VILLA ALEGRE DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FRANCISCO BASCUNAN GUERRERO QUILLECO DEL BIOBIO",
 "Local_LICEO FRANCISCO COLOANE CASTRO DE LOS LAGOS",
 "Local_LICEO FRANCISCO DE AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO FRANCISCO FRIAS VALENZUELA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRANCISCO HERNANDEZ ORTIZ-PIZARRO CALBUCO DE LOS LAGOS",
 "Local_LICEO FRANCISCO JAVIER KRUGGER ALVARADO BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRAY PABLO DE ROYO SAN PABLO DE LOS LAGOS",
 "Local_LICEO GABRIELA MISTRAL CANETE DEL BIOBIO",
 "Local_LICEO GABRIELA MISTRAL DE LA SERENA LA SERENA DE COQUIMBO",
 "Local_LICEO GABRIELA MISTRAL DE MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL MAFIL DE LOS RIOS",
 "Local_LICEO GABRIELA MISTRAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO GABRIELA MISTRAL SAN ANTONIO DE VALPARAISO",
 "Local_LICEO GABRIELA MISTRAL TEMUCO DE LA ARAUCANIA",
 "Local_LICEO GASTRONOMIA Y TURISMO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO GASTRONOMIA Y TURISMO L2 QUILPUE DE VALPARAISO",
 "Local_LICEO GRANADEROS DE PUTRE PUTRE DE ARICA Y PARINACOTA",
 "Local_LICEO GREGORIO CORDOVEZ LA SERENA DE COQUIMBO",
 "Local_LICEO GREGORIO MORALES MIRANDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO GUILLERMO MARIN LARRAIN RETIRO DEL MAULE",
 "Local_LICEO HARDWARE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO HECTOR PEREZ BIOTT TALCA DEL MAULE",
 "Local_LICEO HERIBERTO SOTO SOTO SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERNANDO DE MAGALLANES PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO HUALANE HUALANE DEL MAULE",
 "Local_LICEO HUERTOS FAMILIARES TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO HUMANISTA CIENTIFICO JOSE DE LA CRUZ MIRANDA CORREA CANETE DEL BIOBIO",
 "Local_LICEO IGNACIO CARRERA PINTO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO IGNACIO CARRERA PINTO TALCA DEL MAULE",
 "Local_LICEO INDIRA GANDHI LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL A 116 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ARMANDO QUEZADA ACHARAN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO INDUSTRIAL BENJAMIN FRANKLIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION HERNAN VALENZUELA L1 HUALPEN DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION VICTOR BEZANILLA SALINAS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE RENGO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL DE SAN MIGUEL AGUSTIN EDWARDS ROSS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_LICEO INDUSTRIAL DOMINGO MATTE PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ERNESTO PINTO LAGARRIGUE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL EULOGIO GORDO MONEO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO INDUSTRIAL JOSE TOMAS DE URMENETA COQUIMBO DE COQUIMBO",
 "Local_LICEO INDUSTRIAL METODISTA CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO INDUSTRIAL MIGUEL AYLWIN GAJARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL OSORNO OSORNO DE LOS LAGOS",
 "Local_LICEO INDUSTRIAL PRESIDENTE PEDRO AGUIRRE CERDA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL SAMUEL VIVANCO PARADA LOS ANGELES DEL BIOBIO",
 "Local_LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO INGENIERO MILITAR JUAN MACKENNA O'REILLY PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INMACULADA CONCEPCION CAUQUENES DEL MAULE",
 "Local_LICEO INSTITUTO COMERCIAL DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO INSULAR ENSENANZA BASICA Y GIMNASIO QUINCHAO DE LOS LAGOS",
 "Local_LICEO INSULAR ENSENANZA MEDIA QUINCHAO DE LOS LAGOS",
 "Local_LICEO ISABEL POBLETE VARGAS PERQUENCO DE LA ARAUCANIA",
 "Local_LICEO ISABEL RIQUELME QUILLECO DEL BIOBIO",
 "Local_LICEO ISAURA DINATOR DE GUZMAN SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAMES MUNDELL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO JAN COMENIUS TEMUCO DE LA ARAUCANIA",
 "Local_LICEO JAVIERA CARRERA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAVIERA CARRERA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JEAN BUCHANAN DE LARRAIN PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ LA SERENA DE COQUIMBO",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ VICTORIA DE LA ARAUCANIA",
 "Local_LICEO JORGE TEILLIER SANDOVAL LAUTARO DE LA ARAUCANIA",
 "Local_LICEO JOSE ANTONIO CARVAJAL COPIAPO DE ATACAMA",
 "Local_LICEO JOSE DOMINGO CANAS QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE FRANCISCO VERGARA L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO JOSE IGNACIO ZENTENO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE MANUEL BORGONO NUNEZ L1 PETORCA DE VALPARAISO",
 "Local_LICEO JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE TORIBIO MEDINA RIO NEGRO DE LOS LAGOS",
 "Local_LICEO JOSE VICTORINO LASTARRIA GORBEA DE LA ARAUCANIA",
 "Local_LICEO JOSE VICTORINO LASTARRIA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE VICTORINO LASTARRIA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSEFINA AGUIRRE MONTENEGRO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO JUAN AGUSTIN MORALES GONZALEZ MOLINA DEL MAULE",
 "Local_LICEO JUAN ANTONIO RIOS L1 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN ANTONIO RIOS L2 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO JUAN DANTE PARRAGUEZ ARELLANO SAN ANTONIO DE VALPARAISO",
 "Local_LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN GOMEZ MILLAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN GOMEZ MILLAS YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN RUSQUE PORTAL L1 NOGALES DE VALPARAISO",
 "Local_LICEO JUAN XXIII SEDE EL BELLOTO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO JUANA ROSS DE EDWARDS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO LA ASUNCION TALCAHUANO DEL BIOBIO",
 "Local_LICEO LA PORTADA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO LAS AMERICAS PUYEHUE DE LOS LAGOS",
 "Local_LICEO LAS ARAUCARIAS BASICA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LAS ARAUCARIAS MEDIA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LATINOAMERICANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO LAURA URRUTIA BENAVENTE LONGAVI DEL MAULE",
 "Local_LICEO LENKA FRANULIC NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LIBERTADOR BERNARDO O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_LICEO LIBERTADOR GENERAL BERNARDO OA'HIGGINS IQUIQUE DE TARAPACA",
 "Local_LICEO LONQUIMAY LONQUIMAY DE LA ARAUCANIA",
 "Local_LICEO LOS ALMENDROS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ALMENDROS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ANDES MELIPEUCO DE LA ARAUCANIA",
 "Local_LICEO LOS ANGELES A-59 L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS ANGELES A-59 L2 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS CASTANOS LAUTARO DE LA ARAUCANIA",
 "Local_LICEO LOS CONDORES ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO LOS HEROES DE LA CONCEPCION CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS JAZMINES MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCERO GONZALEZ CONCEPCION DEL BIOBIO",
 "Local_LICEO LUCILA GODOY ALCAYAGA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCILA GODOY ALCAYAGA TRAIGUEN DE LA ARAUCANIA",
 "Local_LICEO LUIS ALBERTO BARRERA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS CRUZ MARTINEZ DE CURICO CURICO DEL MAULE",
 "Local_LICEO LUIS CRUZ MARTINEZ IQUIQUE DE TARAPACA",
 "Local_LICEO LUIS CRUZ MARTINEZ NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS DE ALAVA FLORIDA DEL BIOBIO",
 "Local_LICEO LUIS EDMUNDO CORREA ROJAS CUREPTO DEL MAULE",
 "Local_LICEO LUIS HUMBERTO ACOSTA GAY EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUIS URBINA FLORES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MACHALI MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MADRE VICENCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MALAQUIAS CONCHA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANIHUALES AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO MANUEL BARROS BORGONO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL BULNES BULNES DE NUBLE",
 "Local_LICEO MANUEL JESUS ANDRADE BORQUEZ CHONCHI DE LOS LAGOS",
 "Local_LICEO MANUEL MARIN FRITIS L1 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MARIN FRITIS L2 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MONTT SAN JAVIER DEL MAULE",
 "Local_LICEO MANUEL RODRIGUEZ TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL ROJAS MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA AURORA GUINEZ RAMIREZ PUREN DE LA ARAUCANIA",
 "Local_LICEO MARIA CARVAJAL FUENZALIDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA LUISA BOMBAL VALPARAISO DE VALPARAISO",
 "Local_LICEO MARIA LUISA BOMBAL VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA REINA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L1 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L2 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARTA DONOSO ESPEJO TALCA DEL MAULE",
 "Local_LICEO MARTIN RUIZ DE GAMBOA CHILLAN DE NUBLE",
 "Local_LICEO MATILDE BRANDAU DE ROSS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAYOR GENERAL (E) OSCAR BONILLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO MERCEDES MARIN DEL SOLAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO METROPOLITANO DE ADULTOS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL ANGEL CERDA LEIVA MULCHEN DEL BIOBIO",
 "Local_LICEO MIGUEL DE CERVANTES Y SAAVEDRA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MINERO AMERICA CALAMA DE ANTOFAGASTA",
 "Local_LICEO MIREYA CATALAN URZUA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR BASICA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL ATENEA CUNCO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL BARROS ARANA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE CODEGUA CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL DE LOLOL LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE NACIMIENTO NACIMIENTO DEL BIOBIO",
 "Local_LICEO MUNICIPAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL F-860 L1 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL F-860 L2 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL INSTITUTO CARDENAL CARO MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL JOSE VICTORINO LASTARRIA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LA FRONTERA PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL LUIS GREGORIO VALENZUELA LAVIN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LUIS LABORDA L1 HIJUELAS DE VALPARAISO",
 "Local_LICEO MUNICIPAL MISAEL LOBOS MONROY GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL PABLO NERUDA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL POETA NERUDA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL RIO CLARO YUMBEL DEL BIOBIO",
 "Local_LICEO MUNICIPAL SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL TROVOLHUE CARAHUE DE LA ARAUCANIA",
 "Local_LICEO NACIONAL DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NACIONAL DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NICOLAS FEDERICO LOHSE VARGAS LOS VILOS DE COQUIMBO",
 "Local_LICEO NUESTRA SENORA DE LA PAZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO NUESTRA SENORA DE LAS MERCEDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUESTRA SENORA MARIA INMACULADA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVA ZELANDIA SANTA JUANA DEL BIOBIO",
 "Local_LICEO NUEVO AMANECER LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVO HORIZONTE VICHUQUEN DEL MAULE",
 "Local_LICEO NUEVO PORVENIR SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ORIENTE RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L2 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSORNO COLLEGE OSORNO DE LOS LAGOS",
 "Local_LICEO PABLO NERUDA DE TALCA TALCA DEL MAULE",
 "Local_LICEO PABLO NERUDA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO PADRE LUIS ALBERTO SALDES IRARRAZABAL YUMBEL DEL BIOBIO",
 "Local_LICEO PADRE SIGISFREDO PANGUIPULLI DE LOS RIOS",
 "Local_LICEO PARROQUIAL SAN ANTONIO VINA DEL MAR DE VALPARAISO",
 "Local_LICEO PARROQUIAL TERESITA DE LOS ANDES RINCONADA DE VALPARAISO",
 "Local_LICEO PARTICULAR CARLOS CONDELL LOS ANGELES DEL BIOBIO",
 "Local_LICEO PARTICULAR MIXTO LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO PARTICULAR MIXTO SAN FELIPE L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO PARTICULAR SUBVENCIONADO LIBERTAD VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO PATRICIO MEKIS DE PADRE HURTADO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PAULA JARAQUEMADA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PEDRO AGUIRRE CERDA PUERTO VARAS DE LOS LAGOS",
 "Local_LICEO PEDRO REGALADO VIDELA ORDENES ANDACOLLO DE COQUIMBO",
 "Local_LICEO PEDRO TRONCOSO MACHUCA VALLENAR DE ATACAMA",
 "Local_LICEO PELDEHUE COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PELLUHUE PELLUHUE DEL MAULE",
 "Local_LICEO PENAFLOR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO PENCOPOLITANO PENCO DEL BIOBIO",
 "Local_LICEO POETA FEDERICO GARCIA LORCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA PABLO NERUDA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA VICENTE HUIDOBRO L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETA VICENTE HUIDOBRO L2 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L1 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L2 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL MEDIA CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO AMERICA LOS ANDES DE VALPARAISO",
 "Local_LICEO POLITECNICO ANDRES BELLO LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO ANTULAFKEN SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_LICEO POLITECNICO B-4 ANTONIO VARAS DE LA BARRA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO POLITECNICO C-120 L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO C-120 L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CAPITAN IGNACIO CARRERA PINTO SAN CARLOS DE NUBLE",
 "Local_LICEO POLITECNICO CARAMPANGUE ARAUCO DEL BIOBIO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_LICEO POLITECNICO DE CONCON CONCON DE VALPARAISO",
 "Local_LICEO POLITECNICO DE LINARES LINARES DEL MAULE",
 "Local_LICEO POLITECNICO DE OVALLE OVALLE DE COQUIMBO",
 "Local_LICEO POLITECNICO DIEGO PORTALES PALAZUELOS TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLITECNICO DOMINGO SANTA MARIA RENAICO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO GENERAL OSCAR BONILLA BRADANOV CABRERO DEL BIOBIO",
 "Local_LICEO POLITECNICO HANNOVER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO HEROES DE LA CONCEPCION LAJA DEL BIOBIO",
 "Local_LICEO POLITECNICO HOLANDA LLANQUIHUE DE LOS LAGOS",
 "Local_LICEO POLITECNICO JOSE GUTIERREZ DE LA FUENTE IQUIQUE DE TARAPACA",
 "Local_LICEO POLITECNICO MARGA MARGA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARGA MARGA L2 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARIA WARD SAN IGNACIO DE NUBLE",
 "Local_LICEO POLITECNICO MELIPILLA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MELIPILLA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MIRASOL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO POLITECNICO PABLO RODRIGUEZ CAVIEDES ILLAPEL DE COQUIMBO",
 "Local_LICEO POLITECNICO PESQUERO MEHUIN MARIQUINA DE LOS RIOS",
 "Local_LICEO POLITECNICO PUEBLO NUEVO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO QUINTERO QUINTERO DE VALPARAISO",
 "Local_LICEO POLITECNICO RAUL SILVA HENRIQUEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLITECNICO SAGRADO CORAZON LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO SARA BLINDER DARGOLTZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO POLIVALENTE BAHIA DARWIN LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE CAMILO HENRIQUEZ G. LANCO DE LOS RIOS",
 "Local_LICEO POLIVALENTE DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_LICEO POLIVALENTE DE MOLINA MOLINA DEL MAULE",
 "Local_LICEO POLIVALENTE DE RAUCO RAUCO DEL MAULE",
 "Local_LICEO POLIVALENTE DIEGO MISSENE BURGOS COBQUECURA DE NUBLE",
 "Local_LICEO POLIVALENTE DOCTOR LUIS VARGAS SALCEDO CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE DOCTOR RIGOBERTO IGLESIAS BASTIAS DE LEBU LEBU DEL BIOBIO",
 "Local_LICEO POLIVALENTE DOMINGO LATRILLE TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLIVALENTE ENRIQUE MAC IVER CONSTITUCION DEL MAULE",
 "Local_LICEO POLIVALENTE FERNANDO SILVA CASTELLON CATEMU DE VALPARAISO",
 "Local_LICEO POLIVALENTE JUAN PACHECO ALTAMIRANO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO POLIVALENTE LA FRONTERA NEGRETE DEL BIOBIO",
 "Local_LICEO POLIVALENTE LAS SALINAS TALCAHUANO DEL BIOBIO",
 "Local_LICEO POLIVALENTE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LORENZO ARENAS OLIVO CONCEPCION DEL BIOBIO",
 "Local_LICEO POLIVALENTE LOS GUINDOS BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LUIS CRUZ MARTINEZ QUILLON DE NUBLE",
 "Local_LICEO POLIVALENTE MANUEL ARISTIDES ZANARTU ZANARTU CABRERO DEL BIOBIO",
 "Local_LICEO POLIVALENTE MARIA BEHETY PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLIVALENTE MARIANO LATORRE CURANILAHUE DEL BIOBIO",
 "Local_LICEO POLIVALENTE NAHUELBUTA CONTULMO DEL BIOBIO",
 "Local_LICEO POLIVALENTE OLOF PALME LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE RIGOBERTO FONTT IZQUIERDO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE SAGRADA FAMILIA SAGRADA FAMILIA DEL MAULE",
 "Local_LICEO POLIVALENTE SAN JOSE DE LA PRECIOSA SANGRE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE TOMAS ARNALDO HERRERA VEGA PEMUCO DE NUBLE",
 "Local_LICEO POLIVANENTE BENJAMIN VICUNA MACKENNA VALDIVIA DE LOS RIOS",
 "Local_LICEO PORTAL DE LA CISTERNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE ANIBAL PINTO GARMENDIA. IQUIQUE DE TARAPACA",
 "Local_LICEO PRESIDENTE BALMACEDA CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE GABRIEL GONZALEZ VIDELA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL EL SAUCE TALCA DEL MAULE",
 "Local_LICEO PUBLICO BICENTENARIO CLAUDIO ARRAU LEON CARAHUE DE LA ARAUCANIA",
 "Local_LICEO PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PULMAHUE L1 LA LIGUA DE VALPARAISO",
 "Local_LICEO PUNTA DE RIELES LOS MUERMOS DE LOS LAGOS",
 "Local_LICEO PURKUYEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAHUE OSORNO DE LOS LAGOS",
 "Local_LICEO RAUL BROUSSAIN CAMPINO AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO RAYEN MAPU QUELLON DE LOS LAGOS",
 "Local_LICEO REBECA MATTE BELLO CONCEPCION DEL BIOBIO",
 "Local_LICEO RECTOR ABDON ANDRADE COLOMA LA UNION DE LOS RIOS",
 "Local_LICEO REINO DE SUECIA SAAVEDRA DE LA ARAUCANIA",
 "Local_LICEO REPUBLICA ARGENTINA LOS ANDES DE VALPARAISO",
 "Local_LICEO REPUBLICA DE GRECIA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA ARTURO BONOMETTI BROGI CHILLAN DE NUBLE",
 "Local_LICEO REPUBLICA DE ITALIA ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DEL BRASIL LANCO DE LOS RIOS",
 "Local_LICEO REPUBLICA DEL ECUADOR CONCEPCION DEL BIOBIO",
 "Local_LICEO REPUBLICA DEL ECUADOR TOME DEL BIOBIO",
 "Local_LICEO RODULFO AMANDO PHILIPPI PAILLACO DE LOS RIOS",
 "Local_LICEO RURAL LAS QUEMAS PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO RURAL PUTU CONSTITUCION DEL MAULE",
 "Local_LICEO SALESIANO CAMILO ORTUZAR MONTT MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAMCA ARUMANTI IQUIQUE DE TARAPACA",
 "Local_LICEO SAMUEL ROMAN ROJAS COMBARBALA DE COQUIMBO",
 "Local_LICEO SAN AGUSTIN DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO SAN CLEMENTE ENTRE RIOS SAN CLEMENTE DEL MAULE",
 "Local_LICEO SAN CONRADO DE FUTRONO FUTRONO DE LOS RIOS",
 "Local_LICEO SAN ESTEBAN SAN ESTEBAN DE VALPARAISO",
 "Local_LICEO SAN FELIPE BENICIO DE COYHAIQUE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO SAN FRANCISCO DE ASIS ARAUCO DEL BIOBIO",
 "Local_LICEO SAN FRANCISCO DE ASIS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO SAN FRANCISCO DE PLACILLA PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO SAN FRANCISCO DE QUITO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN FRANCISCO DE QUITO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN GERONIMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN ISIDRO LA CRUZ DE VALPARAISO",
 "Local_LICEO SAN JOSE DE MAIPO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN JUAN BAUTISTA DE HUALQUI HUALQUI DEL BIOBIO",
 "Local_LICEO SAN LUIS DE ALBA MARIQUINA DE LOS RIOS",
 "Local_LICEO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_LICEO SAN PEDRO SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTA CLARA (SEDE BRASIL) LOS ANDES DE VALPARAISO",
 "Local_LICEO SANTA FE LOS ANGELES DEL BIOBIO",
 "Local_LICEO SANTA TERESA DE LOS ANDES VINA DEL MAR DE VALPARAISO",
 "Local_LICEO SANTA TERESITA INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTIAGO BUERAS Y AVARIA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTO CURA DE ARS MAFIL DE LOS RIOS",
 "Local_LICEO SARA BRAUN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO SERGIO SILVA BASCUNAN LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SU SANTIDAD JUAN PABLO SEGUNDO ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO TALAGANTE BASICA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO AGRICOLA OBISPO RAFAEL LIRA INFANTE LA CRUZ DE VALPARAISO",
 "Local_LICEO TECNICO AMELIA COURBIS TALCA DEL MAULE",
 "Local_LICEO TECNICO BICENTENARIO JUANITA FERNANDEZ SOLAR LOS ANGELES DEL BIOBIO",
 "Local_LICEO TECNICO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_LICEO TECNICO DE RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO DE TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_LICEO TECNICO DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO FEMENINO A-29 DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO FEMENINO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO FILIDOR GAETE MONSALVEZ ARAUCO DEL BIOBIO",
 "Local_LICEO TECNICO MARTA BRUNET LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO MUNICIPAL OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL BARON VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL DE LA MADERA CORONEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL DIEGO PORTALES LINARES DEL MAULE",
 "Local_LICEO TECNICO PROFESIONAL EL LLANO PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL EL TAMBO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL FORESTAL PEHUEN - ROBLE HUACHO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL GONZALO GUGLIELMI MONTIEL YUMBEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL HEROES DE ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO TECNICO PROFESIONAL JORGE SANCHEZ UGARTE CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II GALVARINO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL LUCILA GODOY ALCAYAGA HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL MANNHEIM L1 QUILPUE DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL PATRICIO AYLWIN AZOCAR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL PEDRO DEL RIO ZANARTU HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL PROFESOR RICARDO NAVARRETE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_LICEO TECNICO PROFESIONAL VIOLETA PARRA SANDOVAL SAN CARLOS DE NUBLE",
 "Local_LICEO TECNICO VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO TECNOLOGICO ALFREDO NAZAR FERES VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L3 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TENIENTE FRANCISCO MERY AGUIRRE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO TERESA DE LOS ANDES CASTRO DE LOS LAGOS",
 "Local_LICEO THOMAS ALVA EDISON RENCA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TOMAS BURGOS PURRANQUE DE LOS LAGOS",
 "Local_LICEO TOMAS LAGO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO TRAPAQUEANTE TIRUA DEL BIOBIO",
 "Local_LICEO VALENTIN LETELIER LINARES DEL MAULE",
 "Local_LICEO VALLE DE CODPA CAMARONES DE ARICA Y PARINACOTA",
 "Local_LICEO VICENTE ALBERTO PALACIOS VALDES TOME DEL BIOBIO",
 "Local_LICEO VICENTE PEREZ ROSALES RIO BUENO DE LOS RIOS",
 "Local_LICEO VICTOR JARA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO VICTOR JARA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO VOLCAN SAN JOSE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO YOBILO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO ZAPALLAR CURICO DEL MAULE",
 "Local_LINCOLN COLLEGE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LYCEE ANTOINE DE SAINT EXUPERY COLINA METROPOLITANA DE SANTIAGO",
 "Local_MARIA EDUCA LA SERENA DE COQUIMBO",
 "Local_NETLAND SCHOOL ANTOFAGASTA DE ANTOFAGASTA",
 "Local_NORTH AMERICAN COLLEGE SEDE SOTOMAYOR ARICA DE ARICA Y PARINACOTA",
 "Local_POLIDEPORTIVO AYSEN AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_POLIDEPORTIVO CENTENARIO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_POLIDEPORTIVO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_POLIDEPORTIVO MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_POLIDEPORTIVO MUNICIPAL CALLE LARGA CALLE LARGA DE VALPARAISO",
 "Local_POLIDEPORTIVO MUNICIPAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_POLIDEPORTIVO OLIMPICO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_POLIDEPORTIVO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_POLIDEPORTIVO RIO CLARO DEL MAULE",
 "Local_POLIDERPORTIVO SAN CLEMENTE DEL MAULE",
 "Local_RECINTO INTERIOR ESTADIO MUNICIPAL PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_SAINT PETER'S SCHOOL VINA DEL MAR DE VALPARAISO",
 "Local_SAINT TRINITY COLLEGE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_SALON AUDITORIUM MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_SALON DE EVENTOS MUNICIPAL RIO HURTADO DE COQUIMBO",
 "Local_SCUOLA ITALIANA ARTURO DELLA' ORO VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_SCUOLA ITALIANA ARTURO DELLA'ORO L1 VALPARAISO DE VALPARAISO",
 "Local_SCUOLA ITALIANA GIROLAMO LONGHI VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_SUN FLOWER SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_TEATRO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_THE AMERICAN SCHOOL PUERTO MONTT DE LOS LAGOS",
 "Local_THE KINGSTOWN SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L2 VINA DEL MAR DE VALPARAISO",
 "Local_THE MAYFLOWER SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MAYFLOWER SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MISSION COLLEGE EDUCACION BASICA Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_THE NEWLAND SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE NEWLAND SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE SOUTHLAND SCHOOL LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_UCSC EDIFICIO FACEA CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD ANDRES BELLO, CAMPUS VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD ARTURO PRAT ARICA DE ARICA Y PARINACOTA",
 "Local_UNIVERSIDAD ARTURO PRAT IQUIQUE DE TARAPACA",
 "Local_UNIVERSIDAD ARTURO PRAT L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT VICTORIA DE LA ARAUCANIA",
 "Local_UNIVERSIDAD AUSTRAL DE CHILE PUERTO MONTT DE LOS LAGOS",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE TALCA DEL MAULE",
 "Local_UNIVERSIDAD CATOLICA - CAMPUS SAN JUAN PABLO SEGUNDO TEMUCO DE LA ARAUCANIA",
 "Local_UNIVERSIDAD CATOLICA DEL NORTE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD CATOLICA SEDE CURICO CURICO DEL MAULE",
 "Local_UNIVERSIDAD DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD DE LAS AMERICAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_UNIVERSIDAD DE TALCA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VALPARAISO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VINA DEL MAR, SEDE MIRAFLORES (2) VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L2 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD SANTO TOMAS CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD SANTO TOMAS VALDIVIA DE LOS RIOS",
 "Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD VINA DEL MAR, SEDE RECREO VINA DEL MAR DE VALPARAISO",
]

atributos_filtro_2023_comuna_circ = [
 "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
 "ALEJANDRO NAVARRO BRAIN_Porcentaje",
 "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
 "CAROLINA GOIC BOROEVIC_Porcentaje",
 "EDUARDO ARTES BRICHETTI_Porcentaje",
 "JOSE ANTONIO KAST RIST_Porcentaje",
 "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
 "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
 "tot_per",
 "v27",
 "zona_Urbano",
 "tipohogar_Unipersonal",
 "tipohogar_Nuclear Monoparental",
 "tipohogar_Nuclear Biparental",
 "tipohogar_Extenso Monoparental",
 "tipohogar_Extenso Biparental",
 "pobreza_Pobres no extremos",
 "pobreza_No pobres",
 "v13_Propia",
 "esc2",
 "ecivil_En Pareja",
 "o31_Sí",
 "activ_Ocupados",
 "activ_Desocupados",
 "activ_Inactivos",
 "s28_Sano",
 "sist_salud_Privado",
 "r1b_En [comuna de ubicación la vivienda]",
 "ytotcor",
 "educ_Universidad",
 "prom_lect8b_com",
 "prom_mate8b_com",
 "prom_soc8b_com",
 "Frac_Inmigrantes",
 "Frac_Pueblos",
 "Frac_Viv_Ocupada",
 "Frac_Viv_Particular",
 "Frac_Viv_Colectiva",
 "Frac_Casa",
 "Frac_Depa",
 "Frac_Pared_Horm",
 "Frac_Techo_Bueno",
 "Frac_Techo_Medio",
 "Frac_Piso_Bueno",
 "Frac_Mat_Aceptable",
 "Frac_Agua_Aceptable",
 "Densidad_Poblacion",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
]

atributos_filtro_2023_comuna_dummies = [
 "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
 "ALEJANDRO NAVARRO BRAIN_Porcentaje",
 "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
 "CAROLINA GOIC BOROEVIC_Porcentaje",
 "EDUARDO ARTES BRICHETTI_Porcentaje",
 "JOSE ANTONIO KAST RIST_Porcentaje",
 "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
 "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
 "tot_per",
 "v27",
 "zona_Urbano",
 "tipohogar_Unipersonal",
 "tipohogar_Nuclear Monoparental",
 "tipohogar_Nuclear Biparental",
 "tipohogar_Extenso Monoparental",
 "tipohogar_Extenso Biparental",
 "pobreza_Pobres no extremos",
 "pobreza_No pobres",
 "v13_Propia",
 "esc2",
 "ecivil_En Pareja",
 "o31_Sí",
 "activ_Ocupados",
 "activ_Desocupados",
 "activ_Inactivos",
 "s28_Sano",
 "sist_salud_Privado",
 "r1b_En [comuna de ubicación la vivienda]",
 "ytotcor",
 "educ_Universidad",
 "prom_lect8b_com",
 "prom_mate8b_com",
 "prom_soc8b_com",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
 "Local_ALIANZA FRANCESA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA L2 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_ANEXO DE COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_ANEXO ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ANEXO INSTITUTO PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ANEXO LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_AUTOSERVICIO LA TEJUELA PUERTO VARAS DE LOS LAGOS",
 "Local_AZAPA VALLEY SCHOOL ARICA DE ARICA Y PARINACOTA",
 "Local_C.C.P. COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_C.C.P. DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_C.C.P. DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_C.D.P. DE CALAMA CALAMA DE ANTOFAGASTA",
 "Local_C.D.P. DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE SANTIAGO SUR SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE TOCOPILLA TOCOPILLA DE ANTOFAGASTA",
 "Local_C.D.P. SANTIAGO I SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.E.I.A. LOS CASTANOS VINA DEL MAR DE VALPARAISO",
 "Local_C.P. ALTO HOSPICIO ALTO HOSPICIO DE TARAPACA",
 "Local_C.P. DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_C.P. DE PUERTO MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_C.P. DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_C.P. DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_C.P. LA SERENA LA SERENA DE COQUIMBO",
 "Local_C.P. RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_C.P.F. DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_C.P.F. DE SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CASA DEL ENCUENTRO CIUDADANO Y GIMNASIO ANDACOLLO DE COQUIMBO",
 "Local_CASINO PARQUE LOS TACOS COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO CIVICO EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO COMUNITARIO SERGIO SILVA ACUNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL COPIAPO DE ATACAMA",
 "Local_CENTRO CULTURAL EL TRANQUE LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L3 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE CAPACITACION LABORAL REINO DE BELGICA ARICA DE ARICA Y PARINACOTA",
 "Local_CENTRO DE EDUCACION INTEGRADA DE ADULTOS COPIAPO DE ATACAMA",
 "Local_CENTRO DE EDUCACION PAULA JARAQUEMADA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EDUCACION TECNICO PROFESIONAL CODEDUC MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE FORMACION ACADEMICA PERFECTO DE LA FUENTE DEL VILLAR RINCONADA DE VALPARAISO",
 "Local_CENTRO DEPORTIVO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_CENTRO DEPORTIVO ROLF NATHAN LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUC.ADULTOS LUIS MOLL BRIONES VALDIVIA DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL AMERICO VESPUCIO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL AQUELARRE LICEO BICENTENARIO TENO DEL MAULE",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BICENTENARIO ALTOS DE TOME TOME DEL BIOBIO",
 "Local_CENTRO EDUCACIONAL CARDENAL JOSE MARIA CARO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DIEGO DE ALMAGRO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DOCTOR AMADOR NEGHME R. ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L1 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L2 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ERNESTO YANEZ RIVERA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ESCRITORES DE CHILE RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL GOYENECHEA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ISLA DE MAIPO ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL JOSE MIGUEL CARRERA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LARUN RAYUN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LAURA VICUNA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO LATORRE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MILLANTU MACUL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MIRADOR SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL NUEVA CREACION PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PADRE ALBERTO HURTADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PIAMARTINO CAROLINA LLONA DE CUEVAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL POETA EUSEBIO LILLO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PRINCIPADO DE ASTURIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PROVINCIA DE NUBLE SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ROUSSEAU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN ANDRES MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN LORENZO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN RAMON SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN SEBASTIAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL SANTA CLARA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL VALLE HERMOSO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO FERNANDO SANTIVAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCATIVO FLORIDA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REINO DE SUECIA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REPUBLICA MEXICANA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO SIGLO XXI PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO INTEGRADO DE EDUCACION ESPECIAL CONCEPCION DEL BIOBIO",
 "Local_CENTRO POLITECNICO PARTICULAR DE NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE-LA PINTANA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COL. DE ARTES, CIENCIA Y TEC. DA VINCI PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO ABATE MOLINA LONGAVI DEL MAULE",
 "Local_COLEGIO ACADEMIA TARAPACA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ACHIGA COMEDUC LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ACONCAGUA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ACROPOLIS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ADOLFO BEYZAGA OVANDO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ADVENTISTA DE TEMUCO SEDE LOS CREADORES TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO ADVENTISTA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ADVENTISTA SANTIAGO SUR SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AGRICOLA CUNCUMEN GONZALO BARROS AMUNATEGUI SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO AGUSTIN EDWARDS VALPARAISO DE VALPARAISO",
 "Local_COLEGIO AJIAL RETIRO DEL MAULE",
 "Local_COLEGIO ALBERTO BLEST GANA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA BASICA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO SEGUNDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ALBERTO MOLINA CASTILLO PARRAL DEL MAULE",
 "Local_COLEGIO ALBERTO PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBORADA DEL MAR CONCON DE VALPARAISO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LOS ALTOS DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEMAN DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ALEMAN DE CONCEPCION SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO ALEMAN DE SANTIAGO LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEXANDER FLEMING VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO ALICANTE DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL VALLE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMA MATER LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMONDALE LOMAS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO ALONKURA HUALPEN DEL BIOBIO",
 "Local_COLEGIO ALONSO DE ERCILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE BAQUEDANO) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE RITOQUE) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALTA CORDILLERA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO ALTAS CUMBRES PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO ALTAZOR CONCON DE VALPARAISO",
 "Local_COLEGIO ALTAZOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTO LAUQUEN LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO ALTO PALENA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTOMONTE L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO AMANECER CORONEL CORONEL DEL BIOBIO",
 "Local_COLEGIO AMANECER TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO AMERICA VILCUN DE LA ARAUCANIA",
 "Local_COLEGIO ANA MARIA JANER VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ANDREE ENGLISH SCHOOL LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANDRES BELLO MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ANGEL DE PEREDO LOTA DEL BIOBIO",
 "Local_COLEGIO ANGLO MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTAMARA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ANTARTICA CHILENA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO ANTONIO ACEVEDO HERNANDEZ PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTONIO VARAS VICUNA DE COQUIMBO",
 "Local_COLEGIO ANTU LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTUPIREN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ARAUCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO COSTA MAUCO QUINTERO DE VALPARAISO",
 "Local_COLEGIO ARTISTICO ROBERTO MATTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO SANTA CECILIA EDUCACION MEDIA OSORNO DE LOS LAGOS",
 "Local_COLEGIO ARTURO EDWARDS (SEDE CARRERA) VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ARTURO PRAT CHACON LA SERENA DE COQUIMBO",
 "Local_COLEGIO ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ARTURO PRAT PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ATENAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AUGUSTO WINTER TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO AURORA DE CHILE CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AURORA DE CHILE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO AURORA DE CHILE SUR CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AUSTRALIA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BAJO MOLLE IQUIQUE DE TARAPACA",
 "Local_COLEGIO BALMACEDA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BASICO ARAGON ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO BASICO CONSOLIDADO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO DE CHEPICA CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO NUEVA LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO SAN VICENTE TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO VILLA ACERO HUALPEN DEL BIOBIO",
 "Local_COLEGIO BASICO VIOLETA PARRA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BATALLA DE LA CONCEPCION EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BELLAVISTA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BENJAMIN VICUNA MACKENNA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BERNARDA MORIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO BERNARDO FELMER NIKLITSCHEK LANCO DE LOS RIOS",
 "Local_COLEGIO BETANIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO BICENTENARIO APRENDER LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO CABILDO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO ESPANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO BICENTENARIO LIONS SCHOOL L1 CARTAGENA DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO MATILDE HUICI NAVAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO PADRE ALBERTO HURTADO CHILLAN DE NUBLE",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L1 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L2 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO POLITECNICO ALEMAN ALBERT EINSTEIN CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO SANTO CURA DE ARS SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BLANCO ENCALADA CAUQUENES DEL MAULE",
 "Local_COLEGIO BORDEMAR VALPARAISO DE VALPARAISO",
 "Local_COLEGIO BOSQUEMAR PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO BOSQUES DE GAIA CONSTITUCION DEL MAULE",
 "Local_COLEGIO BRASILIA L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L1 CONCON DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L2 CONCON DE VALPARAISO",
 "Local_COLEGIO BUEN PASTOR COPIAPO DE ATACAMA",
 "Local_COLEGIO CALAMA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CALETA SAN PEDRO LA SERENA DE COQUIMBO",
 "Local_COLEGIO CAMILO HENRIQUEZ CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CAMILO HENRIQUEZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN PASTENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL ANTONIO SAMORE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL CARLOS OVIEDO CAVADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA LA SERENA DE COQUIMBO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO CARLOS COUSINO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CATOLICO NAZARET ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO CERRO GUAYAQUIL MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO CHAMPAGNAT L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHAMPAGNAT L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHARLES DARWIN VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHILE NORTE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHRISTIAN GARDEN SCHOOL LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHUQUICAMATA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CIRUJANO PEDRO VIDELA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CIUDAD DE FRANKFORT SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CLARA BRINCEFIELD PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COLEGIO CLEMENTINOS SAN CLEMENTE DEL MAULE",
 "Local_COLEGIO COLONIAL DE PIRQUE PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO COMPANIA DE MARIA PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CONCEPCION CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO CONCEPCION DE CHILLAN L1 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION DE CHILLAN L2 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION LOS HUERTOS SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO CONFEDERACION SUIZA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CORDILLERA DE LOS ANDES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COSTA CORDILLERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO COYAM CHILLAN DE NUBLE",
 "Local_COLEGIO CREACION CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CREACIONES LA ARAUCANA PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO CRECER PURRANQUE DE LOS LAGOS",
 "Local_COLEGIO CUMBRES DE BOCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO D-91 CENTENARIO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DARIO SALAS PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO DARIO SALAS TALCA DEL MAULE",
 "Local_COLEGIO DE ADMINISTRACION Y COMERCIO EL INGENIO OVALLE DE COQUIMBO",
 "Local_COLEGIO DE APLICACION TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO DE ARTES CLAUDIO ARRAU COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DE CULTURA Y DIFUSION ARTISTICA LA UNION DE LOS RIOS",
 "Local_COLEGIO DE HUMANIDADES DE VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO DE LA PROVIDENCIA CARMELA LARRAIN DE INFANTE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LA PURISIMA CONCEPCION CHILLAN DE NUBLE",
 "Local_COLEGIO DE LA SALLE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES HUALPEN DEL BIOBIO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MAIPO BUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MUSICA JUAN SEBASTIAN BACH VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DE NINAS CANADA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DEL ALBA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DEL REAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEPORTIVO MUNICIPAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DEPORTIVO SANTIAGO ESCUTI ORREGO L1 QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DIEGO DUBLE URRUTIA ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO DIEGO PORTALES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIEGO THOMPSON CURICO DEL MAULE",
 "Local_COLEGIO DIFERENCIAL MADRE TIERRA LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIFERENCIAL PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DISCOVERY SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DIVINA PASTORA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR LUIS SEPULVEDA SALVATIERRA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR MANUEL AVILES INOSTROZA LICANTEN DEL MAULE",
 "Local_COLEGIO DOMINGO EYZAGUIRRE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOMINGO MATTE MESIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DON ORIONE LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO DON ORIONE QUINTERO DE VALPARAISO",
 "Local_COLEGIO ECHAURREN ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL ALBA DE MACUL MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL BOLDO CURICO DEL MAULE",
 "Local_COLEGIO EL LABRADOR VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO EL MELON L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO EL NARANJAL RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO EL QUISCO EL QUISCO DE VALPARAISO",
 "Local_COLEGIO EL REFUGIO PENCO DEL BIOBIO",
 "Local_COLEGIO EL SEMBRADOR ANEXO 2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL SEMBRADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL TABO L1 EL TABO DE VALPARAISO",
 "Local_COLEGIO EL TABO L2 EL TABO DE VALPARAISO",
 "Local_COLEGIO ELENA BETTINI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ELVIRA HURTADO DE MATTE DE SANTIAGO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EMPRENDER ENSENANZA MEDIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO EMPRENDER OBISPO ALVEAR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ESPANA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ESPANA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ESPANA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO ESPERANZA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ESPIRITU SANTO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ETCHEGOYEN TALCAHUANO SEDE BRISAS DEL SOL TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO EVEREST LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXTREMADURA DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EYZAGUIRRE MEDIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FAMILIA DE NAZARETH LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FERNANDO DURAN VILLARREAL QUILPUE DE VALPARAISO",
 "Local_COLEGIO FILIPENSE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FINLANDIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FOR LIFE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO FORESTAL DE QUILACAHUIN SAN PABLO DE LOS LAGOS",
 "Local_COLEGIO FRANCIS SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO FRANCISCO DE ASIS PINTO DE NUBLE",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L1 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L2 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO PALAU LA SERENA DE COQUIMBO",
 "Local_COLEGIO FRATERNIDAD SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO GABRIELA MISTRAL MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GALVARINO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO GENERAL JOSE VELASQUEZ BORQUEZ L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO GERMANIA DEL VERBO DIVINO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO GERONIMO DE ALDERETE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GERONIMO RENDIC LA SERENA DE COQUIMBO",
 "Local_COLEGIO GIUSEPPE BERTOLUZZI DE FELIP SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GOBERNADOR CONCHA Y SALVATIERRA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO GRACE COLLEGE L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE COLLEGE L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE SCHOOL PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRAN BRETANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO GUARDIAMARINA GUILLERMO ZANARTU IRIGOYEN QUILPUE DE VALPARAISO",
 "Local_COLEGIO HARAS LOS CONDORES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HAYDN DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HELLEN KELLER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERMANO FERNANDO DE LA FUENTE SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO HERNAN OLGUIN LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERNANDO DE MAGALLANES ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HEROES DE LA CONCEPCION LA SERENA DE COQUIMBO",
 "Local_COLEGIO HISPANO AMERICANO RIO VIEJO CHILLAN DE NUBLE",
 "Local_COLEGIO HISPANO VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO HISPANOAMERICANO VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO HUELEN VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO IGNACIO CARRERA PINTO VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO INFOCAP SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INGLES IQUIQUE DE TARAPACA",
 "Local_COLEGIO INGLES SAN JOSE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INGLES WOODLAND LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA CONCEPCION NUESTRA SENORA DE LOURDES PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA DE LOURDES L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INMACULADA DE LOURDES L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INNOV-ARTE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO INSTITUCION TERESIANA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUCION TERESIANA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUTO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO INSTITUTO SANTA MARIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INTEGRADO EDUARDO FREI MONTALVA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ITALIANO SANTA ANA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JACQUES COUSTEAU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JACQUES COUSTEAU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JESUS ANDINO CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JESUS SERVIDOR PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOHN WALL HOLCOMB ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JORGE HUNEEUS ZEGERS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JORGE PRIETO LETELIER PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE ANTONIO MANSO DE VELASCO RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JOSE ARRIETA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE MANUEL BALMACEDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL CARRERA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL INFANTE QUILPUE DE VALPARAISO",
 "Local_COLEGIO JOSEFINO SANTISIMA TRINIDAD PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JUAN PABLO II CUNCO DE LA ARAUCANIA",
 "Local_COLEGIO JUAN TACHOIRE MOENA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JUAN XXIII VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO JUANITA FERNANDEZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO JUANITA FERNANDEZ L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO LA GIROUETTE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LA HERRADURA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO LA PAZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LA PROVIDENCIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO LAS AMERICAS L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO LAS RASTRAS TALCA DEL MAULE",
 "Local_COLEGIO LAURA VICUNA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LEONARDO DA VINCI ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO LEONARDO DA VINCI DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LEONARDO DA VINCI L1 LA CRUZ DE VALPARAISO",
 "Local_COLEGIO LEONARDO DA VINCI RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LEONARDO MURIALDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO LIAHONA PUCON DE LA ARAUCANIA",
 "Local_COLEGIO LIAHONA QUILPUE DE VALPARAISO",
 "Local_COLEGIO LIBERTADOR SAN MARTIN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LICARAYEN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ERRAZURIZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LORENZO MONDANELLI COIHUECO DE NUBLE",
 "Local_COLEGIO LORENZO SAZIE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO LOS ALPES MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ANDES DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS CONDORES TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO LOS CONQUISTADORES CURICO DEL MAULE",
 "Local_COLEGIO LOS CONQUISTADORES VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LOS EDUCADORES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO LOS LIBERTADORES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS LLANOS MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LOS REYES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS ROBLES DE LABRANZA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO LUIS CRUZ MARTINEZ LA LIGUA DE VALPARAISO",
 "Local_COLEGIO LUIS GALDAMES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MADRE ADMIRABLE DE SCHOENSTATT TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MADRE ANA EUGENIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE ANA EUGENIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE PAULINA CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO MADRES DOMINICAS CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MAHATMA GANDHI IQUIQUE DE TARAPACA",
 "Local_COLEGIO MAIPO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANANTIAL VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MANQUECURA CIUDAD DE LOS VALLES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA VALLE LO CAMPINO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANUEL BULNES PRIETO QUILPUE DE VALPARAISO",
 "Local_COLEGIO MANUEL FRANCISCO CORREA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL MONTT VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO MANUEL RODRIGUEZ ERDOIZA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARGOT LOYOLA PALACIOS LINARES DEL MAULE",
 "Local_COLEGIO MARIA ANA MOGAS PAINE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA AUXILIADORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MARIA AUXILIADORA PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_COLEGIO MARIA AUXILIADORA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO MARIA EDUCA  SEDE LAS PARCELA LA SERENA DE COQUIMBO",
 "Local_COLEGIO MARIA EDUCA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO MARIA ELENA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA INMACULADA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARIA INMACULADA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO MARIA SYLVESTER RASCH ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO MARIA TERESA CANCINO AGUILAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA VILLALOBOS ARTEAGA OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARIE POUSSEPIN PUTAENDO DE VALPARAISO",
 "Local_COLEGIO MARINA DE CHILE CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARISTA HERMANO FERNANDO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MASTERS COLLEGE VALDIVIA DE LOS RIOS",
 "Local_COLEGIO MATER DEI CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELFORD COLLEGE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MERRYLAND PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO METODISTA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO METODISTA WILLIAM TAYLOR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MINERAL EL TENIENTE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MINISTRO DIEGO PORTALES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MIRADOR DEL LAGO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO MIRAFLORES D-329 L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MIRAMAR ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO MIXTO INMACULADA CONCEPCION TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO MONSENOR JAIME LARRAIN BUNSTER MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTANER DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTESSORI SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTEVERDE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MOUNTAIN GREEN SCHOOL PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO MULTICULTURAL RAYEN MAPU CURICO DEL MAULE",
 "Local_COLEGIO MUNDO MAGICO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MUNICIPAL DIVINA GABRIELA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL EDUARDO DE GEYTER RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL HUALLILEN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MUSTAFA KEMAL ATATURK LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NACIONAL L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO NACIONAL L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONAL L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONES UNIDAS LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NAVARRA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NERUDA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NEW LITTLE COLLEGE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVA TERRA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVO MUNDO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE LA PRESENTACION MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL CARMEN DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL ROSARIO LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA ALERCE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO NUEVA BRAUNAU PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI SEDE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA PROVIDENCIA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO NUEVO HORIZONTE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVO MILENIO L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVO MILENIO L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVOS HORIZONTES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO OZANAM L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO OZANAM L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PABLO GARRIDO VARGAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO PABLO NERUDA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PABLO NERUDA PARRAL DEL MAULE",
 "Local_COLEGIO PABLO NERUDA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PADRE JOSE KENTENICH PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALESTINO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALMARES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARQUE CENTRAL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PARQUE LAS AMERICAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SANTA MARIA GORETTI CONCON DE VALPARAISO",
 "Local_COLEGIO PART. SUB. CUMBRES DEL CHOAPA SALAMANCA DE COQUIMBO",
 "Local_COLEGIO PARTICULAR ALBERTO BLEST GANA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO PARTICULAR AURORA DE CHILE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO PARTICULAR EVANGELICO BETANIA CHILLAN DE NUBLE",
 "Local_COLEGIO PARTICULAR IGNACIO CARRERA PINTO L1 OLMUE DE VALPARAISO",
 "Local_COLEGIO PARTICULAR LEONARDO DA VINCI COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PARTICULAR MARTA BRUNET LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO PARTICULAR POLITECNICO EYZAGUIRRE BASICA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARTICULAR SAN JOSE LA SERENA DE COQUIMBO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PATRONA SENORA DE LOURDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO AGUIRRE CERDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO PEDRO APOSTOL PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO DE VALDIVIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO MONTT C-100 L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PELCHUQUIN MARIQUINA DE LOS RIOS",
 "Local_COLEGIO PICHASCA RIO HURTADO DE COQUIMBO",
 "Local_COLEGIO PIERRE TEILHARD DE CHARDIN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POLITECNICO SAN JOSE CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE DOMINGO PARRA CORVALAN CORONEL DEL BIOBIO",
 "Local_COLEGIO POLIVALENTE JAPON CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE LAS CAMELIAS RETIRO DEL MAULE",
 "Local_COLEGIO POLIVALENTE PRESIDENTE JOSE MANUEL BALMACEDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POMAIRE MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALIANO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRESIDENTE PEDRO AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO PRESTON SCHOOL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PROCERES DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROFESOR ILDEFONSO CALDERON PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROVIDENCIA DEL SAGRADO CORAZON TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PROVIDENCIA PARRAL DEL MAULE",
 "Local_COLEGIO PUERTO VARAS PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE CHICAUMA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PUMAHUE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PUMAHUE VALPARAISO DE VALPARAISO",
 "Local_COLEGIO QUILLON QUILLON DE NUBLE",
 "Local_COLEGIO QUITALMAHUE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO RAKIDUAM COQUIMBO DE COQUIMBO",
 "Local_COLEGIO RAMON ANGEL JARA LOS MUERMOS DE LOS LAGOS",
 "Local_COLEGIO RAYEN CAVEN CONCON DE VALPARAISO",
 "Local_COLEGIO REBECA FERNANDEZ VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REDLAND SCHOOL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REGINA PACIS PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REMODELACION SIMONS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO REPUBLICA ARGENTINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE CHILE DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO REPUBLICA DE CHILE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO REPUBLICA DE COLOMBIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE CROACIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE GUATEMALA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE ITALIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE MEXICO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE MEXICO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO RIACHUELO RIO NEGRO DE LOS LAGOS",
 "Local_COLEGIO RIO GRANDE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO ROBERTO BRAVO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ROSA ELVIRA MATTE DE PRIETO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ROSITA NOVARO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO RUBEN CASTRO VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO RUCALHUE HUALPEN DEL BIOBIO",
 "Local_COLEGIO RUPANIC SCHOOL ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS DE LA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS SAN CARLOS DE NUBLE",
 "Local_COLEGIO SAGRADOS CORAZONES MONJAS FRANCESAS VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAINT GEORGE'S L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT GEORGE'S L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT LOUIS SCHOOL TILTIL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT MARY LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAINT MATTHEW VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO SAINT MAURICES CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT PATRICK SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAINT-LAWRENCE QUILPUE DE VALPARAISO",
 "Local_COLEGIO SALESIANO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SALESIANO DON BOSCO IQUIQUE IQUIQUE DE TARAPACA",
 "Local_COLEGIO SALESIANO EL PATROCINIO DE SAN JOSE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SALESIANO SANTO DOMINGO SAVIO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SALESIANOS VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SAN ADRIAN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN AGUSTIN L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO CONSTITUCION DEL MAULE",
 "Local_COLEGIO SAN ALBERTO HURTADO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANDRES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN BUENAVENTURA CHILLAN DE NUBLE",
 "Local_COLEGIO SAN CARLOS DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CAYETANO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CONSTANTINO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CRISTOBAL APOSTOL PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN DAMIAN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ESTEBAN DE BULNES - ANEXO BASICA BULNES DE NUBLE",
 "Local_COLEGIO SAN FELIPE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FERNANDO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS CHOLCHOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN FRANCISCO DE ASIS DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TECNICO PROFESIONAL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAN GABRIEL ARCANGEL LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAN GUILLERMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN HERNALDO PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO SAN ISAAC JOGUES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOAQUIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAN JOSE ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN JOSE CALLE LARGA DE VALPARAISO",
 "Local_COLEGIO SAN JOSE DE CHICUREO COLINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE RENCA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE MARIQUINA DE LOS RIOS",
 "Local_COLEGIO SAN JUAN DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO DE GUADALUPE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUCAS DE LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUIS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SAN MARCOS MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN MARCOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COLEGIO SAN MARCOS VALDIVIA DE LOS RIOS",
 "Local_COLEGIO SAN MATEO OSORNO DE LOS LAGOS",
 "Local_COLEGIO SAN MIGUEL DE LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN NICOLAS HIJUELAS DE VALPARAISO",
 "Local_COLEGIO SAN NICOLAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAN PATRICIO CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VICENTE DE PAUL CHILLAN DE NUBLE",
 "Local_COLEGIO SANTA BARBARA H.S. QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BEATRIZ PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BERNARDITA TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO SANTA CATALINA LABOURE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA CRUZ DE FREIRE FREIRE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA CRUZ DE LONCOCHE LONCOCHE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA EUFRASIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA FAMILIA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO SANTA FILOMENA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA ISABEL L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO SANTA ISABEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA JUANA DE ARCO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO SANTA LUISA DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA MARIA DE ACONCAGUA SANTA MARIA DE VALPARAISO",
 "Local_COLEGIO SANTA MARIA DE LA CORDILLERA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE LA PROVIDENCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA SABINA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA SOFIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE JESUS DE LOS ANDES HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE LOS ANDES MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA TERESA DE LOS MORROS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA URSULA VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO - QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO DOMINGO HELEN LEE LASSEN SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO SANTO TOMAS DE AQUINO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS DE TALCA MAULE DEL MAULE",
 "Local_COLEGIO SANTO TOMAS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAUCACHE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SCOLE CREARE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SEBASTIAN ELCANO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEBASTIAN ELCANO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L1 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L2 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SENDA DEL SABER PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SIMON BOLIVAR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SIMON BOLIVAR LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SUYAI MAULE DEL MAULE",
 "Local_COLEGIO SYDNEY COLLEGE CHILLAN DE NUBLE",
 "Local_COLEGIO TECNICO INDUSTRIAL DON BOSCO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO TECNICO PROFESIONAL HONORIO OJEDA VALDERAS LA UNION DE LOS RIOS",
 "Local_COLEGIO TECNICO PROFESIONAL LOS ACACIOS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO TECNICO PROFESIONAL MISION SAN JUAN DE LA COSTA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_COLEGIO TECNICO PROFESIONAL NOCEDAL LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TECNICO PROFESIONAL PIEDRA AZUL PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO TECNOLOGICO DARIO SALAS CHILLAN VIEJO DE NUBLE",
 "Local_COLEGIO TECNOLOGICO DON BOSCO DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO TENIENTE HERNAN MERINO CORREA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO TERESA DE LOS ANDES-ALGARROBO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERRAUSTRAL DEL SOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE KENT SCHOOL PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE PACIFIC SCHOOL CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO TOMAS MORO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UMBRAL DE CURAUMA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VALLE DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO VICENTE VALDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VICHUQUEN CURICO DEL MAULE",
 "Local_COLEGIO VICTOR DOMINGO SILVA LA SERENA DE COQUIMBO",
 "Local_COLEGIO VILLA CARTAGO CARTAGENA DE VALPARAISO",
 "Local_COLEGIO VILLA MARIA ACADEMY L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA MARIA ACADEMY L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA NONGUEN CONCEPCION DEL BIOBIO",
 "Local_COLEGIO WINDSOR SCHOOL VALDIVIA DE LOS RIOS",
 "Local_COLEGIO WINTERHILL VINA DEL MAR DE VALPARAISO",
 "Local_COMPLEJO DEPORTIVO SAUCACHE UNIVERSIDAD DE TARAPACA ARICA DE ARICA Y PARINACOTA",
 "Local_COMPLEJO EDUCACIONAL ALBERTO WIDMER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARDENAL ANTONIO SAMORE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARLOS HOLZAPFEL PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL CERRO NAVIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CHIMBARONGO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L1 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L2 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL COLLIPULLI COLLIPULLI DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL DARIO SALAS DIAZ CARAHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL ESPERANZA MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL FELIPE HERRERA LANE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL IGNAO LAGO RANCO DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL JOAQUIN EDWARDS BELLO MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JOSE MIGUEL CARRERA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JUAN SCHLEYER FREIRE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUAN XXIII LONCOCHE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUANITA FERNANDEZ SOLAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA FRONTERA TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA GRANJA VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION BASICA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LAS ACACIAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LUIS DURAND DURAND TRAIGUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MAIPU ANEXO RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MANUEL PLAZA REYES LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MARTIN KLEINKNECHT TOLTEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR FRANCISCO VALDES SUBERCASEAUX CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR GUILLERMO HARTL PITRUFQUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MUNICIPAL BRIGIDA WALKER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL NUEVA ALBORADA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PABLO SEXTO PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE LAS CASAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE NICOLAS VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE OSCAR MOSER PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL PENCAHUE PENCAHUE DEL MAULE",
 "Local_COMPLEJO EDUCACIONAL PRINCIPE DE GALES NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL RUKA NGEN CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SAN AGUSTIN VILLARRICA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SARGENTO ALDEA L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL TIERRA DE ESPERANZA PANGUIPULLI DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL UNION AMANECER TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL VICTORIA VICTORIA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCATIVO CARACOLES SIERRA GORDA DE ANTOFAGASTA",
 "Local_COMPLEJO EDUCATIVO JUAN JOSE LATORRE BENAVENTE MEJILLONES DE ANTOFAGASTA",
 "Local_CORPORACION DOCENTE SAINT DOMINIC L1 VINA DEL MAR DE VALPARAISO",
 "Local_CORPORACION EDUCACIONAL COLEGIO INGLES DE TALCA TALCA DEL MAULE",
 "Local_DENVER COLORADO SCHOOL EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_DINABEC COLLEGE SAN CARLOS DE NUBLE",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DUOC UC, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_DUOC UC, SEDE VINA DEL MAR L2 VINA DEL MAR DE VALPARAISO",
 "Local_EDUCADOR ARTURO ALVEAR RAMOS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESC. BASICA MARTA EMILIANA AGUILAR ZERON TIERRA AMARILLA DE ATACAMA",
 "Local_ESC. BASICA PARTICULAR SAN PABLO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESC. DE CONCENTRACION FRONTERIZA DOROTEA NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESC. HEBERTO VELAZQUEZ VELAZQUEZ OVALLE DE COQUIMBO",
 "Local_ESC.BASICA CAPITAN RAFAEL TORREBLANCA VALLENAR DE ATACAMA",
 "Local_ESCUELA  BERNARDO O'HIGGINS RIQUELME TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA  G-582 COIPUE FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA 04 DE OCTUBRE CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA 10 ANGELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 1287 SAN MARCOS APOSTOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA 21 DE MAYO SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA 7 ARABE-SIRIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 88 CANADA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ABRAHAM SEPULVEDA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA ACAPULCO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADELAIDA LA FETRA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADOLFO QUIROZ HERNANDEZ CAUQUENES DEL MAULE",
 "Local_ESCUELA ADVENTISTA DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_ESCUELA AGUAS Y GAVIOTAS TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA ALBERT EINSTEIN PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBERTO HURTADO PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA ALBORADA DE TALAGANTE TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBORADA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA ALCALDE MAXIMILIANO POBLETE CORTES ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ALCIDES REYES FRIAS L1 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALCIDES REYES FRIAS L2 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALEJANDRO CHELEN ROJAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA ALEJANDRO GIDI LINARES DEL MAULE",
 "Local_ESCUELA ALEJANDRO GOROSTIAGA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ALEJANDRO PEREZ URBANO TUCAPEL DEL BIOBIO",
 "Local_ESCUELA ALEMANIA PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ALEMANIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ALERCE HISTORICO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA ALESSANDRI CURICO DEL MAULE",
 "Local_ESCUELA ALGARROBAL COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIANZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALICIA ARIZTIA DE SILVA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIRO LAMAS CASTILLO DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ALIVEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALLIPEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH IQUIQUE DE TARAPACA",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH PENCO DEL BIOBIO",
 "Local_ESCUELA ALMIRANTE SIMPSON AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ALONSO DE ERCILLA LA SERENA DE COQUIMBO",
 "Local_ESCUELA ALONSO DE ERCILLA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ALTO CABRERO CABRERO DEL BIOBIO",
 "Local_ESCUELA ALTO PANGUE SAN RAFAEL DEL MAULE",
 "Local_ESCUELA AMANDA LABARCA HUBERSTONE CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA AMERICA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA AMERICA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ANA FRANK QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDALIEN DE COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDES DEL SUR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDRES ALCAZAR LAJA DEL BIOBIO",
 "Local_ESCUELA ANDRES BELLO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ANEXA ANCUD DE LOS LAGOS",
 "Local_ESCUELA ANGACHILLA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ANIBAL PINTO CAUQUENES DEL MAULE",
 "Local_ESCUELA ANTILHUE DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANTONIO DE ZUNIGA PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTONIO TIRADO LANAS OVALLE DE COQUIMBO",
 "Local_ESCUELA ANTONIO TREDAN ARKO GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTUMALAL QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AONIKENK RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ARAUCARIAS DE CHILE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARGENTINA CURICO DEL MAULE",
 "Local_ESCUELA ARMANDO ARANCIBIA OLIVOS LEBU DEL BIOBIO",
 "Local_ESCUELA ARNALDO FALABELLA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARRAU MENDEZ PARRAL DEL MAULE",
 "Local_ESCUELA ARTISTICA ARMANDO DUFEY BLANC TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTISTICA VIOLETA PARRA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_ESCUELA ARTURO EBENSPERGER RICHTER LEBU DEL BIOBIO",
 "Local_ESCUELA ARTURO HUGHES CERNA CORONEL DEL BIOBIO",
 "Local_ESCUELA ARTURO MATTE LARRAIN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO MERINO BENITEZ CHILLAN DE NUBLE",
 "Local_ESCUELA ARTURO PEREZ CANTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT CHACON CANETE DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ARTURO PRAT CHACON SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ARTURO PRAT TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTURO VILLALON SIEULANNE OVALLE DE COQUIMBO",
 "Local_ESCUELA ATENAS OLMUE DE VALPARAISO",
 "Local_ESCUELA ATENEA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE TALCA DEL MAULE",
 "Local_ESCUELA AURORA SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA AVIADOR DAGOBERTO GODOY F. CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AVIADORES EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AYTUE CASTRO DE LOS LAGOS",
 "Local_ESCUELA BABILONIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BALMACEDA SAAVEDRA LAULHERE CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BAQUEDANO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BARBA RUBIA HUALANE DEL MAULE",
 "Local_ESCUELA BARBARA KAST RIST PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BARRAZA BAJO OVALLE DE COQUIMBO",
 "Local_ESCUELA BASE EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA 11 DE SEPTIEMBRE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA 21 DE MAYO CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ABEL GUERRERO AGUIRRE QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA AGUA DE LA GLORIA CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA AMANECER RIO HURTADO DE COQUIMBO",
 "Local_ESCUELA BASICA AMELIA GODOY PENA LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA AMERICA COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA ANGELINA SALAS OLIVARES CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA ANTUPILLAN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA ARTURO ALESSANDRI PALMA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA ARTURO PRAT TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLAVISTA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLO HORIZONTE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA BENJAMIN MATTE LARRAIN HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA BERNARDO O'HIGGINS RIQUELME OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA BOCA BIO BIO SUR SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA BRISAS DEL MAR ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA BUCHUPUREO COBQUECURA DE NUBLE",
 "Local_ESCUELA BASICA BUENA VISTA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CACIQUE LEVIAN SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA CALETA DEL MEDIO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CAMILO MORI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CARILEUFU - CABURGUA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CATALUNYA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO SAN FRANCISCO TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CHACAYAL SUR LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA CHILLEPIN SALAMANCA DE COQUIMBO",
 "Local_ESCUELA BASICA CHORRILLOS E-323 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA CINCO GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CLARA ESTRELLA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CLAUDIO ARRAU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA COCHOLGUE F-426 TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CRISTO REDENTOR CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA CRISTOBAL COLON HUALPEN DEL BIOBIO",
 "Local_ESCUELA BASICA CRUZ DEL SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA D-318 UNESCO VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA BASICA DARIO SALAS E-423 QUILPUE DE VALPARAISO",
 "Local_ESCUELA BASICA DE CHANAVAYITA IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA DE CHILE CHICO CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA DE COLBUN COLBUN DEL MAULE",
 "Local_ESCUELA BASICA DE CORRAL CORRAL DE LOS RIOS",
 "Local_ESCUELA BASICA DICHATO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA EL CASINO QUILLON DE NUBLE",
 "Local_ESCUELA BASICA EL NOGAL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA EMILIA ROMAGNA TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA BASICA EMILIO SOTOMAYOR CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ENRIQUE BERNSTEIN CARABANTES SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ESCUELA BASICA ERCOLE BENCINI LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA ESPANA LINARES DEL MAULE",
 "Local_ESCUELA BASICA ESPANA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ESTACION BAQUEDANO SIERRA GORDA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ESTRELLA DEL SUR POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA FLORIDA FLORIDA DEL BIOBIO",
 "Local_ESCUELA BASICA FRANCISCO FORGIONE IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA FRONTERIZA HUARA DE TARAPACA",
 "Local_ESCUELA BASICA G-45 LA VEGA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA GABRIELA MISTRAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA GENERAL CRUZ PEMUCO DE NUBLE",
 "Local_ESCUELA BASICA GUALBERTO KONG FERNANDEZ VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA HECTOR JORQUERA VALENCIA CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA HEROES DE CHILE LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA HEROES DEL ITATA QUILLON DE NUBLE",
 "Local_ESCUELA BASICA HUMBERTO VILCHES ALZAMORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA ISABEL LA CATOLICA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA ITILHUE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA JAVIERA CARRERA CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA JOHN FITZGERALD KENNEDY CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JOHN KENNEDY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA JORGE ARACENA RAMOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA JOSE MANUEL BALMACEDA F. FUTRONO DE LOS RIOS",
 "Local_ESCUELA BASICA JOSE MARIA CARO RODRIGUEZ CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JOSE TOMAS OVALLE B. OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA JUAN LOPEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUAN LUIS SANFUENTES ANDONAEGUI RIO CLARO DEL MAULE",
 "Local_ESCUELA BASICA JUAN MADRID AZOLA CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JUAN PABLO II ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUANITA FERNANDEZ SOLAR COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA KAMAC MAYU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON A CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON B CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIMUN LAWAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LA AGUADA DE CUEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA CHOCOTA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA LA DAMA BLANCA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA LA LEYENDA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA PAMPILLA CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA LA PENA NOGALES DE VALPARAISO",
 "Local_ESCUELA BASICA LA QUEBRADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA RINCONADA DEL SALTO LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA SOMBRA HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA LA TIRANA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA LAFQUEN ICALMA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAGUNILLAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_ESCUELA BASICA LAS CAMELIAS PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LAS CRUCES EL TABO DE VALPARAISO",
 "Local_ESCUELA BASICA LAS HORTENSIAS - VILLA LAS HORTENSIAS CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAS PATAGUAS QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS QUINTAS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LICARAYEN GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LITORAL AUSTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA LO DE LOBO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA LO VELASQUEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS CERRILLOS CATEMU DE VALPARAISO",
 "Local_ESCUELA BASICA LOS CONQUISTADORES PENCO DEL BIOBIO",
 "Local_ESCUELA BASICA LOS HEROES DE YUNGAY LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS LIBERTADORES HUALQUI DEL BIOBIO",
 "Local_ESCUELA BASICA LOS MAITENES LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA LOS MOLLES LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA LOS NOGALES RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LOS PERALES GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LUCILA GODOY ALCAYAGA VICUNA DE COQUIMBO",
 "Local_ESCUELA BASICA LUIS ALBERTO ACEVEDO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MAITENCILLO PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA MALAL MAHUIDA - PEDREGOSO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA MAMINA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA MANUEL DE SALAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MARE NOSTRUM ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA MARIO MUNOZ SILVA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MERCEDES URZUA DIAZ PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA MICHAIHUE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MIL PAISAJES Y GIMNASIO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA MILLANTU LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA MINCHA NORTE CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA MIXTA LO CALVO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA MULCHEN MULCHEN DEL BIOBIO",
 "Local_ESCUELA BASICA MUNICIPAL ARAUCARIA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA NAHUELBUTA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NEHUENTUE CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO 1 LOS CACHORROS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO SEIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA ORLANDO DELGADO ZUNIGA LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA BASICA ORO NEGRO D-367 L1 CONCON DE VALPARAISO",
 "Local_ESCUELA BASICA OSCAR ARAYA MOLINA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA PAPUDO PAPUDO DE VALPARAISO",
 "Local_ESCUELA BASICA PATAGUAL CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA PATRICIO LYNCH RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA PATRICIO LYNCH VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA PEDRO LUJAN CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA PEDRO VERGARA KELLER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA PENINSULA DE TUMBES TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA PICHICUY LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA PLAYAS NEGRAS CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA POZO ALMONTE POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA PUEBLO SECO SAN IGNACIO DE NUBLE",
 "Local_ESCUELA BASICA PUNTA DE PARRA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA QUINCHAMALI CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RABUCO HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA RAFAEL TOME DEL BIOBIO",
 "Local_ESCUELA BASICA RENE ANDRADES TOLEDO CANETE DEL BIOBIO",
 "Local_ESCUELA BASICA RENE LOUVEL BERT CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE CHILE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ISRAEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA REPUBLICA DEL ECUADOR L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BLANCO LOS ANDES DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA ROBERTO CUADRA ALQUINTA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ROSITA O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RURAL EL YECO ALGARROBO DE VALPARAISO",
 "Local_ESCUELA BASICA SALVADOR ALLENDE ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN CARLOS CHONCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA SAN PEDRO DE ATACAMA SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA SAN PEDRO DE LARAQUETE ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA SAN RAFAEL DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA SAN SEBASTIAN DE MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN VICENTE DE LO ARCAYA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA SANTA INES PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA SANTA JULIA D-334 L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA SANTA MARIA DE GUADALUPE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA SECTOR ORIENTE QUELLON DE LOS LAGOS",
 "Local_ESCUELA BASICA SILVIO ZENTENO VERGARA L1 SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA TALCA DEL MAULE",
 "Local_ESCUELA BASICA TERESA CANNON DE BARRIOLHET. LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA THOMPSON MATTHEWS LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA UNION DE MUJERES AMERICANAS PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA VALENTIN LETELIER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA VALLE DE COLCURA LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA VALLE DEL CHOAPA ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VALLE LONQUEN TREGUACO DE NUBLE",
 "Local_ESCUELA BASICA VICTOR DURAN PEREZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VILLA COIGUE NEGRETE DEL BIOBIO",
 "Local_ESCUELA BASICA VILLA LOS NARANJOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VISTA VERDE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VOLCAN LLAIMA MELIPEUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA WENCESLAO VARGAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA BASICA YANGTSE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BAU LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELGICA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BELGICA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELLAVISTA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN CLARO VELASCO NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN VICUNA MACKENNA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO O HIGGINS COPIAPO DE ATACAMA",
 "Local_ESCUELA BERNARDO O'HIGGINS L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERNARDO O'HIGGINS RIQUELME (E-58) SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA BERNARDO OA'HIGGINS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO OA'HIGGINS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OA'HIGGINS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OHIGGINS SAN JAVIER DEL MAULE",
 "Local_ESCUELA BERTA SAAVEDRA SEGURA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERTOLDO HOFMANN KAHLER PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA BLANCA ESTELA PRAT CARVAJAL HUALPEN DEL BIOBIO",
 "Local_ESCUELA BLANCO ENCALADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BLAS CUEVAS RAMON ALLENDE D-307 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA BOROA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE LA FARFANA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRASILIA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRITANICA GUILLERMINA DRAKE WOOD COIHUECO DE NUBLE",
 "Local_ESCUELA BRUNO ZAVALA FREDES COPIAPO DE ATACAMA",
 "Local_ESCUELA BUENA ESPERANZA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA CACIQUE COLIN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CADETE ARTURO PRAT CHACON SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CALICANTO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMILO HENRIQUEZ CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DE MAIPU - CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DEPORTIVOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA CANADA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CANAL BEAGLE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA CAPITAN ARTURO PRAT CHACON PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CAPITAN AVALOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JOSE LUIS ARANEDA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JUAN LADRILLERO NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CARDENAL JOSE MARIA CARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CARLOS ALBERTO FERNANDEZ CASTILLO HUALQUI DEL BIOBIO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL OSORNO DE LOS LAGOS",
 "Local_ESCUELA CARLOS FERNANDEZ PENA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS MARIA SAYAGO COPIAPO DE ATACAMA",
 "Local_ESCUELA CARLOS PRATS GONZALEZ HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS SALINAS LAGOS TALCA DEL MAULE",
 "Local_ESCUELA CARLOS SPANO TALCA DEL MAULE",
 "Local_ESCUELA CARLOS TRUPP WANNER TALCA DEL MAULE",
 "Local_ESCUELA CARMELA CARVAJAL DE PRAT SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA CARMEN GALLEGOS DE ROBLES SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CARMEN REVECO NUNEZ PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARMEN ROMERO AGUIRRE CARTAGENA DE VALPARAISO",
 "Local_ESCUELA CAROLINA VERGARA AYARES D-276 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CASAS VIEJAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CATALUNA CURICO DEL MAULE",
 "Local_ESCUELA CAYENEL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CENTENARIO IQUIQUE DE TARAPACA",
 "Local_ESCUELA CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CERRO ALTO JOSE OPAZO DIAZ CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHACARILLAS CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHARRUA CABRERO DEL BIOBIO",
 "Local_ESCUELA CHIAPA HUARA DE TARAPACA",
 "Local_ESCUELA CHILHUE QUEILEN DE LOS LAGOS",
 "Local_ESCUELA CHIPANA IQUIQUE DE TARAPACA",
 "Local_ESCUELA CIUDAD DE BARCELONA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD DE LYON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD SANTO DOMINGO DE GUZMAN CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLARA VIAL ORREGO LOS VILOS DE COQUIMBO",
 "Local_ESCUELA CLAUDIO ARRAU LEON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO ARRAU OSORNO DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO MATTE PEREZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA CLEMENTINA MAUREIRA ALMANZA COELEMU DE NUBLE",
 "Local_ESCUELA CLORINDO ALVEAR CAUQUENES DEL MAULE",
 "Local_ESCUELA CLUB HIPICO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA COLICO SUR CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA COLIN MAULE DEL MAULE",
 "Local_ESCUELA COLONIA ARABE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA COLONIA ESMERALDA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COLPANAO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA COMALLE TENO DEL MAULE",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L1 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L2 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMUNIDADES DE VALLE HERMOSO LA LIGUA DE VALPARAISO",
 "Local_ESCUELA CONCENTRACION RURAL SERGIO VERDUGO HERRERA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CONDORES DE PLATA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA DAVILA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONTRAMAESTRE CONSTANTINO MICALVI LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COPIHUE RETIRO DEL MAULE",
 "Local_ESCUELA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CORINTO PENCAHUE DEL MAULE",
 "Local_ESCUELA CORRALONES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA COSTA BLANCA CONSTITUCION DEL MAULE",
 "Local_ESCUELA CRISTINA DURAN QUILLOTA DE VALPARAISO",
 "Local_ESCUELA CRISTO DEL MAIPO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA CROACIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CUYUNCAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-10 GENERAL JOSE MIGUEL CARRERA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-11 MANUEL RODRIGUEZ ERDOYZA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-114 GENERAL BERNALES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-12 ROMULO PENA MATURANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-14 REGIMIENTO RANCAGUA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-16 SUBTENIENTE LUIS CRUZ MARTINEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-18 HUMBERTO VALENZUELA GARCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-314 JOAQUIN EDWARDS BELLO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA D-4 REPUBLICA DE ISRAEL ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-6 REPUBLICA DE FRANCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-7 GENERAL PEDRO LAGOS MARCHANT ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA DAFNE ELVIRA ZAPATA ROZAS PEMUCO DE NUBLE",
 "Local_ESCUELA DAGOBERTO GODOY - SAN PATRICIO VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA DARIO SALAS DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DARIO SALAS MARCHANT SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA DARIO SALAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA DE ARTES ESCENICAS PROFESOR ELMO FUNEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DE ARTES Y CULTURA OSORNO Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA DE ARTES Y MUSICA OVALLE DE COQUIMBO",
 "Local_ESCUELA DE CONCENTRACION D-43, LOS LOROS TIERRA AMARILLA DE ATACAMA",
 "Local_ESCUELA DE CONCENTRACION FRONTERIZA RALCO ALTO BIOBIO ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA DE DESARROLLO ARTISTICO CALDERA DE ATACAMA",
 "Local_ESCUELA DE EDUCACION GENERAL BASICA MONSENOR ENRIQUE CORNEJO SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA DE INGENIERIA QUIMICA PUCV VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DE LA INDUSTRIA GRAFICA HECTOR GOMEZ SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LAS ROJAS LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE LENGUAJE CAMINA ALTO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LIUCURA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA DE MAITENCILLO YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA DE NIEBLA JUAN BOSCH VALDIVIA DE LOS RIOS",
 "Local_ESCUELA DE PENUELAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA DE PUERTO HARRIS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DE ROMERO LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE TRIPULANTES Y PORTUARIA DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DEIDAMIA PAREDES BELLO SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA DELFINA ALARCON HENRIQUEZ QUILPUE DE VALPARAISO",
 "Local_ESCUELA DELICIO CARDENAS BUSTAMANTE Y GIMNASIO SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA DEPORTIVA OSORNO (EX LAGO RUPANCO) OSORNO DE LOS LAGOS",
 "Local_ESCUELA DIECIOCHO DE SEPTIEMBRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DIEGO PORTALES D 475 TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES P. CURICO DEL MAULE",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS CONCEPCION DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DIEGO PORTALES QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA DIFERENCIAL AMAPOLAS NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL JUAN SANDOVAL CARRASCO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL MARIA LUZ LANZA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA DIFERENCIAL VILLA SAN JOSE LA UNION DE LOS RIOS",
 "Local_ESCUELA DIGNA CAMILO AGUILAR PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DIVINO MAESTRO PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DOCTOR TREVISO GIRARDI TONELLI CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L1 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L2 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMINGO ORTIZ DE ROZAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA DOMINGO SANTA MARIA GONZALEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMITILA PINNA PARRA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA E 741 JAVIERA CARRERA EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA E-15 RICARDO SILVA ARRIAGADA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA E-5 ESMERALDA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ECOLOGICA NUESTRO MUNDO QUILLOTA DE VALPARAISO",
 "Local_ESCUELA ECOLOGICA PADRE ALBERTO HURTADO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA EDELMIRA VERGARA QUINONES ARAUCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO CAMPBELL SAAVEDRA PENCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO FREI MONTALVA PERQUENCO DE LA ARAUCANIA",
 "Local_ESCUELA EDUARDO LLANOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA EDUCACION DIFERENCIAL SANTA TERESA DE AVILA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EDUCADORA EULOGIA BORQUEZ PEREZ QUELLON DE LOS LAGOS",
 "Local_ESCUELA EDUCADORES DE CHILE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EFRAIN MALDONADO TORRES ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO DE SALVACION ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA EJERCITO LIBERTADOR DE CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO LIBERTADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL BOSQUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL CARMEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL CLARO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA EL EDEN TALCA DEL MAULE",
 "Local_ESCUELA EL LAUREL VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL LIBERTADOR PARRAL DEL MAULE",
 "Local_ESCUELA EL LLANO DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL MAITEN LA UNION DE LOS RIOS",
 "Local_ESCUELA EL PALPAL DE SANTA CLARA BULNES DE NUBLE",
 "Local_ESCUELA EL PALQUI MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA EL REMANSO EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL ROTO CHILENO TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SABER NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA EL SALITRE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SAUCE SAN CARLOS DE NUBLE",
 "Local_ESCUELA ELBA OJEDA GOMEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ELENA ARMIJO MORALES CUREPTO DEL MAULE",
 "Local_ESCUELA ELEUTERIO RAMIREZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ELIAS SANCHEZ ORTUZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELIODORO YANEZ PONCE DE LEON SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELOISA GONZALEZ TIRUA DEL BIOBIO",
 "Local_ESCUELA ELVIRA SANTA CRUZ OSSA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMA CORNEJO DE CARDOEN VICHUQUEN DEL MAULE",
 "Local_ESCUELA EMILIA LASCAR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMPRENDER LARAPINTA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENCARNACION OLIVARES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA ENRIQUE DONN MULLER CONSTITUCION DEL MAULE",
 "Local_ESCUELA ENRIQUE PUFFE KIND YUMBEL DEL BIOBIO",
 "Local_ESCUELA ENRIQUE REYMOND ALDUNATE SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENRIQUE SERRANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ENRIQUE SORO BARRIGA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA ENTRE AGUAS DE LLICO VICHUQUEN DEL MAULE",
 "Local_ESCUELA EPU NEWEN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ERNESTO CASTRO ARELLANO CURICO DEL MAULE",
 "Local_ESCUELA ERNESTO SOTO NEGRETE COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESCRITORA MARCELA PAZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ESPANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ESPANA CURICO DEL MAULE",
 "Local_ESCUELA ESPANA L1 LOS ANDES DE VALPARAISO",
 "Local_ESCUELA ESPANA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ESPANA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPANA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ESPANA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ESPANA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESPECIAL AVANCEMOS JUNTOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE AYLLU DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE Y ESCUELA BASICA MY COLLEGE CHILLAN DE NUBLE",
 "Local_ESCUELA ESPECIAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL FLOR DEL INCA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ESPECIAL HUMBERTO MOATH CASABLANCA DE VALPARAISO",
 "Local_ESCUELA ESPECIAL JUANITA DE AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ESPECIAL PAULA JARAQUEMADA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL TAMARUGAL LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL `ANA AICHELE CARRASCO` OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPERANZA JOVEN L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA JOVEN L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA TALCA DEL MAULE",
 "Local_ESCUELA ESTADO DE FLORIDA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE ISRAEL VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESTADO DE MICHIGAN QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE PALESTINA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADOS UNIDOS DE NORTEAMERICA TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA ESTRELLA REINA DE CHILE CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EUGENIO TAGLE VALDES SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA EULOGIO GOYCOLEA GARAY Y GIMNASIO CALBUCO DE LOS LAGOS",
 "Local_ESCUELA EUSEBIO IBAR SCHEPELER CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA EVANGELICA BETH-EL CHILLAN DE NUBLE",
 "Local_ESCUELA F-174 VALLE DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA F-22 DOCTOR RICARDO OLEA GUERRA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA F-90 RAUL CASTRO MARQUEZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA FATIMA ANCUD DE LOS LAGOS",
 "Local_ESCUELA FEDERICO ACEVEDO SALAZAR CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FELIPE BARTHOU LANCO DE LOS RIOS",
 "Local_ESCUELA FELIX EYHERAMENDY LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA FERNANDA AEDO FAUNDEZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO ARENAS ALMARZA CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO BAQUEDANO YUNGAY DE NUBLE",
 "Local_ESCUELA FERNANDO CARVAJAL PINTO CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FERNANDO SANTIVAN VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCISCO COLOANE CORONEL DEL BIOBIO",
 "Local_ESCUELA FRANCISCO CORTES OJEDA MAULLIN DE LOS LAGOS",
 "Local_ESCUELA FRANCISCO DE AGUIRRE PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO PETRINOVIC KARLOVAC COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO URRUTIA URRUTIA LONGAVI DEL MAULE",
 "Local_ESCUELA FRAY BERNABE DE LUCERNA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA FRAY CAMILO HENRIQUEZ SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRAY PEDRO ARMENGOL VALENZUELA CUREPTO DEL MAULE",
 "Local_ESCUELA FRESIA GRACIELA MULLER RUIZ LEBU DEL BIOBIO",
 "Local_ESCUELA FRONTERIZA ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA FRONTERIZA DE LLIFEN FUTRONO DE LOS RIOS",
 "Local_ESCUELA FUNDACION PAUL HARRIS OSORNO DE LOS LAGOS",
 "Local_ESCUELA GABRIEL BENAVENTE BENAVENTE LONGAVI DEL MAULE",
 "Local_ESCUELA GABRIELA MISTRAL IQUIQUE DE TARAPACA",
 "Local_ESCUELA GABRIELA MISTRAL L1 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL L2 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GABRIELA MISTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA GABRIELA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GALVARINO VALENZUELA MORAGA LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GARCIA HURTADO DE MENDOZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA GASPAR CABRALES VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GENARO RIOS CAMPOS CORONEL DEL BIOBIO",
 "Local_ESCUELA GENERAL ALBERTO BACHELET MARTINEZ EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL ALEJANDRO GOROSTIAGA ORREGO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL JOSE DE SAN MARTIN LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA GENERAL MANUEL BULNES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA GENERAL OHIGGINS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL RENE ESCAURIAZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SAN MARTIN MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SOFANOR PARRA HERMOSILLA SAN CARLOS DE NUBLE",
 "Local_ESCUELA GERTRUDIS ALARCON ARCE RETIRO DEL MAULE",
 "Local_ESCUELA GLADYS CANALES PAREDES PELLUHUE DEL MAULE",
 "Local_ESCUELA GOLDA MEIR LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GRACIELA LETELIER LINARES DEL MAULE",
 "Local_ESCUELA GRECIA (D-251) VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GRECIA CURICO DEL MAULE",
 "Local_ESCUELA GRENOBLE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUARILIHUE ALTO COELEMU DE NUBLE",
 "Local_ESCUELA GUILLERMO BANADOS HONORATO SANTA MARIA DE VALPARAISO",
 "Local_ESCUELA GUILLERMO RODRIGUEZ RIOBIO LEBU DEL BIOBIO",
 "Local_ESCUELA GUILLERMO ZANARTU IRIGOYEN NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUSTAVO LE PAIGE WALQUE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GUSTAVO VASQUEZ DIAZ LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA HAMBURGO CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA HELEN KELLER ADAMS HUALPEN DEL BIOBIO",
 "Local_ESCUELA HERMANA MARIA GORETTI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERMANOS CARRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA HERMINDA DE LA VICTORIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERNAN OLGUIN MAYBE GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HERNAN OLGUIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA HERNANDO DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA HEROES DE CHILE YUMBEL DEL BIOBIO",
 "Local_ESCUELA HEROES DE IQUIQUE COIHUECO DE NUBLE",
 "Local_ESCUELA HEROES DE IQUIQUE VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA HEROES DE LA CONCEPCION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA HOGAR MARIA LUISA BOUCHON SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HOGAR NIEVES VASQUEZ PALACIOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA HOGAR VICTORIANO QUINTEROS SOTO TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HOLANDA CURICO DEL MAULE",
 "Local_ESCUELA HORACIO JOHNSON GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HORIZONTES TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA HUILQUILEMU TALCA DEL MAULE",
 "Local_ESCUELA HUMANISTA VICTOR HUGO CARVAJAL MEZA TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HUMBERTO MORENO RAMIREZ BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HUMBERTO VALENZUELA GARCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA IGNACIO CARRERA PINTO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA IGNACIO CARRERA PINTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA INDEPENDENCIA CAUQUENES DEL MAULE",
 "Local_ESCUELA INDEPENDENCIA PANQUEHUE DE VALPARAISO",
 "Local_ESCUELA INDUSTRIAL SAN ANTONIO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA INES GALLARDO ALVARADO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA INGLATERRA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTEGRADORA EL MANZANO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTERNADO LAS PALMAS TRES ESQUINAS MOLINA DEL MAULE",
 "Local_ESCUELA INTERNADO POTRERO GRANDE CURICO DEL MAULE",
 "Local_ESCUELA IRENE FREI LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA IRMA SALAS SILVA CONCON DE VALPARAISO",
 "Local_ESCUELA ISABEL LE BRUN RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISABEL RIQUELME SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISIDORA GOYENECHEA LOTA DEL BIOBIO",
 "Local_ESCUELA ISLA DE LAJA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ISLA DE MARCHANT CURICO DEL MAULE",
 "Local_ESCUELA ISLA DE PASCUA PENCO DEL BIOBIO",
 "Local_ESCUELA ISLAS DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAIME GOMEZ GARCIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JANUARIO ESPINOSA LINARES DEL MAULE",
 "Local_ESCUELA JAPON ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JAPON VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA JAVIER EYZAGUIRE ECHAURREN PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAVIERA CARRERA VERDUGO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JERONIMO NEKULPAN - QUINENAHUIN CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA JERUSALEN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOAQUIN DEL PINO ROZAS Y NEGRETE SAN CARLOS DE NUBLE",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JORGE GONZALEZ BASTIAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA JORGE MUNOZ SILVA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JORGE ROJAS MIRANDA CORONEL DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ LAJA DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ MAULLIN DE LOS LAGOS",
 "Local_ESCUELA JOSE ABELARDO NUNEZ VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA JOSE ALFARO ALFARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA JOSE ANTOLIN SILVA ORMENO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA JOSE ANTONIO LECAROS ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE BERNARDO SUAREZ MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE CAROCA LAFLOR VALLENAR DE ATACAMA",
 "Local_ESCUELA JOSE DE SAN MARTIN SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA JOSE ELIAS BOLIVAR HERRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA JOSE JOAQUIN PRIETO VIAL CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE M. BALMACEDA Y FERNANDEZ TALCA DEL MAULE",
 "Local_ESCUELA JOSE MANUEL BALMACEDA CALBUCO DE LOS LAGOS",
 "Local_ESCUELA JOSE MANUEL BALMACEDA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MARTI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE MATTA CALLEJON PARRAL DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL CARRERA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL MARTINEZ SOTO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA JOSE NUEZ MARTIN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE PAPIC RADNIC ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JOSE TOHA SOLDEVILLA PINTO DE NUBLE",
 "Local_ESCUELA JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE ULLOA FIERRO LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA JUAN BAUTISTA CHESTA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JUAN BAUTISTA PASTENE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE DIOS ALDEA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE LA CRUZ DOMINGUEZ GONZALEZ LONGAVI DEL MAULE",
 "Local_ESCUELA JUAN DE SAAVEDRA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN JOSE LATORRE BENAVENTE CORONEL DEL BIOBIO",
 "Local_ESCUELA JUAN LUIS SANFUENTES TALCA DEL MAULE",
 "Local_ESCUELA JUAN MARTINEZ DE ROZAS LINARES DEL MAULE",
 "Local_ESCUELA JUAN MOYA MORALES NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN RICARDO SANCHEZ ASCENCIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA JUAN SEGUEL ANEXO FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN SEGUEL FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN VALDES ORTUZAR PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JUAN WACQUEZ MOURFIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN WILLIAMS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JULIA HERRERA VARAS MEJILLONES DE ANTOFAGASTA",
 "Local_ESCUELA JULIETA BECERRA ALVAREZ SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA E-194 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JUSTA NARVAEZ SAN JAVIER DEL MAULE",
 "Local_ESCUELA KARELMAPU SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA KAROL CARDENAL DE CRACOVIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA ARAUCANIA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA BANDERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LA ESPERANZA FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA LA ESPERANZA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA FLORIDA TALCA DEL MAULE",
 "Local_ESCUELA LA GREDA PENCO DEL BIOBIO",
 "Local_ESCUELA LA GREDA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA LA HUERTA DE MATAQUITO HUALANE DEL MAULE",
 "Local_ESCUELA LA ISLA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LA MERCED TILTIL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA NOBEL GABRIELA RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA LA OBRA CURICO DEL MAULE",
 "Local_ESCUELA LA VARA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LA VICTORIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAGO VICHUQUEN DE AQUELARRE VICHUQUEN DEL MAULE",
 "Local_ESCUELA LAS AMERICAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS AMERICAS PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA LAS AMERICAS PROFESOR JUSTO VALLADARES ORELLANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LAS ARAUCARIAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS CANTERAS HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS HORNILLAS LINARES DEL MAULE",
 "Local_ESCUELA LAS LILAS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS LILAS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS PALMAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS ROCAS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LATINA INES GALLARDO ORELLANA VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA LAURA MATUS MELENDEZ DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LAURA VICUNA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA LEON HUMBERTO VALENZUELA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LEONARDO DA VINCI VALDIVIA DE LOS RIOS",
 "Local_ESCUELA LEONCIO ARANEDA FIGUEROA CANETE DEL BIOBIO",
 "Local_ESCUELA LEOVIGILDO KLEY CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA LIBERTAD PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LIBERTADOR BERNARDO O'HIGGINS VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LIBERTADOR BERNARDO OA'HIGGINS RIQUELME CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO O'HIGGINS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO OHIGGINS RIQUELME CALBUCO DE LOS LAGOS",
 "Local_ESCUELA LIMACHITO LIMACHE DE VALPARAISO",
 "Local_ESCUELA LLANKANAO MANUEL FRANCISCO MEZA SECO LINARES DEL MAULE",
 "Local_ESCUELA LLANO SUBERCASEAUX SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO FRANCO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO MIRANDA DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LO VALDIVIA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LO VALLEDOR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LORD COCHRANE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ALERCES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS AVELLANOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOS AVELLANOS TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LOS BOSQUINOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS CONQUISTADORES CAUQUENES DEL MAULE",
 "Local_ESCUELA LOS GUALLES LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA LOS HEROES CHANCO DEL MAULE",
 "Local_ESCUELA LOS MOLLES QUILPUE DE VALPARAISO",
 "Local_ESCUELA LOS MONTES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA LOS PRINCIPES VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ROSALES DEL BAJO BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS SAUCES LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA LOS TRIGALES TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOTHAR KOMMER BRUGER CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUCILA GODOY ALCAYAGA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA LUCILA GODOY LINARES DEL MAULE",
 "Local_ESCUELA LUIS ARMANDO GOMEZ MUNOZ PARRAL DEL MAULE",
 "Local_ESCUELA LUIS ARRIETA CANAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS MARTINEZ GONZALEZ TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LUIS MATTE LARRAIN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS URIBE DIAZ Y GIMNASIO CASTRO DE LOS LAGOS",
 "Local_ESCUELA MADRE DE LA DIVINA PROVIDENCIA CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA MAHUIDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MALLOCO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MAND EDUARDO FREI MONTALVA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL ANABALON SAEZ PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MANUEL BRAVO REYES L1 CASABLANCA DE VALPARAISO",
 "Local_ESCUELA MANUEL DE SALAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA MANUEL MAGALLANES MOURE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL MATUS HERMOSILLA COIHUECO DE NUBLE",
 "Local_ESCUELA MANUEL MONTT RETIRO DEL MAULE",
 "Local_ESCUELA MANUEL ORELLA ECHANEZ CALDERA DE ATACAMA",
 "Local_ESCUELA MANUEL RECABARREN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MANUEL RODRIGUEZ ERDOIZA SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA MANUEL SEGOVIA MONTENEGRO LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA MARCIAL MARTINEZ FERRARI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCOS GOYCOOLEA CORTES COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA ALONSO CHACON LA CRUZ DE VALPARAISO",
 "Local_ESCUELA MARIA ALVARADO GARAY PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MARIA ARAYA VALDES SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MARIA LUISA BOMBAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA OLGA FIGUEROA LEYTON CURICO DEL MAULE",
 "Local_ESCUELA MARIA TERESA DEL CANTO MOLINA CATEMU DE VALPARAISO",
 "Local_ESCUELA MARIA TERESA MARCHANT CONTRERAS COELEMU DE NUBLE",
 "Local_ESCUELA MARIANO LATORRE SAN JAVIER DEL MAULE",
 "Local_ESCUELA MARIANO LATORRE VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA MARISCAL DE AYACUCHO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARTIN ALONQUEO PIUTRIN - GENERAL LOPEZ VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA MATILDE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_ESCUELA MAULE MAULE DEL MAULE",
 "Local_ESCUELA MAULE SUR COLBUN DEL MAULE",
 "Local_ESCUELA MELIPULLI PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA MELVIN JONES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES FONTECILLA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES MATURANA GALLARDO ZAPALLAR DE VALPARAISO",
 "Local_ESCUELA METODISTA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA METRENCO F-471 - METRENCO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MEXICO DE MICHOACAN OSORNO DE LOS LAGOS",
 "Local_ESCUELA MICHIGAN EL AMANECER COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL JOSE ZANARTU SANTA MARIA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA MIGUEL MONTECINOS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA MILLAHUE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MILLARAY TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MIRAVALLE L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIRAVALLE L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MODULAR SAN ANDRES FRESIA DE LOS LAGOS",
 "Local_ESCUELA MONSENOR CARLOS OVIEDO PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MONSENOR FRANCISCO VALDES SUBERCASEAUX OSORNO DE LOS LAGOS",
 "Local_ESCUELA MONSENOR GUIDO DE RAMBERGA PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MONSENOR MANUEL LARRAIN ERRAZURIZ HUALANE DEL MAULE",
 "Local_ESCUELA MONSERRAT ROBERT DE GARCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MUNICIPAL AMERICA MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE CUNACO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE GULTRO OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PALMILLA PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PANIAHUE SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PELEQUEN MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL E-456 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL COBRE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL TRENCITO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL FRONTERIZA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL GABRIELA MISTRAL GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL HERMANOS CARRERA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL ISABEL RIQUELME RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL JEAN PIAGET RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LAS QUEZADAS F-413 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LOS ARRAYANES PUCON DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL LUIS OYARZUN PENA SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MARCELA PAZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MONICA GEBERT MEIER VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL OSVALDO RUIZ GARCIA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PATRICIO MEKIS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PICHIPELLAHUEN LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL RENE SCHNEIDER CHEREAU RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL RERE YUMBEL DEL BIOBIO",
 "Local_ESCUELA MUNICIPAL RIO QUILLEM GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MUNICIPAL SAN PEDRO DE ALCANTARA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL TROYO - VILLA TROYO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL ZUNIGA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NACIMIENTO DE NUESTRO SENOR NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA NACIONES UNIDAS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA NANIHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEVADA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NEW HARVEST TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA NIDER ORREGO QUEVEDO PARRAL DEL MAULE",
 "Local_ESCUELA NIRRIMAPU - MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA NIVEQUETEN LAJA DEL BIOBIO",
 "Local_ESCUELA NONATO COO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NORMA GONZALEZ GUERRA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUESTRA SENORA DE FATIMA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA NUESTRA SENORA DE LA MERCED OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NUESTRA SENORA Y MADRE DEL CARMEN MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUEVA AMERICA QUIRIHUE DE NUBLE",
 "Local_ESCUELA NUEVA AURORA PAILLACO DE LOS RIOS",
 "Local_ESCUELA NUEVA COLLILELFU LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA ESPANA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA REPUBLICA HUALQUI DEL BIOBIO",
 "Local_ESCUELA NUMERO 1, ALEMANIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA OCTAVIO PALMA PEREZ CAUQUENES DEL MAULE",
 "Local_ESCUELA OCTAVIO SALINAS CARIAGA CORONEL DEL BIOBIO",
 "Local_ESCUELA OLEGARIO LAZO BAEZA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA OLEGARIO MORALES OLIVA PAILLACO DE LOS RIOS",
 "Local_ESCUELA ORLANDO LETELIER EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR BONILLA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR CASTRO LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR ENCALADA YOVANOVICH LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR GUERRERO QUINSAC NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA OSVALDO FUENTES BARRERA CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA P-34 BAUTISTA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PABLO CORREA MONTT PELARCO DEL MAULE",
 "Local_ESCUELA PABLO DE ROKHA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PABLO NERUDA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA PABLO NERUDA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PABLO NERUDA SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA PACTO ANDINO L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PACTO ANDINO L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PADRE ANDRE COINDRE SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PADRE ESTEBAN GUMUCIO VIVES LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE JOSEPH BENEDIKT STEGMEIER OVALLE DE COQUIMBO",
 "Local_ESCUELA PADRE LUIS OLIVA NAVARRETE PENCAHUE DEL MAULE",
 "Local_ESCUELA PADRE PEDRO CAMPOS MENCHACA YUMBEL DEL BIOBIO",
 "Local_ESCUELA PAHUIL CHANCO DEL MAULE",
 "Local_ESCUELA PALESTINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PALMARES ORIENTE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAMPA RIOS RIO BUENO DE LOS RIOS",
 "Local_ESCUELA PANGUE ARRIBA SAN RAFAEL DEL MAULE",
 "Local_ESCUELA PANGUILEMO EDITA GALLEGOS RODRIGUEZ TALCA DEL MAULE",
 "Local_ESCUELA PANIMAVIDA COLBUN DEL MAULE",
 "Local_ESCUELA PARTICULAR 167 RAMON GUINEZ PUCON DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR ALFA Y OMEGA LAJA DEL BIOBIO",
 "Local_ESCUELA PARTICULAR ARTURO PRAT FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CATRIPULLI CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CAUNICU ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA PARTICULAR CORAZON DE JESUS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR EL PORVENIR PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR FRANCIA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR HABIT-ART PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA DEHESA CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA MILAGROSA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PARTICULAR LUIS ISRAEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR MARGARITA NASEAU TOME DEL BIOBIO",
 "Local_ESCUELA PARTICULAR MONO PAINE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUESTRA SENORA DEL CARMEN PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUEVA LIQUINE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR NUMERO 8 VILCUN VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE ALEJANDRO ORTEGA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE JUAN WEVERING SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR SAGRADA FAMILIA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN BERNARDO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN FRANCISCO DE ASIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN JOSE OBRERO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PARTICULAR SAN JOSE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA PARTICULAR SAN JUAN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN RAFAEL ARCANGEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN SEBASTIAN SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SANTA MARIA DE LA RIBERA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SUBVENCIONADA PADRE ISIDORO TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR TRES CERROS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PASO INTERNACIONAL PEHUENCHE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA PATAGONIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PATRICIO CHAVEZ SOTO CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA PATRICIO LYNCH ZALDIVAR VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PAUL HARRIS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR IQUIQUE DE TARAPACA",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULO FREIRE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA LINARES DEL MAULE",
 "Local_ESCUELA PEDRO ANTONIO GONZALEZ CUREPTO DEL MAULE",
 "Local_ESCUELA PEDRO DE ONA PUREN DE LA ARAUCANIA",
 "Local_ESCUELA PEDRO MARIN ALEMANY MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO PABLO LEMAITRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEDRO QUINTANA MANSILLA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO RUIZ ALDEA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA PEDRO SARMIENTO DE GAMBOA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEHUEN LEBU DEL BIOBIO",
 "Local_ESCUELA PENCO PENCO DEL BIOBIO",
 "Local_ESCUELA PILAR MOLINER DE NUEZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PILOTO PARDO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PISAGUA HUARA DE TARAPACA",
 "Local_ESCUELA PLACIDO VILLARROEL IQUIQUE DE TARAPACA",
 "Local_ESCUELA PLAYA LINDA DE LIPIMAVIDA VICHUQUEN DEL MAULE",
 "Local_ESCUELA POETA NERUDA DE ISLA NEGRA EL QUISCO DE VALPARAISO",
 "Local_ESCUELA POETA NERUDA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA OSCAR CASTRO ZUNIGA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA VICENTE HUIDOBRO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETAS DE CHILE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETISA GABRIELA MISTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA POLONIA GUTIERREZ LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PORONGO CAUQUENES DEL MAULE",
 "Local_ESCUELA PORTUGAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PORVENIR DE CATO COIHUECO DE NUBLE",
 "Local_ESCUELA POZA VERDE LA LIGUA DE VALPARAISO",
 "Local_ESCUELA PREMIO NOBEL PABLO NERUDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESBITERO JOSE AGUSTIN GOMEZ GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA PRESIDENTE AGUIRRE CERDA CARTAGENA DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE CARLOS IBANEZ DEL CAMPO LINARES DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA MOLINA DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE JORGE ALESSANDRI R. LA UNION DE LOS RIOS",
 "Local_ESCUELA PRESIDENTE JOSE MANUEL BALMACEDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE PEDRO AGUIRRE CERDA SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE ROOSEVELT CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE SALVADOR ALLENDE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PROFESOR MANUEL CASTRO RAMOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA PROFESOR MANUEL GUERRERO CEBALLOS CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESOR RAMON DEL RIO ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA AURELIA ROJAS BURGOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA GLADYS VALENZUELA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA MARIA LUISA SEPULVEDA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROSPERIDAD TALCA DEL MAULE",
 "Local_ESCUELA PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE ARAUCO CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE CHILOE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROYECTO DE FUTURO PAILLACO DE LOS RIOS",
 "Local_ESCUELA PUBLICA REPUBLICA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA PUDETO ANCUD DE LOS LAGOS",
 "Local_ESCUELA PUERTO RICO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PUQUELDON PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA PURISIMA CONCEPCION DE POCILLAS CAUQUENES DEL MAULE",
 "Local_ESCUELA QUEBRADA DE ALVARADO OLMUE DE VALPARAISO",
 "Local_ESCUELA QUECHEREGUAS DE PICHINGAL MOLINA DEL MAULE",
 "Local_ESCUELA RADIMADI LA UNION DE LOS RIOS",
 "Local_ESCUELA RAFAEL VALDIVIESO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RAIMAPU FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA RALCO LEPOY ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA RAMON BELMAR SALDIAS LINARES DEL MAULE",
 "Local_ESCUELA RAMON EDUARDO RAMIREZ HENRIQUEZ CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA RAUCO RAUCO DEL MAULE",
 "Local_ESCUELA REBECA MATTE BELLO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RECAREDO VIGUERAS ARANEDA SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA REINA DE SUECIA L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINA DE SUECIA L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINO DE DINAMARCA MOLINA DEL MAULE",
 "Local_ESCUELA RENE SCHNEIDER SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARABE SIRIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA ARGENTINA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARGENTINA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA REPUBLICA ARGENTINA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA REPUBLICA ARGENTINA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA CHECA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ALEMANIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE AUSTRIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE BOLIVIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE BRASIL CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA DE COLOMBIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE COSTA RICA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ESTADOS UNIDOS DE NORTEAMERICA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE FRANCIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE FRANCIA QUINTERO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DE FRANCIA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA DE GRECIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA REPUBLICA DE GRECIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE HONDURAS EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE INDONESIA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA REPUBLICA DE ITALIA - LOCAL 2 CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE ITALIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE ITALIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ITALIA PENCO DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DE LA INDIA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LAS FILIPINAS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LOS EE.UU. DE AMERICA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE MEXICO CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE MEXICO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE PANAMA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE POLONIA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL ECUADOR ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DEL ECUADOR EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DEL PERU HUALPEN DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DEL PERU SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ESTADOS UNIDOS CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REVERENDO PADRE PATRICIO CARIOLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA RICARDO CAMPILLAY CONTRERAS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA RICARDO EDUARDO LATCHAM PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIO COLORADO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA RIO NEGRO RIO NEGRO DE LOS LAGOS",
 "Local_ESCUELA RISOPATRON PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIVERA DEL MAULE PENCAHUE DEL MAULE",
 "Local_ESCUELA ROBERTO OJEDA TORRES PAILLACO DE LOS RIOS",
 "Local_ESCUELA ROCIO DE LOS ANGELES PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROMILIO ARELLANO TRONCOSO LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ROMULO PENA MATURANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ROSA YANEZ RODRIGUEZ CORONEL DEL BIOBIO",
 "Local_ESCUELA ROSALINA PESCIO VARGAS PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSARIO CONCHA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSITA RENARD CORONEL DEL BIOBIO",
 "Local_ESCUELA RUBEN DARIO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RURAL 21 DE MAYO PAILLACO DE LOS RIOS",
 "Local_ESCUELA RURAL ADELA GARCIA GARCIA QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL ALFONSO OSSES PEREZ MARIQUINA DE LOS RIOS",
 "Local_ESCUELA RURAL AMANECER 2000 QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL ANTILHUE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL ARTISTICA ALUMNO MARCELO GUENTEO SOLIS QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL BAHIA MANSA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_ESCUELA RURAL BORDEMAR (NUEVA) QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CALCURRUPE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL CANITAS LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL CARBONEROS CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL CARRETERA AUSTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CHAUQUEAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHAYAHUE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHOROICO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA DIUMEN RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA RIO SUR PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CON INTERNADO RIO BLANCO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CORRENTOSO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL CRISTO REY PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CRUCERO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL CUCAO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CURINANCO VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL CURRINE FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL DORILA AGUILA AGUILAR MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL DUAO MAULE DEL MAULE",
 "Local_ESCUELA RURAL EL AVELLANAL CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL EL ENCANTO PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL EL PULPITO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ENRIQUE HEVIA LABBE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL EPSON PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTACION NUEVO PORVENIR PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTAQUILLA LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL FOLILCO LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL HILDA HUNQUEN MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL HUELLELHUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL HUELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL HUILLINCO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ISLA HUAPI FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL JOSE DANIEL BAHAMONDE BAHAMONDE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL JUAN VICTORINO TANGOL DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA AGUADA CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL LA CAPILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA CHAMIZA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LA PAZ PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA POZA SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA RINCONADA PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LA VILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LAGO AZUL PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LAS CAMPANAS PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA RURAL LAS CASCADAS PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA RURAL LENCA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LINDA VISTA QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LLINGUA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LLIUCO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LONCOTORO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ANGELES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ARCES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS LINARES DE CASMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PELLINES LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PINOS QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LUZ Y SABER OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL MAILLEN ESTERO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL MALLINLEMU DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL MASHUE LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL MIRTA OYARZO VERA CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL MONTEMAR QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL NONTUELA FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL NUEVA ISRAEL PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL NUMPAY MAULE DEL MAULE",
 "Local_ESCUELA RURAL OSTRICULTURA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL PABLO CEA VASQUEZ COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PABLO NERUDA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PARGA FRESIA DE LOS LAGOS",
 "Local_ESCUELA RURAL PEDRO VELAZQUEZ BONTES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL PICHIL OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL PUENTE COLMO CONCON DE VALPARAISO",
 "Local_ESCUELA RURAL PUERTO NUEVO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL PULLALLY PAPUDO DE VALPARAISO",
 "Local_ESCUELA RURAL RININAHUE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL RUNCA MAFIL DE LOS RIOS",
 "Local_ESCUELA RURAL SAN FRANCISCO QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL SAN JOSE DE TRANQUI QUEILEN DE LOS LAGOS",
 "Local_ESCUELA RURAL SOL DEL PACIFICO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL TAC QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL TEPUAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL TRAPEN PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL VALLE DE LA LUNA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VALLE MANTILHUE BAJO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL VALLE SIMPSON COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VILLA CHACAO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL VIVANCO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA SALOMON SACK LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALOMON SALMAN DABUD LINARES DEL MAULE",
 "Local_ESCUELA SALTOS DEL LAJA CABRERO DEL BIOBIO",
 "Local_ESCUELA SALVADOR SANFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALVADOR SANFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN ANDRES DE PICA PICA DE TARAPACA",
 "Local_ESCUELA SAN ANTONIO LINARES DEL MAULE",
 "Local_ESCUELA SAN CLEMENTE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA SAN DANIEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS DE ERCILLA ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA SAN FRANCISCO DE ASIS MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SAN FRANCISCO DE CHIU CHIU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA SAN FRANCISCO DE LA SELVA COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN JOSE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA SAN JOSE DE COLICO CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA SAN JOSE OBRERO DE CURACAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JOSE OBRERO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JUAN BAUTISTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LEONARDO MURIALDO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LUIS DE CONTULMO CONTULMO DEL BIOBIO",
 "Local_ESCUELA SAN LUIS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN PEDRO COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN PEDRO DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SAN PEDRO DE QUINTAY CASABLANCA DE VALPARAISO",
 "Local_ESCUELA SAN RAFAEL COQUIMBO DE COQUIMBO",
 "Local_ESCUELA SAN RAFAEL SAN RAFAEL DEL MAULE",
 "Local_ESCUELA SAN SANTIAGO DE BELEN PUTRE DE ARICA Y PARINACOTA",
 "Local_ESCUELA SAN VICENTE DE PAUL COPIAPO DE ATACAMA",
 "Local_ESCUELA SANITAS LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ADRIANA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ANA L1 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA SANTA BARBARA LINARES DEL MAULE",
 "Local_ESCUELA SANTA CLARA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA DELFINA RETIRO DEL MAULE",
 "Local_ESCUELA SANTA FE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA IRENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA JOAQUINA DE VEDRUNA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA LEONOR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA MARIA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA MARTA DE LIRAY COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA DE CHENA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA SANTA TERESA DEL CARMELO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA DE HUECHURABA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTIAGO AMENGUAL B. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA SANTIAGO BUERAS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA SANTIAGO DE GUAYAQUIL HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2 DANIEL REBOLLEDO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2DO DANIEL REBOLLEDO TALCA DEL MAULE",
 "Local_ESCUELA SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO CANDELARIA PEREZ SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA SELVA OSCURA VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA SENDERO DEL SABER SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SERAFIN GUTIERREZ VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA SILVANO FERNANDEZ YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA SIXTO MENDEZ PARADA GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SOCIEDAD DEL SOCORRO DE SENORAS OSORNO DE LOS LAGOS",
 "Local_ESCUELA SOL NACIENTE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SONIA PLAZA CASTRO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOR TERESA DE LOS ANDES LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SU SANTIDAD JUAN XXIII SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SUIZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA SUPERIOR DE NINAS DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SUPERIOR NUEVA BILBAO CONSTITUCION DEL MAULE",
 "Local_ESCUELA SUSANA MONTES VELASCO TENO DEL MAULE",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L2 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNO SUR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TEGUALDA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L1 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L2 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENO ANEXO TENO DEL MAULE",
 "Local_ESCUELA TENO TENO DEL MAULE",
 "Local_ESCUELA TEODORO LOWEY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TERESA DE CALCUTA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TERRITORIO ANTARTICO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THE LITTLE SCHOOL CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THEODOR HEUSS QUILPUE DE VALPARAISO",
 "Local_ESCUELA THILDA PORTILLO OLIVARES IQUIQUE DE TARAPACA",
 "Local_ESCUELA THOMAS ALVA EDISON COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA THOMAS JEFFERSON D 465 HUALPEN DEL BIOBIO",
 "Local_ESCUELA THOMAS JEFFERSON LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA TIMOTEO ARAYA ALEGRIA VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA TOBALABA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOQUI LAUTARO NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA TULIO BURGOS RIVERA CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA TUPAHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ULDA ARACENA GONZALEZ F-203 NOGALES DE VALPARAISO",
 "Local_ESCUELA UNESCO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNIFICADA ISLA GUAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA UNION LATINOAMERICANA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNION LATINOAMERICANA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA UNION NACIONAL ARABE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNO ISABEL RIQUELME LINARES DEL MAULE",
 "Local_ESCUELA VADO DE TOPATER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA VALDIVIA DE PAINE BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALENTIN LETELIER VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VALLE DE CUYA CAMARONES DE ARICA Y PARINACOTA",
 "Local_ESCUELA VALLE DE MARIQUINA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA VALLE DE PUANGUE CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE DEL INCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE RAMADILLAS ARAUCO DEL BIOBIO",
 "Local_ESCUELA VEGAS DE ITATA COELEMU DE NUBLE",
 "Local_ESCUELA VICENTE HUIDOBRO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA VICENTE REYES PALAZUELOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR CUCCUINI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR DOMINGO SILVA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA VILLA ALEGRE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CAROLINA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CENTINELA SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA CULENAR TALCA DEL MAULE",
 "Local_ESCUELA VILLA HUEQUEN ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA VILLA INDEPENDENCIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA INDEPENDENCIA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA INDEPENDENCIA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA JESUS DE COELEMU COELEMU DE NUBLE",
 "Local_ESCUELA VILLA LA CULTURA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA LA GRANJA MULCHEN DEL BIOBIO",
 "Local_ESCUELA VILLA LA PAZ TALCA DEL MAULE",
 "Local_ESCUELA VILLA LAS DUNAS SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA VILLA LAS NIEVES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA VILLA LO BURGOS PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA VILLA MONTE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA PEDRO AGUIRRE CERDA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA PRAT SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA VILLA SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SAN PEDRO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA VILLA SANTA ELENA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SUR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLASECA BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VINA PURISIMA TALCA DEL MAULE",
 "Local_ESCUELA VIOLETA PARRA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VIOLETA PARRA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VIRGEN DEL CARMEN EL CARMEN DE NUBLE",
 "Local_ESCUELA VISTA HERMOSA CORONEL DEL BIOBIO",
 "Local_ESCUELA VOIPIR DE NANCUL VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VOLCAN ANTUCO ANTUCO DEL BIOBIO",
 "Local_ESCUELA WASHINGTON OMAR VENEGAS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA WELCOME SCHOOL PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA YERBAS BUENAS Y GIMNASIO ANCUD DE LOS LAGOS",
 "Local_ESCUELA ZAIDA ARANEDA VIGUERAS LOS ALAMOS DEL BIOBIO",
 "Local_ESTADIO DIAGUITA OVALLE DE COQUIMBO",
 "Local_ESTADIO LA PORTADA LA SERENA DE COQUIMBO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L1 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L2 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO MONUMENTAL L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L3 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_FACULTAD DE ARQUITECTURA UNIVERSIDAD DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_FACULTAD DE FILOSOFIA Y EDUCACION PUCV, CAMPUS SAUSALITO VINA DEL MAR DE VALPARAISO",
 "Local_FACULTAD DE INGENIERIA PUCV VALPARAISO DE VALPARAISO",
 "Local_GEORGE CHAYTOR ENGLISH COLLEGE TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO AUGUSTO ZUBIRI (EX EPICENTRO I) ARICA DE ARICA Y PARINACOTA",
 "Local_GIMNASIO DEPORTIVO LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO FISCAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_GIMNASIO LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO MUNICIPAL CASTRO DE LOS LAGOS",
 "Local_GIMNASIO MUNICIPAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL DE RAUCO RAUCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL LOTA DEL BIOBIO",
 "Local_GIMNASIO MUNICIPAL MACUL METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL PELARCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL RINCONADA DE VALPARAISO",
 "Local_GIMNASIO MUNICIPAL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL SAN JAVIER DEL MAULE",
 "Local_GIMNASIO MUNICIPAL SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL TENO DEL MAULE",
 "Local_GIMNASIO OLIMPICO UFRO TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO POLIDEPORTIVO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_GIMNASIO POLIDEPORTIVO MARTIN VARGAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO UNIVERSIDAD DE LOS LAGOS PUERTO MONTT DE LOS LAGOS",
 "Local_GIMNASIOS INSTITUTO SALESIANO VALDIVIA DE LOS RIOS",
 "Local_GREEN HOUSE SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_HERNAN MERINO CORREA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_HRVATSKA SKOLA SAN ESTEBAN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INST. SUPERIOR DE ADMINISTRACION Y TURISMO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO BICENTENARIO JAVIERA CARRERA VERDUGO SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO CHACABUCO LOS ANDES DE VALPARAISO",
 "Local_INSTITUTO CHILE ASIA PACIFICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO CIENTIFICO EDUCACIONAL JOSE MAZA SANCHO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO CLARET TEMUCO DE LA ARAUCANIA",
 "Local_INSTITUTO COMERCIAL ALBERTO VALENZUELA LLANOS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO COMERCIAL ELIODORO DOMINGUEZ DOMINGUEZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL LINARES DEL MAULE",
 "Local_INSTITUTO COMERCIAL MARITIMO PACIFICO SUR L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO COMERCIAL OSORNO DE LOS LAGOS",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE ADMINISTRACION Y COMERCIO ESTADO DE ISRAEL COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO DE HUMANIDADES ALFREDO SILVA SANTIAGO CONCEPCION DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES ANTONIO MORENO CASAMITJANA CORONEL DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE MATEMATICAS PUCV MALAQUIAS MORALES MUNOZ VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L2 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO EDUCACIONAL COLLICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO HERMANOS MATTE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO HUMANIDADES MONSENOR JOSE MANUEL SANTO ASCARZA CHIGUAYANTE DEL BIOBIO",
 "Local_INSTITUTO HUMANIDADES SAN FRANCISCO DE ASIS LOTA DEL BIOBIO",
 "Local_INSTITUTO INDUSTRIAL SUPERIOR DE CHILLAN CHILLAN DE NUBLE",
 "Local_INSTITUTO INGLES CURICO DEL MAULE",
 "Local_INSTITUTO ITALIA DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO LINARES LINARES DEL MAULE",
 "Local_INSTITUTO MIGUEL LEON PRADO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO O'HIGGINS DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO OBISPO SILVA LEZAETA CALAMA DE ANTOFAGASTA",
 "Local_INSTITUTO POLITECNICO SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO POLITECNICO SUPERIOR EGIDIO ROZ CONSTITUCION DEL MAULE",
 "Local_INSTITUTO POLITECNICO SUPERIOR JUAN TERRIER DAILLY CURICO DEL MAULE",
 "Local_INSTITUTO PRESIDENTE ERRAZURIZ LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO PROFESIONAL DUOC PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO RAFAEL ARIZTIA L1 QUILLOTA DE VALPARAISO",
 "Local_INSTITUTO SAN MIGUEL COLINA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SAN SEBASTIAN BASICO YUMBEL DEL BIOBIO",
 "Local_INSTITUTO SAN VICENTE DE TAGUA TAGUA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO SANTA MARIA CHILLAN DE NUBLE",
 "Local_INSTITUTO SANTO TOMAS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO ENRIQUE MALDONADO TALCA DEL MAULE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO JERARDO MUNOZ CAMPOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PROFESOR FERNANDO PEREZ BECERRA CHILLAN DE NUBLE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO (2) L1 VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNOLOGICO Y COMERCIAL RECOLETA-INTECO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_INTERNADO FEMENINO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_JARDIN INFANTIL RUCAPEQUEN CHILLAN VIEJO DE NUBLE",
 "Local_JUNIOR COLLEGE ARICA DE ARICA Y PARINACOTA",
 "Local_LIC.DE CIENC.Y HUM.SAN JOSEMARIA ESCRIVA COQUIMBO DE COQUIMBO",
 "Local_LICEO A- 5 JOVINA NARANJO FERNANDEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 OCTAVIO PALMA PEREZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 VALENTIN LETELIER L1 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-1 VALENTIN LETELIER L2 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-127 FIDEL PINOCHET LE-BRUN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-2 POLITECNICO ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L2 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ABATE MOLINA TALCA DEL MAULE",
 "Local_LICEO ABDON CIFUENTES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ACADEMIA NACIONAL ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO ADVENTISTA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO AGRICOLA CHOLCHOL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO AGRICOLA JOSE ABELARDO NUNEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGRICOLA PADRE FRANCISCO NAPOLITANO ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGROINDUSTRIAL RIO CLARO RIO CLARO DEL MAULE",
 "Local_LICEO AGUSTIN ROSS EDWARDS PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ALBERTO BLEST GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALBERTO BLEST GANA LOS LAGOS DE LOS RIOS",
 "Local_LICEO ALCALDE SERGIO GONZALEZ GUTIERREZ POZO ALMONTE DE TARAPACA",
 "Local_LICEO ALEJANDRO ALVAREZ JOFRE OVALLE DE COQUIMBO",
 "Local_LICEO ALEMAN DEL VERBO DIVINO L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE GALVARINO RIVEROS CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE PEDRO ESPINA RITCHIE TALCAHUANO DEL BIOBIO",
 "Local_LICEO ALONSO DE ERCILLA Y ZUNIGA ERCILLA DE LA ARAUCANIA",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO JAHUEL BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO AMANDA LABARCA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANDRES ALCAZAR DE TUCAPEL TUCAPEL DEL BIOBIO",
 "Local_LICEO ANDRES BELLO PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO ANDRES BELLO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO SALAMANCA MORALES CORONEL DEL BIOBIO",
 "Local_LICEO ANTONIO VARAS CAUQUENES DEL MAULE",
 "Local_LICEO ANTONIO VARAS L1 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ANTONIO VARAS L2 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ARAUCANIA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTISTICO ARMANDO CARRERA GONZALEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO ARTISTICO D-13 JUAN NOE CREVANI ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO ARTURO ALESSANDRI PALMA LONGAVI DEL MAULE",
 "Local_LICEO ARTURO ALESSANDRI PALMA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_LICEO ARTURO PEREZ CANTO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO PRAT CHACON CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO ARTURO VALENZUELA CUNCO DE LA ARAUCANIA",
 "Local_LICEO AUGUSTO D HALMAR NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO AUGUSTO SANTELICES VALENZUELA LICANTEN DEL MAULE",
 "Local_LICEO AVENIDA RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO B 42 TAJAMAR PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN MUNOZ GAMERO PUERTO OCTAY DE LOS LAGOS",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BERTA ZAMORANO LIZANA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L1 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L2 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO A-71 GUILLERMO FELIU CRUZ ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO AGRICOLA DE LA PATAGONIA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO AGRICOLA MARTA MARTINEZ CRUZ YERBAS BUENAS DEL MAULE",
 "Local_LICEO BICENTENARIO AGROPECUARIO LIKAN ANTAI SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ANDRES SABELLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ARAUCANIA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO ARTISTICO ALEXANDER GRAHAM BELL VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CHACABUCO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO CIUDAD DE LOS RIOS VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO BICENTENARIO CLAUDIO ARRAU LEON COIHUECO DE NUBLE",
 "Local_LICEO BICENTENARIO COLEGIO DIOCESANO OBISPO LABBE IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO NIRVANA ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO PANQUEHUE PANQUEHUE DE VALPARAISO",
 "Local_LICEO BICENTENARIO COMPLEJO EDUCACIONAL ANDRES ANTONIO GORBEA GORBEA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CORDILLERA DE SAN FELIPE SAN FELIPE DE VALPARAISO",
 "Local_LICEO BICENTENARIO DE ANCUD ANCUD DE LOS LAGOS",
 "Local_LICEO BICENTENARIO DE CAUQUENES CAUQUENES DEL MAULE",
 "Local_LICEO BICENTENARIO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA CARLOS MONTANE CASTRO QUIRIHUE DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA DIEGO PORTALES PALAZUELOS SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA NUEVO MUNDO MULCHEN DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE JUVENAL HERNANDEZ JAQUE EL CARMEN DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE SAN NICOLAS, CAMPUS SERGIO MARTIN ALAMOS SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNICO PUENTE NUBLE SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNOLOGICO FEDERICO SCHWAGER CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TREHUACO TREGUACO DE NUBLE",
 "Local_LICEO BICENTENARIO DE HOTELERIA Y TURISMO PUCON DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE MOLINA MARIA DEL TRANSITO DE LA CRUZ MOLINA DEL MAULE",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE VALLENAR VALLENAR DE ATACAMA",
 "Local_LICEO BICENTENARIO DE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO BICENTENARIO DIEGO PORTALES PALAZUELOS CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ENRIQUE BALLACEY COTTEREAU ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO FRANCISCO BILBAO BARQUIN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO INDOMITO DE PUREN PUREN DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO INGENIERO RICARDO FENNER RUEDI LA UNION DE LOS RIOS",
 "Local_LICEO BICENTENARIO ISIDORA RAMOS DE GAJARDO LEBU DEL BIOBIO",
 "Local_LICEO BICENTENARIO LUIS CRUZ MARTINEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO LUIS GONZALEZ VASQUEZ NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO MANUEL DE SALAS L1 CASABLANCA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MANUEL JESUS ORTIZ SAN IGNACIO DE NUBLE",
 "Local_LICEO BICENTENARIO MARTA NAREA DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MERCEDES FRITIS MACKENNEY COPIAPO DE ATACAMA",
 "Local_LICEO BICENTENARIO ORIENTE DE TALCA TALCA DEL MAULE",
 "Local_LICEO BICENTENARIO PABLO NERUDA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA PICA DE TARAPACA",
 "Local_LICEO BICENTENARIO PAUL HARRIS PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO POLITECNICO CESAREO AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO POLITECNICO EMA ESPINOZA CORREA LAUTARO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO JOSE MANUEL PINTO ARIAS PINTO DE NUBLE",
 "Local_LICEO BICENTENARIO POLITECNICO JUANITA FERNANDEZ SOLAR ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO MANUEL MONTT VICTORIA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLIVALENTE NUESTRA SENORA DE LA MERCED SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO QUEMCHI QUEMCHI DE LOS LAGOS",
 "Local_LICEO BICENTENARIO RURAL CERRO CASTILLO RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO SAN FELIPE DE ARAUCO ARAUCO DEL BIOBIO",
 "Local_LICEO BICENTENARIO SAN PEDRO DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA CRUZ DE LARQUI BULNES DE NUBLE",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO SANTA TERESA DE LOS ANDES COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SIMON BOLIVAR LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL DE MINERIA CABILDO DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL MARY GRAHAM (MEDIA) VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO TERESA PRATS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L2 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO ZAPALLAR ZAPALLAR DE VALPARAISO",
 "Local_LICEO CAMILO HENRIQUEZ DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CAMPANARIO YUNGAY DE NUBLE",
 "Local_LICEO CAPITAN IGNACIO CARRERA PINTO COLBUN DEL MAULE",
 "Local_LICEO CARDENAL ANTONIO SAMORE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL ANTONIO SAMORE SANTA BARBARA DEL BIOBIO",
 "Local_LICEO CARDENAL CARO BASICA BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARLOS CONDELL TALCA DEL MAULE",
 "Local_LICEO CARLOS COUSINO GOYENECHEA LOTA DEL BIOBIO",
 "Local_LICEO CARLOS IBANEZ DEL CAMPO FRESIA DE LOS LAGOS",
 "Local_LICEO CARLOS ROBERTO MONDACA CORTES VICUNA DE COQUIMBO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMEN AURORA RODRIGUEZ HENRIQUEZ COQUIMBO DE COQUIMBO",
 "Local_LICEO CATOLICO ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_LICEO CHILOE L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHILOE L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CIENTIFICO HUMANISTA BRAINSTORM TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CIENTIFICO HUMANISTA LA CHIMBA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO CIUDAD DE BRASILIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLARA SOLOVERA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLAUDINA URRUTIA DE LAVIN CAUQUENES DEL MAULE",
 "Local_LICEO CLAUDIO ARRAU DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO CLAUDIO FLORES SOTO LOS ALAMOS DEL BIOBIO",
 "Local_LICEO COEDUCACIONAL LA IGUALDAD VALPARAISO DE VALPARAISO",
 "Local_LICEO COEDUCACIONAL SANTA MARIA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ALEJANDRO LUBET VERGARA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO COMERCIAL ANDRES BELLO LOPEZ CORONEL DEL BIOBIO",
 "Local_LICEO COMERCIAL CAMILO HENRIQUEZ LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_LICEO COMERCIAL DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO COMERCIAL DEL DESARROLLO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL DIEGO PORTALES L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL DIEGO PORTALES PALAZUELO LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ENRIQUE OYARZUN MONDACA CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL FEMENINO DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL GABRIEL GONZALEZ VIDELA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL JORGE ALESSANDRI RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL MIRAMAR PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL MOLINA LAVIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL PRESIDENTE FREI MONTALVA LOTA DEL BIOBIO",
 "Local_LICEO COMERCIAL PROFESOR SERGIO MORAGA ARCIL TALCAHUANO DEL BIOBIO",
 "Local_LICEO COMERCIAL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL REPUBLICA DE BRASIL PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL TEMUCO BICENTENARIO DE EXCELENCIA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL VATE VICENTE HUIDOBRO SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMPLEJO EDUCACIONAL JAVIERA CARRERA TALCA DEL MAULE",
 "Local_LICEO CONFEDERACION SUIZA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CONSTITUCION CONSTITUCION DEL MAULE",
 "Local_LICEO COPIULEMU FLORIDA DEL BIOBIO",
 "Local_LICEO CORDILLERA CHINCOLCO PETORCA DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CRISTO REDENTOR LOS ALAMOS DEL BIOBIO",
 "Local_LICEO DARIO SALAS L1 SANTA MARIA DE VALPARAISO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 21 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE CIENCIAS Y HUMANIDADES PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO DE CULTURA Y DIFUSION ARTISTICA TALCA DEL MAULE",
 "Local_LICEO DE ESTUDIOS CONTABLES Y ADMINISTR. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES DE ANTOFAGASTA MARIO BAHAMONDE SILVA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES MANUEL MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO DE HOMBRES NEANDRO SCHILLING SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE HUARA HUARA DE TARAPACA",
 "Local_LICEO DE HUEPIL TUCAPEL DEL BIOBIO",
 "Local_LICEO DE LIMACHE L1 LIMACHE DE VALPARAISO",
 "Local_LICEO DE NINAS CONCEPCION DEL BIOBIO",
 "Local_LICEO DE NINAS EDUARDO CHARME SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE NINAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE OLMUE OLMUE DE VALPARAISO",
 "Local_LICEO DE PELARCO PELARCO DEL MAULE",
 "Local_LICEO DE REQUINOA L1 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE REQUINOA L2 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_LICEO DE YUNGAY YUNGAY DE NUBLE",
 "Local_LICEO DEPORTIVO ELENA DUVAUCHELLE CABEZON IQUIQUE DE TARAPACA",
 "Local_LICEO DIEGO PORTALES COQUIMBO DE COQUIMBO",
 "Local_LICEO DOCTOR ALEJANDRO DEL RIO LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR JUAN VERDAGUER PLANAS RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR VICTOR RIOS RUIZ ANTUCO DEL BIOBIO",
 "Local_LICEO DOMINGO HERRERA RIVERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DOMINGO ORTIZ DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_LICEO DOMINGO SANTA MARIA CONCEPCION DEL BIOBIO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO EDUARDO DE LA BARRA VALPARAISO DE VALPARAISO",
 "Local_LICEO EL BOLLENAR MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL PRINCIPAL PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROBLE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROSARIO DE LITUECHE L1 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO EL ROSARIO DE LITUECHE L2 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ELEUTERIO RAMIREZ MOLINA CALAMA DE ANTOFAGASTA",
 "Local_LICEO ELEUTERIO RAMIREZ OSORNO DE LOS LAGOS",
 "Local_LICEO ELVIRA BRADY MALDONADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ELVIRA SANCHEZ DE GARCES MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ENRIQUE BACKAUSSE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ERASMO ESCALA ARRIAGADA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESMERALDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESPIRITU SANTO DEL VERBO DIVINO SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIA SUBERCASEAUX L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO EUGENIO MARIA DE HOSTOS LA REINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIO PEREIRA SALAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL ARTISTICO Y DE APLICACION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL UMAG PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO FEDERICO ALBERT FAUPP CHANCO DEL MAULE",
 "Local_LICEO FEDERICO HEISE MARTI PARRAL DEL MAULE",
 "Local_LICEO FEDERICO VARELA CHANARAL DE ATACAMA",
 "Local_LICEO FERMIN DEL REAL CASTILLO CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FERNANDO ARIZTIA RUIZ COPIAPO DE ATACAMA",
 "Local_LICEO FERNANDO BINVIGNAT MARIN COQUIMBO DE COQUIMBO",
 "Local_LICEO FERNANDO LAZCANO CURICO DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA ARMANET VILLA ALEGRE DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FRANCISCO BASCUNAN GUERRERO QUILLECO DEL BIOBIO",
 "Local_LICEO FRANCISCO COLOANE CASTRO DE LOS LAGOS",
 "Local_LICEO FRANCISCO DE AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO FRANCISCO FRIAS VALENZUELA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRANCISCO HERNANDEZ ORTIZ-PIZARRO CALBUCO DE LOS LAGOS",
 "Local_LICEO FRANCISCO JAVIER KRUGGER ALVARADO BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRAY PABLO DE ROYO SAN PABLO DE LOS LAGOS",
 "Local_LICEO GABRIELA MISTRAL CANETE DEL BIOBIO",
 "Local_LICEO GABRIELA MISTRAL DE LA SERENA LA SERENA DE COQUIMBO",
 "Local_LICEO GABRIELA MISTRAL DE MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL MAFIL DE LOS RIOS",
 "Local_LICEO GABRIELA MISTRAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO GABRIELA MISTRAL SAN ANTONIO DE VALPARAISO",
 "Local_LICEO GABRIELA MISTRAL TEMUCO DE LA ARAUCANIA",
 "Local_LICEO GASTRONOMIA Y TURISMO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO GASTRONOMIA Y TURISMO L2 QUILPUE DE VALPARAISO",
 "Local_LICEO GRANADEROS DE PUTRE PUTRE DE ARICA Y PARINACOTA",
 "Local_LICEO GREGORIO CORDOVEZ LA SERENA DE COQUIMBO",
 "Local_LICEO GREGORIO MORALES MIRANDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO GUILLERMO MARIN LARRAIN RETIRO DEL MAULE",
 "Local_LICEO HARDWARE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO HECTOR PEREZ BIOTT TALCA DEL MAULE",
 "Local_LICEO HERIBERTO SOTO SOTO SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERNANDO DE MAGALLANES PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO HUALANE HUALANE DEL MAULE",
 "Local_LICEO HUERTOS FAMILIARES TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO HUMANISTA CIENTIFICO JOSE DE LA CRUZ MIRANDA CORREA CANETE DEL BIOBIO",
 "Local_LICEO IGNACIO CARRERA PINTO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO IGNACIO CARRERA PINTO TALCA DEL MAULE",
 "Local_LICEO INDIRA GANDHI LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL A 116 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ARMANDO QUEZADA ACHARAN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO INDUSTRIAL BENJAMIN FRANKLIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION HERNAN VALENZUELA L1 HUALPEN DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION VICTOR BEZANILLA SALINAS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE RENGO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL DE SAN MIGUEL AGUSTIN EDWARDS ROSS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_LICEO INDUSTRIAL DOMINGO MATTE PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ERNESTO PINTO LAGARRIGUE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL EULOGIO GORDO MONEO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO INDUSTRIAL JOSE TOMAS DE URMENETA COQUIMBO DE COQUIMBO",
 "Local_LICEO INDUSTRIAL METODISTA CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO INDUSTRIAL MIGUEL AYLWIN GAJARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL OSORNO OSORNO DE LOS LAGOS",
 "Local_LICEO INDUSTRIAL PRESIDENTE PEDRO AGUIRRE CERDA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL SAMUEL VIVANCO PARADA LOS ANGELES DEL BIOBIO",
 "Local_LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO INGENIERO MILITAR JUAN MACKENNA O'REILLY PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INMACULADA CONCEPCION CAUQUENES DEL MAULE",
 "Local_LICEO INSTITUTO COMERCIAL DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO INSULAR ENSENANZA BASICA Y GIMNASIO QUINCHAO DE LOS LAGOS",
 "Local_LICEO INSULAR ENSENANZA MEDIA QUINCHAO DE LOS LAGOS",
 "Local_LICEO ISABEL POBLETE VARGAS PERQUENCO DE LA ARAUCANIA",
 "Local_LICEO ISABEL RIQUELME QUILLECO DEL BIOBIO",
 "Local_LICEO ISAURA DINATOR DE GUZMAN SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAMES MUNDELL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO JAN COMENIUS TEMUCO DE LA ARAUCANIA",
 "Local_LICEO JAVIERA CARRERA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAVIERA CARRERA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JEAN BUCHANAN DE LARRAIN PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ LA SERENA DE COQUIMBO",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ VICTORIA DE LA ARAUCANIA",
 "Local_LICEO JORGE TEILLIER SANDOVAL LAUTARO DE LA ARAUCANIA",
 "Local_LICEO JOSE ANTONIO CARVAJAL COPIAPO DE ATACAMA",
 "Local_LICEO JOSE DOMINGO CANAS QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE FRANCISCO VERGARA L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO JOSE IGNACIO ZENTENO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE MANUEL BORGONO NUNEZ L1 PETORCA DE VALPARAISO",
 "Local_LICEO JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE TORIBIO MEDINA RIO NEGRO DE LOS LAGOS",
 "Local_LICEO JOSE VICTORINO LASTARRIA GORBEA DE LA ARAUCANIA",
 "Local_LICEO JOSE VICTORINO LASTARRIA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE VICTORINO LASTARRIA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSEFINA AGUIRRE MONTENEGRO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO JUAN AGUSTIN MORALES GONZALEZ MOLINA DEL MAULE",
 "Local_LICEO JUAN ANTONIO RIOS L1 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN ANTONIO RIOS L2 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO JUAN DANTE PARRAGUEZ ARELLANO SAN ANTONIO DE VALPARAISO",
 "Local_LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN GOMEZ MILLAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN GOMEZ MILLAS YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN RUSQUE PORTAL L1 NOGALES DE VALPARAISO",
 "Local_LICEO JUAN XXIII SEDE EL BELLOTO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO JUANA ROSS DE EDWARDS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO LA ASUNCION TALCAHUANO DEL BIOBIO",
 "Local_LICEO LA PORTADA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO LAS AMERICAS PUYEHUE DE LOS LAGOS",
 "Local_LICEO LAS ARAUCARIAS BASICA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LAS ARAUCARIAS MEDIA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LATINOAMERICANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO LAURA URRUTIA BENAVENTE LONGAVI DEL MAULE",
 "Local_LICEO LENKA FRANULIC NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LIBERTADOR BERNARDO O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_LICEO LIBERTADOR GENERAL BERNARDO OA'HIGGINS IQUIQUE DE TARAPACA",
 "Local_LICEO LONQUIMAY LONQUIMAY DE LA ARAUCANIA",
 "Local_LICEO LOS ALMENDROS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ALMENDROS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ANDES MELIPEUCO DE LA ARAUCANIA",
 "Local_LICEO LOS ANGELES A-59 L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS ANGELES A-59 L2 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS CASTANOS LAUTARO DE LA ARAUCANIA",
 "Local_LICEO LOS CONDORES ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO LOS HEROES DE LA CONCEPCION CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS JAZMINES MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCERO GONZALEZ CONCEPCION DEL BIOBIO",
 "Local_LICEO LUCILA GODOY ALCAYAGA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCILA GODOY ALCAYAGA TRAIGUEN DE LA ARAUCANIA",
 "Local_LICEO LUIS ALBERTO BARRERA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS CRUZ MARTINEZ DE CURICO CURICO DEL MAULE",
 "Local_LICEO LUIS CRUZ MARTINEZ IQUIQUE DE TARAPACA",
 "Local_LICEO LUIS CRUZ MARTINEZ NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS DE ALAVA FLORIDA DEL BIOBIO",
 "Local_LICEO LUIS EDMUNDO CORREA ROJAS CUREPTO DEL MAULE",
 "Local_LICEO LUIS HUMBERTO ACOSTA GAY EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUIS URBINA FLORES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MACHALI MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MADRE VICENCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MALAQUIAS CONCHA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANIHUALES AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO MANUEL BARROS BORGONO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL BULNES BULNES DE NUBLE",
 "Local_LICEO MANUEL JESUS ANDRADE BORQUEZ CHONCHI DE LOS LAGOS",
 "Local_LICEO MANUEL MARIN FRITIS L1 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MARIN FRITIS L2 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MONTT SAN JAVIER DEL MAULE",
 "Local_LICEO MANUEL RODRIGUEZ TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL ROJAS MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA AURORA GUINEZ RAMIREZ PUREN DE LA ARAUCANIA",
 "Local_LICEO MARIA CARVAJAL FUENZALIDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA LUISA BOMBAL VALPARAISO DE VALPARAISO",
 "Local_LICEO MARIA LUISA BOMBAL VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA REINA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L1 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L2 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARTA DONOSO ESPEJO TALCA DEL MAULE",
 "Local_LICEO MARTIN RUIZ DE GAMBOA CHILLAN DE NUBLE",
 "Local_LICEO MATILDE BRANDAU DE ROSS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAYOR GENERAL (E) OSCAR BONILLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO MERCEDES MARIN DEL SOLAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO METROPOLITANO DE ADULTOS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL ANGEL CERDA LEIVA MULCHEN DEL BIOBIO",
 "Local_LICEO MIGUEL DE CERVANTES Y SAAVEDRA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MINERO AMERICA CALAMA DE ANTOFAGASTA",
 "Local_LICEO MIREYA CATALAN URZUA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR BASICA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL ATENEA CUNCO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL BARROS ARANA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE CODEGUA CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL DE LOLOL LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE NACIMIENTO NACIMIENTO DEL BIOBIO",
 "Local_LICEO MUNICIPAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL F-860 L1 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL F-860 L2 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL INSTITUTO CARDENAL CARO MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL JOSE VICTORINO LASTARRIA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LA FRONTERA PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL LUIS GREGORIO VALENZUELA LAVIN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LUIS LABORDA L1 HIJUELAS DE VALPARAISO",
 "Local_LICEO MUNICIPAL MISAEL LOBOS MONROY GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL PABLO NERUDA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL POETA NERUDA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL RIO CLARO YUMBEL DEL BIOBIO",
 "Local_LICEO MUNICIPAL SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL TROVOLHUE CARAHUE DE LA ARAUCANIA",
 "Local_LICEO NACIONAL DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NACIONAL DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NICOLAS FEDERICO LOHSE VARGAS LOS VILOS DE COQUIMBO",
 "Local_LICEO NUESTRA SENORA DE LA PAZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO NUESTRA SENORA DE LAS MERCEDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUESTRA SENORA MARIA INMACULADA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVA ZELANDIA SANTA JUANA DEL BIOBIO",
 "Local_LICEO NUEVO AMANECER LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVO HORIZONTE VICHUQUEN DEL MAULE",
 "Local_LICEO NUEVO PORVENIR SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ORIENTE RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L2 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSORNO COLLEGE OSORNO DE LOS LAGOS",
 "Local_LICEO PABLO NERUDA DE TALCA TALCA DEL MAULE",
 "Local_LICEO PABLO NERUDA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO PADRE LUIS ALBERTO SALDES IRARRAZABAL YUMBEL DEL BIOBIO",
 "Local_LICEO PADRE SIGISFREDO PANGUIPULLI DE LOS RIOS",
 "Local_LICEO PARROQUIAL SAN ANTONIO VINA DEL MAR DE VALPARAISO",
 "Local_LICEO PARROQUIAL TERESITA DE LOS ANDES RINCONADA DE VALPARAISO",
 "Local_LICEO PARTICULAR CARLOS CONDELL LOS ANGELES DEL BIOBIO",
 "Local_LICEO PARTICULAR MIXTO LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO PARTICULAR MIXTO SAN FELIPE L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO PARTICULAR SUBVENCIONADO LIBERTAD VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO PATRICIO MEKIS DE PADRE HURTADO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PAULA JARAQUEMADA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PEDRO AGUIRRE CERDA PUERTO VARAS DE LOS LAGOS",
 "Local_LICEO PEDRO REGALADO VIDELA ORDENES ANDACOLLO DE COQUIMBO",
 "Local_LICEO PEDRO TRONCOSO MACHUCA VALLENAR DE ATACAMA",
 "Local_LICEO PELDEHUE COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PELLUHUE PELLUHUE DEL MAULE",
 "Local_LICEO PENAFLOR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO PENCOPOLITANO PENCO DEL BIOBIO",
 "Local_LICEO POETA FEDERICO GARCIA LORCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA PABLO NERUDA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA VICENTE HUIDOBRO L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETA VICENTE HUIDOBRO L2 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L1 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L2 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL MEDIA CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO AMERICA LOS ANDES DE VALPARAISO",
 "Local_LICEO POLITECNICO ANDRES BELLO LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO ANTULAFKEN SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_LICEO POLITECNICO B-4 ANTONIO VARAS DE LA BARRA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO POLITECNICO C-120 L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO C-120 L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CAPITAN IGNACIO CARRERA PINTO SAN CARLOS DE NUBLE",
 "Local_LICEO POLITECNICO CARAMPANGUE ARAUCO DEL BIOBIO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_LICEO POLITECNICO DE CONCON CONCON DE VALPARAISO",
 "Local_LICEO POLITECNICO DE LINARES LINARES DEL MAULE",
 "Local_LICEO POLITECNICO DE OVALLE OVALLE DE COQUIMBO",
 "Local_LICEO POLITECNICO DIEGO PORTALES PALAZUELOS TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLITECNICO DOMINGO SANTA MARIA RENAICO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO GENERAL OSCAR BONILLA BRADANOV CABRERO DEL BIOBIO",
 "Local_LICEO POLITECNICO HANNOVER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO HEROES DE LA CONCEPCION LAJA DEL BIOBIO",
 "Local_LICEO POLITECNICO HOLANDA LLANQUIHUE DE LOS LAGOS",
 "Local_LICEO POLITECNICO JOSE GUTIERREZ DE LA FUENTE IQUIQUE DE TARAPACA",
 "Local_LICEO POLITECNICO MARGA MARGA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARGA MARGA L2 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARIA WARD SAN IGNACIO DE NUBLE",
 "Local_LICEO POLITECNICO MELIPILLA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MELIPILLA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MIRASOL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO POLITECNICO PABLO RODRIGUEZ CAVIEDES ILLAPEL DE COQUIMBO",
 "Local_LICEO POLITECNICO PESQUERO MEHUIN MARIQUINA DE LOS RIOS",
 "Local_LICEO POLITECNICO PUEBLO NUEVO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO QUINTERO QUINTERO DE VALPARAISO",
 "Local_LICEO POLITECNICO RAUL SILVA HENRIQUEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLITECNICO SAGRADO CORAZON LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO SARA BLINDER DARGOLTZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO POLIVALENTE BAHIA DARWIN LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE CAMILO HENRIQUEZ G. LANCO DE LOS RIOS",
 "Local_LICEO POLIVALENTE DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_LICEO POLIVALENTE DE MOLINA MOLINA DEL MAULE",
 "Local_LICEO POLIVALENTE DE RAUCO RAUCO DEL MAULE",
 "Local_LICEO POLIVALENTE DIEGO MISSENE BURGOS COBQUECURA DE NUBLE",
 "Local_LICEO POLIVALENTE DOCTOR LUIS VARGAS SALCEDO CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE DOCTOR RIGOBERTO IGLESIAS BASTIAS DE LEBU LEBU DEL BIOBIO",
 "Local_LICEO POLIVALENTE DOMINGO LATRILLE TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLIVALENTE ENRIQUE MAC IVER CONSTITUCION DEL MAULE",
 "Local_LICEO POLIVALENTE FERNANDO SILVA CASTELLON CATEMU DE VALPARAISO",
 "Local_LICEO POLIVALENTE JUAN PACHECO ALTAMIRANO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO POLIVALENTE LA FRONTERA NEGRETE DEL BIOBIO",
 "Local_LICEO POLIVALENTE LAS SALINAS TALCAHUANO DEL BIOBIO",
 "Local_LICEO POLIVALENTE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LORENZO ARENAS OLIVO CONCEPCION DEL BIOBIO",
 "Local_LICEO POLIVALENTE LOS GUINDOS BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LUIS CRUZ MARTINEZ QUILLON DE NUBLE",
 "Local_LICEO POLIVALENTE MANUEL ARISTIDES ZANARTU ZANARTU CABRERO DEL BIOBIO",
 "Local_LICEO POLIVALENTE MARIA BEHETY PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLIVALENTE MARIANO LATORRE CURANILAHUE DEL BIOBIO",
 "Local_LICEO POLIVALENTE NAHUELBUTA CONTULMO DEL BIOBIO",
 "Local_LICEO POLIVALENTE OLOF PALME LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE RIGOBERTO FONTT IZQUIERDO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE SAGRADA FAMILIA SAGRADA FAMILIA DEL MAULE",
 "Local_LICEO POLIVALENTE SAN JOSE DE LA PRECIOSA SANGRE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE TOMAS ARNALDO HERRERA VEGA PEMUCO DE NUBLE",
 "Local_LICEO POLIVANENTE BENJAMIN VICUNA MACKENNA VALDIVIA DE LOS RIOS",
 "Local_LICEO PORTAL DE LA CISTERNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE ANIBAL PINTO GARMENDIA. IQUIQUE DE TARAPACA",
 "Local_LICEO PRESIDENTE BALMACEDA CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE GABRIEL GONZALEZ VIDELA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL EL SAUCE TALCA DEL MAULE",
 "Local_LICEO PUBLICO BICENTENARIO CLAUDIO ARRAU LEON CARAHUE DE LA ARAUCANIA",
 "Local_LICEO PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PULMAHUE L1 LA LIGUA DE VALPARAISO",
 "Local_LICEO PUNTA DE RIELES LOS MUERMOS DE LOS LAGOS",
 "Local_LICEO PURKUYEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAHUE OSORNO DE LOS LAGOS",
 "Local_LICEO RAUL BROUSSAIN CAMPINO AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO RAYEN MAPU QUELLON DE LOS LAGOS",
 "Local_LICEO REBECA MATTE BELLO CONCEPCION DEL BIOBIO",
 "Local_LICEO RECTOR ABDON ANDRADE COLOMA LA UNION DE LOS RIOS",
 "Local_LICEO REINO DE SUECIA SAAVEDRA DE LA ARAUCANIA",
 "Local_LICEO REPUBLICA ARGENTINA LOS ANDES DE VALPARAISO",
 "Local_LICEO REPUBLICA DE GRECIA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA ARTURO BONOMETTI BROGI CHILLAN DE NUBLE",
 "Local_LICEO REPUBLICA DE ITALIA ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DEL BRASIL LANCO DE LOS RIOS",
 "Local_LICEO REPUBLICA DEL ECUADOR CONCEPCION DEL BIOBIO",
 "Local_LICEO REPUBLICA DEL ECUADOR TOME DEL BIOBIO",
 "Local_LICEO RODULFO AMANDO PHILIPPI PAILLACO DE LOS RIOS",
 "Local_LICEO RURAL LAS QUEMAS PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO RURAL PUTU CONSTITUCION DEL MAULE",
 "Local_LICEO SALESIANO CAMILO ORTUZAR MONTT MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAMCA ARUMANTI IQUIQUE DE TARAPACA",
 "Local_LICEO SAMUEL ROMAN ROJAS COMBARBALA DE COQUIMBO",
 "Local_LICEO SAN AGUSTIN DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO SAN CLEMENTE ENTRE RIOS SAN CLEMENTE DEL MAULE",
 "Local_LICEO SAN CONRADO DE FUTRONO FUTRONO DE LOS RIOS",
 "Local_LICEO SAN ESTEBAN SAN ESTEBAN DE VALPARAISO",
 "Local_LICEO SAN FELIPE BENICIO DE COYHAIQUE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO SAN FRANCISCO DE ASIS ARAUCO DEL BIOBIO",
 "Local_LICEO SAN FRANCISCO DE ASIS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO SAN FRANCISCO DE PLACILLA PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO SAN FRANCISCO DE QUITO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN FRANCISCO DE QUITO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN GERONIMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN ISIDRO LA CRUZ DE VALPARAISO",
 "Local_LICEO SAN JOSE DE MAIPO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN JUAN BAUTISTA DE HUALQUI HUALQUI DEL BIOBIO",
 "Local_LICEO SAN LUIS DE ALBA MARIQUINA DE LOS RIOS",
 "Local_LICEO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_LICEO SAN PEDRO SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTA CLARA (SEDE BRASIL) LOS ANDES DE VALPARAISO",
 "Local_LICEO SANTA FE LOS ANGELES DEL BIOBIO",
 "Local_LICEO SANTA TERESA DE LOS ANDES VINA DEL MAR DE VALPARAISO",
 "Local_LICEO SANTA TERESITA INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTIAGO BUERAS Y AVARIA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTO CURA DE ARS MAFIL DE LOS RIOS",
 "Local_LICEO SARA BRAUN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO SERGIO SILVA BASCUNAN LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SU SANTIDAD JUAN PABLO SEGUNDO ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO TALAGANTE BASICA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO AGRICOLA OBISPO RAFAEL LIRA INFANTE LA CRUZ DE VALPARAISO",
 "Local_LICEO TECNICO AMELIA COURBIS TALCA DEL MAULE",
 "Local_LICEO TECNICO BICENTENARIO JUANITA FERNANDEZ SOLAR LOS ANGELES DEL BIOBIO",
 "Local_LICEO TECNICO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_LICEO TECNICO DE RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO DE TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_LICEO TECNICO DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO FEMENINO A-29 DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO FEMENINO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO FILIDOR GAETE MONSALVEZ ARAUCO DEL BIOBIO",
 "Local_LICEO TECNICO MARTA BRUNET LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO MUNICIPAL OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL BARON VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL DE LA MADERA CORONEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL DIEGO PORTALES LINARES DEL MAULE",
 "Local_LICEO TECNICO PROFESIONAL EL LLANO PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL EL TAMBO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL FORESTAL PEHUEN - ROBLE HUACHO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL GONZALO GUGLIELMI MONTIEL YUMBEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL HEROES DE ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO TECNICO PROFESIONAL JORGE SANCHEZ UGARTE CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II GALVARINO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL LUCILA GODOY ALCAYAGA HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL MANNHEIM L1 QUILPUE DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL PATRICIO AYLWIN AZOCAR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL PEDRO DEL RIO ZANARTU HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL PROFESOR RICARDO NAVARRETE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_LICEO TECNICO PROFESIONAL VIOLETA PARRA SANDOVAL SAN CARLOS DE NUBLE",
 "Local_LICEO TECNICO VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO TECNOLOGICO ALFREDO NAZAR FERES VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L3 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TENIENTE FRANCISCO MERY AGUIRRE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO TERESA DE LOS ANDES CASTRO DE LOS LAGOS",
 "Local_LICEO THOMAS ALVA EDISON RENCA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TOMAS BURGOS PURRANQUE DE LOS LAGOS",
 "Local_LICEO TOMAS LAGO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO TRAPAQUEANTE TIRUA DEL BIOBIO",
 "Local_LICEO VALENTIN LETELIER LINARES DEL MAULE",
 "Local_LICEO VALLE DE CODPA CAMARONES DE ARICA Y PARINACOTA",
 "Local_LICEO VICENTE ALBERTO PALACIOS VALDES TOME DEL BIOBIO",
 "Local_LICEO VICENTE PEREZ ROSALES RIO BUENO DE LOS RIOS",
 "Local_LICEO VICTOR JARA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO VICTOR JARA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO VOLCAN SAN JOSE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO YOBILO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO ZAPALLAR CURICO DEL MAULE",
 "Local_LINCOLN COLLEGE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LYCEE ANTOINE DE SAINT EXUPERY COLINA METROPOLITANA DE SANTIAGO",
 "Local_MARIA EDUCA LA SERENA DE COQUIMBO",
 "Local_NETLAND SCHOOL ANTOFAGASTA DE ANTOFAGASTA",
 "Local_NORTH AMERICAN COLLEGE SEDE SOTOMAYOR ARICA DE ARICA Y PARINACOTA",
 "Local_POLIDEPORTIVO AYSEN AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_POLIDEPORTIVO CENTENARIO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_POLIDEPORTIVO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_POLIDEPORTIVO MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_POLIDEPORTIVO MUNICIPAL CALLE LARGA CALLE LARGA DE VALPARAISO",
 "Local_POLIDEPORTIVO MUNICIPAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_POLIDEPORTIVO OLIMPICO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_POLIDEPORTIVO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_POLIDEPORTIVO RIO CLARO DEL MAULE",
 "Local_POLIDERPORTIVO SAN CLEMENTE DEL MAULE",
 "Local_RECINTO INTERIOR ESTADIO MUNICIPAL PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_SAINT PETER'S SCHOOL VINA DEL MAR DE VALPARAISO",
 "Local_SAINT TRINITY COLLEGE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_SALON AUDITORIUM MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_SALON DE EVENTOS MUNICIPAL RIO HURTADO DE COQUIMBO",
 "Local_SCUOLA ITALIANA ARTURO DELLA' ORO VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_SCUOLA ITALIANA ARTURO DELLA'ORO L1 VALPARAISO DE VALPARAISO",
 "Local_SCUOLA ITALIANA GIROLAMO LONGHI VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_SUN FLOWER SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_TEATRO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_THE AMERICAN SCHOOL PUERTO MONTT DE LOS LAGOS",
 "Local_THE KINGSTOWN SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L2 VINA DEL MAR DE VALPARAISO",
 "Local_THE MAYFLOWER SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MAYFLOWER SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MISSION COLLEGE EDUCACION BASICA Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_THE NEWLAND SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE NEWLAND SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE SOUTHLAND SCHOOL LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_UCSC EDIFICIO FACEA CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD ANDRES BELLO, CAMPUS VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD ARTURO PRAT ARICA DE ARICA Y PARINACOTA",
 "Local_UNIVERSIDAD ARTURO PRAT IQUIQUE DE TARAPACA",
 "Local_UNIVERSIDAD ARTURO PRAT L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT VICTORIA DE LA ARAUCANIA",
 "Local_UNIVERSIDAD AUSTRAL DE CHILE PUERTO MONTT DE LOS LAGOS",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE TALCA DEL MAULE",
 "Local_UNIVERSIDAD CATOLICA - CAMPUS SAN JUAN PABLO SEGUNDO TEMUCO DE LA ARAUCANIA",
 "Local_UNIVERSIDAD CATOLICA DEL NORTE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD CATOLICA SEDE CURICO CURICO DEL MAULE",
 "Local_UNIVERSIDAD DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD DE LAS AMERICAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_UNIVERSIDAD DE TALCA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VALPARAISO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VINA DEL MAR, SEDE MIRAFLORES (2) VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L2 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD SANTO TOMAS CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD SANTO TOMAS VALDIVIA DE LOS RIOS",
 "Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD VINA DEL MAR, SEDE RECREO VINA DEL MAR DE VALPARAISO",
]

atributos_filtro_2023_circ_dummies = [
 "Frac_Inmigrantes",
 "Frac_Pueblos",
 "Frac_Viv_Ocupada",
 "Frac_Viv_Particular",
 "Frac_Viv_Colectiva",
 "Frac_Casa",
 "Frac_Depa",
 "Frac_Pared_Horm",
 "Frac_Techo_Bueno",
 "Frac_Techo_Medio",
 "Frac_Piso_Bueno",
 "Frac_Mat_Aceptable",
 "Frac_Agua_Aceptable",
 "Densidad_Poblacion",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
 "Local_ALIANZA FRANCESA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA L2 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_ANEXO DE COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_ANEXO ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ANEXO INSTITUTO PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ANEXO LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_AUTOSERVICIO LA TEJUELA PUERTO VARAS DE LOS LAGOS",
 "Local_AZAPA VALLEY SCHOOL ARICA DE ARICA Y PARINACOTA",
 "Local_C.C.P. COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_C.C.P. DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_C.C.P. DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_C.D.P. DE CALAMA CALAMA DE ANTOFAGASTA",
 "Local_C.D.P. DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE SANTIAGO SUR SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE TOCOPILLA TOCOPILLA DE ANTOFAGASTA",
 "Local_C.D.P. SANTIAGO I SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.E.I.A. LOS CASTANOS VINA DEL MAR DE VALPARAISO",
 "Local_C.P. ALTO HOSPICIO ALTO HOSPICIO DE TARAPACA",
 "Local_C.P. DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_C.P. DE PUERTO MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_C.P. DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_C.P. DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_C.P. LA SERENA LA SERENA DE COQUIMBO",
 "Local_C.P. RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_C.P.F. DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_C.P.F. DE SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CASA DEL ENCUENTRO CIUDADANO Y GIMNASIO ANDACOLLO DE COQUIMBO",
 "Local_CASINO PARQUE LOS TACOS COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO CIVICO EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO COMUNITARIO SERGIO SILVA ACUNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL COPIAPO DE ATACAMA",
 "Local_CENTRO CULTURAL EL TRANQUE LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L3 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE CAPACITACION LABORAL REINO DE BELGICA ARICA DE ARICA Y PARINACOTA",
 "Local_CENTRO DE EDUCACION INTEGRADA DE ADULTOS COPIAPO DE ATACAMA",
 "Local_CENTRO DE EDUCACION PAULA JARAQUEMADA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EDUCACION TECNICO PROFESIONAL CODEDUC MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE FORMACION ACADEMICA PERFECTO DE LA FUENTE DEL VILLAR RINCONADA DE VALPARAISO",
 "Local_CENTRO DEPORTIVO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_CENTRO DEPORTIVO ROLF NATHAN LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUC.ADULTOS LUIS MOLL BRIONES VALDIVIA DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL AMERICO VESPUCIO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL AQUELARRE LICEO BICENTENARIO TENO DEL MAULE",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BICENTENARIO ALTOS DE TOME TOME DEL BIOBIO",
 "Local_CENTRO EDUCACIONAL CARDENAL JOSE MARIA CARO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DIEGO DE ALMAGRO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DOCTOR AMADOR NEGHME R. ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L1 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L2 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ERNESTO YANEZ RIVERA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ESCRITORES DE CHILE RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL GOYENECHEA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ISLA DE MAIPO ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL JOSE MIGUEL CARRERA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LARUN RAYUN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LAURA VICUNA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO LATORRE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MILLANTU MACUL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MIRADOR SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL NUEVA CREACION PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PADRE ALBERTO HURTADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PIAMARTINO CAROLINA LLONA DE CUEVAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL POETA EUSEBIO LILLO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PRINCIPADO DE ASTURIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PROVINCIA DE NUBLE SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ROUSSEAU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN ANDRES MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN LORENZO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN RAMON SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN SEBASTIAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL SANTA CLARA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL VALLE HERMOSO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO FERNANDO SANTIVAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCATIVO FLORIDA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REINO DE SUECIA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REPUBLICA MEXICANA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO SIGLO XXI PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO INTEGRADO DE EDUCACION ESPECIAL CONCEPCION DEL BIOBIO",
 "Local_CENTRO POLITECNICO PARTICULAR DE NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE-LA PINTANA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COL. DE ARTES, CIENCIA Y TEC. DA VINCI PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO ABATE MOLINA LONGAVI DEL MAULE",
 "Local_COLEGIO ACADEMIA TARAPACA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ACHIGA COMEDUC LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ACONCAGUA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ACROPOLIS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ADOLFO BEYZAGA OVANDO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ADVENTISTA DE TEMUCO SEDE LOS CREADORES TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO ADVENTISTA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ADVENTISTA SANTIAGO SUR SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AGRICOLA CUNCUMEN GONZALO BARROS AMUNATEGUI SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO AGUSTIN EDWARDS VALPARAISO DE VALPARAISO",
 "Local_COLEGIO AJIAL RETIRO DEL MAULE",
 "Local_COLEGIO ALBERTO BLEST GANA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA BASICA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO SEGUNDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ALBERTO MOLINA CASTILLO PARRAL DEL MAULE",
 "Local_COLEGIO ALBERTO PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBORADA DEL MAR CONCON DE VALPARAISO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LOS ALTOS DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEMAN DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ALEMAN DE CONCEPCION SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO ALEMAN DE SANTIAGO LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEXANDER FLEMING VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO ALICANTE DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL VALLE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMA MATER LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMONDALE LOMAS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO ALONKURA HUALPEN DEL BIOBIO",
 "Local_COLEGIO ALONSO DE ERCILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE BAQUEDANO) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE RITOQUE) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALTA CORDILLERA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO ALTAS CUMBRES PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO ALTAZOR CONCON DE VALPARAISO",
 "Local_COLEGIO ALTAZOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTO LAUQUEN LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO ALTO PALENA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTOMONTE L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO AMANECER CORONEL CORONEL DEL BIOBIO",
 "Local_COLEGIO AMANECER TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO AMERICA VILCUN DE LA ARAUCANIA",
 "Local_COLEGIO ANA MARIA JANER VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ANDREE ENGLISH SCHOOL LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANDRES BELLO MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ANGEL DE PEREDO LOTA DEL BIOBIO",
 "Local_COLEGIO ANGLO MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTAMARA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ANTARTICA CHILENA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO ANTONIO ACEVEDO HERNANDEZ PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTONIO VARAS VICUNA DE COQUIMBO",
 "Local_COLEGIO ANTU LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTUPIREN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ARAUCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO COSTA MAUCO QUINTERO DE VALPARAISO",
 "Local_COLEGIO ARTISTICO ROBERTO MATTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO SANTA CECILIA EDUCACION MEDIA OSORNO DE LOS LAGOS",
 "Local_COLEGIO ARTURO EDWARDS (SEDE CARRERA) VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ARTURO PRAT CHACON LA SERENA DE COQUIMBO",
 "Local_COLEGIO ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ARTURO PRAT PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ATENAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AUGUSTO WINTER TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO AURORA DE CHILE CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AURORA DE CHILE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO AURORA DE CHILE SUR CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AUSTRALIA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BAJO MOLLE IQUIQUE DE TARAPACA",
 "Local_COLEGIO BALMACEDA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BASICO ARAGON ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO BASICO CONSOLIDADO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO DE CHEPICA CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO NUEVA LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO SAN VICENTE TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO VILLA ACERO HUALPEN DEL BIOBIO",
 "Local_COLEGIO BASICO VIOLETA PARRA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BATALLA DE LA CONCEPCION EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BELLAVISTA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BENJAMIN VICUNA MACKENNA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BERNARDA MORIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO BERNARDO FELMER NIKLITSCHEK LANCO DE LOS RIOS",
 "Local_COLEGIO BETANIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO BICENTENARIO APRENDER LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO CABILDO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO ESPANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO BICENTENARIO LIONS SCHOOL L1 CARTAGENA DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO MATILDE HUICI NAVAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO PADRE ALBERTO HURTADO CHILLAN DE NUBLE",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L1 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L2 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO POLITECNICO ALEMAN ALBERT EINSTEIN CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO SANTO CURA DE ARS SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BLANCO ENCALADA CAUQUENES DEL MAULE",
 "Local_COLEGIO BORDEMAR VALPARAISO DE VALPARAISO",
 "Local_COLEGIO BOSQUEMAR PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO BOSQUES DE GAIA CONSTITUCION DEL MAULE",
 "Local_COLEGIO BRASILIA L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L1 CONCON DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L2 CONCON DE VALPARAISO",
 "Local_COLEGIO BUEN PASTOR COPIAPO DE ATACAMA",
 "Local_COLEGIO CALAMA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CALETA SAN PEDRO LA SERENA DE COQUIMBO",
 "Local_COLEGIO CAMILO HENRIQUEZ CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CAMILO HENRIQUEZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN PASTENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL ANTONIO SAMORE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL CARLOS OVIEDO CAVADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA LA SERENA DE COQUIMBO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO CARLOS COUSINO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CATOLICO NAZARET ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO CERRO GUAYAQUIL MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO CHAMPAGNAT L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHAMPAGNAT L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHARLES DARWIN VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHILE NORTE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHRISTIAN GARDEN SCHOOL LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHUQUICAMATA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CIRUJANO PEDRO VIDELA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CIUDAD DE FRANKFORT SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CLARA BRINCEFIELD PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COLEGIO CLEMENTINOS SAN CLEMENTE DEL MAULE",
 "Local_COLEGIO COLONIAL DE PIRQUE PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO COMPANIA DE MARIA PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CONCEPCION CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO CONCEPCION DE CHILLAN L1 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION DE CHILLAN L2 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION LOS HUERTOS SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO CONFEDERACION SUIZA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CORDILLERA DE LOS ANDES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COSTA CORDILLERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO COYAM CHILLAN DE NUBLE",
 "Local_COLEGIO CREACION CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CREACIONES LA ARAUCANA PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO CRECER PURRANQUE DE LOS LAGOS",
 "Local_COLEGIO CUMBRES DE BOCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO D-91 CENTENARIO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DARIO SALAS PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO DARIO SALAS TALCA DEL MAULE",
 "Local_COLEGIO DE ADMINISTRACION Y COMERCIO EL INGENIO OVALLE DE COQUIMBO",
 "Local_COLEGIO DE APLICACION TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO DE ARTES CLAUDIO ARRAU COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DE CULTURA Y DIFUSION ARTISTICA LA UNION DE LOS RIOS",
 "Local_COLEGIO DE HUMANIDADES DE VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO DE LA PROVIDENCIA CARMELA LARRAIN DE INFANTE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LA PURISIMA CONCEPCION CHILLAN DE NUBLE",
 "Local_COLEGIO DE LA SALLE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES HUALPEN DEL BIOBIO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MAIPO BUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MUSICA JUAN SEBASTIAN BACH VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DE NINAS CANADA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DEL ALBA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DEL REAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEPORTIVO MUNICIPAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DEPORTIVO SANTIAGO ESCUTI ORREGO L1 QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DIEGO DUBLE URRUTIA ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO DIEGO PORTALES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIEGO THOMPSON CURICO DEL MAULE",
 "Local_COLEGIO DIFERENCIAL MADRE TIERRA LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIFERENCIAL PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DISCOVERY SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DIVINA PASTORA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR LUIS SEPULVEDA SALVATIERRA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR MANUEL AVILES INOSTROZA LICANTEN DEL MAULE",
 "Local_COLEGIO DOMINGO EYZAGUIRRE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOMINGO MATTE MESIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DON ORIONE LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO DON ORIONE QUINTERO DE VALPARAISO",
 "Local_COLEGIO ECHAURREN ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL ALBA DE MACUL MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL BOLDO CURICO DEL MAULE",
 "Local_COLEGIO EL LABRADOR VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO EL MELON L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO EL NARANJAL RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO EL QUISCO EL QUISCO DE VALPARAISO",
 "Local_COLEGIO EL REFUGIO PENCO DEL BIOBIO",
 "Local_COLEGIO EL SEMBRADOR ANEXO 2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL SEMBRADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL TABO L1 EL TABO DE VALPARAISO",
 "Local_COLEGIO EL TABO L2 EL TABO DE VALPARAISO",
 "Local_COLEGIO ELENA BETTINI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ELVIRA HURTADO DE MATTE DE SANTIAGO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EMPRENDER ENSENANZA MEDIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO EMPRENDER OBISPO ALVEAR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ESPANA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ESPANA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ESPANA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO ESPERANZA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ESPIRITU SANTO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ETCHEGOYEN TALCAHUANO SEDE BRISAS DEL SOL TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO EVEREST LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXTREMADURA DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EYZAGUIRRE MEDIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FAMILIA DE NAZARETH LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FERNANDO DURAN VILLARREAL QUILPUE DE VALPARAISO",
 "Local_COLEGIO FILIPENSE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FINLANDIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FOR LIFE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO FORESTAL DE QUILACAHUIN SAN PABLO DE LOS LAGOS",
 "Local_COLEGIO FRANCIS SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO FRANCISCO DE ASIS PINTO DE NUBLE",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L1 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L2 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO PALAU LA SERENA DE COQUIMBO",
 "Local_COLEGIO FRATERNIDAD SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO GABRIELA MISTRAL MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GALVARINO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO GENERAL JOSE VELASQUEZ BORQUEZ L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO GERMANIA DEL VERBO DIVINO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO GERONIMO DE ALDERETE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GERONIMO RENDIC LA SERENA DE COQUIMBO",
 "Local_COLEGIO GIUSEPPE BERTOLUZZI DE FELIP SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GOBERNADOR CONCHA Y SALVATIERRA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO GRACE COLLEGE L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE COLLEGE L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE SCHOOL PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRAN BRETANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO GUARDIAMARINA GUILLERMO ZANARTU IRIGOYEN QUILPUE DE VALPARAISO",
 "Local_COLEGIO HARAS LOS CONDORES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HAYDN DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HELLEN KELLER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERMANO FERNANDO DE LA FUENTE SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO HERNAN OLGUIN LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERNANDO DE MAGALLANES ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HEROES DE LA CONCEPCION LA SERENA DE COQUIMBO",
 "Local_COLEGIO HISPANO AMERICANO RIO VIEJO CHILLAN DE NUBLE",
 "Local_COLEGIO HISPANO VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO HISPANOAMERICANO VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO HUELEN VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO IGNACIO CARRERA PINTO VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO INFOCAP SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INGLES IQUIQUE DE TARAPACA",
 "Local_COLEGIO INGLES SAN JOSE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INGLES WOODLAND LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA CONCEPCION NUESTRA SENORA DE LOURDES PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA DE LOURDES L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INMACULADA DE LOURDES L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INNOV-ARTE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO INSTITUCION TERESIANA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUCION TERESIANA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUTO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO INSTITUTO SANTA MARIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INTEGRADO EDUARDO FREI MONTALVA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ITALIANO SANTA ANA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JACQUES COUSTEAU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JACQUES COUSTEAU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JESUS ANDINO CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JESUS SERVIDOR PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOHN WALL HOLCOMB ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JORGE HUNEEUS ZEGERS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JORGE PRIETO LETELIER PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE ANTONIO MANSO DE VELASCO RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JOSE ARRIETA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE MANUEL BALMACEDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL CARRERA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL INFANTE QUILPUE DE VALPARAISO",
 "Local_COLEGIO JOSEFINO SANTISIMA TRINIDAD PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JUAN PABLO II CUNCO DE LA ARAUCANIA",
 "Local_COLEGIO JUAN TACHOIRE MOENA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JUAN XXIII VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO JUANITA FERNANDEZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO JUANITA FERNANDEZ L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO LA GIROUETTE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LA HERRADURA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO LA PAZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LA PROVIDENCIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO LAS AMERICAS L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO LAS RASTRAS TALCA DEL MAULE",
 "Local_COLEGIO LAURA VICUNA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LEONARDO DA VINCI ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO LEONARDO DA VINCI DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LEONARDO DA VINCI L1 LA CRUZ DE VALPARAISO",
 "Local_COLEGIO LEONARDO DA VINCI RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LEONARDO MURIALDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO LIAHONA PUCON DE LA ARAUCANIA",
 "Local_COLEGIO LIAHONA QUILPUE DE VALPARAISO",
 "Local_COLEGIO LIBERTADOR SAN MARTIN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LICARAYEN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ERRAZURIZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LORENZO MONDANELLI COIHUECO DE NUBLE",
 "Local_COLEGIO LORENZO SAZIE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO LOS ALPES MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ANDES DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS CONDORES TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO LOS CONQUISTADORES CURICO DEL MAULE",
 "Local_COLEGIO LOS CONQUISTADORES VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LOS EDUCADORES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO LOS LIBERTADORES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS LLANOS MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LOS REYES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS ROBLES DE LABRANZA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO LUIS CRUZ MARTINEZ LA LIGUA DE VALPARAISO",
 "Local_COLEGIO LUIS GALDAMES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MADRE ADMIRABLE DE SCHOENSTATT TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MADRE ANA EUGENIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE ANA EUGENIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE PAULINA CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO MADRES DOMINICAS CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MAHATMA GANDHI IQUIQUE DE TARAPACA",
 "Local_COLEGIO MAIPO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANANTIAL VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MANQUECURA CIUDAD DE LOS VALLES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA VALLE LO CAMPINO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANUEL BULNES PRIETO QUILPUE DE VALPARAISO",
 "Local_COLEGIO MANUEL FRANCISCO CORREA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL MONTT VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO MANUEL RODRIGUEZ ERDOIZA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARGOT LOYOLA PALACIOS LINARES DEL MAULE",
 "Local_COLEGIO MARIA ANA MOGAS PAINE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA AUXILIADORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MARIA AUXILIADORA PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_COLEGIO MARIA AUXILIADORA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO MARIA EDUCA  SEDE LAS PARCELA LA SERENA DE COQUIMBO",
 "Local_COLEGIO MARIA EDUCA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO MARIA ELENA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA INMACULADA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARIA INMACULADA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO MARIA SYLVESTER RASCH ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO MARIA TERESA CANCINO AGUILAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA VILLALOBOS ARTEAGA OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARIE POUSSEPIN PUTAENDO DE VALPARAISO",
 "Local_COLEGIO MARINA DE CHILE CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARISTA HERMANO FERNANDO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MASTERS COLLEGE VALDIVIA DE LOS RIOS",
 "Local_COLEGIO MATER DEI CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELFORD COLLEGE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MERRYLAND PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO METODISTA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO METODISTA WILLIAM TAYLOR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MINERAL EL TENIENTE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MINISTRO DIEGO PORTALES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MIRADOR DEL LAGO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO MIRAFLORES D-329 L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MIRAMAR ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO MIXTO INMACULADA CONCEPCION TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO MONSENOR JAIME LARRAIN BUNSTER MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTANER DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTESSORI SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTEVERDE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MOUNTAIN GREEN SCHOOL PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO MULTICULTURAL RAYEN MAPU CURICO DEL MAULE",
 "Local_COLEGIO MUNDO MAGICO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MUNICIPAL DIVINA GABRIELA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL EDUARDO DE GEYTER RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL HUALLILEN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MUSTAFA KEMAL ATATURK LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NACIONAL L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO NACIONAL L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONAL L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONES UNIDAS LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NAVARRA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NERUDA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NEW LITTLE COLLEGE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVA TERRA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVO MUNDO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE LA PRESENTACION MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL CARMEN DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL ROSARIO LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA ALERCE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO NUEVA BRAUNAU PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI SEDE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA PROVIDENCIA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO NUEVO HORIZONTE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVO MILENIO L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVO MILENIO L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVOS HORIZONTES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO OZANAM L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO OZANAM L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PABLO GARRIDO VARGAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO PABLO NERUDA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PABLO NERUDA PARRAL DEL MAULE",
 "Local_COLEGIO PABLO NERUDA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PADRE JOSE KENTENICH PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALESTINO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALMARES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARQUE CENTRAL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PARQUE LAS AMERICAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SANTA MARIA GORETTI CONCON DE VALPARAISO",
 "Local_COLEGIO PART. SUB. CUMBRES DEL CHOAPA SALAMANCA DE COQUIMBO",
 "Local_COLEGIO PARTICULAR ALBERTO BLEST GANA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO PARTICULAR AURORA DE CHILE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO PARTICULAR EVANGELICO BETANIA CHILLAN DE NUBLE",
 "Local_COLEGIO PARTICULAR IGNACIO CARRERA PINTO L1 OLMUE DE VALPARAISO",
 "Local_COLEGIO PARTICULAR LEONARDO DA VINCI COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PARTICULAR MARTA BRUNET LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO PARTICULAR POLITECNICO EYZAGUIRRE BASICA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARTICULAR SAN JOSE LA SERENA DE COQUIMBO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PATRONA SENORA DE LOURDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO AGUIRRE CERDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO PEDRO APOSTOL PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO DE VALDIVIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO MONTT C-100 L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PELCHUQUIN MARIQUINA DE LOS RIOS",
 "Local_COLEGIO PICHASCA RIO HURTADO DE COQUIMBO",
 "Local_COLEGIO PIERRE TEILHARD DE CHARDIN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POLITECNICO SAN JOSE CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE DOMINGO PARRA CORVALAN CORONEL DEL BIOBIO",
 "Local_COLEGIO POLIVALENTE JAPON CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE LAS CAMELIAS RETIRO DEL MAULE",
 "Local_COLEGIO POLIVALENTE PRESIDENTE JOSE MANUEL BALMACEDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POMAIRE MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALIANO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRESIDENTE PEDRO AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO PRESTON SCHOOL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PROCERES DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROFESOR ILDEFONSO CALDERON PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROVIDENCIA DEL SAGRADO CORAZON TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PROVIDENCIA PARRAL DEL MAULE",
 "Local_COLEGIO PUERTO VARAS PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE CHICAUMA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PUMAHUE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PUMAHUE VALPARAISO DE VALPARAISO",
 "Local_COLEGIO QUILLON QUILLON DE NUBLE",
 "Local_COLEGIO QUITALMAHUE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO RAKIDUAM COQUIMBO DE COQUIMBO",
 "Local_COLEGIO RAMON ANGEL JARA LOS MUERMOS DE LOS LAGOS",
 "Local_COLEGIO RAYEN CAVEN CONCON DE VALPARAISO",
 "Local_COLEGIO REBECA FERNANDEZ VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REDLAND SCHOOL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REGINA PACIS PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REMODELACION SIMONS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO REPUBLICA ARGENTINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE CHILE DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO REPUBLICA DE CHILE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO REPUBLICA DE COLOMBIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE CROACIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE GUATEMALA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE ITALIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE MEXICO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE MEXICO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO RIACHUELO RIO NEGRO DE LOS LAGOS",
 "Local_COLEGIO RIO GRANDE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO ROBERTO BRAVO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ROSA ELVIRA MATTE DE PRIETO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ROSITA NOVARO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO RUBEN CASTRO VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO RUCALHUE HUALPEN DEL BIOBIO",
 "Local_COLEGIO RUPANIC SCHOOL ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS DE LA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS SAN CARLOS DE NUBLE",
 "Local_COLEGIO SAGRADOS CORAZONES MONJAS FRANCESAS VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAINT GEORGE'S L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT GEORGE'S L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT LOUIS SCHOOL TILTIL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT MARY LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAINT MATTHEW VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO SAINT MAURICES CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT PATRICK SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAINT-LAWRENCE QUILPUE DE VALPARAISO",
 "Local_COLEGIO SALESIANO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SALESIANO DON BOSCO IQUIQUE IQUIQUE DE TARAPACA",
 "Local_COLEGIO SALESIANO EL PATROCINIO DE SAN JOSE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SALESIANO SANTO DOMINGO SAVIO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SALESIANOS VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SAN ADRIAN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN AGUSTIN L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO CONSTITUCION DEL MAULE",
 "Local_COLEGIO SAN ALBERTO HURTADO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANDRES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN BUENAVENTURA CHILLAN DE NUBLE",
 "Local_COLEGIO SAN CARLOS DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CAYETANO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CONSTANTINO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CRISTOBAL APOSTOL PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN DAMIAN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ESTEBAN DE BULNES - ANEXO BASICA BULNES DE NUBLE",
 "Local_COLEGIO SAN FELIPE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FERNANDO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS CHOLCHOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN FRANCISCO DE ASIS DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TECNICO PROFESIONAL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAN GABRIEL ARCANGEL LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAN GUILLERMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN HERNALDO PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO SAN ISAAC JOGUES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOAQUIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAN JOSE ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN JOSE CALLE LARGA DE VALPARAISO",
 "Local_COLEGIO SAN JOSE DE CHICUREO COLINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE RENCA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE MARIQUINA DE LOS RIOS",
 "Local_COLEGIO SAN JUAN DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO DE GUADALUPE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUCAS DE LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUIS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SAN MARCOS MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN MARCOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COLEGIO SAN MARCOS VALDIVIA DE LOS RIOS",
 "Local_COLEGIO SAN MATEO OSORNO DE LOS LAGOS",
 "Local_COLEGIO SAN MIGUEL DE LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN NICOLAS HIJUELAS DE VALPARAISO",
 "Local_COLEGIO SAN NICOLAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAN PATRICIO CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VICENTE DE PAUL CHILLAN DE NUBLE",
 "Local_COLEGIO SANTA BARBARA H.S. QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BEATRIZ PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BERNARDITA TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO SANTA CATALINA LABOURE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA CRUZ DE FREIRE FREIRE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA CRUZ DE LONCOCHE LONCOCHE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA EUFRASIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA FAMILIA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO SANTA FILOMENA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA ISABEL L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO SANTA ISABEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA JUANA DE ARCO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO SANTA LUISA DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA MARIA DE ACONCAGUA SANTA MARIA DE VALPARAISO",
 "Local_COLEGIO SANTA MARIA DE LA CORDILLERA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE LA PROVIDENCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA SABINA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA SOFIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE JESUS DE LOS ANDES HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE LOS ANDES MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA TERESA DE LOS MORROS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA URSULA VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO - QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO DOMINGO HELEN LEE LASSEN SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO SANTO TOMAS DE AQUINO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS DE TALCA MAULE DEL MAULE",
 "Local_COLEGIO SANTO TOMAS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAUCACHE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SCOLE CREARE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SEBASTIAN ELCANO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEBASTIAN ELCANO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L1 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L2 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SENDA DEL SABER PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SIMON BOLIVAR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SIMON BOLIVAR LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SUYAI MAULE DEL MAULE",
 "Local_COLEGIO SYDNEY COLLEGE CHILLAN DE NUBLE",
 "Local_COLEGIO TECNICO INDUSTRIAL DON BOSCO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO TECNICO PROFESIONAL HONORIO OJEDA VALDERAS LA UNION DE LOS RIOS",
 "Local_COLEGIO TECNICO PROFESIONAL LOS ACACIOS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO TECNICO PROFESIONAL MISION SAN JUAN DE LA COSTA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_COLEGIO TECNICO PROFESIONAL NOCEDAL LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TECNICO PROFESIONAL PIEDRA AZUL PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO TECNOLOGICO DARIO SALAS CHILLAN VIEJO DE NUBLE",
 "Local_COLEGIO TECNOLOGICO DON BOSCO DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO TENIENTE HERNAN MERINO CORREA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO TERESA DE LOS ANDES-ALGARROBO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERRAUSTRAL DEL SOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE KENT SCHOOL PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE PACIFIC SCHOOL CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO TOMAS MORO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UMBRAL DE CURAUMA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VALLE DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO VICENTE VALDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VICHUQUEN CURICO DEL MAULE",
 "Local_COLEGIO VICTOR DOMINGO SILVA LA SERENA DE COQUIMBO",
 "Local_COLEGIO VILLA CARTAGO CARTAGENA DE VALPARAISO",
 "Local_COLEGIO VILLA MARIA ACADEMY L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA MARIA ACADEMY L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA NONGUEN CONCEPCION DEL BIOBIO",
 "Local_COLEGIO WINDSOR SCHOOL VALDIVIA DE LOS RIOS",
 "Local_COLEGIO WINTERHILL VINA DEL MAR DE VALPARAISO",
 "Local_COMPLEJO DEPORTIVO SAUCACHE UNIVERSIDAD DE TARAPACA ARICA DE ARICA Y PARINACOTA",
 "Local_COMPLEJO EDUCACIONAL ALBERTO WIDMER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARDENAL ANTONIO SAMORE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARLOS HOLZAPFEL PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL CERRO NAVIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CHIMBARONGO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L1 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L2 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL COLLIPULLI COLLIPULLI DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL DARIO SALAS DIAZ CARAHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL ESPERANZA MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL FELIPE HERRERA LANE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL IGNAO LAGO RANCO DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL JOAQUIN EDWARDS BELLO MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JOSE MIGUEL CARRERA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JUAN SCHLEYER FREIRE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUAN XXIII LONCOCHE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUANITA FERNANDEZ SOLAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA FRONTERA TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA GRANJA VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION BASICA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LAS ACACIAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LUIS DURAND DURAND TRAIGUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MAIPU ANEXO RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MANUEL PLAZA REYES LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MARTIN KLEINKNECHT TOLTEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR FRANCISCO VALDES SUBERCASEAUX CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR GUILLERMO HARTL PITRUFQUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MUNICIPAL BRIGIDA WALKER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL NUEVA ALBORADA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PABLO SEXTO PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE LAS CASAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE NICOLAS VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE OSCAR MOSER PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL PENCAHUE PENCAHUE DEL MAULE",
 "Local_COMPLEJO EDUCACIONAL PRINCIPE DE GALES NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL RUKA NGEN CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SAN AGUSTIN VILLARRICA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SARGENTO ALDEA L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL TIERRA DE ESPERANZA PANGUIPULLI DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL UNION AMANECER TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL VICTORIA VICTORIA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCATIVO CARACOLES SIERRA GORDA DE ANTOFAGASTA",
 "Local_COMPLEJO EDUCATIVO JUAN JOSE LATORRE BENAVENTE MEJILLONES DE ANTOFAGASTA",
 "Local_CORPORACION DOCENTE SAINT DOMINIC L1 VINA DEL MAR DE VALPARAISO",
 "Local_CORPORACION EDUCACIONAL COLEGIO INGLES DE TALCA TALCA DEL MAULE",
 "Local_DENVER COLORADO SCHOOL EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_DINABEC COLLEGE SAN CARLOS DE NUBLE",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DUOC UC, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_DUOC UC, SEDE VINA DEL MAR L2 VINA DEL MAR DE VALPARAISO",
 "Local_EDUCADOR ARTURO ALVEAR RAMOS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESC. BASICA MARTA EMILIANA AGUILAR ZERON TIERRA AMARILLA DE ATACAMA",
 "Local_ESC. BASICA PARTICULAR SAN PABLO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESC. DE CONCENTRACION FRONTERIZA DOROTEA NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESC. HEBERTO VELAZQUEZ VELAZQUEZ OVALLE DE COQUIMBO",
 "Local_ESC.BASICA CAPITAN RAFAEL TORREBLANCA VALLENAR DE ATACAMA",
 "Local_ESCUELA  BERNARDO O'HIGGINS RIQUELME TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA  G-582 COIPUE FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA 04 DE OCTUBRE CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA 10 ANGELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 1287 SAN MARCOS APOSTOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA 21 DE MAYO SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA 7 ARABE-SIRIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 88 CANADA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ABRAHAM SEPULVEDA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA ACAPULCO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADELAIDA LA FETRA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADOLFO QUIROZ HERNANDEZ CAUQUENES DEL MAULE",
 "Local_ESCUELA ADVENTISTA DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_ESCUELA AGUAS Y GAVIOTAS TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA ALBERT EINSTEIN PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBERTO HURTADO PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA ALBORADA DE TALAGANTE TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBORADA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA ALCALDE MAXIMILIANO POBLETE CORTES ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ALCIDES REYES FRIAS L1 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALCIDES REYES FRIAS L2 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALEJANDRO CHELEN ROJAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA ALEJANDRO GIDI LINARES DEL MAULE",
 "Local_ESCUELA ALEJANDRO GOROSTIAGA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ALEJANDRO PEREZ URBANO TUCAPEL DEL BIOBIO",
 "Local_ESCUELA ALEMANIA PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ALEMANIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ALERCE HISTORICO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA ALESSANDRI CURICO DEL MAULE",
 "Local_ESCUELA ALGARROBAL COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIANZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALICIA ARIZTIA DE SILVA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIRO LAMAS CASTILLO DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ALIVEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALLIPEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH IQUIQUE DE TARAPACA",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH PENCO DEL BIOBIO",
 "Local_ESCUELA ALMIRANTE SIMPSON AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ALONSO DE ERCILLA LA SERENA DE COQUIMBO",
 "Local_ESCUELA ALONSO DE ERCILLA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ALTO CABRERO CABRERO DEL BIOBIO",
 "Local_ESCUELA ALTO PANGUE SAN RAFAEL DEL MAULE",
 "Local_ESCUELA AMANDA LABARCA HUBERSTONE CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA AMERICA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA AMERICA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ANA FRANK QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDALIEN DE COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDES DEL SUR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDRES ALCAZAR LAJA DEL BIOBIO",
 "Local_ESCUELA ANDRES BELLO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ANEXA ANCUD DE LOS LAGOS",
 "Local_ESCUELA ANGACHILLA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ANIBAL PINTO CAUQUENES DEL MAULE",
 "Local_ESCUELA ANTILHUE DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANTONIO DE ZUNIGA PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTONIO TIRADO LANAS OVALLE DE COQUIMBO",
 "Local_ESCUELA ANTONIO TREDAN ARKO GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTUMALAL QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AONIKENK RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ARAUCARIAS DE CHILE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARGENTINA CURICO DEL MAULE",
 "Local_ESCUELA ARMANDO ARANCIBIA OLIVOS LEBU DEL BIOBIO",
 "Local_ESCUELA ARNALDO FALABELLA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARRAU MENDEZ PARRAL DEL MAULE",
 "Local_ESCUELA ARTISTICA ARMANDO DUFEY BLANC TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTISTICA VIOLETA PARRA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_ESCUELA ARTURO EBENSPERGER RICHTER LEBU DEL BIOBIO",
 "Local_ESCUELA ARTURO HUGHES CERNA CORONEL DEL BIOBIO",
 "Local_ESCUELA ARTURO MATTE LARRAIN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO MERINO BENITEZ CHILLAN DE NUBLE",
 "Local_ESCUELA ARTURO PEREZ CANTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT CHACON CANETE DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ARTURO PRAT CHACON SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ARTURO PRAT TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTURO VILLALON SIEULANNE OVALLE DE COQUIMBO",
 "Local_ESCUELA ATENAS OLMUE DE VALPARAISO",
 "Local_ESCUELA ATENEA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE TALCA DEL MAULE",
 "Local_ESCUELA AURORA SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA AVIADOR DAGOBERTO GODOY F. CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AVIADORES EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AYTUE CASTRO DE LOS LAGOS",
 "Local_ESCUELA BABILONIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BALMACEDA SAAVEDRA LAULHERE CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BAQUEDANO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BARBA RUBIA HUALANE DEL MAULE",
 "Local_ESCUELA BARBARA KAST RIST PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BARRAZA BAJO OVALLE DE COQUIMBO",
 "Local_ESCUELA BASE EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA 11 DE SEPTIEMBRE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA 21 DE MAYO CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ABEL GUERRERO AGUIRRE QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA AGUA DE LA GLORIA CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA AMANECER RIO HURTADO DE COQUIMBO",
 "Local_ESCUELA BASICA AMELIA GODOY PENA LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA AMERICA COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA ANGELINA SALAS OLIVARES CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA ANTUPILLAN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA ARTURO ALESSANDRI PALMA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA ARTURO PRAT TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLAVISTA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLO HORIZONTE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA BENJAMIN MATTE LARRAIN HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA BERNARDO O'HIGGINS RIQUELME OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA BOCA BIO BIO SUR SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA BRISAS DEL MAR ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA BUCHUPUREO COBQUECURA DE NUBLE",
 "Local_ESCUELA BASICA BUENA VISTA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CACIQUE LEVIAN SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA CALETA DEL MEDIO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CAMILO MORI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CARILEUFU - CABURGUA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CATALUNYA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO SAN FRANCISCO TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CHACAYAL SUR LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA CHILLEPIN SALAMANCA DE COQUIMBO",
 "Local_ESCUELA BASICA CHORRILLOS E-323 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA CINCO GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CLARA ESTRELLA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CLAUDIO ARRAU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA COCHOLGUE F-426 TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CRISTO REDENTOR CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA CRISTOBAL COLON HUALPEN DEL BIOBIO",
 "Local_ESCUELA BASICA CRUZ DEL SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA D-318 UNESCO VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA BASICA DARIO SALAS E-423 QUILPUE DE VALPARAISO",
 "Local_ESCUELA BASICA DE CHANAVAYITA IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA DE CHILE CHICO CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA DE COLBUN COLBUN DEL MAULE",
 "Local_ESCUELA BASICA DE CORRAL CORRAL DE LOS RIOS",
 "Local_ESCUELA BASICA DICHATO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA EL CASINO QUILLON DE NUBLE",
 "Local_ESCUELA BASICA EL NOGAL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA EMILIA ROMAGNA TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA BASICA EMILIO SOTOMAYOR CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ENRIQUE BERNSTEIN CARABANTES SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ESCUELA BASICA ERCOLE BENCINI LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA ESPANA LINARES DEL MAULE",
 "Local_ESCUELA BASICA ESPANA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ESTACION BAQUEDANO SIERRA GORDA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ESTRELLA DEL SUR POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA FLORIDA FLORIDA DEL BIOBIO",
 "Local_ESCUELA BASICA FRANCISCO FORGIONE IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA FRONTERIZA HUARA DE TARAPACA",
 "Local_ESCUELA BASICA G-45 LA VEGA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA GABRIELA MISTRAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA GENERAL CRUZ PEMUCO DE NUBLE",
 "Local_ESCUELA BASICA GUALBERTO KONG FERNANDEZ VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA HECTOR JORQUERA VALENCIA CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA HEROES DE CHILE LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA HEROES DEL ITATA QUILLON DE NUBLE",
 "Local_ESCUELA BASICA HUMBERTO VILCHES ALZAMORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA ISABEL LA CATOLICA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA ITILHUE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA JAVIERA CARRERA CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA JOHN FITZGERALD KENNEDY CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JOHN KENNEDY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA JORGE ARACENA RAMOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA JOSE MANUEL BALMACEDA F. FUTRONO DE LOS RIOS",
 "Local_ESCUELA BASICA JOSE MARIA CARO RODRIGUEZ CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JOSE TOMAS OVALLE B. OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA JUAN LOPEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUAN LUIS SANFUENTES ANDONAEGUI RIO CLARO DEL MAULE",
 "Local_ESCUELA BASICA JUAN MADRID AZOLA CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JUAN PABLO II ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUANITA FERNANDEZ SOLAR COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA KAMAC MAYU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON A CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON B CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIMUN LAWAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LA AGUADA DE CUEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA CHOCOTA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA LA DAMA BLANCA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA LA LEYENDA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA PAMPILLA CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA LA PENA NOGALES DE VALPARAISO",
 "Local_ESCUELA BASICA LA QUEBRADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA RINCONADA DEL SALTO LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA SOMBRA HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA LA TIRANA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA LAFQUEN ICALMA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAGUNILLAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_ESCUELA BASICA LAS CAMELIAS PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LAS CRUCES EL TABO DE VALPARAISO",
 "Local_ESCUELA BASICA LAS HORTENSIAS - VILLA LAS HORTENSIAS CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAS PATAGUAS QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS QUINTAS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LICARAYEN GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LITORAL AUSTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA LO DE LOBO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA LO VELASQUEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS CERRILLOS CATEMU DE VALPARAISO",
 "Local_ESCUELA BASICA LOS CONQUISTADORES PENCO DEL BIOBIO",
 "Local_ESCUELA BASICA LOS HEROES DE YUNGAY LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS LIBERTADORES HUALQUI DEL BIOBIO",
 "Local_ESCUELA BASICA LOS MAITENES LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA LOS MOLLES LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA LOS NOGALES RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LOS PERALES GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LUCILA GODOY ALCAYAGA VICUNA DE COQUIMBO",
 "Local_ESCUELA BASICA LUIS ALBERTO ACEVEDO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MAITENCILLO PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA MALAL MAHUIDA - PEDREGOSO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA MAMINA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA MANUEL DE SALAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MARE NOSTRUM ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA MARIO MUNOZ SILVA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MERCEDES URZUA DIAZ PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA MICHAIHUE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MIL PAISAJES Y GIMNASIO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA MILLANTU LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA MINCHA NORTE CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA MIXTA LO CALVO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA MULCHEN MULCHEN DEL BIOBIO",
 "Local_ESCUELA BASICA MUNICIPAL ARAUCARIA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA NAHUELBUTA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NEHUENTUE CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO 1 LOS CACHORROS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO SEIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA ORLANDO DELGADO ZUNIGA LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA BASICA ORO NEGRO D-367 L1 CONCON DE VALPARAISO",
 "Local_ESCUELA BASICA OSCAR ARAYA MOLINA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA PAPUDO PAPUDO DE VALPARAISO",
 "Local_ESCUELA BASICA PATAGUAL CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA PATRICIO LYNCH RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA PATRICIO LYNCH VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA PEDRO LUJAN CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA PEDRO VERGARA KELLER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA PENINSULA DE TUMBES TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA PICHICUY LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA PLAYAS NEGRAS CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA POZO ALMONTE POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA PUEBLO SECO SAN IGNACIO DE NUBLE",
 "Local_ESCUELA BASICA PUNTA DE PARRA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA QUINCHAMALI CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RABUCO HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA RAFAEL TOME DEL BIOBIO",
 "Local_ESCUELA BASICA RENE ANDRADES TOLEDO CANETE DEL BIOBIO",
 "Local_ESCUELA BASICA RENE LOUVEL BERT CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE CHILE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ISRAEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA REPUBLICA DEL ECUADOR L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BLANCO LOS ANDES DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA ROBERTO CUADRA ALQUINTA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ROSITA O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RURAL EL YECO ALGARROBO DE VALPARAISO",
 "Local_ESCUELA BASICA SALVADOR ALLENDE ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN CARLOS CHONCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA SAN PEDRO DE ATACAMA SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA SAN PEDRO DE LARAQUETE ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA SAN RAFAEL DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA SAN SEBASTIAN DE MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN VICENTE DE LO ARCAYA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA SANTA INES PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA SANTA JULIA D-334 L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA SANTA MARIA DE GUADALUPE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA SECTOR ORIENTE QUELLON DE LOS LAGOS",
 "Local_ESCUELA BASICA SILVIO ZENTENO VERGARA L1 SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA TALCA DEL MAULE",
 "Local_ESCUELA BASICA TERESA CANNON DE BARRIOLHET. LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA THOMPSON MATTHEWS LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA UNION DE MUJERES AMERICANAS PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA VALENTIN LETELIER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA VALLE DE COLCURA LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA VALLE DEL CHOAPA ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VALLE LONQUEN TREGUACO DE NUBLE",
 "Local_ESCUELA BASICA VICTOR DURAN PEREZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VILLA COIGUE NEGRETE DEL BIOBIO",
 "Local_ESCUELA BASICA VILLA LOS NARANJOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VISTA VERDE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VOLCAN LLAIMA MELIPEUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA WENCESLAO VARGAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA BASICA YANGTSE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BAU LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELGICA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BELGICA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELLAVISTA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN CLARO VELASCO NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN VICUNA MACKENNA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO O HIGGINS COPIAPO DE ATACAMA",
 "Local_ESCUELA BERNARDO O'HIGGINS L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERNARDO O'HIGGINS RIQUELME (E-58) SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA BERNARDO OA'HIGGINS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO OA'HIGGINS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OA'HIGGINS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OHIGGINS SAN JAVIER DEL MAULE",
 "Local_ESCUELA BERTA SAAVEDRA SEGURA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERTOLDO HOFMANN KAHLER PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA BLANCA ESTELA PRAT CARVAJAL HUALPEN DEL BIOBIO",
 "Local_ESCUELA BLANCO ENCALADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BLAS CUEVAS RAMON ALLENDE D-307 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA BOROA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE LA FARFANA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRASILIA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRITANICA GUILLERMINA DRAKE WOOD COIHUECO DE NUBLE",
 "Local_ESCUELA BRUNO ZAVALA FREDES COPIAPO DE ATACAMA",
 "Local_ESCUELA BUENA ESPERANZA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA CACIQUE COLIN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CADETE ARTURO PRAT CHACON SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CALICANTO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMILO HENRIQUEZ CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DE MAIPU - CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DEPORTIVOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA CANADA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CANAL BEAGLE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA CAPITAN ARTURO PRAT CHACON PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CAPITAN AVALOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JOSE LUIS ARANEDA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JUAN LADRILLERO NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CARDENAL JOSE MARIA CARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CARLOS ALBERTO FERNANDEZ CASTILLO HUALQUI DEL BIOBIO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL OSORNO DE LOS LAGOS",
 "Local_ESCUELA CARLOS FERNANDEZ PENA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS MARIA SAYAGO COPIAPO DE ATACAMA",
 "Local_ESCUELA CARLOS PRATS GONZALEZ HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS SALINAS LAGOS TALCA DEL MAULE",
 "Local_ESCUELA CARLOS SPANO TALCA DEL MAULE",
 "Local_ESCUELA CARLOS TRUPP WANNER TALCA DEL MAULE",
 "Local_ESCUELA CARMELA CARVAJAL DE PRAT SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA CARMEN GALLEGOS DE ROBLES SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CARMEN REVECO NUNEZ PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARMEN ROMERO AGUIRRE CARTAGENA DE VALPARAISO",
 "Local_ESCUELA CAROLINA VERGARA AYARES D-276 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CASAS VIEJAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CATALUNA CURICO DEL MAULE",
 "Local_ESCUELA CAYENEL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CENTENARIO IQUIQUE DE TARAPACA",
 "Local_ESCUELA CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CERRO ALTO JOSE OPAZO DIAZ CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHACARILLAS CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHARRUA CABRERO DEL BIOBIO",
 "Local_ESCUELA CHIAPA HUARA DE TARAPACA",
 "Local_ESCUELA CHILHUE QUEILEN DE LOS LAGOS",
 "Local_ESCUELA CHIPANA IQUIQUE DE TARAPACA",
 "Local_ESCUELA CIUDAD DE BARCELONA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD DE LYON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD SANTO DOMINGO DE GUZMAN CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLARA VIAL ORREGO LOS VILOS DE COQUIMBO",
 "Local_ESCUELA CLAUDIO ARRAU LEON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO ARRAU OSORNO DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO MATTE PEREZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA CLEMENTINA MAUREIRA ALMANZA COELEMU DE NUBLE",
 "Local_ESCUELA CLORINDO ALVEAR CAUQUENES DEL MAULE",
 "Local_ESCUELA CLUB HIPICO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA COLICO SUR CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA COLIN MAULE DEL MAULE",
 "Local_ESCUELA COLONIA ARABE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA COLONIA ESMERALDA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COLPANAO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA COMALLE TENO DEL MAULE",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L1 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L2 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMUNIDADES DE VALLE HERMOSO LA LIGUA DE VALPARAISO",
 "Local_ESCUELA CONCENTRACION RURAL SERGIO VERDUGO HERRERA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CONDORES DE PLATA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA DAVILA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONTRAMAESTRE CONSTANTINO MICALVI LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COPIHUE RETIRO DEL MAULE",
 "Local_ESCUELA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CORINTO PENCAHUE DEL MAULE",
 "Local_ESCUELA CORRALONES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA COSTA BLANCA CONSTITUCION DEL MAULE",
 "Local_ESCUELA CRISTINA DURAN QUILLOTA DE VALPARAISO",
 "Local_ESCUELA CRISTO DEL MAIPO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA CROACIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CUYUNCAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-10 GENERAL JOSE MIGUEL CARRERA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-11 MANUEL RODRIGUEZ ERDOYZA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-114 GENERAL BERNALES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-12 ROMULO PENA MATURANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-14 REGIMIENTO RANCAGUA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-16 SUBTENIENTE LUIS CRUZ MARTINEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-18 HUMBERTO VALENZUELA GARCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-314 JOAQUIN EDWARDS BELLO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA D-4 REPUBLICA DE ISRAEL ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-6 REPUBLICA DE FRANCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-7 GENERAL PEDRO LAGOS MARCHANT ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA DAFNE ELVIRA ZAPATA ROZAS PEMUCO DE NUBLE",
 "Local_ESCUELA DAGOBERTO GODOY - SAN PATRICIO VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA DARIO SALAS DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DARIO SALAS MARCHANT SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA DARIO SALAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA DE ARTES ESCENICAS PROFESOR ELMO FUNEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DE ARTES Y CULTURA OSORNO Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA DE ARTES Y MUSICA OVALLE DE COQUIMBO",
 "Local_ESCUELA DE CONCENTRACION D-43, LOS LOROS TIERRA AMARILLA DE ATACAMA",
 "Local_ESCUELA DE CONCENTRACION FRONTERIZA RALCO ALTO BIOBIO ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA DE DESARROLLO ARTISTICO CALDERA DE ATACAMA",
 "Local_ESCUELA DE EDUCACION GENERAL BASICA MONSENOR ENRIQUE CORNEJO SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA DE INGENIERIA QUIMICA PUCV VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DE LA INDUSTRIA GRAFICA HECTOR GOMEZ SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LAS ROJAS LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE LENGUAJE CAMINA ALTO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LIUCURA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA DE MAITENCILLO YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA DE NIEBLA JUAN BOSCH VALDIVIA DE LOS RIOS",
 "Local_ESCUELA DE PENUELAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA DE PUERTO HARRIS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DE ROMERO LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE TRIPULANTES Y PORTUARIA DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DEIDAMIA PAREDES BELLO SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA DELFINA ALARCON HENRIQUEZ QUILPUE DE VALPARAISO",
 "Local_ESCUELA DELICIO CARDENAS BUSTAMANTE Y GIMNASIO SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA DEPORTIVA OSORNO (EX LAGO RUPANCO) OSORNO DE LOS LAGOS",
 "Local_ESCUELA DIECIOCHO DE SEPTIEMBRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DIEGO PORTALES D 475 TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES P. CURICO DEL MAULE",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS CONCEPCION DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DIEGO PORTALES QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA DIFERENCIAL AMAPOLAS NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL JUAN SANDOVAL CARRASCO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL MARIA LUZ LANZA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA DIFERENCIAL VILLA SAN JOSE LA UNION DE LOS RIOS",
 "Local_ESCUELA DIGNA CAMILO AGUILAR PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DIVINO MAESTRO PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DOCTOR TREVISO GIRARDI TONELLI CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L1 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L2 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMINGO ORTIZ DE ROZAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA DOMINGO SANTA MARIA GONZALEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMITILA PINNA PARRA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA E 741 JAVIERA CARRERA EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA E-15 RICARDO SILVA ARRIAGADA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA E-5 ESMERALDA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ECOLOGICA NUESTRO MUNDO QUILLOTA DE VALPARAISO",
 "Local_ESCUELA ECOLOGICA PADRE ALBERTO HURTADO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA EDELMIRA VERGARA QUINONES ARAUCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO CAMPBELL SAAVEDRA PENCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO FREI MONTALVA PERQUENCO DE LA ARAUCANIA",
 "Local_ESCUELA EDUARDO LLANOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA EDUCACION DIFERENCIAL SANTA TERESA DE AVILA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EDUCADORA EULOGIA BORQUEZ PEREZ QUELLON DE LOS LAGOS",
 "Local_ESCUELA EDUCADORES DE CHILE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EFRAIN MALDONADO TORRES ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO DE SALVACION ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA EJERCITO LIBERTADOR DE CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO LIBERTADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL BOSQUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL CARMEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL CLARO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA EL EDEN TALCA DEL MAULE",
 "Local_ESCUELA EL LAUREL VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL LIBERTADOR PARRAL DEL MAULE",
 "Local_ESCUELA EL LLANO DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL MAITEN LA UNION DE LOS RIOS",
 "Local_ESCUELA EL PALPAL DE SANTA CLARA BULNES DE NUBLE",
 "Local_ESCUELA EL PALQUI MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA EL REMANSO EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL ROTO CHILENO TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SABER NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA EL SALITRE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SAUCE SAN CARLOS DE NUBLE",
 "Local_ESCUELA ELBA OJEDA GOMEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ELENA ARMIJO MORALES CUREPTO DEL MAULE",
 "Local_ESCUELA ELEUTERIO RAMIREZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ELIAS SANCHEZ ORTUZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELIODORO YANEZ PONCE DE LEON SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELOISA GONZALEZ TIRUA DEL BIOBIO",
 "Local_ESCUELA ELVIRA SANTA CRUZ OSSA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMA CORNEJO DE CARDOEN VICHUQUEN DEL MAULE",
 "Local_ESCUELA EMILIA LASCAR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMPRENDER LARAPINTA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENCARNACION OLIVARES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA ENRIQUE DONN MULLER CONSTITUCION DEL MAULE",
 "Local_ESCUELA ENRIQUE PUFFE KIND YUMBEL DEL BIOBIO",
 "Local_ESCUELA ENRIQUE REYMOND ALDUNATE SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENRIQUE SERRANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ENRIQUE SORO BARRIGA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA ENTRE AGUAS DE LLICO VICHUQUEN DEL MAULE",
 "Local_ESCUELA EPU NEWEN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ERNESTO CASTRO ARELLANO CURICO DEL MAULE",
 "Local_ESCUELA ERNESTO SOTO NEGRETE COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESCRITORA MARCELA PAZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ESPANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ESPANA CURICO DEL MAULE",
 "Local_ESCUELA ESPANA L1 LOS ANDES DE VALPARAISO",
 "Local_ESCUELA ESPANA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ESPANA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPANA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ESPANA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ESPANA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESPECIAL AVANCEMOS JUNTOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE AYLLU DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE Y ESCUELA BASICA MY COLLEGE CHILLAN DE NUBLE",
 "Local_ESCUELA ESPECIAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL FLOR DEL INCA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ESPECIAL HUMBERTO MOATH CASABLANCA DE VALPARAISO",
 "Local_ESCUELA ESPECIAL JUANITA DE AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ESPECIAL PAULA JARAQUEMADA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL TAMARUGAL LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL `ANA AICHELE CARRASCO` OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPERANZA JOVEN L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA JOVEN L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA TALCA DEL MAULE",
 "Local_ESCUELA ESTADO DE FLORIDA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE ISRAEL VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESTADO DE MICHIGAN QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE PALESTINA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADOS UNIDOS DE NORTEAMERICA TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA ESTRELLA REINA DE CHILE CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EUGENIO TAGLE VALDES SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA EULOGIO GOYCOLEA GARAY Y GIMNASIO CALBUCO DE LOS LAGOS",
 "Local_ESCUELA EUSEBIO IBAR SCHEPELER CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA EVANGELICA BETH-EL CHILLAN DE NUBLE",
 "Local_ESCUELA F-174 VALLE DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA F-22 DOCTOR RICARDO OLEA GUERRA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA F-90 RAUL CASTRO MARQUEZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA FATIMA ANCUD DE LOS LAGOS",
 "Local_ESCUELA FEDERICO ACEVEDO SALAZAR CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FELIPE BARTHOU LANCO DE LOS RIOS",
 "Local_ESCUELA FELIX EYHERAMENDY LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA FERNANDA AEDO FAUNDEZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO ARENAS ALMARZA CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO BAQUEDANO YUNGAY DE NUBLE",
 "Local_ESCUELA FERNANDO CARVAJAL PINTO CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FERNANDO SANTIVAN VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCISCO COLOANE CORONEL DEL BIOBIO",
 "Local_ESCUELA FRANCISCO CORTES OJEDA MAULLIN DE LOS LAGOS",
 "Local_ESCUELA FRANCISCO DE AGUIRRE PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO PETRINOVIC KARLOVAC COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO URRUTIA URRUTIA LONGAVI DEL MAULE",
 "Local_ESCUELA FRAY BERNABE DE LUCERNA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA FRAY CAMILO HENRIQUEZ SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRAY PEDRO ARMENGOL VALENZUELA CUREPTO DEL MAULE",
 "Local_ESCUELA FRESIA GRACIELA MULLER RUIZ LEBU DEL BIOBIO",
 "Local_ESCUELA FRONTERIZA ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA FRONTERIZA DE LLIFEN FUTRONO DE LOS RIOS",
 "Local_ESCUELA FUNDACION PAUL HARRIS OSORNO DE LOS LAGOS",
 "Local_ESCUELA GABRIEL BENAVENTE BENAVENTE LONGAVI DEL MAULE",
 "Local_ESCUELA GABRIELA MISTRAL IQUIQUE DE TARAPACA",
 "Local_ESCUELA GABRIELA MISTRAL L1 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL L2 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GABRIELA MISTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA GABRIELA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GALVARINO VALENZUELA MORAGA LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GARCIA HURTADO DE MENDOZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA GASPAR CABRALES VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GENARO RIOS CAMPOS CORONEL DEL BIOBIO",
 "Local_ESCUELA GENERAL ALBERTO BACHELET MARTINEZ EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL ALEJANDRO GOROSTIAGA ORREGO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL JOSE DE SAN MARTIN LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA GENERAL MANUEL BULNES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA GENERAL OHIGGINS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL RENE ESCAURIAZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SAN MARTIN MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SOFANOR PARRA HERMOSILLA SAN CARLOS DE NUBLE",
 "Local_ESCUELA GERTRUDIS ALARCON ARCE RETIRO DEL MAULE",
 "Local_ESCUELA GLADYS CANALES PAREDES PELLUHUE DEL MAULE",
 "Local_ESCUELA GOLDA MEIR LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GRACIELA LETELIER LINARES DEL MAULE",
 "Local_ESCUELA GRECIA (D-251) VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GRECIA CURICO DEL MAULE",
 "Local_ESCUELA GRENOBLE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUARILIHUE ALTO COELEMU DE NUBLE",
 "Local_ESCUELA GUILLERMO BANADOS HONORATO SANTA MARIA DE VALPARAISO",
 "Local_ESCUELA GUILLERMO RODRIGUEZ RIOBIO LEBU DEL BIOBIO",
 "Local_ESCUELA GUILLERMO ZANARTU IRIGOYEN NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUSTAVO LE PAIGE WALQUE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GUSTAVO VASQUEZ DIAZ LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA HAMBURGO CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA HELEN KELLER ADAMS HUALPEN DEL BIOBIO",
 "Local_ESCUELA HERMANA MARIA GORETTI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERMANOS CARRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA HERMINDA DE LA VICTORIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERNAN OLGUIN MAYBE GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HERNAN OLGUIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA HERNANDO DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA HEROES DE CHILE YUMBEL DEL BIOBIO",
 "Local_ESCUELA HEROES DE IQUIQUE COIHUECO DE NUBLE",
 "Local_ESCUELA HEROES DE IQUIQUE VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA HEROES DE LA CONCEPCION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA HOGAR MARIA LUISA BOUCHON SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HOGAR NIEVES VASQUEZ PALACIOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA HOGAR VICTORIANO QUINTEROS SOTO TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HOLANDA CURICO DEL MAULE",
 "Local_ESCUELA HORACIO JOHNSON GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HORIZONTES TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA HUILQUILEMU TALCA DEL MAULE",
 "Local_ESCUELA HUMANISTA VICTOR HUGO CARVAJAL MEZA TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HUMBERTO MORENO RAMIREZ BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HUMBERTO VALENZUELA GARCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA IGNACIO CARRERA PINTO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA IGNACIO CARRERA PINTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA INDEPENDENCIA CAUQUENES DEL MAULE",
 "Local_ESCUELA INDEPENDENCIA PANQUEHUE DE VALPARAISO",
 "Local_ESCUELA INDUSTRIAL SAN ANTONIO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA INES GALLARDO ALVARADO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA INGLATERRA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTEGRADORA EL MANZANO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTERNADO LAS PALMAS TRES ESQUINAS MOLINA DEL MAULE",
 "Local_ESCUELA INTERNADO POTRERO GRANDE CURICO DEL MAULE",
 "Local_ESCUELA IRENE FREI LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA IRMA SALAS SILVA CONCON DE VALPARAISO",
 "Local_ESCUELA ISABEL LE BRUN RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISABEL RIQUELME SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISIDORA GOYENECHEA LOTA DEL BIOBIO",
 "Local_ESCUELA ISLA DE LAJA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ISLA DE MARCHANT CURICO DEL MAULE",
 "Local_ESCUELA ISLA DE PASCUA PENCO DEL BIOBIO",
 "Local_ESCUELA ISLAS DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAIME GOMEZ GARCIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JANUARIO ESPINOSA LINARES DEL MAULE",
 "Local_ESCUELA JAPON ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JAPON VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA JAVIER EYZAGUIRE ECHAURREN PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAVIERA CARRERA VERDUGO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JERONIMO NEKULPAN - QUINENAHUIN CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA JERUSALEN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOAQUIN DEL PINO ROZAS Y NEGRETE SAN CARLOS DE NUBLE",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JORGE GONZALEZ BASTIAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA JORGE MUNOZ SILVA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JORGE ROJAS MIRANDA CORONEL DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ LAJA DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ MAULLIN DE LOS LAGOS",
 "Local_ESCUELA JOSE ABELARDO NUNEZ VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA JOSE ALFARO ALFARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA JOSE ANTOLIN SILVA ORMENO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA JOSE ANTONIO LECAROS ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE BERNARDO SUAREZ MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE CAROCA LAFLOR VALLENAR DE ATACAMA",
 "Local_ESCUELA JOSE DE SAN MARTIN SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA JOSE ELIAS BOLIVAR HERRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA JOSE JOAQUIN PRIETO VIAL CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE M. BALMACEDA Y FERNANDEZ TALCA DEL MAULE",
 "Local_ESCUELA JOSE MANUEL BALMACEDA CALBUCO DE LOS LAGOS",
 "Local_ESCUELA JOSE MANUEL BALMACEDA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MARTI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE MATTA CALLEJON PARRAL DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL CARRERA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL MARTINEZ SOTO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA JOSE NUEZ MARTIN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE PAPIC RADNIC ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JOSE TOHA SOLDEVILLA PINTO DE NUBLE",
 "Local_ESCUELA JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE ULLOA FIERRO LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA JUAN BAUTISTA CHESTA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JUAN BAUTISTA PASTENE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE DIOS ALDEA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE LA CRUZ DOMINGUEZ GONZALEZ LONGAVI DEL MAULE",
 "Local_ESCUELA JUAN DE SAAVEDRA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN JOSE LATORRE BENAVENTE CORONEL DEL BIOBIO",
 "Local_ESCUELA JUAN LUIS SANFUENTES TALCA DEL MAULE",
 "Local_ESCUELA JUAN MARTINEZ DE ROZAS LINARES DEL MAULE",
 "Local_ESCUELA JUAN MOYA MORALES NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN RICARDO SANCHEZ ASCENCIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA JUAN SEGUEL ANEXO FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN SEGUEL FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN VALDES ORTUZAR PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JUAN WACQUEZ MOURFIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN WILLIAMS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JULIA HERRERA VARAS MEJILLONES DE ANTOFAGASTA",
 "Local_ESCUELA JULIETA BECERRA ALVAREZ SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA E-194 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JUSTA NARVAEZ SAN JAVIER DEL MAULE",
 "Local_ESCUELA KARELMAPU SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA KAROL CARDENAL DE CRACOVIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA ARAUCANIA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA BANDERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LA ESPERANZA FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA LA ESPERANZA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA FLORIDA TALCA DEL MAULE",
 "Local_ESCUELA LA GREDA PENCO DEL BIOBIO",
 "Local_ESCUELA LA GREDA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA LA HUERTA DE MATAQUITO HUALANE DEL MAULE",
 "Local_ESCUELA LA ISLA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LA MERCED TILTIL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA NOBEL GABRIELA RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA LA OBRA CURICO DEL MAULE",
 "Local_ESCUELA LA VARA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LA VICTORIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAGO VICHUQUEN DE AQUELARRE VICHUQUEN DEL MAULE",
 "Local_ESCUELA LAS AMERICAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS AMERICAS PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA LAS AMERICAS PROFESOR JUSTO VALLADARES ORELLANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LAS ARAUCARIAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS CANTERAS HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS HORNILLAS LINARES DEL MAULE",
 "Local_ESCUELA LAS LILAS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS LILAS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS PALMAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS ROCAS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LATINA INES GALLARDO ORELLANA VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA LAURA MATUS MELENDEZ DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LAURA VICUNA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA LEON HUMBERTO VALENZUELA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LEONARDO DA VINCI VALDIVIA DE LOS RIOS",
 "Local_ESCUELA LEONCIO ARANEDA FIGUEROA CANETE DEL BIOBIO",
 "Local_ESCUELA LEOVIGILDO KLEY CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA LIBERTAD PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LIBERTADOR BERNARDO O'HIGGINS VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LIBERTADOR BERNARDO OA'HIGGINS RIQUELME CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO O'HIGGINS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO OHIGGINS RIQUELME CALBUCO DE LOS LAGOS",
 "Local_ESCUELA LIMACHITO LIMACHE DE VALPARAISO",
 "Local_ESCUELA LLANKANAO MANUEL FRANCISCO MEZA SECO LINARES DEL MAULE",
 "Local_ESCUELA LLANO SUBERCASEAUX SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO FRANCO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO MIRANDA DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LO VALDIVIA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LO VALLEDOR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LORD COCHRANE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ALERCES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS AVELLANOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOS AVELLANOS TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LOS BOSQUINOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS CONQUISTADORES CAUQUENES DEL MAULE",
 "Local_ESCUELA LOS GUALLES LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA LOS HEROES CHANCO DEL MAULE",
 "Local_ESCUELA LOS MOLLES QUILPUE DE VALPARAISO",
 "Local_ESCUELA LOS MONTES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA LOS PRINCIPES VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ROSALES DEL BAJO BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS SAUCES LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA LOS TRIGALES TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOTHAR KOMMER BRUGER CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUCILA GODOY ALCAYAGA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA LUCILA GODOY LINARES DEL MAULE",
 "Local_ESCUELA LUIS ARMANDO GOMEZ MUNOZ PARRAL DEL MAULE",
 "Local_ESCUELA LUIS ARRIETA CANAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS MARTINEZ GONZALEZ TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LUIS MATTE LARRAIN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS URIBE DIAZ Y GIMNASIO CASTRO DE LOS LAGOS",
 "Local_ESCUELA MADRE DE LA DIVINA PROVIDENCIA CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA MAHUIDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MALLOCO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MAND EDUARDO FREI MONTALVA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL ANABALON SAEZ PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MANUEL BRAVO REYES L1 CASABLANCA DE VALPARAISO",
 "Local_ESCUELA MANUEL DE SALAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA MANUEL MAGALLANES MOURE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL MATUS HERMOSILLA COIHUECO DE NUBLE",
 "Local_ESCUELA MANUEL MONTT RETIRO DEL MAULE",
 "Local_ESCUELA MANUEL ORELLA ECHANEZ CALDERA DE ATACAMA",
 "Local_ESCUELA MANUEL RECABARREN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MANUEL RODRIGUEZ ERDOIZA SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA MANUEL SEGOVIA MONTENEGRO LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA MARCIAL MARTINEZ FERRARI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCOS GOYCOOLEA CORTES COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA ALONSO CHACON LA CRUZ DE VALPARAISO",
 "Local_ESCUELA MARIA ALVARADO GARAY PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MARIA ARAYA VALDES SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MARIA LUISA BOMBAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA OLGA FIGUEROA LEYTON CURICO DEL MAULE",
 "Local_ESCUELA MARIA TERESA DEL CANTO MOLINA CATEMU DE VALPARAISO",
 "Local_ESCUELA MARIA TERESA MARCHANT CONTRERAS COELEMU DE NUBLE",
 "Local_ESCUELA MARIANO LATORRE SAN JAVIER DEL MAULE",
 "Local_ESCUELA MARIANO LATORRE VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA MARISCAL DE AYACUCHO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARTIN ALONQUEO PIUTRIN - GENERAL LOPEZ VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA MATILDE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_ESCUELA MAULE MAULE DEL MAULE",
 "Local_ESCUELA MAULE SUR COLBUN DEL MAULE",
 "Local_ESCUELA MELIPULLI PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA MELVIN JONES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES FONTECILLA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES MATURANA GALLARDO ZAPALLAR DE VALPARAISO",
 "Local_ESCUELA METODISTA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA METRENCO F-471 - METRENCO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MEXICO DE MICHOACAN OSORNO DE LOS LAGOS",
 "Local_ESCUELA MICHIGAN EL AMANECER COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL JOSE ZANARTU SANTA MARIA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA MIGUEL MONTECINOS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA MILLAHUE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MILLARAY TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MIRAVALLE L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIRAVALLE L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MODULAR SAN ANDRES FRESIA DE LOS LAGOS",
 "Local_ESCUELA MONSENOR CARLOS OVIEDO PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MONSENOR FRANCISCO VALDES SUBERCASEAUX OSORNO DE LOS LAGOS",
 "Local_ESCUELA MONSENOR GUIDO DE RAMBERGA PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MONSENOR MANUEL LARRAIN ERRAZURIZ HUALANE DEL MAULE",
 "Local_ESCUELA MONSERRAT ROBERT DE GARCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MUNICIPAL AMERICA MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE CUNACO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE GULTRO OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PALMILLA PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PANIAHUE SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PELEQUEN MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL E-456 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL COBRE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL TRENCITO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL FRONTERIZA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL GABRIELA MISTRAL GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL HERMANOS CARRERA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL ISABEL RIQUELME RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL JEAN PIAGET RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LAS QUEZADAS F-413 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LOS ARRAYANES PUCON DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL LUIS OYARZUN PENA SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MARCELA PAZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MONICA GEBERT MEIER VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL OSVALDO RUIZ GARCIA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PATRICIO MEKIS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PICHIPELLAHUEN LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL RENE SCHNEIDER CHEREAU RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL RERE YUMBEL DEL BIOBIO",
 "Local_ESCUELA MUNICIPAL RIO QUILLEM GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MUNICIPAL SAN PEDRO DE ALCANTARA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL TROYO - VILLA TROYO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL ZUNIGA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NACIMIENTO DE NUESTRO SENOR NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA NACIONES UNIDAS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA NANIHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEVADA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NEW HARVEST TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA NIDER ORREGO QUEVEDO PARRAL DEL MAULE",
 "Local_ESCUELA NIRRIMAPU - MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA NIVEQUETEN LAJA DEL BIOBIO",
 "Local_ESCUELA NONATO COO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NORMA GONZALEZ GUERRA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUESTRA SENORA DE FATIMA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA NUESTRA SENORA DE LA MERCED OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NUESTRA SENORA Y MADRE DEL CARMEN MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUEVA AMERICA QUIRIHUE DE NUBLE",
 "Local_ESCUELA NUEVA AURORA PAILLACO DE LOS RIOS",
 "Local_ESCUELA NUEVA COLLILELFU LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA ESPANA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA REPUBLICA HUALQUI DEL BIOBIO",
 "Local_ESCUELA NUMERO 1, ALEMANIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA OCTAVIO PALMA PEREZ CAUQUENES DEL MAULE",
 "Local_ESCUELA OCTAVIO SALINAS CARIAGA CORONEL DEL BIOBIO",
 "Local_ESCUELA OLEGARIO LAZO BAEZA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA OLEGARIO MORALES OLIVA PAILLACO DE LOS RIOS",
 "Local_ESCUELA ORLANDO LETELIER EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR BONILLA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR CASTRO LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR ENCALADA YOVANOVICH LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR GUERRERO QUINSAC NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA OSVALDO FUENTES BARRERA CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA P-34 BAUTISTA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PABLO CORREA MONTT PELARCO DEL MAULE",
 "Local_ESCUELA PABLO DE ROKHA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PABLO NERUDA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA PABLO NERUDA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PABLO NERUDA SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA PACTO ANDINO L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PACTO ANDINO L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PADRE ANDRE COINDRE SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PADRE ESTEBAN GUMUCIO VIVES LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE JOSEPH BENEDIKT STEGMEIER OVALLE DE COQUIMBO",
 "Local_ESCUELA PADRE LUIS OLIVA NAVARRETE PENCAHUE DEL MAULE",
 "Local_ESCUELA PADRE PEDRO CAMPOS MENCHACA YUMBEL DEL BIOBIO",
 "Local_ESCUELA PAHUIL CHANCO DEL MAULE",
 "Local_ESCUELA PALESTINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PALMARES ORIENTE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAMPA RIOS RIO BUENO DE LOS RIOS",
 "Local_ESCUELA PANGUE ARRIBA SAN RAFAEL DEL MAULE",
 "Local_ESCUELA PANGUILEMO EDITA GALLEGOS RODRIGUEZ TALCA DEL MAULE",
 "Local_ESCUELA PANIMAVIDA COLBUN DEL MAULE",
 "Local_ESCUELA PARTICULAR 167 RAMON GUINEZ PUCON DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR ALFA Y OMEGA LAJA DEL BIOBIO",
 "Local_ESCUELA PARTICULAR ARTURO PRAT FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CATRIPULLI CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CAUNICU ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA PARTICULAR CORAZON DE JESUS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR EL PORVENIR PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR FRANCIA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR HABIT-ART PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA DEHESA CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA MILAGROSA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PARTICULAR LUIS ISRAEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR MARGARITA NASEAU TOME DEL BIOBIO",
 "Local_ESCUELA PARTICULAR MONO PAINE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUESTRA SENORA DEL CARMEN PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUEVA LIQUINE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR NUMERO 8 VILCUN VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE ALEJANDRO ORTEGA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE JUAN WEVERING SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR SAGRADA FAMILIA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN BERNARDO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN FRANCISCO DE ASIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN JOSE OBRERO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PARTICULAR SAN JOSE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA PARTICULAR SAN JUAN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN RAFAEL ARCANGEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN SEBASTIAN SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SANTA MARIA DE LA RIBERA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SUBVENCIONADA PADRE ISIDORO TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR TRES CERROS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PASO INTERNACIONAL PEHUENCHE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA PATAGONIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PATRICIO CHAVEZ SOTO CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA PATRICIO LYNCH ZALDIVAR VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PAUL HARRIS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR IQUIQUE DE TARAPACA",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULO FREIRE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA LINARES DEL MAULE",
 "Local_ESCUELA PEDRO ANTONIO GONZALEZ CUREPTO DEL MAULE",
 "Local_ESCUELA PEDRO DE ONA PUREN DE LA ARAUCANIA",
 "Local_ESCUELA PEDRO MARIN ALEMANY MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO PABLO LEMAITRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEDRO QUINTANA MANSILLA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO RUIZ ALDEA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA PEDRO SARMIENTO DE GAMBOA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEHUEN LEBU DEL BIOBIO",
 "Local_ESCUELA PENCO PENCO DEL BIOBIO",
 "Local_ESCUELA PILAR MOLINER DE NUEZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PILOTO PARDO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PISAGUA HUARA DE TARAPACA",
 "Local_ESCUELA PLACIDO VILLARROEL IQUIQUE DE TARAPACA",
 "Local_ESCUELA PLAYA LINDA DE LIPIMAVIDA VICHUQUEN DEL MAULE",
 "Local_ESCUELA POETA NERUDA DE ISLA NEGRA EL QUISCO DE VALPARAISO",
 "Local_ESCUELA POETA NERUDA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA OSCAR CASTRO ZUNIGA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA VICENTE HUIDOBRO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETAS DE CHILE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETISA GABRIELA MISTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA POLONIA GUTIERREZ LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PORONGO CAUQUENES DEL MAULE",
 "Local_ESCUELA PORTUGAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PORVENIR DE CATO COIHUECO DE NUBLE",
 "Local_ESCUELA POZA VERDE LA LIGUA DE VALPARAISO",
 "Local_ESCUELA PREMIO NOBEL PABLO NERUDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESBITERO JOSE AGUSTIN GOMEZ GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA PRESIDENTE AGUIRRE CERDA CARTAGENA DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE CARLOS IBANEZ DEL CAMPO LINARES DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA MOLINA DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE JORGE ALESSANDRI R. LA UNION DE LOS RIOS",
 "Local_ESCUELA PRESIDENTE JOSE MANUEL BALMACEDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE PEDRO AGUIRRE CERDA SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE ROOSEVELT CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE SALVADOR ALLENDE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PROFESOR MANUEL CASTRO RAMOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA PROFESOR MANUEL GUERRERO CEBALLOS CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESOR RAMON DEL RIO ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA AURELIA ROJAS BURGOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA GLADYS VALENZUELA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA MARIA LUISA SEPULVEDA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROSPERIDAD TALCA DEL MAULE",
 "Local_ESCUELA PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE ARAUCO CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE CHILOE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROYECTO DE FUTURO PAILLACO DE LOS RIOS",
 "Local_ESCUELA PUBLICA REPUBLICA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA PUDETO ANCUD DE LOS LAGOS",
 "Local_ESCUELA PUERTO RICO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PUQUELDON PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA PURISIMA CONCEPCION DE POCILLAS CAUQUENES DEL MAULE",
 "Local_ESCUELA QUEBRADA DE ALVARADO OLMUE DE VALPARAISO",
 "Local_ESCUELA QUECHEREGUAS DE PICHINGAL MOLINA DEL MAULE",
 "Local_ESCUELA RADIMADI LA UNION DE LOS RIOS",
 "Local_ESCUELA RAFAEL VALDIVIESO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RAIMAPU FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA RALCO LEPOY ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA RAMON BELMAR SALDIAS LINARES DEL MAULE",
 "Local_ESCUELA RAMON EDUARDO RAMIREZ HENRIQUEZ CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA RAUCO RAUCO DEL MAULE",
 "Local_ESCUELA REBECA MATTE BELLO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RECAREDO VIGUERAS ARANEDA SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA REINA DE SUECIA L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINA DE SUECIA L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINO DE DINAMARCA MOLINA DEL MAULE",
 "Local_ESCUELA RENE SCHNEIDER SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARABE SIRIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA ARGENTINA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARGENTINA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA REPUBLICA ARGENTINA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA REPUBLICA ARGENTINA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA CHECA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ALEMANIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE AUSTRIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE BOLIVIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE BRASIL CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA DE COLOMBIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE COSTA RICA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ESTADOS UNIDOS DE NORTEAMERICA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE FRANCIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE FRANCIA QUINTERO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DE FRANCIA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA DE GRECIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA REPUBLICA DE GRECIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE HONDURAS EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE INDONESIA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA REPUBLICA DE ITALIA - LOCAL 2 CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE ITALIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE ITALIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ITALIA PENCO DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DE LA INDIA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LAS FILIPINAS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LOS EE.UU. DE AMERICA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE MEXICO CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE MEXICO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE PANAMA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE POLONIA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL ECUADOR ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DEL ECUADOR EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DEL PERU HUALPEN DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DEL PERU SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ESTADOS UNIDOS CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REVERENDO PADRE PATRICIO CARIOLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA RICARDO CAMPILLAY CONTRERAS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA RICARDO EDUARDO LATCHAM PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIO COLORADO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA RIO NEGRO RIO NEGRO DE LOS LAGOS",
 "Local_ESCUELA RISOPATRON PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIVERA DEL MAULE PENCAHUE DEL MAULE",
 "Local_ESCUELA ROBERTO OJEDA TORRES PAILLACO DE LOS RIOS",
 "Local_ESCUELA ROCIO DE LOS ANGELES PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROMILIO ARELLANO TRONCOSO LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ROMULO PENA MATURANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ROSA YANEZ RODRIGUEZ CORONEL DEL BIOBIO",
 "Local_ESCUELA ROSALINA PESCIO VARGAS PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSARIO CONCHA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSITA RENARD CORONEL DEL BIOBIO",
 "Local_ESCUELA RUBEN DARIO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RURAL 21 DE MAYO PAILLACO DE LOS RIOS",
 "Local_ESCUELA RURAL ADELA GARCIA GARCIA QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL ALFONSO OSSES PEREZ MARIQUINA DE LOS RIOS",
 "Local_ESCUELA RURAL AMANECER 2000 QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL ANTILHUE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL ARTISTICA ALUMNO MARCELO GUENTEO SOLIS QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL BAHIA MANSA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_ESCUELA RURAL BORDEMAR (NUEVA) QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CALCURRUPE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL CANITAS LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL CARBONEROS CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL CARRETERA AUSTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CHAUQUEAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHAYAHUE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHOROICO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA DIUMEN RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA RIO SUR PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CON INTERNADO RIO BLANCO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CORRENTOSO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL CRISTO REY PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CRUCERO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL CUCAO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CURINANCO VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL CURRINE FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL DORILA AGUILA AGUILAR MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL DUAO MAULE DEL MAULE",
 "Local_ESCUELA RURAL EL AVELLANAL CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL EL ENCANTO PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL EL PULPITO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ENRIQUE HEVIA LABBE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL EPSON PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTACION NUEVO PORVENIR PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTAQUILLA LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL FOLILCO LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL HILDA HUNQUEN MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL HUELLELHUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL HUELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL HUILLINCO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ISLA HUAPI FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL JOSE DANIEL BAHAMONDE BAHAMONDE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL JUAN VICTORINO TANGOL DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA AGUADA CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL LA CAPILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA CHAMIZA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LA PAZ PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA POZA SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA RINCONADA PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LA VILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LAGO AZUL PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LAS CAMPANAS PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA RURAL LAS CASCADAS PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA RURAL LENCA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LINDA VISTA QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LLINGUA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LLIUCO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LONCOTORO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ANGELES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ARCES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS LINARES DE CASMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PELLINES LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PINOS QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LUZ Y SABER OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL MAILLEN ESTERO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL MALLINLEMU DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL MASHUE LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL MIRTA OYARZO VERA CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL MONTEMAR QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL NONTUELA FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL NUEVA ISRAEL PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL NUMPAY MAULE DEL MAULE",
 "Local_ESCUELA RURAL OSTRICULTURA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL PABLO CEA VASQUEZ COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PABLO NERUDA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PARGA FRESIA DE LOS LAGOS",
 "Local_ESCUELA RURAL PEDRO VELAZQUEZ BONTES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL PICHIL OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL PUENTE COLMO CONCON DE VALPARAISO",
 "Local_ESCUELA RURAL PUERTO NUEVO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL PULLALLY PAPUDO DE VALPARAISO",
 "Local_ESCUELA RURAL RININAHUE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL RUNCA MAFIL DE LOS RIOS",
 "Local_ESCUELA RURAL SAN FRANCISCO QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL SAN JOSE DE TRANQUI QUEILEN DE LOS LAGOS",
 "Local_ESCUELA RURAL SOL DEL PACIFICO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL TAC QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL TEPUAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL TRAPEN PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL VALLE DE LA LUNA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VALLE MANTILHUE BAJO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL VALLE SIMPSON COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VILLA CHACAO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL VIVANCO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA SALOMON SACK LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALOMON SALMAN DABUD LINARES DEL MAULE",
 "Local_ESCUELA SALTOS DEL LAJA CABRERO DEL BIOBIO",
 "Local_ESCUELA SALVADOR SANFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALVADOR SANFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN ANDRES DE PICA PICA DE TARAPACA",
 "Local_ESCUELA SAN ANTONIO LINARES DEL MAULE",
 "Local_ESCUELA SAN CLEMENTE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA SAN DANIEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS DE ERCILLA ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA SAN FRANCISCO DE ASIS MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SAN FRANCISCO DE CHIU CHIU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA SAN FRANCISCO DE LA SELVA COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN JOSE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA SAN JOSE DE COLICO CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA SAN JOSE OBRERO DE CURACAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JOSE OBRERO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JUAN BAUTISTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LEONARDO MURIALDO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LUIS DE CONTULMO CONTULMO DEL BIOBIO",
 "Local_ESCUELA SAN LUIS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN PEDRO COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN PEDRO DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SAN PEDRO DE QUINTAY CASABLANCA DE VALPARAISO",
 "Local_ESCUELA SAN RAFAEL COQUIMBO DE COQUIMBO",
 "Local_ESCUELA SAN RAFAEL SAN RAFAEL DEL MAULE",
 "Local_ESCUELA SAN SANTIAGO DE BELEN PUTRE DE ARICA Y PARINACOTA",
 "Local_ESCUELA SAN VICENTE DE PAUL COPIAPO DE ATACAMA",
 "Local_ESCUELA SANITAS LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ADRIANA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ANA L1 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA SANTA BARBARA LINARES DEL MAULE",
 "Local_ESCUELA SANTA CLARA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA DELFINA RETIRO DEL MAULE",
 "Local_ESCUELA SANTA FE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA IRENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA JOAQUINA DE VEDRUNA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA LEONOR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA MARIA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA MARTA DE LIRAY COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA DE CHENA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA SANTA TERESA DEL CARMELO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA DE HUECHURABA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTIAGO AMENGUAL B. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA SANTIAGO BUERAS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA SANTIAGO DE GUAYAQUIL HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2 DANIEL REBOLLEDO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2DO DANIEL REBOLLEDO TALCA DEL MAULE",
 "Local_ESCUELA SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO CANDELARIA PEREZ SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA SELVA OSCURA VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA SENDERO DEL SABER SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SERAFIN GUTIERREZ VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA SILVANO FERNANDEZ YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA SIXTO MENDEZ PARADA GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SOCIEDAD DEL SOCORRO DE SENORAS OSORNO DE LOS LAGOS",
 "Local_ESCUELA SOL NACIENTE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SONIA PLAZA CASTRO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOR TERESA DE LOS ANDES LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SU SANTIDAD JUAN XXIII SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SUIZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA SUPERIOR DE NINAS DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SUPERIOR NUEVA BILBAO CONSTITUCION DEL MAULE",
 "Local_ESCUELA SUSANA MONTES VELASCO TENO DEL MAULE",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L2 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNO SUR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TEGUALDA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L1 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L2 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENO ANEXO TENO DEL MAULE",
 "Local_ESCUELA TENO TENO DEL MAULE",
 "Local_ESCUELA TEODORO LOWEY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TERESA DE CALCUTA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TERRITORIO ANTARTICO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THE LITTLE SCHOOL CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THEODOR HEUSS QUILPUE DE VALPARAISO",
 "Local_ESCUELA THILDA PORTILLO OLIVARES IQUIQUE DE TARAPACA",
 "Local_ESCUELA THOMAS ALVA EDISON COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA THOMAS JEFFERSON D 465 HUALPEN DEL BIOBIO",
 "Local_ESCUELA THOMAS JEFFERSON LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA TIMOTEO ARAYA ALEGRIA VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA TOBALABA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOQUI LAUTARO NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA TULIO BURGOS RIVERA CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA TUPAHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ULDA ARACENA GONZALEZ F-203 NOGALES DE VALPARAISO",
 "Local_ESCUELA UNESCO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNIFICADA ISLA GUAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA UNION LATINOAMERICANA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNION LATINOAMERICANA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA UNION NACIONAL ARABE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNO ISABEL RIQUELME LINARES DEL MAULE",
 "Local_ESCUELA VADO DE TOPATER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA VALDIVIA DE PAINE BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALENTIN LETELIER VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VALLE DE CUYA CAMARONES DE ARICA Y PARINACOTA",
 "Local_ESCUELA VALLE DE MARIQUINA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA VALLE DE PUANGUE CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE DEL INCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE RAMADILLAS ARAUCO DEL BIOBIO",
 "Local_ESCUELA VEGAS DE ITATA COELEMU DE NUBLE",
 "Local_ESCUELA VICENTE HUIDOBRO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA VICENTE REYES PALAZUELOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR CUCCUINI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR DOMINGO SILVA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA VILLA ALEGRE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CAROLINA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CENTINELA SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA CULENAR TALCA DEL MAULE",
 "Local_ESCUELA VILLA HUEQUEN ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA VILLA INDEPENDENCIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA INDEPENDENCIA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA INDEPENDENCIA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA JESUS DE COELEMU COELEMU DE NUBLE",
 "Local_ESCUELA VILLA LA CULTURA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA LA GRANJA MULCHEN DEL BIOBIO",
 "Local_ESCUELA VILLA LA PAZ TALCA DEL MAULE",
 "Local_ESCUELA VILLA LAS DUNAS SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA VILLA LAS NIEVES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA VILLA LO BURGOS PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA VILLA MONTE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA PEDRO AGUIRRE CERDA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA PRAT SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA VILLA SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SAN PEDRO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA VILLA SANTA ELENA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SUR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLASECA BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VINA PURISIMA TALCA DEL MAULE",
 "Local_ESCUELA VIOLETA PARRA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VIOLETA PARRA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VIRGEN DEL CARMEN EL CARMEN DE NUBLE",
 "Local_ESCUELA VISTA HERMOSA CORONEL DEL BIOBIO",
 "Local_ESCUELA VOIPIR DE NANCUL VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VOLCAN ANTUCO ANTUCO DEL BIOBIO",
 "Local_ESCUELA WASHINGTON OMAR VENEGAS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA WELCOME SCHOOL PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA YERBAS BUENAS Y GIMNASIO ANCUD DE LOS LAGOS",
 "Local_ESCUELA ZAIDA ARANEDA VIGUERAS LOS ALAMOS DEL BIOBIO",
 "Local_ESTADIO DIAGUITA OVALLE DE COQUIMBO",
 "Local_ESTADIO LA PORTADA LA SERENA DE COQUIMBO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L1 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L2 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO MONUMENTAL L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L3 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_FACULTAD DE ARQUITECTURA UNIVERSIDAD DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_FACULTAD DE FILOSOFIA Y EDUCACION PUCV, CAMPUS SAUSALITO VINA DEL MAR DE VALPARAISO",
 "Local_FACULTAD DE INGENIERIA PUCV VALPARAISO DE VALPARAISO",
 "Local_GEORGE CHAYTOR ENGLISH COLLEGE TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO AUGUSTO ZUBIRI (EX EPICENTRO I) ARICA DE ARICA Y PARINACOTA",
 "Local_GIMNASIO DEPORTIVO LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO FISCAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_GIMNASIO LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO MUNICIPAL CASTRO DE LOS LAGOS",
 "Local_GIMNASIO MUNICIPAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL DE RAUCO RAUCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL LOTA DEL BIOBIO",
 "Local_GIMNASIO MUNICIPAL MACUL METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL PELARCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL RINCONADA DE VALPARAISO",
 "Local_GIMNASIO MUNICIPAL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL SAN JAVIER DEL MAULE",
 "Local_GIMNASIO MUNICIPAL SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL TENO DEL MAULE",
 "Local_GIMNASIO OLIMPICO UFRO TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO POLIDEPORTIVO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_GIMNASIO POLIDEPORTIVO MARTIN VARGAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO UNIVERSIDAD DE LOS LAGOS PUERTO MONTT DE LOS LAGOS",
 "Local_GIMNASIOS INSTITUTO SALESIANO VALDIVIA DE LOS RIOS",
 "Local_GREEN HOUSE SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_HERNAN MERINO CORREA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_HRVATSKA SKOLA SAN ESTEBAN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INST. SUPERIOR DE ADMINISTRACION Y TURISMO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO BICENTENARIO JAVIERA CARRERA VERDUGO SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO CHACABUCO LOS ANDES DE VALPARAISO",
 "Local_INSTITUTO CHILE ASIA PACIFICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO CIENTIFICO EDUCACIONAL JOSE MAZA SANCHO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO CLARET TEMUCO DE LA ARAUCANIA",
 "Local_INSTITUTO COMERCIAL ALBERTO VALENZUELA LLANOS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO COMERCIAL ELIODORO DOMINGUEZ DOMINGUEZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL LINARES DEL MAULE",
 "Local_INSTITUTO COMERCIAL MARITIMO PACIFICO SUR L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO COMERCIAL OSORNO DE LOS LAGOS",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE ADMINISTRACION Y COMERCIO ESTADO DE ISRAEL COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO DE HUMANIDADES ALFREDO SILVA SANTIAGO CONCEPCION DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES ANTONIO MORENO CASAMITJANA CORONEL DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE MATEMATICAS PUCV MALAQUIAS MORALES MUNOZ VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L2 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO EDUCACIONAL COLLICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO HERMANOS MATTE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO HUMANIDADES MONSENOR JOSE MANUEL SANTO ASCARZA CHIGUAYANTE DEL BIOBIO",
 "Local_INSTITUTO HUMANIDADES SAN FRANCISCO DE ASIS LOTA DEL BIOBIO",
 "Local_INSTITUTO INDUSTRIAL SUPERIOR DE CHILLAN CHILLAN DE NUBLE",
 "Local_INSTITUTO INGLES CURICO DEL MAULE",
 "Local_INSTITUTO ITALIA DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO LINARES LINARES DEL MAULE",
 "Local_INSTITUTO MIGUEL LEON PRADO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO O'HIGGINS DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO OBISPO SILVA LEZAETA CALAMA DE ANTOFAGASTA",
 "Local_INSTITUTO POLITECNICO SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO POLITECNICO SUPERIOR EGIDIO ROZ CONSTITUCION DEL MAULE",
 "Local_INSTITUTO POLITECNICO SUPERIOR JUAN TERRIER DAILLY CURICO DEL MAULE",
 "Local_INSTITUTO PRESIDENTE ERRAZURIZ LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO PROFESIONAL DUOC PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO RAFAEL ARIZTIA L1 QUILLOTA DE VALPARAISO",
 "Local_INSTITUTO SAN MIGUEL COLINA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SAN SEBASTIAN BASICO YUMBEL DEL BIOBIO",
 "Local_INSTITUTO SAN VICENTE DE TAGUA TAGUA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO SANTA MARIA CHILLAN DE NUBLE",
 "Local_INSTITUTO SANTO TOMAS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO ENRIQUE MALDONADO TALCA DEL MAULE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO JERARDO MUNOZ CAMPOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PROFESOR FERNANDO PEREZ BECERRA CHILLAN DE NUBLE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO (2) L1 VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNOLOGICO Y COMERCIAL RECOLETA-INTECO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_INTERNADO FEMENINO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_JARDIN INFANTIL RUCAPEQUEN CHILLAN VIEJO DE NUBLE",
 "Local_JUNIOR COLLEGE ARICA DE ARICA Y PARINACOTA",
 "Local_LIC.DE CIENC.Y HUM.SAN JOSEMARIA ESCRIVA COQUIMBO DE COQUIMBO",
 "Local_LICEO A- 5 JOVINA NARANJO FERNANDEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 OCTAVIO PALMA PEREZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 VALENTIN LETELIER L1 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-1 VALENTIN LETELIER L2 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-127 FIDEL PINOCHET LE-BRUN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-2 POLITECNICO ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L2 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ABATE MOLINA TALCA DEL MAULE",
 "Local_LICEO ABDON CIFUENTES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ACADEMIA NACIONAL ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO ADVENTISTA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO AGRICOLA CHOLCHOL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO AGRICOLA JOSE ABELARDO NUNEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGRICOLA PADRE FRANCISCO NAPOLITANO ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGROINDUSTRIAL RIO CLARO RIO CLARO DEL MAULE",
 "Local_LICEO AGUSTIN ROSS EDWARDS PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ALBERTO BLEST GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALBERTO BLEST GANA LOS LAGOS DE LOS RIOS",
 "Local_LICEO ALCALDE SERGIO GONZALEZ GUTIERREZ POZO ALMONTE DE TARAPACA",
 "Local_LICEO ALEJANDRO ALVAREZ JOFRE OVALLE DE COQUIMBO",
 "Local_LICEO ALEMAN DEL VERBO DIVINO L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE GALVARINO RIVEROS CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE PEDRO ESPINA RITCHIE TALCAHUANO DEL BIOBIO",
 "Local_LICEO ALONSO DE ERCILLA Y ZUNIGA ERCILLA DE LA ARAUCANIA",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO JAHUEL BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO AMANDA LABARCA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANDRES ALCAZAR DE TUCAPEL TUCAPEL DEL BIOBIO",
 "Local_LICEO ANDRES BELLO PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO ANDRES BELLO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO SALAMANCA MORALES CORONEL DEL BIOBIO",
 "Local_LICEO ANTONIO VARAS CAUQUENES DEL MAULE",
 "Local_LICEO ANTONIO VARAS L1 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ANTONIO VARAS L2 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ARAUCANIA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTISTICO ARMANDO CARRERA GONZALEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO ARTISTICO D-13 JUAN NOE CREVANI ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO ARTURO ALESSANDRI PALMA LONGAVI DEL MAULE",
 "Local_LICEO ARTURO ALESSANDRI PALMA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_LICEO ARTURO PEREZ CANTO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO PRAT CHACON CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO ARTURO VALENZUELA CUNCO DE LA ARAUCANIA",
 "Local_LICEO AUGUSTO D HALMAR NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO AUGUSTO SANTELICES VALENZUELA LICANTEN DEL MAULE",
 "Local_LICEO AVENIDA RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO B 42 TAJAMAR PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN MUNOZ GAMERO PUERTO OCTAY DE LOS LAGOS",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BERTA ZAMORANO LIZANA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L1 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L2 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO A-71 GUILLERMO FELIU CRUZ ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO AGRICOLA DE LA PATAGONIA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO AGRICOLA MARTA MARTINEZ CRUZ YERBAS BUENAS DEL MAULE",
 "Local_LICEO BICENTENARIO AGROPECUARIO LIKAN ANTAI SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ANDRES SABELLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ARAUCANIA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO ARTISTICO ALEXANDER GRAHAM BELL VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CHACABUCO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO CIUDAD DE LOS RIOS VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO BICENTENARIO CLAUDIO ARRAU LEON COIHUECO DE NUBLE",
 "Local_LICEO BICENTENARIO COLEGIO DIOCESANO OBISPO LABBE IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO NIRVANA ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO PANQUEHUE PANQUEHUE DE VALPARAISO",
 "Local_LICEO BICENTENARIO COMPLEJO EDUCACIONAL ANDRES ANTONIO GORBEA GORBEA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CORDILLERA DE SAN FELIPE SAN FELIPE DE VALPARAISO",
 "Local_LICEO BICENTENARIO DE ANCUD ANCUD DE LOS LAGOS",
 "Local_LICEO BICENTENARIO DE CAUQUENES CAUQUENES DEL MAULE",
 "Local_LICEO BICENTENARIO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA CARLOS MONTANE CASTRO QUIRIHUE DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA DIEGO PORTALES PALAZUELOS SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA NUEVO MUNDO MULCHEN DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE JUVENAL HERNANDEZ JAQUE EL CARMEN DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE SAN NICOLAS, CAMPUS SERGIO MARTIN ALAMOS SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNICO PUENTE NUBLE SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNOLOGICO FEDERICO SCHWAGER CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TREHUACO TREGUACO DE NUBLE",
 "Local_LICEO BICENTENARIO DE HOTELERIA Y TURISMO PUCON DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE MOLINA MARIA DEL TRANSITO DE LA CRUZ MOLINA DEL MAULE",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE VALLENAR VALLENAR DE ATACAMA",
 "Local_LICEO BICENTENARIO DE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO BICENTENARIO DIEGO PORTALES PALAZUELOS CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ENRIQUE BALLACEY COTTEREAU ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO FRANCISCO BILBAO BARQUIN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO INDOMITO DE PUREN PUREN DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO INGENIERO RICARDO FENNER RUEDI LA UNION DE LOS RIOS",
 "Local_LICEO BICENTENARIO ISIDORA RAMOS DE GAJARDO LEBU DEL BIOBIO",
 "Local_LICEO BICENTENARIO LUIS CRUZ MARTINEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO LUIS GONZALEZ VASQUEZ NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO MANUEL DE SALAS L1 CASABLANCA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MANUEL JESUS ORTIZ SAN IGNACIO DE NUBLE",
 "Local_LICEO BICENTENARIO MARTA NAREA DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MERCEDES FRITIS MACKENNEY COPIAPO DE ATACAMA",
 "Local_LICEO BICENTENARIO ORIENTE DE TALCA TALCA DEL MAULE",
 "Local_LICEO BICENTENARIO PABLO NERUDA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA PICA DE TARAPACA",
 "Local_LICEO BICENTENARIO PAUL HARRIS PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO POLITECNICO CESAREO AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO POLITECNICO EMA ESPINOZA CORREA LAUTARO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO JOSE MANUEL PINTO ARIAS PINTO DE NUBLE",
 "Local_LICEO BICENTENARIO POLITECNICO JUANITA FERNANDEZ SOLAR ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO MANUEL MONTT VICTORIA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLIVALENTE NUESTRA SENORA DE LA MERCED SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO QUEMCHI QUEMCHI DE LOS LAGOS",
 "Local_LICEO BICENTENARIO RURAL CERRO CASTILLO RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO SAN FELIPE DE ARAUCO ARAUCO DEL BIOBIO",
 "Local_LICEO BICENTENARIO SAN PEDRO DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA CRUZ DE LARQUI BULNES DE NUBLE",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO SANTA TERESA DE LOS ANDES COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SIMON BOLIVAR LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL DE MINERIA CABILDO DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL MARY GRAHAM (MEDIA) VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO TERESA PRATS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L2 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO ZAPALLAR ZAPALLAR DE VALPARAISO",
 "Local_LICEO CAMILO HENRIQUEZ DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CAMPANARIO YUNGAY DE NUBLE",
 "Local_LICEO CAPITAN IGNACIO CARRERA PINTO COLBUN DEL MAULE",
 "Local_LICEO CARDENAL ANTONIO SAMORE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL ANTONIO SAMORE SANTA BARBARA DEL BIOBIO",
 "Local_LICEO CARDENAL CARO BASICA BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARLOS CONDELL TALCA DEL MAULE",
 "Local_LICEO CARLOS COUSINO GOYENECHEA LOTA DEL BIOBIO",
 "Local_LICEO CARLOS IBANEZ DEL CAMPO FRESIA DE LOS LAGOS",
 "Local_LICEO CARLOS ROBERTO MONDACA CORTES VICUNA DE COQUIMBO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMEN AURORA RODRIGUEZ HENRIQUEZ COQUIMBO DE COQUIMBO",
 "Local_LICEO CATOLICO ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_LICEO CHILOE L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHILOE L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CIENTIFICO HUMANISTA BRAINSTORM TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CIENTIFICO HUMANISTA LA CHIMBA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO CIUDAD DE BRASILIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLARA SOLOVERA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLAUDINA URRUTIA DE LAVIN CAUQUENES DEL MAULE",
 "Local_LICEO CLAUDIO ARRAU DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO CLAUDIO FLORES SOTO LOS ALAMOS DEL BIOBIO",
 "Local_LICEO COEDUCACIONAL LA IGUALDAD VALPARAISO DE VALPARAISO",
 "Local_LICEO COEDUCACIONAL SANTA MARIA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ALEJANDRO LUBET VERGARA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO COMERCIAL ANDRES BELLO LOPEZ CORONEL DEL BIOBIO",
 "Local_LICEO COMERCIAL CAMILO HENRIQUEZ LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_LICEO COMERCIAL DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO COMERCIAL DEL DESARROLLO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL DIEGO PORTALES L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL DIEGO PORTALES PALAZUELO LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ENRIQUE OYARZUN MONDACA CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL FEMENINO DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL GABRIEL GONZALEZ VIDELA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL JORGE ALESSANDRI RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL MIRAMAR PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL MOLINA LAVIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL PRESIDENTE FREI MONTALVA LOTA DEL BIOBIO",
 "Local_LICEO COMERCIAL PROFESOR SERGIO MORAGA ARCIL TALCAHUANO DEL BIOBIO",
 "Local_LICEO COMERCIAL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL REPUBLICA DE BRASIL PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL TEMUCO BICENTENARIO DE EXCELENCIA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL VATE VICENTE HUIDOBRO SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMPLEJO EDUCACIONAL JAVIERA CARRERA TALCA DEL MAULE",
 "Local_LICEO CONFEDERACION SUIZA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CONSTITUCION CONSTITUCION DEL MAULE",
 "Local_LICEO COPIULEMU FLORIDA DEL BIOBIO",
 "Local_LICEO CORDILLERA CHINCOLCO PETORCA DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CRISTO REDENTOR LOS ALAMOS DEL BIOBIO",
 "Local_LICEO DARIO SALAS L1 SANTA MARIA DE VALPARAISO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 21 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE CIENCIAS Y HUMANIDADES PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO DE CULTURA Y DIFUSION ARTISTICA TALCA DEL MAULE",
 "Local_LICEO DE ESTUDIOS CONTABLES Y ADMINISTR. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES DE ANTOFAGASTA MARIO BAHAMONDE SILVA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES MANUEL MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO DE HOMBRES NEANDRO SCHILLING SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE HUARA HUARA DE TARAPACA",
 "Local_LICEO DE HUEPIL TUCAPEL DEL BIOBIO",
 "Local_LICEO DE LIMACHE L1 LIMACHE DE VALPARAISO",
 "Local_LICEO DE NINAS CONCEPCION DEL BIOBIO",
 "Local_LICEO DE NINAS EDUARDO CHARME SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE NINAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE OLMUE OLMUE DE VALPARAISO",
 "Local_LICEO DE PELARCO PELARCO DEL MAULE",
 "Local_LICEO DE REQUINOA L1 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE REQUINOA L2 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_LICEO DE YUNGAY YUNGAY DE NUBLE",
 "Local_LICEO DEPORTIVO ELENA DUVAUCHELLE CABEZON IQUIQUE DE TARAPACA",
 "Local_LICEO DIEGO PORTALES COQUIMBO DE COQUIMBO",
 "Local_LICEO DOCTOR ALEJANDRO DEL RIO LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR JUAN VERDAGUER PLANAS RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR VICTOR RIOS RUIZ ANTUCO DEL BIOBIO",
 "Local_LICEO DOMINGO HERRERA RIVERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DOMINGO ORTIZ DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_LICEO DOMINGO SANTA MARIA CONCEPCION DEL BIOBIO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO EDUARDO DE LA BARRA VALPARAISO DE VALPARAISO",
 "Local_LICEO EL BOLLENAR MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL PRINCIPAL PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROBLE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROSARIO DE LITUECHE L1 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO EL ROSARIO DE LITUECHE L2 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ELEUTERIO RAMIREZ MOLINA CALAMA DE ANTOFAGASTA",
 "Local_LICEO ELEUTERIO RAMIREZ OSORNO DE LOS LAGOS",
 "Local_LICEO ELVIRA BRADY MALDONADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ELVIRA SANCHEZ DE GARCES MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ENRIQUE BACKAUSSE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ERASMO ESCALA ARRIAGADA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESMERALDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESPIRITU SANTO DEL VERBO DIVINO SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIA SUBERCASEAUX L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO EUGENIO MARIA DE HOSTOS LA REINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIO PEREIRA SALAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL ARTISTICO Y DE APLICACION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL UMAG PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO FEDERICO ALBERT FAUPP CHANCO DEL MAULE",
 "Local_LICEO FEDERICO HEISE MARTI PARRAL DEL MAULE",
 "Local_LICEO FEDERICO VARELA CHANARAL DE ATACAMA",
 "Local_LICEO FERMIN DEL REAL CASTILLO CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FERNANDO ARIZTIA RUIZ COPIAPO DE ATACAMA",
 "Local_LICEO FERNANDO BINVIGNAT MARIN COQUIMBO DE COQUIMBO",
 "Local_LICEO FERNANDO LAZCANO CURICO DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA ARMANET VILLA ALEGRE DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FRANCISCO BASCUNAN GUERRERO QUILLECO DEL BIOBIO",
 "Local_LICEO FRANCISCO COLOANE CASTRO DE LOS LAGOS",
 "Local_LICEO FRANCISCO DE AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO FRANCISCO FRIAS VALENZUELA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRANCISCO HERNANDEZ ORTIZ-PIZARRO CALBUCO DE LOS LAGOS",
 "Local_LICEO FRANCISCO JAVIER KRUGGER ALVARADO BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRAY PABLO DE ROYO SAN PABLO DE LOS LAGOS",
 "Local_LICEO GABRIELA MISTRAL CANETE DEL BIOBIO",
 "Local_LICEO GABRIELA MISTRAL DE LA SERENA LA SERENA DE COQUIMBO",
 "Local_LICEO GABRIELA MISTRAL DE MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL MAFIL DE LOS RIOS",
 "Local_LICEO GABRIELA MISTRAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO GABRIELA MISTRAL SAN ANTONIO DE VALPARAISO",
 "Local_LICEO GABRIELA MISTRAL TEMUCO DE LA ARAUCANIA",
 "Local_LICEO GASTRONOMIA Y TURISMO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO GASTRONOMIA Y TURISMO L2 QUILPUE DE VALPARAISO",
 "Local_LICEO GRANADEROS DE PUTRE PUTRE DE ARICA Y PARINACOTA",
 "Local_LICEO GREGORIO CORDOVEZ LA SERENA DE COQUIMBO",
 "Local_LICEO GREGORIO MORALES MIRANDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO GUILLERMO MARIN LARRAIN RETIRO DEL MAULE",
 "Local_LICEO HARDWARE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO HECTOR PEREZ BIOTT TALCA DEL MAULE",
 "Local_LICEO HERIBERTO SOTO SOTO SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERNANDO DE MAGALLANES PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO HUALANE HUALANE DEL MAULE",
 "Local_LICEO HUERTOS FAMILIARES TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO HUMANISTA CIENTIFICO JOSE DE LA CRUZ MIRANDA CORREA CANETE DEL BIOBIO",
 "Local_LICEO IGNACIO CARRERA PINTO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO IGNACIO CARRERA PINTO TALCA DEL MAULE",
 "Local_LICEO INDIRA GANDHI LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL A 116 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ARMANDO QUEZADA ACHARAN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO INDUSTRIAL BENJAMIN FRANKLIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION HERNAN VALENZUELA L1 HUALPEN DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION VICTOR BEZANILLA SALINAS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE RENGO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL DE SAN MIGUEL AGUSTIN EDWARDS ROSS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_LICEO INDUSTRIAL DOMINGO MATTE PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ERNESTO PINTO LAGARRIGUE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL EULOGIO GORDO MONEO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO INDUSTRIAL JOSE TOMAS DE URMENETA COQUIMBO DE COQUIMBO",
 "Local_LICEO INDUSTRIAL METODISTA CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO INDUSTRIAL MIGUEL AYLWIN GAJARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL OSORNO OSORNO DE LOS LAGOS",
 "Local_LICEO INDUSTRIAL PRESIDENTE PEDRO AGUIRRE CERDA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL SAMUEL VIVANCO PARADA LOS ANGELES DEL BIOBIO",
 "Local_LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO INGENIERO MILITAR JUAN MACKENNA O'REILLY PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INMACULADA CONCEPCION CAUQUENES DEL MAULE",
 "Local_LICEO INSTITUTO COMERCIAL DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO INSULAR ENSENANZA BASICA Y GIMNASIO QUINCHAO DE LOS LAGOS",
 "Local_LICEO INSULAR ENSENANZA MEDIA QUINCHAO DE LOS LAGOS",
 "Local_LICEO ISABEL POBLETE VARGAS PERQUENCO DE LA ARAUCANIA",
 "Local_LICEO ISABEL RIQUELME QUILLECO DEL BIOBIO",
 "Local_LICEO ISAURA DINATOR DE GUZMAN SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAMES MUNDELL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO JAN COMENIUS TEMUCO DE LA ARAUCANIA",
 "Local_LICEO JAVIERA CARRERA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAVIERA CARRERA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JEAN BUCHANAN DE LARRAIN PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ LA SERENA DE COQUIMBO",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ VICTORIA DE LA ARAUCANIA",
 "Local_LICEO JORGE TEILLIER SANDOVAL LAUTARO DE LA ARAUCANIA",
 "Local_LICEO JOSE ANTONIO CARVAJAL COPIAPO DE ATACAMA",
 "Local_LICEO JOSE DOMINGO CANAS QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE FRANCISCO VERGARA L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO JOSE IGNACIO ZENTENO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE MANUEL BORGONO NUNEZ L1 PETORCA DE VALPARAISO",
 "Local_LICEO JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE TORIBIO MEDINA RIO NEGRO DE LOS LAGOS",
 "Local_LICEO JOSE VICTORINO LASTARRIA GORBEA DE LA ARAUCANIA",
 "Local_LICEO JOSE VICTORINO LASTARRIA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE VICTORINO LASTARRIA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSEFINA AGUIRRE MONTENEGRO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO JUAN AGUSTIN MORALES GONZALEZ MOLINA DEL MAULE",
 "Local_LICEO JUAN ANTONIO RIOS L1 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN ANTONIO RIOS L2 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO JUAN DANTE PARRAGUEZ ARELLANO SAN ANTONIO DE VALPARAISO",
 "Local_LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN GOMEZ MILLAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN GOMEZ MILLAS YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN RUSQUE PORTAL L1 NOGALES DE VALPARAISO",
 "Local_LICEO JUAN XXIII SEDE EL BELLOTO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO JUANA ROSS DE EDWARDS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO LA ASUNCION TALCAHUANO DEL BIOBIO",
 "Local_LICEO LA PORTADA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO LAS AMERICAS PUYEHUE DE LOS LAGOS",
 "Local_LICEO LAS ARAUCARIAS BASICA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LAS ARAUCARIAS MEDIA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LATINOAMERICANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO LAURA URRUTIA BENAVENTE LONGAVI DEL MAULE",
 "Local_LICEO LENKA FRANULIC NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LIBERTADOR BERNARDO O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_LICEO LIBERTADOR GENERAL BERNARDO OA'HIGGINS IQUIQUE DE TARAPACA",
 "Local_LICEO LONQUIMAY LONQUIMAY DE LA ARAUCANIA",
 "Local_LICEO LOS ALMENDROS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ALMENDROS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ANDES MELIPEUCO DE LA ARAUCANIA",
 "Local_LICEO LOS ANGELES A-59 L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS ANGELES A-59 L2 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS CASTANOS LAUTARO DE LA ARAUCANIA",
 "Local_LICEO LOS CONDORES ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO LOS HEROES DE LA CONCEPCION CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS JAZMINES MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCERO GONZALEZ CONCEPCION DEL BIOBIO",
 "Local_LICEO LUCILA GODOY ALCAYAGA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCILA GODOY ALCAYAGA TRAIGUEN DE LA ARAUCANIA",
 "Local_LICEO LUIS ALBERTO BARRERA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS CRUZ MARTINEZ DE CURICO CURICO DEL MAULE",
 "Local_LICEO LUIS CRUZ MARTINEZ IQUIQUE DE TARAPACA",
 "Local_LICEO LUIS CRUZ MARTINEZ NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS DE ALAVA FLORIDA DEL BIOBIO",
 "Local_LICEO LUIS EDMUNDO CORREA ROJAS CUREPTO DEL MAULE",
 "Local_LICEO LUIS HUMBERTO ACOSTA GAY EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUIS URBINA FLORES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MACHALI MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MADRE VICENCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MALAQUIAS CONCHA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANIHUALES AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO MANUEL BARROS BORGONO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL BULNES BULNES DE NUBLE",
 "Local_LICEO MANUEL JESUS ANDRADE BORQUEZ CHONCHI DE LOS LAGOS",
 "Local_LICEO MANUEL MARIN FRITIS L1 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MARIN FRITIS L2 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MONTT SAN JAVIER DEL MAULE",
 "Local_LICEO MANUEL RODRIGUEZ TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL ROJAS MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA AURORA GUINEZ RAMIREZ PUREN DE LA ARAUCANIA",
 "Local_LICEO MARIA CARVAJAL FUENZALIDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA LUISA BOMBAL VALPARAISO DE VALPARAISO",
 "Local_LICEO MARIA LUISA BOMBAL VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA REINA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L1 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L2 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARTA DONOSO ESPEJO TALCA DEL MAULE",
 "Local_LICEO MARTIN RUIZ DE GAMBOA CHILLAN DE NUBLE",
 "Local_LICEO MATILDE BRANDAU DE ROSS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAYOR GENERAL (E) OSCAR BONILLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO MERCEDES MARIN DEL SOLAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO METROPOLITANO DE ADULTOS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL ANGEL CERDA LEIVA MULCHEN DEL BIOBIO",
 "Local_LICEO MIGUEL DE CERVANTES Y SAAVEDRA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MINERO AMERICA CALAMA DE ANTOFAGASTA",
 "Local_LICEO MIREYA CATALAN URZUA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR BASICA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL ATENEA CUNCO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL BARROS ARANA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE CODEGUA CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL DE LOLOL LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE NACIMIENTO NACIMIENTO DEL BIOBIO",
 "Local_LICEO MUNICIPAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL F-860 L1 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL F-860 L2 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL INSTITUTO CARDENAL CARO MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL JOSE VICTORINO LASTARRIA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LA FRONTERA PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL LUIS GREGORIO VALENZUELA LAVIN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LUIS LABORDA L1 HIJUELAS DE VALPARAISO",
 "Local_LICEO MUNICIPAL MISAEL LOBOS MONROY GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL PABLO NERUDA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL POETA NERUDA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL RIO CLARO YUMBEL DEL BIOBIO",
 "Local_LICEO MUNICIPAL SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL TROVOLHUE CARAHUE DE LA ARAUCANIA",
 "Local_LICEO NACIONAL DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NACIONAL DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NICOLAS FEDERICO LOHSE VARGAS LOS VILOS DE COQUIMBO",
 "Local_LICEO NUESTRA SENORA DE LA PAZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO NUESTRA SENORA DE LAS MERCEDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUESTRA SENORA MARIA INMACULADA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVA ZELANDIA SANTA JUANA DEL BIOBIO",
 "Local_LICEO NUEVO AMANECER LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVO HORIZONTE VICHUQUEN DEL MAULE",
 "Local_LICEO NUEVO PORVENIR SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ORIENTE RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L2 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSORNO COLLEGE OSORNO DE LOS LAGOS",
 "Local_LICEO PABLO NERUDA DE TALCA TALCA DEL MAULE",
 "Local_LICEO PABLO NERUDA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO PADRE LUIS ALBERTO SALDES IRARRAZABAL YUMBEL DEL BIOBIO",
 "Local_LICEO PADRE SIGISFREDO PANGUIPULLI DE LOS RIOS",
 "Local_LICEO PARROQUIAL SAN ANTONIO VINA DEL MAR DE VALPARAISO",
 "Local_LICEO PARROQUIAL TERESITA DE LOS ANDES RINCONADA DE VALPARAISO",
 "Local_LICEO PARTICULAR CARLOS CONDELL LOS ANGELES DEL BIOBIO",
 "Local_LICEO PARTICULAR MIXTO LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO PARTICULAR MIXTO SAN FELIPE L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO PARTICULAR SUBVENCIONADO LIBERTAD VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO PATRICIO MEKIS DE PADRE HURTADO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PAULA JARAQUEMADA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PEDRO AGUIRRE CERDA PUERTO VARAS DE LOS LAGOS",
 "Local_LICEO PEDRO REGALADO VIDELA ORDENES ANDACOLLO DE COQUIMBO",
 "Local_LICEO PEDRO TRONCOSO MACHUCA VALLENAR DE ATACAMA",
 "Local_LICEO PELDEHUE COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PELLUHUE PELLUHUE DEL MAULE",
 "Local_LICEO PENAFLOR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO PENCOPOLITANO PENCO DEL BIOBIO",
 "Local_LICEO POETA FEDERICO GARCIA LORCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA PABLO NERUDA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA VICENTE HUIDOBRO L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETA VICENTE HUIDOBRO L2 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L1 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L2 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL MEDIA CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO AMERICA LOS ANDES DE VALPARAISO",
 "Local_LICEO POLITECNICO ANDRES BELLO LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO ANTULAFKEN SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_LICEO POLITECNICO B-4 ANTONIO VARAS DE LA BARRA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO POLITECNICO C-120 L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO C-120 L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CAPITAN IGNACIO CARRERA PINTO SAN CARLOS DE NUBLE",
 "Local_LICEO POLITECNICO CARAMPANGUE ARAUCO DEL BIOBIO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_LICEO POLITECNICO DE CONCON CONCON DE VALPARAISO",
 "Local_LICEO POLITECNICO DE LINARES LINARES DEL MAULE",
 "Local_LICEO POLITECNICO DE OVALLE OVALLE DE COQUIMBO",
 "Local_LICEO POLITECNICO DIEGO PORTALES PALAZUELOS TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLITECNICO DOMINGO SANTA MARIA RENAICO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO GENERAL OSCAR BONILLA BRADANOV CABRERO DEL BIOBIO",
 "Local_LICEO POLITECNICO HANNOVER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO HEROES DE LA CONCEPCION LAJA DEL BIOBIO",
 "Local_LICEO POLITECNICO HOLANDA LLANQUIHUE DE LOS LAGOS",
 "Local_LICEO POLITECNICO JOSE GUTIERREZ DE LA FUENTE IQUIQUE DE TARAPACA",
 "Local_LICEO POLITECNICO MARGA MARGA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARGA MARGA L2 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARIA WARD SAN IGNACIO DE NUBLE",
 "Local_LICEO POLITECNICO MELIPILLA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MELIPILLA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MIRASOL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO POLITECNICO PABLO RODRIGUEZ CAVIEDES ILLAPEL DE COQUIMBO",
 "Local_LICEO POLITECNICO PESQUERO MEHUIN MARIQUINA DE LOS RIOS",
 "Local_LICEO POLITECNICO PUEBLO NUEVO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO QUINTERO QUINTERO DE VALPARAISO",
 "Local_LICEO POLITECNICO RAUL SILVA HENRIQUEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLITECNICO SAGRADO CORAZON LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO SARA BLINDER DARGOLTZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO POLIVALENTE BAHIA DARWIN LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE CAMILO HENRIQUEZ G. LANCO DE LOS RIOS",
 "Local_LICEO POLIVALENTE DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_LICEO POLIVALENTE DE MOLINA MOLINA DEL MAULE",
 "Local_LICEO POLIVALENTE DE RAUCO RAUCO DEL MAULE",
 "Local_LICEO POLIVALENTE DIEGO MISSENE BURGOS COBQUECURA DE NUBLE",
 "Local_LICEO POLIVALENTE DOCTOR LUIS VARGAS SALCEDO CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE DOCTOR RIGOBERTO IGLESIAS BASTIAS DE LEBU LEBU DEL BIOBIO",
 "Local_LICEO POLIVALENTE DOMINGO LATRILLE TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLIVALENTE ENRIQUE MAC IVER CONSTITUCION DEL MAULE",
 "Local_LICEO POLIVALENTE FERNANDO SILVA CASTELLON CATEMU DE VALPARAISO",
 "Local_LICEO POLIVALENTE JUAN PACHECO ALTAMIRANO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO POLIVALENTE LA FRONTERA NEGRETE DEL BIOBIO",
 "Local_LICEO POLIVALENTE LAS SALINAS TALCAHUANO DEL BIOBIO",
 "Local_LICEO POLIVALENTE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LORENZO ARENAS OLIVO CONCEPCION DEL BIOBIO",
 "Local_LICEO POLIVALENTE LOS GUINDOS BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LUIS CRUZ MARTINEZ QUILLON DE NUBLE",
 "Local_LICEO POLIVALENTE MANUEL ARISTIDES ZANARTU ZANARTU CABRERO DEL BIOBIO",
 "Local_LICEO POLIVALENTE MARIA BEHETY PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLIVALENTE MARIANO LATORRE CURANILAHUE DEL BIOBIO",
 "Local_LICEO POLIVALENTE NAHUELBUTA CONTULMO DEL BIOBIO",
 "Local_LICEO POLIVALENTE OLOF PALME LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE RIGOBERTO FONTT IZQUIERDO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE SAGRADA FAMILIA SAGRADA FAMILIA DEL MAULE",
 "Local_LICEO POLIVALENTE SAN JOSE DE LA PRECIOSA SANGRE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE TOMAS ARNALDO HERRERA VEGA PEMUCO DE NUBLE",
 "Local_LICEO POLIVANENTE BENJAMIN VICUNA MACKENNA VALDIVIA DE LOS RIOS",
 "Local_LICEO PORTAL DE LA CISTERNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE ANIBAL PINTO GARMENDIA. IQUIQUE DE TARAPACA",
 "Local_LICEO PRESIDENTE BALMACEDA CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE GABRIEL GONZALEZ VIDELA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL EL SAUCE TALCA DEL MAULE",
 "Local_LICEO PUBLICO BICENTENARIO CLAUDIO ARRAU LEON CARAHUE DE LA ARAUCANIA",
 "Local_LICEO PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PULMAHUE L1 LA LIGUA DE VALPARAISO",
 "Local_LICEO PUNTA DE RIELES LOS MUERMOS DE LOS LAGOS",
 "Local_LICEO PURKUYEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAHUE OSORNO DE LOS LAGOS",
 "Local_LICEO RAUL BROUSSAIN CAMPINO AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO RAYEN MAPU QUELLON DE LOS LAGOS",
 "Local_LICEO REBECA MATTE BELLO CONCEPCION DEL BIOBIO",
 "Local_LICEO RECTOR ABDON ANDRADE COLOMA LA UNION DE LOS RIOS",
 "Local_LICEO REINO DE SUECIA SAAVEDRA DE LA ARAUCANIA",
 "Local_LICEO REPUBLICA ARGENTINA LOS ANDES DE VALPARAISO",
 "Local_LICEO REPUBLICA DE GRECIA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA ARTURO BONOMETTI BROGI CHILLAN DE NUBLE",
 "Local_LICEO REPUBLICA DE ITALIA ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DEL BRASIL LANCO DE LOS RIOS",
 "Local_LICEO REPUBLICA DEL ECUADOR CONCEPCION DEL BIOBIO",
 "Local_LICEO REPUBLICA DEL ECUADOR TOME DEL BIOBIO",
 "Local_LICEO RODULFO AMANDO PHILIPPI PAILLACO DE LOS RIOS",
 "Local_LICEO RURAL LAS QUEMAS PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO RURAL PUTU CONSTITUCION DEL MAULE",
 "Local_LICEO SALESIANO CAMILO ORTUZAR MONTT MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAMCA ARUMANTI IQUIQUE DE TARAPACA",
 "Local_LICEO SAMUEL ROMAN ROJAS COMBARBALA DE COQUIMBO",
 "Local_LICEO SAN AGUSTIN DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO SAN CLEMENTE ENTRE RIOS SAN CLEMENTE DEL MAULE",
 "Local_LICEO SAN CONRADO DE FUTRONO FUTRONO DE LOS RIOS",
 "Local_LICEO SAN ESTEBAN SAN ESTEBAN DE VALPARAISO",
 "Local_LICEO SAN FELIPE BENICIO DE COYHAIQUE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO SAN FRANCISCO DE ASIS ARAUCO DEL BIOBIO",
 "Local_LICEO SAN FRANCISCO DE ASIS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO SAN FRANCISCO DE PLACILLA PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO SAN FRANCISCO DE QUITO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN FRANCISCO DE QUITO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN GERONIMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN ISIDRO LA CRUZ DE VALPARAISO",
 "Local_LICEO SAN JOSE DE MAIPO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN JUAN BAUTISTA DE HUALQUI HUALQUI DEL BIOBIO",
 "Local_LICEO SAN LUIS DE ALBA MARIQUINA DE LOS RIOS",
 "Local_LICEO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_LICEO SAN PEDRO SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTA CLARA (SEDE BRASIL) LOS ANDES DE VALPARAISO",
 "Local_LICEO SANTA FE LOS ANGELES DEL BIOBIO",
 "Local_LICEO SANTA TERESA DE LOS ANDES VINA DEL MAR DE VALPARAISO",
 "Local_LICEO SANTA TERESITA INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTIAGO BUERAS Y AVARIA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTO CURA DE ARS MAFIL DE LOS RIOS",
 "Local_LICEO SARA BRAUN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO SERGIO SILVA BASCUNAN LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SU SANTIDAD JUAN PABLO SEGUNDO ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO TALAGANTE BASICA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO AGRICOLA OBISPO RAFAEL LIRA INFANTE LA CRUZ DE VALPARAISO",
 "Local_LICEO TECNICO AMELIA COURBIS TALCA DEL MAULE",
 "Local_LICEO TECNICO BICENTENARIO JUANITA FERNANDEZ SOLAR LOS ANGELES DEL BIOBIO",
 "Local_LICEO TECNICO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_LICEO TECNICO DE RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO DE TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_LICEO TECNICO DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO FEMENINO A-29 DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO FEMENINO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO FILIDOR GAETE MONSALVEZ ARAUCO DEL BIOBIO",
 "Local_LICEO TECNICO MARTA BRUNET LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO MUNICIPAL OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL BARON VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL DE LA MADERA CORONEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL DIEGO PORTALES LINARES DEL MAULE",
 "Local_LICEO TECNICO PROFESIONAL EL LLANO PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL EL TAMBO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL FORESTAL PEHUEN - ROBLE HUACHO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL GONZALO GUGLIELMI MONTIEL YUMBEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL HEROES DE ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO TECNICO PROFESIONAL JORGE SANCHEZ UGARTE CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II GALVARINO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL LUCILA GODOY ALCAYAGA HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL MANNHEIM L1 QUILPUE DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL PATRICIO AYLWIN AZOCAR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL PEDRO DEL RIO ZANARTU HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL PROFESOR RICARDO NAVARRETE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_LICEO TECNICO PROFESIONAL VIOLETA PARRA SANDOVAL SAN CARLOS DE NUBLE",
 "Local_LICEO TECNICO VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO TECNOLOGICO ALFREDO NAZAR FERES VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L3 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TENIENTE FRANCISCO MERY AGUIRRE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO TERESA DE LOS ANDES CASTRO DE LOS LAGOS",
 "Local_LICEO THOMAS ALVA EDISON RENCA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TOMAS BURGOS PURRANQUE DE LOS LAGOS",
 "Local_LICEO TOMAS LAGO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO TRAPAQUEANTE TIRUA DEL BIOBIO",
 "Local_LICEO VALENTIN LETELIER LINARES DEL MAULE",
 "Local_LICEO VALLE DE CODPA CAMARONES DE ARICA Y PARINACOTA",
 "Local_LICEO VICENTE ALBERTO PALACIOS VALDES TOME DEL BIOBIO",
 "Local_LICEO VICENTE PEREZ ROSALES RIO BUENO DE LOS RIOS",
 "Local_LICEO VICTOR JARA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO VICTOR JARA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO VOLCAN SAN JOSE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO YOBILO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO ZAPALLAR CURICO DEL MAULE",
 "Local_LINCOLN COLLEGE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LYCEE ANTOINE DE SAINT EXUPERY COLINA METROPOLITANA DE SANTIAGO",
 "Local_MARIA EDUCA LA SERENA DE COQUIMBO",
 "Local_NETLAND SCHOOL ANTOFAGASTA DE ANTOFAGASTA",
 "Local_NORTH AMERICAN COLLEGE SEDE SOTOMAYOR ARICA DE ARICA Y PARINACOTA",
 "Local_POLIDEPORTIVO AYSEN AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_POLIDEPORTIVO CENTENARIO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_POLIDEPORTIVO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_POLIDEPORTIVO MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_POLIDEPORTIVO MUNICIPAL CALLE LARGA CALLE LARGA DE VALPARAISO",
 "Local_POLIDEPORTIVO MUNICIPAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_POLIDEPORTIVO OLIMPICO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_POLIDEPORTIVO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_POLIDEPORTIVO RIO CLARO DEL MAULE",
 "Local_POLIDERPORTIVO SAN CLEMENTE DEL MAULE",
 "Local_RECINTO INTERIOR ESTADIO MUNICIPAL PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_SAINT PETER'S SCHOOL VINA DEL MAR DE VALPARAISO",
 "Local_SAINT TRINITY COLLEGE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_SALON AUDITORIUM MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_SALON DE EVENTOS MUNICIPAL RIO HURTADO DE COQUIMBO",
 "Local_SCUOLA ITALIANA ARTURO DELLA' ORO VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_SCUOLA ITALIANA ARTURO DELLA'ORO L1 VALPARAISO DE VALPARAISO",
 "Local_SCUOLA ITALIANA GIROLAMO LONGHI VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_SUN FLOWER SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_TEATRO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_THE AMERICAN SCHOOL PUERTO MONTT DE LOS LAGOS",
 "Local_THE KINGSTOWN SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L2 VINA DEL MAR DE VALPARAISO",
 "Local_THE MAYFLOWER SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MAYFLOWER SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MISSION COLLEGE EDUCACION BASICA Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_THE NEWLAND SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE NEWLAND SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE SOUTHLAND SCHOOL LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_UCSC EDIFICIO FACEA CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD ANDRES BELLO, CAMPUS VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD ARTURO PRAT ARICA DE ARICA Y PARINACOTA",
 "Local_UNIVERSIDAD ARTURO PRAT IQUIQUE DE TARAPACA",
 "Local_UNIVERSIDAD ARTURO PRAT L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT VICTORIA DE LA ARAUCANIA",
 "Local_UNIVERSIDAD AUSTRAL DE CHILE PUERTO MONTT DE LOS LAGOS",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE TALCA DEL MAULE",
 "Local_UNIVERSIDAD CATOLICA - CAMPUS SAN JUAN PABLO SEGUNDO TEMUCO DE LA ARAUCANIA",
 "Local_UNIVERSIDAD CATOLICA DEL NORTE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD CATOLICA SEDE CURICO CURICO DEL MAULE",
 "Local_UNIVERSIDAD DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD DE LAS AMERICAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_UNIVERSIDAD DE TALCA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VALPARAISO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VINA DEL MAR, SEDE MIRAFLORES (2) VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L2 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD SANTO TOMAS CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD SANTO TOMAS VALDIVIA DE LOS RIOS",
 "Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD VINA DEL MAR, SEDE RECREO VINA DEL MAR DE VALPARAISO",
]

atributos_filtro_2023_comuna = [
 "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
 "ALEJANDRO NAVARRO BRAIN_Porcentaje",
 "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
 "CAROLINA GOIC BOROEVIC_Porcentaje",
 "EDUARDO ARTES BRICHETTI_Porcentaje",
 "JOSE ANTONIO KAST RIST_Porcentaje",
 "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
 "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
 "tot_per",
 "v27",
 "zona_Urbano",
 "tipohogar_Unipersonal",
 "tipohogar_Nuclear Monoparental",
 "tipohogar_Nuclear Biparental",
 "tipohogar_Extenso Monoparental",
 "tipohogar_Extenso Biparental",
 "pobreza_Pobres no extremos",
 "pobreza_No pobres",
 "v13_Propia",
 "esc2",
 "ecivil_En Pareja",
 "o31_Sí",
 "activ_Ocupados",
 "activ_Desocupados",
 "activ_Inactivos",
 "s28_Sano",
 "sist_salud_Privado",
 "r1b_En [comuna de ubicación la vivienda]",
 "ytotcor",
 "educ_Universidad",
 "prom_lect8b_com",
 "prom_mate8b_com",
 "prom_soc8b_com",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
]

atributos_filtro_2023_circ = [
 "Frac_Inmigrantes",
 "Frac_Pueblos",
 "Frac_Viv_Ocupada",
 "Frac_Viv_Particular",
 "Frac_Viv_Colectiva",
 "Frac_Casa",
 "Frac_Depa",
 "Frac_Pared_Horm",
 "Frac_Techo_Bueno",
 "Frac_Techo_Medio",
 "Frac_Piso_Bueno",
 "Frac_Mat_Aceptable",
 "Frac_Agua_Aceptable",
 "Densidad_Poblacion",
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
]

atributos_filtro_2023_dummies = [
 "Region_DE ANTOFAGASTA",
 "Region_DE ARICA Y PARINACOTA",
 "Region_DE ATACAMA",
 "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Region_DE COQUIMBO",
 "Region_DE LA ARAUCANIA",
 "Region_DE LOS LAGOS",
 "Region_DE LOS RIOS",
 "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Region_DE TARAPACA",
 "Region_DE VALPARAISO",
 "Region_DEL BIOBIO",
 "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Region_DEL MAULE",
 "Region_METROPOLITANA DE SANTIAGO",
 "Local_ALIANZA FRANCESA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA L2 VINA DEL MAR DE VALPARAISO",
 "Local_ALIANZA FRANCESA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_ANEXO DE COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_ANEXO ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ANEXO INSTITUTO PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ANEXO LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_AUTOSERVICIO LA TEJUELA PUERTO VARAS DE LOS LAGOS",
 "Local_AZAPA VALLEY SCHOOL ARICA DE ARICA Y PARINACOTA",
 "Local_C.C.P. COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_C.C.P. DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_C.C.P. DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_C.D.P. DE CALAMA CALAMA DE ANTOFAGASTA",
 "Local_C.D.P. DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE SANTIAGO SUR SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.D.P. DE TOCOPILLA TOCOPILLA DE ANTOFAGASTA",
 "Local_C.D.P. SANTIAGO I SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_C.E.I.A. LOS CASTANOS VINA DEL MAR DE VALPARAISO",
 "Local_C.P. ALTO HOSPICIO ALTO HOSPICIO DE TARAPACA",
 "Local_C.P. DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_C.P. DE PUERTO MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_C.P. DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_C.P. DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_C.P. LA SERENA LA SERENA DE COQUIMBO",
 "Local_C.P. RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_C.P.F. DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_C.P.F. DE SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CAMPUS ORIENTE UNIVERSIDAD CATOLICA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_CASA DEL ENCUENTRO CIUDADANO Y GIMNASIO ANDACOLLO DE COQUIMBO",
 "Local_CASINO PARQUE LOS TACOS COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO CIVICO EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO COMUNITARIO SERGIO SILVA ACUNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL COPIAPO DE ATACAMA",
 "Local_CENTRO CULTURAL EL TRANQUE LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO CULTURAL ESTACION MAPOCHO L3 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE CAPACITACION LABORAL REINO DE BELGICA ARICA DE ARICA Y PARINACOTA",
 "Local_CENTRO DE EDUCACION INTEGRADA DE ADULTOS COPIAPO DE ATACAMA",
 "Local_CENTRO DE EDUCACION PAULA JARAQUEMADA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EDUCACION TECNICO PROFESIONAL CODEDUC MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE EMPRENDIMIENTO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO DE FORMACION ACADEMICA PERFECTO DE LA FUENTE DEL VILLAR RINCONADA DE VALPARAISO",
 "Local_CENTRO DEPORTIVO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_CENTRO DEPORTIVO ROLF NATHAN LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUC.ADULTOS LUIS MOLL BRIONES VALDIVIA DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL AMERICO VESPUCIO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL AQUELARRE LICEO BICENTENARIO TENO DEL MAULE",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BALDOMERO LILLO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL BICENTENARIO ALTOS DE TOME TOME DEL BIOBIO",
 "Local_CENTRO EDUCACIONAL CARDENAL JOSE MARIA CARO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL CASA TALLERES SAN VICENTE DE PAUL L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DIEGO DE ALMAGRO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL DOCTOR AMADOR NEGHME R. ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL EDUARDO DE LA BARRA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L1 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ENRIQUE BERNSTEIN CARABANTE L2 PAINE METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ERNESTO YANEZ RIVERA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ESCRITORES DE CHILE RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL FERNANDO DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL GOYENECHEA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ISLA DE MAIPO ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL JOSE MIGUEL CARRERA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LA PINTANA L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LARUN RAYUN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL LAURA VICUNA RENCA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO EGANA L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MARIANO LATORRE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MILLANTU MACUL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL MIRADOR SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL NUEVA CREACION PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PADRE ALBERTO HURTADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PIAMARTINO CAROLINA LLONA DE CUEVAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL POETA EUSEBIO LILLO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PRINCIPADO DE ASTURIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PROVINCIA DE NUBLE SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL ROUSSEAU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN ANDRES MAIPU METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN CARLOS DE ARAGON L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN LORENZO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN RAMON SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL SAN SEBASTIAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCACIONAL SANTA CLARA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCACIONAL VALLE HERMOSO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO FERNANDO SANTIVAN PANGUIPULLI DE LOS RIOS",
 "Local_CENTRO EDUCATIVO FLORIDA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REINO DE SUECIA VALPARAISO DE VALPARAISO",
 "Local_CENTRO EDUCATIVO REPUBLICA MEXICANA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_CENTRO EDUCATIVO SIGLO XXI PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_CENTRO INTEGRADO DE EDUCACION ESPECIAL CONCEPCION DEL BIOBIO",
 "Local_CENTRO POLITECNICO PARTICULAR DE NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE LAS VIZCACHAS L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_CHILEAN EAGLES COLLEGE-LA PINTANA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COL. DE ARTES, CIENCIA Y TEC. DA VINCI PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO ABATE MOLINA LONGAVI DEL MAULE",
 "Local_COLEGIO ACADEMIA TARAPACA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ACHIGA COMEDUC LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ACONCAGUA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ACROPOLIS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ADOLFO BEYZAGA OVANDO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ADVENTISTA DE TEMUCO SEDE LOS CREADORES TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO ADVENTISTA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ADVENTISTA SANTIAGO SUR SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AGRICOLA CUNCUMEN GONZALO BARROS AMUNATEGUI SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO AGUSTIN EDWARDS VALPARAISO DE VALPARAISO",
 "Local_COLEGIO AJIAL RETIRO DEL MAULE",
 "Local_COLEGIO ALBERTO BLEST GANA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA BASICA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO CRUCHAGA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBERTO HURTADO SEGUNDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ALBERTO MOLINA CASTILLO PARRAL DEL MAULE",
 "Local_COLEGIO ALBERTO PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALBORADA DEL MAR CONCON DE VALPARAISO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LA CORDILLERA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCANTARA DE LOS ALTOS DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALCAZAR MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEMAN DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ALEMAN DE CONCEPCION SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO ALEMAN DE SANTIAGO LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALEXANDER FLEMING VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO ALICANTE DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL ROSAL L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL SOL L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALICANTE DEL VALLE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMA MATER LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALMONDALE LOMAS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO ALONKURA HUALPEN DEL BIOBIO",
 "Local_COLEGIO ALONSO DE ERCILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE BAQUEDANO) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALONSO DE QUINTERO (SEDE RITOQUE) QUINTERO DE VALPARAISO",
 "Local_COLEGIO ALTA CORDILLERA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO ALTAS CUMBRES PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO ALTAZOR CONCON DE VALPARAISO",
 "Local_COLEGIO ALTAZOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTO LAUQUEN LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO ALTO PALENA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ALTOMONTE L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO AMANECER CORONEL CORONEL DEL BIOBIO",
 "Local_COLEGIO AMANECER TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO AMERICA VILCUN DE LA ARAUCANIA",
 "Local_COLEGIO ANA MARIA JANER VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ANDREE ENGLISH SCHOOL LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANDRES BELLO MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ANGEL DE PEREDO LOTA DEL BIOBIO",
 "Local_COLEGIO ANGLO MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTAMARA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ANTARTICA CHILENA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO ANTONIO ACEVEDO HERNANDEZ PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTONIO VARAS VICUNA DE COQUIMBO",
 "Local_COLEGIO ANTU LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ANTUPIREN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ARABE VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO ARAUCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO COSTA MAUCO QUINTERO DE VALPARAISO",
 "Local_COLEGIO ARTISTICO ROBERTO MATTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO ARTISTICO SANTA CECILIA EDUCACION MEDIA OSORNO DE LOS LAGOS",
 "Local_COLEGIO ARTURO EDWARDS (SEDE CARRERA) VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ARTURO PRAT CHACON LA SERENA DE COQUIMBO",
 "Local_COLEGIO ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ARTURO PRAT PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ATENAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO AUGUSTO WINTER TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO AURORA DE CHILE CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AURORA DE CHILE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO AURORA DE CHILE SUR CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO AUSTRALIA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BAJO MOLLE IQUIQUE DE TARAPACA",
 "Local_COLEGIO BALMACEDA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BASICO ARAGON ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO BASICO CONSOLIDADO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO DE CHEPICA CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BASICO LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO NUEVA LOS LOBOS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO SAN VICENTE TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO BASICO VILLA ACERO HUALPEN DEL BIOBIO",
 "Local_COLEGIO BASICO VIOLETA PARRA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BATALLA DE LA CONCEPCION EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BELLAVISTA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BENJAMIN VICUNA MACKENNA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO BERNARDA MORIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO BERNARDO FELMER NIKLITSCHEK LANCO DE LOS RIOS",
 "Local_COLEGIO BETANIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO BICENTENARIO APRENDER LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO CABILDO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO ESPANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO BICENTENARIO LIONS SCHOOL L1 CARTAGENA DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO MATILDE HUICI NAVAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO PADRE ALBERTO HURTADO CHILLAN DE NUBLE",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L1 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO PEOPLE HELP PEOPLE L2 SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO BICENTENARIO POLITECNICO ALEMAN ALBERT EINSTEIN CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BICENTENARIO SANTO CURA DE ARS SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO BLANCO ENCALADA CAUQUENES DEL MAULE",
 "Local_COLEGIO BORDEMAR VALPARAISO DE VALPARAISO",
 "Local_COLEGIO BOSQUEMAR PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO BOSQUES DE GAIA CONSTITUCION DEL MAULE",
 "Local_COLEGIO BRASILIA L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L1 CONCON DE VALPARAISO",
 "Local_COLEGIO BRITANICO ST. MARGARET`S L2 CONCON DE VALPARAISO",
 "Local_COLEGIO BUEN PASTOR COPIAPO DE ATACAMA",
 "Local_COLEGIO CALAMA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CALETA SAN PEDRO LA SERENA DE COQUIMBO",
 "Local_COLEGIO CAMILO HENRIQUEZ CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CAMILO HENRIQUEZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN IGNACIO CARRERA PINTO L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO CAPITAN PASTENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL ANTONIO SAMORE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL CARLOS OVIEDO CAVADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CARDENAL RAUL SILVA HENRIQUEZ PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA LA SERENA DE COQUIMBO",
 "Local_COLEGIO CARLOS CONDELL DE LA HAZA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO CARLOS COUSINO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CATOLICO NAZARET ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO CERRO GUAYAQUIL MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO CHAMPAGNAT L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHAMPAGNAT L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHARLES DARWIN VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO CHILE NORTE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHRISTIAN GARDEN SCHOOL LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CHUQUICAMATA CALAMA DE ANTOFAGASTA",
 "Local_COLEGIO CIRUJANO PEDRO VIDELA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO CIUDAD DE FRANKFORT SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CLARA BRINCEFIELD PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COLEGIO CLEMENTINOS SAN CLEMENTE DEL MAULE",
 "Local_COLEGIO COLONIAL DE PIRQUE PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COMPANIA DE MARIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO COMPANIA DE MARIA PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CONCEPCION CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO CONCEPCION DE CHILLAN L1 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION DE CHILLAN L2 CHILLAN DE NUBLE",
 "Local_COLEGIO CONCEPCION LOS HUERTOS SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO CONFEDERACION SUIZA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO CORDILLERA DE LOS ANDES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO COSTA CORDILLERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO COYAM CHILLAN DE NUBLE",
 "Local_COLEGIO CREACION CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO CREACIONES LA ARAUCANA PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO CRECER PURRANQUE DE LOS LAGOS",
 "Local_COLEGIO CUMBRES DE BOCO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO D-91 CENTENARIO ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DARIO SALAS PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO DARIO SALAS TALCA DEL MAULE",
 "Local_COLEGIO DE ADMINISTRACION Y COMERCIO EL INGENIO OVALLE DE COQUIMBO",
 "Local_COLEGIO DE APLICACION TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO DE ARTES CLAUDIO ARRAU COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DE CULTURA Y DIFUSION ARTISTICA LA UNION DE LOS RIOS",
 "Local_COLEGIO DE HUMANIDADES DE VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO DE LA PROVIDENCIA CARMELA LARRAIN DE INFANTE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LA PURISIMA CONCEPCION CHILLAN DE NUBLE",
 "Local_COLEGIO DE LA SALLE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES DE MANQUEHUE L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES HUALPEN DEL BIOBIO",
 "Local_COLEGIO DE LOS SAGRADOS CORAZONES PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MAIPO BUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DE MUSICA JUAN SEBASTIAN BACH VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DE NINAS CANADA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DEL ALBA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO DEL REAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL SAGRADO CORAZON APOQUINDO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEL VERBO DIVINO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DEPORTIVO MUNICIPAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO DEPORTIVO SANTIAGO ESCUTI ORREGO L1 QUILLOTA DE VALPARAISO",
 "Local_COLEGIO DIEGO DUBLE URRUTIA ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO DIEGO PORTALES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIEGO THOMPSON CURICO DEL MAULE",
 "Local_COLEGIO DIFERENCIAL MADRE TIERRA LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIFERENCIAL PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DISCOVERY SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO DIVINA PASTORA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DIVINA PASTORA NUNOA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR LUIS SEPULVEDA SALVATIERRA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOCTOR MANUEL AVILES INOSTROZA LICANTEN DEL MAULE",
 "Local_COLEGIO DOMINGO EYZAGUIRRE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DOMINGO MATTE MESIAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO DON ORIONE LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO DON ORIONE QUINTERO DE VALPARAISO",
 "Local_COLEGIO ECHAURREN ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL ALBA DE MACUL MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL BOLDO CURICO DEL MAULE",
 "Local_COLEGIO EL LABRADOR VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO EL MELON L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO EL NARANJAL RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO EL QUISCO EL QUISCO DE VALPARAISO",
 "Local_COLEGIO EL REFUGIO PENCO DEL BIOBIO",
 "Local_COLEGIO EL SEMBRADOR ANEXO 2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL SEMBRADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EL TABO L1 EL TABO DE VALPARAISO",
 "Local_COLEGIO EL TABO L2 EL TABO DE VALPARAISO",
 "Local_COLEGIO ELENA BETTINI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ELVIRA HURTADO DE MATTE DE SANTIAGO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EMPRENDER ENSENANZA MEDIA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO EMPRENDER OBISPO ALVEAR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ESPANA IQUIQUE DE TARAPACA",
 "Local_COLEGIO ESPANA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO ESPANA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO ESPERANZA QUILPUE DE VALPARAISO",
 "Local_COLEGIO ESPIRITU SANTO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO ETCHEGOYEN TALCAHUANO SEDE BRISAS DEL SOL TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO EVEREST LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXCELSIOR L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EXTREMADURA DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO EYZAGUIRRE MEDIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FAMILIA DE NAZARETH LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FERNANDO DURAN VILLARREAL QUILPUE DE VALPARAISO",
 "Local_COLEGIO FILIPENSE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FINLANDIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FOR LIFE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO FORESTAL DE QUILACAHUIN SAN PABLO DE LOS LAGOS",
 "Local_COLEGIO FRANCIS SCHOOL COQUIMBO DE COQUIMBO",
 "Local_COLEGIO FRANCISCO DE ASIS PINTO DE NUBLE",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L1 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO DE VILLAGRA L2 PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO FRANCISCO PALAU LA SERENA DE COQUIMBO",
 "Local_COLEGIO FRATERNIDAD SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO FUNDADORES DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO GABRIELA MISTRAL MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GALVARINO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO GENERAL JOSE VELASQUEZ BORQUEZ L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO GERMANIA DEL VERBO DIVINO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO GERONIMO DE ALDERETE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GERONIMO RENDIC LA SERENA DE COQUIMBO",
 "Local_COLEGIO GIUSEPPE BERTOLUZZI DE FELIP SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO GOBERNADOR CONCHA Y SALVATIERRA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO GRACE COLLEGE L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE COLLEGE L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRACE SCHOOL PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO GRAN BRETANA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO GUARDIAMARINA GUILLERMO ZANARTU IRIGOYEN QUILPUE DE VALPARAISO",
 "Local_COLEGIO HARAS LOS CONDORES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HAYDN DE SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HELLEN KELLER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERMANO FERNANDO DE LA FUENTE SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO HERNAN OLGUIN LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HERNANDO DE MAGALLANES ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO HEROES DE LA CONCEPCION LA SERENA DE COQUIMBO",
 "Local_COLEGIO HISPANO AMERICANO RIO VIEJO CHILLAN DE NUBLE",
 "Local_COLEGIO HISPANO VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO HISPANOAMERICANO VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO HUACHIPATO TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO HUELEN VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO IGNACIO CARRERA PINTO VICTORIA DE LA ARAUCANIA",
 "Local_COLEGIO INFOCAP SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INGLES IQUIQUE DE TARAPACA",
 "Local_COLEGIO INGLES SAN JOSE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INGLES WOODLAND LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO INMACULADA CONCEPCION DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA CONCEPCION NUESTRA SENORA DE LOURDES PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INMACULADA DE LOURDES L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INMACULADA DE LOURDES L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO INNOV-ARTE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO INSTITUCION TERESIANA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUCION TERESIANA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO INSTITUTO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO INSTITUTO SANTA MARIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO INTEGRADO EDUARDO FREI MONTALVA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO ITALIANO SANTA ANA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JACQUES COUSTEAU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JACQUES COUSTEAU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JESUS ANDINO CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JESUS SERVIDOR PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOHN WALL HOLCOMB ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO JORGE HUNEEUS ZEGERS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JORGE PRIETO LETELIER PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE ANTONIO MANSO DE VELASCO RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JOSE ARRIETA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JOSE MANUEL BALMACEDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL CARRERA LA SERENA DE COQUIMBO",
 "Local_COLEGIO JOSE MIGUEL INFANTE QUILPUE DE VALPARAISO",
 "Local_COLEGIO JOSEFINO SANTISIMA TRINIDAD PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO JUAN PABLO II CUNCO DE LA ARAUCANIA",
 "Local_COLEGIO JUAN TACHOIRE MOENA MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO JUAN XXIII VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO JUANITA FERNANDEZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO JUANITA FERNANDEZ L2 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO LA GIROUETTE LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LA HERRADURA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO LA PAZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LA PROVIDENCIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO LAS AMERICAS L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO LAS RASTRAS TALCA DEL MAULE",
 "Local_COLEGIO LAURA VICUNA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LEONARDO DA VINCI ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO LEONARDO DA VINCI DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LEONARDO DA VINCI L1 LA CRUZ DE VALPARAISO",
 "Local_COLEGIO LEONARDO DA VINCI RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LEONARDO MURIALDO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO LIAHONA PUCON DE LA ARAUCANIA",
 "Local_COLEGIO LIAHONA QUILPUE DE VALPARAISO",
 "Local_COLEGIO LIBERTADOR SAN MARTIN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LIBERTADOR SIMON BOLIVAR RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LICARAYEN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ERRAZURIZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LORENZO MONDANELLI COIHUECO DE NUBLE",
 "Local_COLEGIO LORENZO SAZIE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ALERCES PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO LOS ALPES MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS ANDES DE VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO LOS CONDORES TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO LOS CONQUISTADORES CURICO DEL MAULE",
 "Local_COLEGIO LOS CONQUISTADORES VALDIVIA DE LOS RIOS",
 "Local_COLEGIO LOS EDUCADORES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO LOS LIBERTADORES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS LLANOS MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO LOS REYES QUILPUE DE VALPARAISO",
 "Local_COLEGIO LOS ROBLES DE LABRANZA TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO LUIS CRUZ MARTINEZ LA LIGUA DE VALPARAISO",
 "Local_COLEGIO LUIS GALDAMES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MADRE ADMIRABLE DE SCHOENSTATT TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MADRE ANA EUGENIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE ANA EUGENIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MADRE PAULINA CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO MADRES DOMINICAS CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MAHATMA GANDHI IQUIQUE DE TARAPACA",
 "Local_COLEGIO MAIPO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANANTIAL VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MANQUECURA CIUDAD DE LOS VALLES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA PUENTE ALTO L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANQUECURA VALLE LO CAMPINO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MANUEL BULNES PRIETO QUILPUE DE VALPARAISO",
 "Local_COLEGIO MANUEL FRANCISCO CORREA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL MONTT VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO MANUEL RODRIGUEZ ERDOIZA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MANUEL RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARGOT LOYOLA PALACIOS LINARES DEL MAULE",
 "Local_COLEGIO MARIA ANA MOGAS PAINE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA AUXILIADORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MARIA AUXILIADORA PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_COLEGIO MARIA AUXILIADORA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO MARIA EDUCA  SEDE LAS PARCELA LA SERENA DE COQUIMBO",
 "Local_COLEGIO MARIA EDUCA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO MARIA ELENA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA INMACULADA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARIA INMACULADA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO MARIA SYLVESTER RASCH ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO MARIA TERESA CANCINO AGUILAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARIA VILLALOBOS ARTEAGA OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MARIE POUSSEPIN PUTAENDO DE VALPARAISO",
 "Local_COLEGIO MARINA DE CHILE CONCEPCION DEL BIOBIO",
 "Local_COLEGIO MARISTA HERMANO FERNANDO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MARISTA MARCELINO CHAMPAGNAT L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MASTERS COLLEGE VALDIVIA DE LOS RIOS",
 "Local_COLEGIO MATER DEI CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELFORD COLLEGE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MERRYLAND PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO METODISTA CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO METODISTA WILLIAM TAYLOR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO MINERAL EL TENIENTE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MINISTRO DIEGO PORTALES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MIRADOR DEL LAGO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO MIRAFLORES D-329 L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO MIRAMAR ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO MIXTO INMACULADA CONCEPCION TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO MONSENOR JAIME LARRAIN BUNSTER MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTANER DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTE TABOR Y NAZARET L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTESSORI SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MONTEVERDE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MOUNTAIN GREEN SCHOOL PANGUIPULLI DE LOS RIOS",
 "Local_COLEGIO MULTICULTURAL RAYEN MAPU CURICO DEL MAULE",
 "Local_COLEGIO MUNDO MAGICO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO MUNICIPAL DIVINA GABRIELA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL EDUARDO DE GEYTER RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL HUALLILEN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO MUNICIPAL LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO MUSTAFA KEMAL ATATURK LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NACIONAL L1 LIMACHE DE VALPARAISO",
 "Local_COLEGIO NACIONAL L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONAL L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NACIONES UNIDAS LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NAVARRA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NERUDA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NEW LITTLE COLLEGE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVA TERRA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NOVO MUNDO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE ANDACOLLO L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DE LA PRESENTACION MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL CARMEN DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUESTRA SENORA DEL ROSARIO LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA ALERCE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO NUEVA BRAUNAU PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO NUEVA ERA SIGLO XXI SEDE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVA PROVIDENCIA SAN ANTONIO DE VALPARAISO",
 "Local_COLEGIO NUEVO HORIZONTE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO NUEVO MILENIO L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVO MILENIO L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO NUEVOS HORIZONTES SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO OZANAM L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO OZANAM L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PABLO GARRIDO VARGAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO PABLO NERUDA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PABLO NERUDA PARRAL DEL MAULE",
 "Local_COLEGIO PABLO NERUDA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PADRE JOSE KENTENICH PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALESTINO LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PALMARES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARQUE CENTRAL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PARQUE LAS AMERICAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARROQUIAL SANTA MARIA GORETTI CONCON DE VALPARAISO",
 "Local_COLEGIO PART. SUB. CUMBRES DEL CHOAPA SALAMANCA DE COQUIMBO",
 "Local_COLEGIO PARTICULAR ALBERTO BLEST GANA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO PARTICULAR AURORA DE CHILE CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO PARTICULAR EVANGELICO BETANIA CHILLAN DE NUBLE",
 "Local_COLEGIO PARTICULAR IGNACIO CARRERA PINTO L1 OLMUE DE VALPARAISO",
 "Local_COLEGIO PARTICULAR LEONARDO DA VINCI COQUIMBO DE COQUIMBO",
 "Local_COLEGIO PARTICULAR MARTA BRUNET LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO PARTICULAR POLITECNICO EYZAGUIRRE BASICA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PARTICULAR SAN JOSE LA SERENA DE COQUIMBO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L1 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PASIONISTAS DE QUILPUE L2 QUILPUE DE VALPARAISO",
 "Local_COLEGIO PATRONA SENORA DE LOURDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO AGUIRRE CERDA LA SERENA DE COQUIMBO",
 "Local_COLEGIO PEDRO APOSTOL PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO DE VALDIVIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PEDRO MONTT C-100 L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO PELCHUQUIN MARIQUINA DE LOS RIOS",
 "Local_COLEGIO PICHASCA RIO HURTADO DE COQUIMBO",
 "Local_COLEGIO PIERRE TEILHARD DE CHARDIN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POLITECNICO SAN JOSE CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE DOMINGO PARRA CORVALAN CORONEL DEL BIOBIO",
 "Local_COLEGIO POLIVALENTE JAPON CURICO DEL MAULE",
 "Local_COLEGIO POLIVALENTE LAS CAMELIAS RETIRO DEL MAULE",
 "Local_COLEGIO POLIVALENTE PRESIDENTE JOSE MANUEL BALMACEDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO POMAIRE MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PORTALIANO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRE ESCOLAR CANTAGALLO L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PRESIDENTE PEDRO AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO PRESTON SCHOOL HUALPEN DEL BIOBIO",
 "Local_COLEGIO PROCERES DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROFESOR ILDEFONSO CALDERON PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PROVIDENCIA DEL SAGRADO CORAZON TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PROVIDENCIA PARRAL DEL MAULE",
 "Local_COLEGIO PUERTO VARAS PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE CHICAUMA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO PUMAHUE PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO PUMAHUE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO PUMAHUE VALPARAISO DE VALPARAISO",
 "Local_COLEGIO QUILLON QUILLON DE NUBLE",
 "Local_COLEGIO QUITALMAHUE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO RAKIDUAM COQUIMBO DE COQUIMBO",
 "Local_COLEGIO RAMON ANGEL JARA LOS MUERMOS DE LOS LAGOS",
 "Local_COLEGIO RAYEN CAVEN CONCON DE VALPARAISO",
 "Local_COLEGIO REBECA FERNANDEZ VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REDLAND SCHOOL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REGINA PACIS PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REMODELACION SIMONS TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO REPUBLICA ARGENTINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE CHILE DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO REPUBLICA DE CHILE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO REPUBLICA DE COLOMBIA L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE CROACIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE GUATEMALA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO REPUBLICA DE ITALIA IQUIQUE DE TARAPACA",
 "Local_COLEGIO REPUBLICA DE MEXICO QUILLOTA DE VALPARAISO",
 "Local_COLEGIO REPUBLICA DE MEXICO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO RIACHUELO RIO NEGRO DE LOS LAGOS",
 "Local_COLEGIO RIO GRANDE MONTE PATRIA DE COQUIMBO",
 "Local_COLEGIO ROBERTO BRAVO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO ROSA ELVIRA MATTE DE PRIETO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO ROSITA NOVARO PUERTO VARAS DE LOS LAGOS",
 "Local_COLEGIO RUBEN CASTRO VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO RUCALHUE HUALPEN DEL BIOBIO",
 "Local_COLEGIO RUPANIC SCHOOL ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS DE LA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAGRADO CORAZON DE JESUS SAN CARLOS DE NUBLE",
 "Local_COLEGIO SAGRADOS CORAZONES MONJAS FRANCESAS VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAINT GEORGE'S L1 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT GEORGE'S L2 VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT LOUIS SCHOOL TILTIL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT MARY LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAINT MATTHEW VILLARRICA DE LA ARAUCANIA",
 "Local_COLEGIO SAINT MAURICES CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAINT PATRICK SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAINT-LAWRENCE QUILPUE DE VALPARAISO",
 "Local_COLEGIO SALESIANO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SALESIANO DON BOSCO IQUIQUE IQUIQUE DE TARAPACA",
 "Local_COLEGIO SALESIANO EL PATROCINIO DE SAN JOSE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SALESIANO SANTO DOMINGO SAVIO ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SALESIANOS VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SAN ADRIAN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN AGUSTIN L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN AGUSTIN L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO CONSTITUCION DEL MAULE",
 "Local_COLEGIO SAN ALBERTO HURTADO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ALBERTO HURTADO QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANDRES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ANTONIO DE MATILLA ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO DE VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_COLEGIO SAN ANTONIO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN BUENAVENTURA CHILLAN DE NUBLE",
 "Local_COLEGIO SAN CARLOS DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CAYETANO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CONSTANTINO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN CRISTOBAL APOSTOL PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN DAMIAN LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN ESTEBAN DE BULNES - ANEXO BASICA BULNES DE NUBLE",
 "Local_COLEGIO SAN FELIPE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FERNANDO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS CHOLCHOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN FRANCISCO DE ASIS DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DE ASIS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO DEL ALBA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L1 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO JAVIER DE HUECHURABA L2 HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TECNICO PROFESIONAL LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN FRANCISCO TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SAN GABRIEL ARCANGEL LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAN GUILLERMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN HERNALDO PUCHUNCAVI DE VALPARAISO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO EL BOSQUE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN IGNACIO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_COLEGIO SAN ISAAC JOGUES QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOAQUIN LA SERENA DE COQUIMBO",
 "Local_COLEGIO SAN JOSE ANGOL DE LA ARAUCANIA",
 "Local_COLEGIO SAN JOSE CALLE LARGA DE VALPARAISO",
 "Local_COLEGIO SAN JOSE DE CHICUREO COLINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE DE RENCA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JOSE MARIQUINA DE LOS RIOS",
 "Local_COLEGIO SAN JUAN DE LAS CONDES LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO DE GUADALUPE MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN DIEGO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN JUAN EVANGELISTA L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUCAS DE LO ESPEJO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN LUIS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO SAN MARCOS DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SAN MARCOS MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN MARCOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COLEGIO SAN MARCOS VALDIVIA DE LOS RIOS",
 "Local_COLEGIO SAN MATEO OSORNO DE LOS LAGOS",
 "Local_COLEGIO SAN MIGUEL DE LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN NICOLAS HIJUELAS DE VALPARAISO",
 "Local_COLEGIO SAN NICOLAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SAN PATRICIO CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SAN PEDRO NOLASCO VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE QUILICURA L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN SEBASTIAN DE RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VIATOR L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SAN VICENTE DE PAUL CHILLAN DE NUBLE",
 "Local_COLEGIO SANTA BARBARA H.S. QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BEATRIZ PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA BERNARDITA TALCAHUANO DEL BIOBIO",
 "Local_COLEGIO SANTA CATALINA LABOURE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA CRUZ DE FREIRE FREIRE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA CRUZ DE LONCOCHE LONCOCHE DE LA ARAUCANIA",
 "Local_COLEGIO SANTA EUFRASIA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA FAMILIA COQUIMBO DE COQUIMBO",
 "Local_COLEGIO SANTA FILOMENA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA ISABEL L1 NOGALES DE VALPARAISO",
 "Local_COLEGIO SANTA ISABEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA JUANA DE ARCO SAN FELIPE DE VALPARAISO",
 "Local_COLEGIO SANTA LUISA DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA MARIA DE ACONCAGUA SANTA MARIA DE VALPARAISO",
 "Local_COLEGIO SANTA MARIA DE LA CORDILLERA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE LA PROVIDENCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARIA REINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA MARTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA SABINA CONCEPCION DEL BIOBIO",
 "Local_COLEGIO SANTA SOFIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE JESUS DE LOS ANDES HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESA DE LOS ANDES MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COLEGIO SANTA TERESA DE LOS MORROS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA TERESITA DEL NINO JESUS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTA URSULA VITACURA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO - QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTIAGO DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO DOMINGO HELEN LEE LASSEN SANTO DOMINGO DE VALPARAISO",
 "Local_COLEGIO SANTO TOMAS DE AQUINO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS DE TALCA MAULE DEL MAULE",
 "Local_COLEGIO SANTO TOMAS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SANTO TOMAS LOS ANGELES DEL BIOBIO",
 "Local_COLEGIO SAUCACHE ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO SCOLE CREARE TEMUCO DE LA ARAUCANIA",
 "Local_COLEGIO SEBASTIAN ELCANO L1 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEBASTIAN ELCANO L2 SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L1 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PADRE ALBERTO HURTADO L2 CHILLAN DE NUBLE",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO PONTIFICIO MENOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L1 VINA DEL MAR DE VALPARAISO",
 "Local_COLEGIO SEMINARIO SAN RAFAEL L2 VALPARAISO DE VALPARAISO",
 "Local_COLEGIO SENDA DEL SABER PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SIMON BOLIVAR ALTO HOSPICIO DE TARAPACA",
 "Local_COLEGIO SIMON BOLIVAR LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SOL DEL VALLE L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO SUYAI MAULE DEL MAULE",
 "Local_COLEGIO SYDNEY COLLEGE CHILLAN DE NUBLE",
 "Local_COLEGIO TECNICO INDUSTRIAL DON BOSCO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_COLEGIO TECNICO PROFESIONAL HONORIO OJEDA VALDERAS LA UNION DE LOS RIOS",
 "Local_COLEGIO TECNICO PROFESIONAL LOS ACACIOS CONCEPCION DEL BIOBIO",
 "Local_COLEGIO TECNICO PROFESIONAL MISION SAN JUAN DE LA COSTA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_COLEGIO TECNICO PROFESIONAL NOCEDAL LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TECNICO PROFESIONAL PIEDRA AZUL PUERTO MONTT DE LOS LAGOS",
 "Local_COLEGIO TECNOLOGICO DARIO SALAS CHILLAN VIEJO DE NUBLE",
 "Local_COLEGIO TECNOLOGICO DON BOSCO DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_COLEGIO TENIENTE HERNAN MERINO CORREA VALDIVIA DE LOS RIOS",
 "Local_COLEGIO TERESA DE LOS ANDES-ALGARROBO ALGARROBO DE VALPARAISO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERESIANO ENRIQUE DE OSSO L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO TERRAUSTRAL DEL SOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE KENT SCHOOL PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO THE PACIFIC SCHOOL CHIGUAYANTE DEL BIOBIO",
 "Local_COLEGIO TOMAS MORO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UMBRAL DE CURAUMA VALPARAISO DE VALPARAISO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO UNIVERSITARIO EL SALVADOR L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VALLE DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_COLEGIO VICENTE VALDES LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VICHUQUEN CURICO DEL MAULE",
 "Local_COLEGIO VICTOR DOMINGO SILVA LA SERENA DE COQUIMBO",
 "Local_COLEGIO VILLA CARTAGO CARTAGENA DE VALPARAISO",
 "Local_COLEGIO VILLA MARIA ACADEMY L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA MARIA ACADEMY L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_COLEGIO VILLA NONGUEN CONCEPCION DEL BIOBIO",
 "Local_COLEGIO WINDSOR SCHOOL VALDIVIA DE LOS RIOS",
 "Local_COLEGIO WINTERHILL VINA DEL MAR DE VALPARAISO",
 "Local_COMPLEJO DEPORTIVO SAUCACHE UNIVERSIDAD DE TARAPACA ARICA DE ARICA Y PARINACOTA",
 "Local_COMPLEJO EDUCACIONAL ALBERTO WIDMER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARDENAL ANTONIO SAMORE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CARLOS HOLZAPFEL PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL CERRO NAVIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL CHIMBARONGO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L1 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL CLARA SOLOVERA L2 EL QUISCO DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL COLLIPULLI COLLIPULLI DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL DARIO SALAS DIAZ CARAHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL ESPERANZA MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL FELIPE HERRERA LANE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL IGNAO LAGO RANCO DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL JOAQUIN EDWARDS BELLO MACUL METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JOSE MIGUEL CARRERA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL JUAN SCHLEYER FREIRE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUAN XXIII LONCOCHE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL JUANITA FERNANDEZ SOLAR RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA FRONTERA TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA GRANJA VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION BASICA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L1 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LA REINA SECCION MEDIA L2 LA REINA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LAS ACACIAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL LUIS DURAND DURAND TRAIGUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MAIPU ANEXO RINCONADA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MANUEL PLAZA REYES LAMPA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MARTIN KLEINKNECHT TOLTEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR FRANCISCO VALDES SUBERCASEAUX CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MONSENOR GUILLERMO HARTL PITRUFQUEN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL MUNICIPAL BRIGIDA WALKER NUNOA METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL NUEVA ALBORADA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PABLO SEXTO PUCON DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE LAS CASAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE NICOLAS VILCUN DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PADRE OSCAR MOSER PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL PEDRO PRADO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_COMPLEJO EDUCACIONAL PENCAHUE PENCAHUE DEL MAULE",
 "Local_COMPLEJO EDUCACIONAL PRINCIPE DE GALES NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL RUKA NGEN CURARREHUE DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SAN AGUSTIN VILLARRICA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL SARGENTO ALDEA L1 PUCHUNCAVI DE VALPARAISO",
 "Local_COMPLEJO EDUCACIONAL TIERRA DE ESPERANZA PANGUIPULLI DE LOS RIOS",
 "Local_COMPLEJO EDUCACIONAL UNION AMANECER TEMUCO DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCACIONAL VICTORIA VICTORIA DE LA ARAUCANIA",
 "Local_COMPLEJO EDUCATIVO CARACOLES SIERRA GORDA DE ANTOFAGASTA",
 "Local_COMPLEJO EDUCATIVO JUAN JOSE LATORRE BENAVENTE MEJILLONES DE ANTOFAGASTA",
 "Local_CORPORACION DOCENTE SAINT DOMINIC L1 VINA DEL MAR DE VALPARAISO",
 "Local_CORPORACION EDUCACIONAL COLEGIO INGLES DE TALCA TALCA DEL MAULE",
 "Local_DENVER COLORADO SCHOOL EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_DINABEC COLLEGE SAN CARLOS DE NUBLE",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DIRECCION DE TRANSITO Y TRANSPORTE PUBLICO L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_DUOC UC, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_DUOC UC, SEDE VINA DEL MAR L2 VINA DEL MAR DE VALPARAISO",
 "Local_EDUCADOR ARTURO ALVEAR RAMOS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESC. BASICA MARTA EMILIANA AGUILAR ZERON TIERRA AMARILLA DE ATACAMA",
 "Local_ESC. BASICA PARTICULAR SAN PABLO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESC. DE CONCENTRACION FRONTERIZA DOROTEA NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESC. HEBERTO VELAZQUEZ VELAZQUEZ OVALLE DE COQUIMBO",
 "Local_ESC.BASICA CAPITAN RAFAEL TORREBLANCA VALLENAR DE ATACAMA",
 "Local_ESCUELA  BERNARDO O'HIGGINS RIQUELME TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA  G-582 COIPUE FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA 04 DE OCTUBRE CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA 10 ANGELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 1287 SAN MARCOS APOSTOL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA 21 DE MAYO SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA 7 ARABE-SIRIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA 88 CANADA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ABRAHAM SEPULVEDA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA ACAPULCO LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADELAIDA LA FETRA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ADOLFO QUIROZ HERNANDEZ CAUQUENES DEL MAULE",
 "Local_ESCUELA ADVENTISTA DE HUALPEN HUALPEN DEL BIOBIO",
 "Local_ESCUELA AGUAS Y GAVIOTAS TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA ALBERT EINSTEIN PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBERTO HURTADO PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA ALBORADA DE TALAGANTE TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALBORADA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA ALCALDE MAXIMILIANO POBLETE CORTES ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ALCIDES REYES FRIAS L1 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALCIDES REYES FRIAS L2 MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ALEJANDRO CHELEN ROJAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA ALEJANDRO GIDI LINARES DEL MAULE",
 "Local_ESCUELA ALEJANDRO GOROSTIAGA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ALEJANDRO PEREZ URBANO TUCAPEL DEL BIOBIO",
 "Local_ESCUELA ALEMANIA PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALEMANIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ALEMANIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ALERCE HISTORICO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA ALESSANDRI CURICO DEL MAULE",
 "Local_ESCUELA ALGARROBAL COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIANZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALICIA ARIZTIA DE SILVA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALIRO LAMAS CASTILLO DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ALIVEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALLIPEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH IQUIQUE DE TARAPACA",
 "Local_ESCUELA ALMIRANTE PATRICIO LYNCH PENCO DEL BIOBIO",
 "Local_ESCUELA ALMIRANTE SIMPSON AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ALONSO DE ERCILLA LA SERENA DE COQUIMBO",
 "Local_ESCUELA ALONSO DE ERCILLA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ALTO CABRERO CABRERO DEL BIOBIO",
 "Local_ESCUELA ALTO PANGUE SAN RAFAEL DEL MAULE",
 "Local_ESCUELA AMANDA LABARCA HUBERSTONE CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA AMERICA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA AMERICA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ANA FRANK QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDALIEN DE COLINA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDES DEL SUR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANDRES ALCAZAR LAJA DEL BIOBIO",
 "Local_ESCUELA ANDRES BELLO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ANEXA ANCUD DE LOS LAGOS",
 "Local_ESCUELA ANGACHILLA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ANIBAL PINTO CAUQUENES DEL MAULE",
 "Local_ESCUELA ANTILHUE DE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ANTONIO DE ZUNIGA PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTONIO TIRADO LANAS OVALLE DE COQUIMBO",
 "Local_ESCUELA ANTONIO TREDAN ARKO GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ANTUMALAL QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AONIKENK RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA ARAUCARIAS DE CHILE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARGENTINA CURICO DEL MAULE",
 "Local_ESCUELA ARMANDO ARANCIBIA OLIVOS LEBU DEL BIOBIO",
 "Local_ESCUELA ARNALDO FALABELLA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARRAU MENDEZ PARRAL DEL MAULE",
 "Local_ESCUELA ARTISTICA ARMANDO DUFEY BLANC TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTISTICA VIOLETA PARRA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_ESCUELA ARTURO EBENSPERGER RICHTER LEBU DEL BIOBIO",
 "Local_ESCUELA ARTURO HUGHES CERNA CORONEL DEL BIOBIO",
 "Local_ESCUELA ARTURO MATTE LARRAIN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ARTURO MERINO BENITEZ CHILLAN DE NUBLE",
 "Local_ESCUELA ARTURO PEREZ CANTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ARTURO PRAT CHACON CANETE DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ARTURO PRAT CHACON SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA ARTURO PRAT CHACON TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA ARTURO PRAT CHACON VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ARTURO PRAT TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ARTURO VILLALON SIEULANNE OVALLE DE COQUIMBO",
 "Local_ESCUELA ATENAS OLMUE DE VALPARAISO",
 "Local_ESCUELA ATENEA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AURORA DE CHILE TALCA DEL MAULE",
 "Local_ESCUELA AURORA SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA AVIADOR DAGOBERTO GODOY F. CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AVIADORES EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA AYTUE CASTRO DE LOS LAGOS",
 "Local_ESCUELA BABILONIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BALMACEDA SAAVEDRA LAULHERE CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BAQUEDANO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BARBA RUBIA HUALANE DEL MAULE",
 "Local_ESCUELA BARBARA KAST RIST PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BARRAZA BAJO OVALLE DE COQUIMBO",
 "Local_ESCUELA BASE EL BOSQUE EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA 11 DE SEPTIEMBRE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA 21 DE MAYO CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ABEL GUERRERO AGUIRRE QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA AGUA DE LA GLORIA CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA AMANECER RIO HURTADO DE COQUIMBO",
 "Local_ESCUELA BASICA AMELIA GODOY PENA LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA AMERICA COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA ANGELINA SALAS OLIVARES CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA ANTUPILLAN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA ARTURO ALESSANDRI PALMA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA ARTURO PRAT TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLAVISTA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA BELLO HORIZONTE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA BENJAMIN MATTE LARRAIN HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA BERNARDO O'HIGGINS RIQUELME OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA BOCA BIO BIO SUR SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA BRISAS DEL MAR ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA BUCHUPUREO COBQUECURA DE NUBLE",
 "Local_ESCUELA BASICA BUENA VISTA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CACIQUE LEVIAN SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA CALETA DEL MEDIO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CAMILO MORI INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CARILEUFU - CABURGUA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CATALUNYA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO PLACILLA L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA BASICA CERRO SAN FRANCISCO TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA CHACAYAL SUR LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA CHILLEPIN SALAMANCA DE COQUIMBO",
 "Local_ESCUELA BASICA CHORRILLOS E-323 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA CINCO GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA CLARA ESTRELLA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA CLAUDIO ARRAU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA COCHOLGUE F-426 TOME DEL BIOBIO",
 "Local_ESCUELA BASICA CRISTO REDENTOR CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA CRISTOBAL COLON HUALPEN DEL BIOBIO",
 "Local_ESCUELA BASICA CRUZ DEL SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA D-318 UNESCO VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA BASICA DARIO SALAS E-423 QUILPUE DE VALPARAISO",
 "Local_ESCUELA BASICA DE CHANAVAYITA IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA DE CHILE CHICO CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA DE COLBUN COLBUN DEL MAULE",
 "Local_ESCUELA BASICA DE CORRAL CORRAL DE LOS RIOS",
 "Local_ESCUELA BASICA DICHATO TOME DEL BIOBIO",
 "Local_ESCUELA BASICA EL CASINO QUILLON DE NUBLE",
 "Local_ESCUELA BASICA EL NOGAL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA EMILIA ROMAGNA TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA BASICA EMILIO SOTOMAYOR CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ENRIQUE BERNSTEIN CARABANTES SANTA BARBARA DEL BIOBIO",
 "Local_ESCUELA BASICA ENRIQUE ZANARTU PRIETO CABRERO DEL BIOBIO",
 "Local_ESCUELA BASICA ERCOLE BENCINI LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA ESPANA LINARES DEL MAULE",
 "Local_ESCUELA BASICA ESPANA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ESTACION BAQUEDANO SIERRA GORDA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA ESTRELLA DEL SUR POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA FLORIDA FLORIDA DEL BIOBIO",
 "Local_ESCUELA BASICA FRANCISCO FORGIONE IQUIQUE DE TARAPACA",
 "Local_ESCUELA BASICA FRONTERIZA HUARA DE TARAPACA",
 "Local_ESCUELA BASICA G-45 LA VEGA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA GABRIELA MISTRAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA GENERAL CRUZ PEMUCO DE NUBLE",
 "Local_ESCUELA BASICA GUALBERTO KONG FERNANDEZ VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA HECTOR JORQUERA VALENCIA CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA HEROES DE CHILE LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA HEROES DEL ITATA QUILLON DE NUBLE",
 "Local_ESCUELA BASICA HUMBERTO VILCHES ALZAMORA L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA ISABEL LA CATOLICA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA ITILHUE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA JAVIERA CARRERA CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA JOHN FITZGERALD KENNEDY CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JOHN KENNEDY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA JORGE ARACENA RAMOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA JOSE MANUEL BALMACEDA F. FUTRONO DE LOS RIOS",
 "Local_ESCUELA BASICA JOSE MARIA CARO RODRIGUEZ CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JOSE TOMAS OVALLE B. OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA JUAN LOPEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUAN LUIS SANFUENTES ANDONAEGUI RIO CLARO DEL MAULE",
 "Local_ESCUELA BASICA JUAN MADRID AZOLA CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA JUAN PABLO II ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA JUANITA FERNANDEZ SOLAR COMBARBALA DE COQUIMBO",
 "Local_ESCUELA BASICA KAMAC MAYU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON A CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIM RUKA PABELLON B CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA KIMUN LAWAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LA AGUADA DE CUEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA CHOCOTA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA LA DAMA BLANCA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA LA LEYENDA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA PAMPILLA CALLE LARGA DE VALPARAISO",
 "Local_ESCUELA BASICA LA PENA NOGALES DE VALPARAISO",
 "Local_ESCUELA BASICA LA QUEBRADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA RINCONADA DEL SALTO LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LA SOMBRA HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA LA TIRANA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA LAFQUEN ICALMA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAGUNILLAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_ESCUELA BASICA LAS CAMELIAS PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA LAS CRUCES EL TABO DE VALPARAISO",
 "Local_ESCUELA BASICA LAS HORTENSIAS - VILLA LAS HORTENSIAS CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LAS PATAGUAS QUILLOTA DE VALPARAISO",
 "Local_ESCUELA BASICA LAS QUINTAS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA LICARAYEN GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LITORAL AUSTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA BASICA LO DE LOBO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA LO VELASQUEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS CERRILLOS CATEMU DE VALPARAISO",
 "Local_ESCUELA BASICA LOS CONQUISTADORES PENCO DEL BIOBIO",
 "Local_ESCUELA BASICA LOS HEROES DE YUNGAY LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA LOS LIBERTADORES HUALQUI DEL BIOBIO",
 "Local_ESCUELA BASICA LOS MAITENES LIMACHE DE VALPARAISO",
 "Local_ESCUELA BASICA LOS MOLLES LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA LOS NOGALES RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LOS PERALES GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA LUCILA GODOY ALCAYAGA VICUNA DE COQUIMBO",
 "Local_ESCUELA BASICA LUIS ALBERTO ACEVEDO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MAITENCILLO PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA BASICA MALAL MAHUIDA - PEDREGOSO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA BASICA MAMINA POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA MANUEL DE SALAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MARE NOSTRUM ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA MARIO MUNOZ SILVA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA MERCEDES URZUA DIAZ PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA MICHAIHUE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA BASICA MIL PAISAJES Y GIMNASIO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA MILLANTU LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA MINCHA NORTE CANELA DE COQUIMBO",
 "Local_ESCUELA BASICA MIXTA LO CALVO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA MULCHEN MULCHEN DEL BIOBIO",
 "Local_ESCUELA BASICA MUNICIPAL ARAUCARIA CABILDO DE VALPARAISO",
 "Local_ESCUELA BASICA NAHUELBUTA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NEHUENTUE CARAHUE DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO 1 LOS CACHORROS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA NUMERO SEIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA ORLANDO DELGADO ZUNIGA LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA BASICA ORO NEGRO D-367 L1 CONCON DE VALPARAISO",
 "Local_ESCUELA BASICA OSCAR ARAYA MOLINA OVALLE DE COQUIMBO",
 "Local_ESCUELA BASICA PAPUDO PAPUDO DE VALPARAISO",
 "Local_ESCUELA BASICA PATAGUAL CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA PATRICIO LYNCH RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA PATRICIO LYNCH VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA PEDRO LUJAN CHANARAL DE ATACAMA",
 "Local_ESCUELA BASICA PEDRO VERGARA KELLER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA PENINSULA DE TUMBES TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA BASICA PICHICUY LA LIGUA DE VALPARAISO",
 "Local_ESCUELA BASICA PLAYAS NEGRAS CORONEL DEL BIOBIO",
 "Local_ESCUELA BASICA POZO ALMONTE POZO ALMONTE DE TARAPACA",
 "Local_ESCUELA BASICA PUEBLO SECO SAN IGNACIO DE NUBLE",
 "Local_ESCUELA BASICA PUNTA DE PARRA TOME DEL BIOBIO",
 "Local_ESCUELA BASICA QUINCHAMALI CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RABUCO HIJUELAS DE VALPARAISO",
 "Local_ESCUELA BASICA RAFAEL TOME DEL BIOBIO",
 "Local_ESCUELA BASICA RENE ANDRADES TOLEDO CANETE DEL BIOBIO",
 "Local_ESCUELA BASICA RENE LOUVEL BERT CONCEPCION DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE CHILE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA REPUBLICA DE GRECIA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ISRAEL LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA REPUBLICA DEL ECUADOR L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BLANCO LOS ANDES DE VALPARAISO",
 "Local_ESCUELA BASICA RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA BASICA ROBERTO CUADRA ALQUINTA VALLENAR DE ATACAMA",
 "Local_ESCUELA BASICA ROSITA O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_ESCUELA BASICA RURAL EL YECO ALGARROBO DE VALPARAISO",
 "Local_ESCUELA BASICA SALVADOR ALLENDE ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN CARLOS CHONCHI DE LOS LAGOS",
 "Local_ESCUELA BASICA SAN PEDRO DE ATACAMA SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA SAN PEDRO DE LARAQUETE ARAUCO DEL BIOBIO",
 "Local_ESCUELA BASICA SAN RAFAEL DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA SAN SEBASTIAN DE MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA BASICA SAN VICENTE DE LO ARCAYA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BASICA SANTA INES PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA BASICA SANTA JULIA D-334 L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA BASICA SANTA MARIA DE GUADALUPE LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA SECTOR ORIENTE QUELLON DE LOS LAGOS",
 "Local_ESCUELA BASICA SILVIO ZENTENO VERGARA L1 SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA BASICA TALCA DEL MAULE",
 "Local_ESCUELA BASICA TERESA CANNON DE BARRIOLHET. LOS VILOS DE COQUIMBO",
 "Local_ESCUELA BASICA THOMPSON MATTHEWS LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA UNION DE MUJERES AMERICANAS PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BASICA VALENTIN LETELIER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA BASICA VALLE DE COLCURA LOTA DEL BIOBIO",
 "Local_ESCUELA BASICA VALLE DEL CHOAPA ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VALLE LONQUEN TREGUACO DE NUBLE",
 "Local_ESCUELA BASICA VICTOR DURAN PEREZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VILLA COIGUE NEGRETE DEL BIOBIO",
 "Local_ESCUELA BASICA VILLA LOS NARANJOS ILLAPEL DE COQUIMBO",
 "Local_ESCUELA BASICA VISTA VERDE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA VOLCAN LLAIMA MELIPEUCO DE LA ARAUCANIA",
 "Local_ESCUELA BASICA WENCESLAO VARGAS MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA BASICA YANGTSE LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BAU LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELGICA CHIGUAYANTE DEL BIOBIO",
 "Local_ESCUELA BELGICA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BELLAVISTA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN CLARO VELASCO NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BENJAMIN VICUNA MACKENNA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO O HIGGINS COPIAPO DE ATACAMA",
 "Local_ESCUELA BERNARDO O'HIGGINS L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERNARDO O'HIGGINS RIQUELME (E-58) SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA BERNARDO OA'HIGGINS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BERNARDO OA'HIGGINS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OA'HIGGINS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA BERNARDO OHIGGINS SAN JAVIER DEL MAULE",
 "Local_ESCUELA BERTA SAAVEDRA SEGURA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA BERTOLDO HOFMANN KAHLER PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA BLANCA ESTELA PRAT CARVAJAL HUALPEN DEL BIOBIO",
 "Local_ESCUELA BLANCO ENCALADA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA BLAS CUEVAS RAMON ALLENDE D-307 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA BOROA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE LA FARFANA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BOSTON COLLEGE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRASILIA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA BRITANICA GUILLERMINA DRAKE WOOD COIHUECO DE NUBLE",
 "Local_ESCUELA BRUNO ZAVALA FREDES COPIAPO DE ATACAMA",
 "Local_ESCUELA BUENA ESPERANZA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA CACIQUE COLIN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CADETE ARTURO PRAT CHACON SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CALICANTO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMILO HENRIQUEZ CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DE MAIPU - CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAMPOS DEPORTIVOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA CANADA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CANAL BEAGLE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA CAPITAN ARTURO PRAT CHACON PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CAPITAN AVALOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JOSE LUIS ARANEDA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CAPITAN JUAN LADRILLERO NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CARDENAL JOSE MARIA CARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CARLOS ALBERTO FERNANDEZ CASTILLO HUALQUI DEL BIOBIO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL DE LA HAZA L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS CONDELL OSORNO DE LOS LAGOS",
 "Local_ESCUELA CARLOS FERNANDEZ PENA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS MARIA SAYAGO COPIAPO DE ATACAMA",
 "Local_ESCUELA CARLOS PRATS GONZALEZ HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARLOS SALINAS LAGOS TALCA DEL MAULE",
 "Local_ESCUELA CARLOS SPANO TALCA DEL MAULE",
 "Local_ESCUELA CARLOS TRUPP WANNER TALCA DEL MAULE",
 "Local_ESCUELA CARMELA CARVAJAL DE PRAT SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA CARMEN GALLEGOS DE ROBLES SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CARMEN REVECO NUNEZ PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CARMEN ROMERO AGUIRRE CARTAGENA DE VALPARAISO",
 "Local_ESCUELA CAROLINA VERGARA AYARES D-276 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CASAS VIEJAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CATALUNA CURICO DEL MAULE",
 "Local_ESCUELA CAYENEL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA CENTENARIO IQUIQUE DE TARAPACA",
 "Local_ESCUELA CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CERRO ALTO JOSE OPAZO DIAZ CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHACARILLAS CONSTITUCION DEL MAULE",
 "Local_ESCUELA CHARRUA CABRERO DEL BIOBIO",
 "Local_ESCUELA CHIAPA HUARA DE TARAPACA",
 "Local_ESCUELA CHILHUE QUEILEN DE LOS LAGOS",
 "Local_ESCUELA CHIPANA IQUIQUE DE TARAPACA",
 "Local_ESCUELA CIUDAD DE BARCELONA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD DE LYON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CIUDAD SANTO DOMINGO DE GUZMAN CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLARA VIAL ORREGO LOS VILOS DE COQUIMBO",
 "Local_ESCUELA CLAUDIO ARRAU LEON EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO ARRAU OSORNO DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA CLAUDIO MATTE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CLAUDIO MATTE PEREZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA CLEMENTINA MAUREIRA ALMANZA COELEMU DE NUBLE",
 "Local_ESCUELA CLORINDO ALVEAR CAUQUENES DEL MAULE",
 "Local_ESCUELA CLUB HIPICO EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA COLICO SUR CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA COLIN MAULE DEL MAULE",
 "Local_ESCUELA COLONIA ARABE LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA COLONIA ESMERALDA RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COLPANAO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA COMALLE TENO DEL MAULE",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L1 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMANDANTE ELEUTERIO RAMIREZ MOLINA L2 QUILPUE DE VALPARAISO",
 "Local_ESCUELA COMUNIDADES DE VALLE HERMOSO LA LIGUA DE VALPARAISO",
 "Local_ESCUELA CONCENTRACION RURAL SERGIO VERDUGO HERRERA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA CONDORES DE PLATA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA DAVILA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONSOLIDADA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA CONTRAMAESTRE CONSTANTINO MICALVI LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA COPIHUE RETIRO DEL MAULE",
 "Local_ESCUELA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA CORINTO PENCAHUE DEL MAULE",
 "Local_ESCUELA CORRALONES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA COSTA BLANCA CONSTITUCION DEL MAULE",
 "Local_ESCUELA CRISTINA DURAN QUILLOTA DE VALPARAISO",
 "Local_ESCUELA CRISTO DEL MAIPO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA CROACIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA CUYUNCAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-10 GENERAL JOSE MIGUEL CARRERA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-11 MANUEL RODRIGUEZ ERDOYZA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-114 GENERAL BERNALES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA D-12 ROMULO PENA MATURANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-14 REGIMIENTO RANCAGUA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-16 SUBTENIENTE LUIS CRUZ MARTINEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-18 HUMBERTO VALENZUELA GARCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-314 JOAQUIN EDWARDS BELLO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA D-4 REPUBLICA DE ISRAEL ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-6 REPUBLICA DE FRANCIA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA D-7 GENERAL PEDRO LAGOS MARCHANT ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA DAFNE ELVIRA ZAPATA ROZAS PEMUCO DE NUBLE",
 "Local_ESCUELA DAGOBERTO GODOY - SAN PATRICIO VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA DARIO SALAS DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DARIO SALAS MARCHANT SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA DARIO SALAS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA DE ARTES ESCENICAS PROFESOR ELMO FUNEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA DE ARTES Y CULTURA OSORNO Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA DE ARTES Y MUSICA OVALLE DE COQUIMBO",
 "Local_ESCUELA DE CONCENTRACION D-43, LOS LOROS TIERRA AMARILLA DE ATACAMA",
 "Local_ESCUELA DE CONCENTRACION FRONTERIZA RALCO ALTO BIOBIO ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA DE DESARROLLO ARTISTICO CALDERA DE ATACAMA",
 "Local_ESCUELA DE EDUCACION GENERAL BASICA MONSENOR ENRIQUE CORNEJO SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA DE INGENIERIA QUIMICA PUCV VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DE LA INDUSTRIA GRAFICA HECTOR GOMEZ SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LAS ROJAS LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE LENGUAJE CAMINA ALTO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DE LIUCURA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA DE MAITENCILLO YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA DE NIEBLA JUAN BOSCH VALDIVIA DE LOS RIOS",
 "Local_ESCUELA DE PENUELAS COQUIMBO DE COQUIMBO",
 "Local_ESCUELA DE PUERTO HARRIS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DE ROMERO LA SERENA DE COQUIMBO",
 "Local_ESCUELA DE TRIPULANTES Y PORTUARIA DE VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DEIDAMIA PAREDES BELLO SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA DELFINA ALARCON HENRIQUEZ QUILPUE DE VALPARAISO",
 "Local_ESCUELA DELICIO CARDENAS BUSTAMANTE Y GIMNASIO SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA DEPORTIVA OSORNO (EX LAGO RUPANCO) OSORNO DE LOS LAGOS",
 "Local_ESCUELA DIECIOCHO DE SEPTIEMBRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA DIEGO PORTALES D 475 TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES P. CURICO DEL MAULE",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS CONCEPCION DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES PALAZUELOS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA DIEGO PORTALES QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIEGO PORTALES SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA DIEGO PORTALES TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA DIFERENCIAL AMAPOLAS NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL JUAN SANDOVAL CARRASCO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DIFERENCIAL MARIA LUZ LANZA PIZARRO COPIAPO DE ATACAMA",
 "Local_ESCUELA DIFERENCIAL VILLA SAN JOSE LA UNION DE LOS RIOS",
 "Local_ESCUELA DIGNA CAMILO AGUILAR PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DIVINO MAESTRO PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA DOCTOR TREVISO GIRARDI TONELLI CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L1 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOCTORA ELOISA DIAZ INSUNZA L2 CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMINGO ORTIZ DE ROZAS CASABLANCA DE VALPARAISO",
 "Local_ESCUELA DOMINGO SANTA MARIA GONZALEZ RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA DOMITILA PINNA PARRA LONCOCHE DE LA ARAUCANIA",
 "Local_ESCUELA E 741 JAVIERA CARRERA EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA E-15 RICARDO SILVA ARRIAGADA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA E-5 ESMERALDA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ECOLOGICA NUESTRO MUNDO QUILLOTA DE VALPARAISO",
 "Local_ESCUELA ECOLOGICA PADRE ALBERTO HURTADO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA EDELMIRA VERGARA QUINONES ARAUCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO CAMPBELL SAAVEDRA PENCO DEL BIOBIO",
 "Local_ESCUELA EDUARDO FREI MONTALVA PERQUENCO DE LA ARAUCANIA",
 "Local_ESCUELA EDUARDO LLANOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA EDUCACION DIFERENCIAL SANTA TERESA DE AVILA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EDUCADORA EULOGIA BORQUEZ PEREZ QUELLON DE LOS LAGOS",
 "Local_ESCUELA EDUCADORES DE CHILE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EFRAIN MALDONADO TORRES ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO DE SALVACION ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA EJERCITO LIBERTADOR DE CERRILLOS CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EJERCITO LIBERTADOR PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL BOSQUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL CARMEN CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL CLARO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA EL EDEN TALCA DEL MAULE",
 "Local_ESCUELA EL LAUREL VALDIVIA DE LOS RIOS",
 "Local_ESCUELA EL LIBERTADOR PARRAL DEL MAULE",
 "Local_ESCUELA EL LLANO DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL MAITEN LA UNION DE LOS RIOS",
 "Local_ESCUELA EL PALPAL DE SANTA CLARA BULNES DE NUBLE",
 "Local_ESCUELA EL PALQUI MONTE PATRIA DE COQUIMBO",
 "Local_ESCUELA EL REMANSO EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL ROTO CHILENO TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SABER NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA EL SALITRE PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EL SAUCE SAN CARLOS DE NUBLE",
 "Local_ESCUELA ELBA OJEDA GOMEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ELENA ARMIJO MORALES CUREPTO DEL MAULE",
 "Local_ESCUELA ELEUTERIO RAMIREZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ELIAS SANCHEZ ORTUZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELIODORO YANEZ PONCE DE LEON SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ELOISA GONZALEZ TIRUA DEL BIOBIO",
 "Local_ESCUELA ELVIRA SANTA CRUZ OSSA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMA CORNEJO DE CARDOEN VICHUQUEN DEL MAULE",
 "Local_ESCUELA EMILIA LASCAR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EMPRENDER LARAPINTA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENCARNACION OLIVARES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA ENRIQUE DONN MULLER CONSTITUCION DEL MAULE",
 "Local_ESCUELA ENRIQUE PUFFE KIND YUMBEL DEL BIOBIO",
 "Local_ESCUELA ENRIQUE REYMOND ALDUNATE SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ENRIQUE SERRANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ENRIQUE SORO BARRIGA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA ENTRE AGUAS DE LLICO VICHUQUEN DEL MAULE",
 "Local_ESCUELA EPU NEWEN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA ERNESTO CASTRO ARELLANO CURICO DEL MAULE",
 "Local_ESCUELA ERNESTO SOTO NEGRETE COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESCRITORA MARCELA PAZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ESPANA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA ESPANA CURICO DEL MAULE",
 "Local_ESCUELA ESPANA L1 LOS ANDES DE VALPARAISO",
 "Local_ESCUELA ESPANA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ESPANA OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPANA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA ESPANA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPANA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA ESPANA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESPECIAL AVANCEMOS JUNTOS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE AYLLU DIEGO DE ALMAGRO DE ATACAMA",
 "Local_ESCUELA ESPECIAL DE LENGUAJE Y ESCUELA BASICA MY COLLEGE CHILLAN DE NUBLE",
 "Local_ESCUELA ESPECIAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL FLOR DEL INCA IQUIQUE DE TARAPACA",
 "Local_ESCUELA ESPECIAL HUMBERTO MOATH CASABLANCA DE VALPARAISO",
 "Local_ESCUELA ESPECIAL JUANITA DE AGUIRRE CERDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA ESPECIAL PAULA JARAQUEMADA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ESPECIAL SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL TAMARUGAL LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPECIAL `ANA AICHELE CARRASCO` OSORNO DE LOS LAGOS",
 "Local_ESCUELA ESPERANZA JOVEN L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA JOVEN L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESPERANZA TALCA DEL MAULE",
 "Local_ESCUELA ESTADO DE FLORIDA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE ISRAEL VALPARAISO DE VALPARAISO",
 "Local_ESCUELA ESTADO DE MICHIGAN QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADO DE PALESTINA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ESTADOS UNIDOS DE NORTEAMERICA TOCOPILLA DE ANTOFAGASTA",
 "Local_ESCUELA ESTRELLA REINA DE CHILE CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA EUGENIO TAGLE VALDES SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA EULOGIO GOYCOLEA GARAY Y GIMNASIO CALBUCO DE LOS LAGOS",
 "Local_ESCUELA EUSEBIO IBAR SCHEPELER CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA EVANGELICA BETH-EL CHILLAN DE NUBLE",
 "Local_ESCUELA F-174 VALLE DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA F-22 DOCTOR RICARDO OLEA GUERRA ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA F-90 RAUL CASTRO MARQUEZ COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA FATIMA ANCUD DE LOS LAGOS",
 "Local_ESCUELA FEDERICO ACEVEDO SALAZAR CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FELIPE BARTHOU LANCO DE LOS RIOS",
 "Local_ESCUELA FELIX EYHERAMENDY LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA FERNANDA AEDO FAUNDEZ RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO ARENAS ALMARZA CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA FERNANDO BAQUEDANO YUNGAY DE NUBLE",
 "Local_ESCUELA FERNANDO CARVAJAL PINTO CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FERNANDO SANTIVAN VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCIA VALDIVIA DE LOS RIOS",
 "Local_ESCUELA FRANCISCO COLOANE CORONEL DEL BIOBIO",
 "Local_ESCUELA FRANCISCO CORTES OJEDA MAULLIN DE LOS LAGOS",
 "Local_ESCUELA FRANCISCO DE AGUIRRE PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO PETRINOVIC KARLOVAC COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRANCISCO URRUTIA URRUTIA LONGAVI DEL MAULE",
 "Local_ESCUELA FRAY BERNABE DE LUCERNA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA FRAY CAMILO HENRIQUEZ SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA FRAY PEDRO ARMENGOL VALENZUELA CUREPTO DEL MAULE",
 "Local_ESCUELA FRESIA GRACIELA MULLER RUIZ LEBU DEL BIOBIO",
 "Local_ESCUELA FRONTERIZA ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA FRONTERIZA DE LLIFEN FUTRONO DE LOS RIOS",
 "Local_ESCUELA FUNDACION PAUL HARRIS OSORNO DE LOS LAGOS",
 "Local_ESCUELA GABRIEL BENAVENTE BENAVENTE LONGAVI DEL MAULE",
 "Local_ESCUELA GABRIELA MISTRAL IQUIQUE DE TARAPACA",
 "Local_ESCUELA GABRIELA MISTRAL L1 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL L2 LA LIGUA DE VALPARAISO",
 "Local_ESCUELA GABRIELA MISTRAL MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GABRIELA MISTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA GABRIELA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GALVARINO VALENZUELA MORAGA LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA GARCIA HURTADO DE MENDOZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA GASPAR CABRALES VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GENARO RIOS CAMPOS CORONEL DEL BIOBIO",
 "Local_ESCUELA GENERAL ALBERTO BACHELET MARTINEZ EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL ALEJANDRO GOROSTIAGA ORREGO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL JOSE DE SAN MARTIN LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GENERAL MANUEL BAQUEDANO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA GENERAL MANUEL BULNES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA GENERAL OHIGGINS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL RENE ESCAURIAZA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SAN MARTIN MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GENERAL SOFANOR PARRA HERMOSILLA SAN CARLOS DE NUBLE",
 "Local_ESCUELA GERTRUDIS ALARCON ARCE RETIRO DEL MAULE",
 "Local_ESCUELA GLADYS CANALES PAREDES PELLUHUE DEL MAULE",
 "Local_ESCUELA GOLDA MEIR LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GRACIELA LETELIER LINARES DEL MAULE",
 "Local_ESCUELA GRECIA (D-251) VALPARAISO DE VALPARAISO",
 "Local_ESCUELA GRECIA CURICO DEL MAULE",
 "Local_ESCUELA GRENOBLE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUARILIHUE ALTO COELEMU DE NUBLE",
 "Local_ESCUELA GUILLERMO BANADOS HONORATO SANTA MARIA DE VALPARAISO",
 "Local_ESCUELA GUILLERMO RODRIGUEZ RIOBIO LEBU DEL BIOBIO",
 "Local_ESCUELA GUILLERMO ZANARTU IRIGOYEN NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA GUSTAVO LE PAIGE WALQUE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA GUSTAVO VASQUEZ DIAZ LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA HAMBURGO CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA HELEN KELLER ADAMS HUALPEN DEL BIOBIO",
 "Local_ESCUELA HERMANA MARIA GORETTI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERMANOS CARRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA HERMINDA DE LA VICTORIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HERNAN OLGUIN MAYBE GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HERNAN OLGUIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA HERNANDO DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA HEROES DE CHILE YUMBEL DEL BIOBIO",
 "Local_ESCUELA HEROES DE IQUIQUE COIHUECO DE NUBLE",
 "Local_ESCUELA HEROES DE IQUIQUE VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA HEROES DE LA CONCEPCION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA HOGAR MARIA LUISA BOUCHON SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA HOGAR NIEVES VASQUEZ PALACIOS LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA HOGAR VICTORIANO QUINTEROS SOTO TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HOLANDA CURICO DEL MAULE",
 "Local_ESCUELA HORACIO JOHNSON GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HORIZONTES TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA HUILQUILEMU TALCA DEL MAULE",
 "Local_ESCUELA HUMANISTA VICTOR HUGO CARVAJAL MEZA TALTAL DE ANTOFAGASTA",
 "Local_ESCUELA HUMBERTO MORENO RAMIREZ BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA HUMBERTO VALENZUELA GARCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA IGNACIO CARRERA PINTO ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA IGNACIO CARRERA PINTO MARIA ELENA DE ANTOFAGASTA",
 "Local_ESCUELA INDEPENDENCIA CAUQUENES DEL MAULE",
 "Local_ESCUELA INDEPENDENCIA PANQUEHUE DE VALPARAISO",
 "Local_ESCUELA INDUSTRIAL SAN ANTONIO SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA INES GALLARDO ALVARADO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA INGLATERRA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTEGRADORA EL MANZANO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA INTERNADO LAS PALMAS TRES ESQUINAS MOLINA DEL MAULE",
 "Local_ESCUELA INTERNADO POTRERO GRANDE CURICO DEL MAULE",
 "Local_ESCUELA IRENE FREI LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA IRMA SALAS SILVA CONCON DE VALPARAISO",
 "Local_ESCUELA ISABEL LE BRUN RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISABEL RIQUELME SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ISIDORA GOYENECHEA LOTA DEL BIOBIO",
 "Local_ESCUELA ISLA DE LAJA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA ISLA DE MARCHANT CURICO DEL MAULE",
 "Local_ESCUELA ISLA DE PASCUA PENCO DEL BIOBIO",
 "Local_ESCUELA ISLAS DE CHILE LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAIME GOMEZ GARCIA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JANUARIO ESPINOSA LINARES DEL MAULE",
 "Local_ESCUELA JAPON ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JAPON VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA JAVIER EYZAGUIRE ECHAURREN PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JAVIERA CARRERA VERDUGO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JERONIMO NEKULPAN - QUINENAHUIN CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA JERUSALEN LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOAQUIN DEL PINO ROZAS Y NEGRETE SAN CARLOS DE NUBLE",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ ARICA DE ARICA Y PARINACOTA",
 "Local_ESCUELA JORGE ALESSANDRI RODRIGUEZ VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JORGE GONZALEZ BASTIAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA JORGE MUNOZ SILVA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JORGE ROJAS MIRANDA CORONEL DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ LAJA DEL BIOBIO",
 "Local_ESCUELA JOSE ABELARDO NUNEZ MAULLIN DE LOS LAGOS",
 "Local_ESCUELA JOSE ABELARDO NUNEZ VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA JOSE ALFARO ALFARO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA JOSE ANTOLIN SILVA ORMENO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA JOSE ANTONIO LECAROS ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE BERNARDO SUAREZ MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE CAROCA LAFLOR VALLENAR DE ATACAMA",
 "Local_ESCUELA JOSE DE SAN MARTIN SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA JOSE ELIAS BOLIVAR HERRERA ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA JOSE JOAQUIN PRIETO VIAL CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE M. BALMACEDA Y FERNANDEZ TALCA DEL MAULE",
 "Local_ESCUELA JOSE MANUEL BALMACEDA CALBUCO DE LOS LAGOS",
 "Local_ESCUELA JOSE MANUEL BALMACEDA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MARTI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE MATTA CALLEJON PARRAL DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL CARRERA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JOSE MIGUEL MARTINEZ SOTO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA JOSE NUEZ MARTIN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE PAPIC RADNIC ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA JOSE TOHA SOLDEVILLA PINTO DE NUBLE",
 "Local_ESCUELA JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JOSE ULLOA FIERRO LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA JUAN BAUTISTA CHESTA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JUAN BAUTISTA PASTENE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE DIOS ALDEA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN DE LA CRUZ DOMINGUEZ GONZALEZ LONGAVI DEL MAULE",
 "Local_ESCUELA JUAN DE SAAVEDRA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN JOSE LATORRE BENAVENTE CORONEL DEL BIOBIO",
 "Local_ESCUELA JUAN LUIS SANFUENTES TALCA DEL MAULE",
 "Local_ESCUELA JUAN MARTINEZ DE ROZAS LINARES DEL MAULE",
 "Local_ESCUELA JUAN MOYA MORALES NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN PABLO DUARTE L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JUAN RICARDO SANCHEZ ASCENCIO OSORNO DE LOS LAGOS",
 "Local_ESCUELA JUAN SEGUEL ANEXO FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN SEGUEL FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA JUAN VALDES ORTUZAR PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA JUAN WACQUEZ MOURFIN VALPARAISO DE VALPARAISO",
 "Local_ESCUELA JUAN WILLIAMS PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA JULIA HERRERA VARAS MEJILLONES DE ANTOFAGASTA",
 "Local_ESCUELA JULIETA BECERRA ALVAREZ SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA E-194 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA JULIO MONTT SALAMANCA SAN JAVIER DEL MAULE",
 "Local_ESCUELA JUSTA NARVAEZ SAN JAVIER DEL MAULE",
 "Local_ESCUELA KARELMAPU SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA KAROL CARDENAL DE CRACOVIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA ARAUCANIA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA BANDERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LA ESPERANZA FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA LA ESPERANZA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA FLORIDA TALCA DEL MAULE",
 "Local_ESCUELA LA GREDA PENCO DEL BIOBIO",
 "Local_ESCUELA LA GREDA PUCHUNCAVI DE VALPARAISO",
 "Local_ESCUELA LA HUERTA DE MATAQUITO HUALANE DEL MAULE",
 "Local_ESCUELA LA ISLA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LA MERCED TILTIL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LA NOBEL GABRIELA RENAICO DE LA ARAUCANIA",
 "Local_ESCUELA LA OBRA CURICO DEL MAULE",
 "Local_ESCUELA LA VARA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LA VICTORIA PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAGO VICHUQUEN DE AQUELARRE VICHUQUEN DEL MAULE",
 "Local_ESCUELA LAS AMERICAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS AMERICAS PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA LAS AMERICAS PROFESOR JUSTO VALLADARES ORELLANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LAS ARAUCARIAS LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS CANTERAS HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS HORNILLAS LINARES DEL MAULE",
 "Local_ESCUELA LAS LILAS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS LILAS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS PALMAS PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LAS ROCAS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA LATINA INES GALLARDO ORELLANA VILLA ALEMANA DE VALPARAISO",
 "Local_ESCUELA LAURA MATUS MELENDEZ DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LAURA VICUNA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA LEON HUMBERTO VALENZUELA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LEONARDO DA VINCI VALDIVIA DE LOS RIOS",
 "Local_ESCUELA LEONCIO ARANEDA FIGUEROA CANETE DEL BIOBIO",
 "Local_ESCUELA LEOVIGILDO KLEY CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA LIBERTAD PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA LIBERTADOR BERNARDO O'HIGGINS VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LIBERTADOR BERNARDO OA'HIGGINS RIQUELME CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO O'HIGGINS SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LIBERTADOR GENERAL BERNARDO OHIGGINS RIQUELME CALBUCO DE LOS LAGOS",
 "Local_ESCUELA LIMACHITO LIMACHE DE VALPARAISO",
 "Local_ESCUELA LLANKANAO MANUEL FRANCISCO MEZA SECO LINARES DEL MAULE",
 "Local_ESCUELA LLANO SUBERCASEAUX SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO FRANCO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LO MIRANDA DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA LO VALDIVIA SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA LO VALLEDOR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LORD COCHRANE L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ALERCES DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS ANDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS AVELLANOS TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOS AVELLANOS TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LOS BOSQUINOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS CONQUISTADORES CAUQUENES DEL MAULE",
 "Local_ESCUELA LOS GUALLES LOS ALAMOS DEL BIOBIO",
 "Local_ESCUELA LOS HEROES CHANCO DEL MAULE",
 "Local_ESCUELA LOS MOLLES QUILPUE DE VALPARAISO",
 "Local_ESCUELA LOS MONTES SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA LOS PRINCIPES VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA LOS ROSALES DEL BAJO BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LOS SAUCES LOS SAUCES DE LA ARAUCANIA",
 "Local_ESCUELA LOS TRIGALES TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA LOTHAR KOMMER BRUGER CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUCILA GODOY ALCAYAGA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA LUCILA GODOY LINARES DEL MAULE",
 "Local_ESCUELA LUIS ARMANDO GOMEZ MUNOZ PARRAL DEL MAULE",
 "Local_ESCUELA LUIS ARRIETA CANAS PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L1 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS CRUZ MARTINEZ L2 QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS MARTINEZ GONZALEZ TUCAPEL DEL BIOBIO",
 "Local_ESCUELA LUIS MATTE LARRAIN PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA LUIS URIBE DIAZ Y GIMNASIO CASTRO DE LOS LAGOS",
 "Local_ESCUELA MADRE DE LA DIVINA PROVIDENCIA CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA MAHUIDA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MALLOCO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MAND EDUARDO FREI MONTALVA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL ANABALON SAEZ PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MANUEL BRAVO REYES L1 CASABLANCA DE VALPARAISO",
 "Local_ESCUELA MANUEL DE SALAS SAN JAVIER DEL MAULE",
 "Local_ESCUELA MANUEL MAGALLANES MOURE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MANUEL MATUS HERMOSILLA COIHUECO DE NUBLE",
 "Local_ESCUELA MANUEL MONTT RETIRO DEL MAULE",
 "Local_ESCUELA MANUEL ORELLA ECHANEZ CALDERA DE ATACAMA",
 "Local_ESCUELA MANUEL RECABARREN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MANUEL RODRIGUEZ ERDOIZA SAN FELIPE DE VALPARAISO",
 "Local_ESCUELA MANUEL SEGOVIA MONTENEGRO LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCELA PAZ VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA MARCIAL MARTINEZ FERRARI EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARCOS GOYCOOLEA CORTES COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA ALONSO CHACON LA CRUZ DE VALPARAISO",
 "Local_ESCUELA MARIA ALVARADO GARAY PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA MARIA ARAYA VALDES SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MARIA LUISA BOMBAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARIA OLGA FIGUEROA LEYTON CURICO DEL MAULE",
 "Local_ESCUELA MARIA TERESA DEL CANTO MOLINA CATEMU DE VALPARAISO",
 "Local_ESCUELA MARIA TERESA MARCHANT CONTRERAS COELEMU DE NUBLE",
 "Local_ESCUELA MARIANO LATORRE SAN JAVIER DEL MAULE",
 "Local_ESCUELA MARIANO LATORRE VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA MARISCAL DE AYACUCHO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MARTIN ALONQUEO PIUTRIN - GENERAL LOPEZ VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA MATILDE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_ESCUELA MAULE MAULE DEL MAULE",
 "Local_ESCUELA MAULE SUR COLBUN DEL MAULE",
 "Local_ESCUELA MELIPULLI PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA MELVIN JONES PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES FONTECILLA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MERCEDES MATURANA GALLARDO ZAPALLAR DE VALPARAISO",
 "Local_ESCUELA METODISTA COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_ESCUELA METRENCO F-471 - METRENCO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MEXICO DE MICHOACAN OSORNO DE LOS LAGOS",
 "Local_ESCUELA MICHIGAN EL AMANECER COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL DE CERVANTES Y SAAVEDRA ANEXO A-8 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIGUEL JOSE ZANARTU SANTA MARIA SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA MIGUEL MONTECINOS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA MILLAHUE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MILLARAY TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MIRAVALLE L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MIRAVALLE L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MODULAR SAN ANDRES FRESIA DE LOS LAGOS",
 "Local_ESCUELA MONSENOR CARLOS OVIEDO PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MONSENOR FRANCISCO VALDES SUBERCASEAUX OSORNO DE LOS LAGOS",
 "Local_ESCUELA MONSENOR GUIDO DE RAMBERGA PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA MONSENOR MANUEL LARRAIN ERRAZURIZ HUALANE DEL MAULE",
 "Local_ESCUELA MONSERRAT ROBERT DE GARCIA RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L1 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MOVILIZADORES PORTUARIOS L2 SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA MUNICIPAL AMERICA MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE CUNACO NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE GULTRO OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PALMILLA PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PANIAHUE SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL DE PELEQUEN MALLOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL E-456 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL COBRE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL EL TRENCITO TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL FRONTERIZA LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL GABRIELA MISTRAL GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL HERMANOS CARRERA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL ISABEL RIQUELME RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL JEAN PIAGET RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LAS QUEZADAS F-413 CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL LOS ARRAYANES PUCON DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL LUIS OYARZUN PENA SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MARCELA PAZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL MONICA GEBERT MEIER VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL OSVALDO RUIZ GARCIA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PATRICIO MEKIS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL PICHIPELLAHUEN LUMACO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL RENE SCHNEIDER CHEREAU RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL RERE YUMBEL DEL BIOBIO",
 "Local_ESCUELA MUNICIPAL RIO QUILLEM GALVARINO DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA MUNICIPAL SAN PEDRO DE ALCANTARA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA MUNICIPAL TROYO - VILLA TROYO LONQUIMAY DE LA ARAUCANIA",
 "Local_ESCUELA MUNICIPAL ZUNIGA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NACIMIENTO DE NUESTRO SENOR NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA NACIONES UNIDAS VALPARAISO DE VALPARAISO",
 "Local_ESCUELA NANIHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEMESIO ANTUNEZ L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NEVADA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NEW HARVEST TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA NIDER ORREGO QUEVEDO PARRAL DEL MAULE",
 "Local_ESCUELA NIRRIMAPU - MAQUEHUE PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA NIVEQUETEN LAJA DEL BIOBIO",
 "Local_ESCUELA NONATO COO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NORMA GONZALEZ GUERRA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUESTRA SENORA DE FATIMA PUCON DE LA ARAUCANIA",
 "Local_ESCUELA NUESTRA SENORA DE LA MERCED OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA NUESTRA SENORA Y MADRE DEL CARMEN MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA NUEVA AMERICA QUIRIHUE DE NUBLE",
 "Local_ESCUELA NUEVA AURORA PAILLACO DE LOS RIOS",
 "Local_ESCUELA NUEVA COLLILELFU LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA ESPANA LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA NUEVA REPUBLICA HUALQUI DEL BIOBIO",
 "Local_ESCUELA NUMERO 1, ALEMANIA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA OCTAVIO PALMA PEREZ CAUQUENES DEL MAULE",
 "Local_ESCUELA OCTAVIO SALINAS CARIAGA CORONEL DEL BIOBIO",
 "Local_ESCUELA OLEGARIO LAZO BAEZA SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA OLEGARIO MORALES OLIVA PAILLACO DE LOS RIOS",
 "Local_ESCUELA ORLANDO LETELIER EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR BONILLA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR CASTRO LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR ENCALADA YOVANOVICH LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA OSCAR GUERRERO QUINSAC NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA OSVALDO FUENTES BARRERA CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA P-34 BAUTISTA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PABLO CORREA MONTT PELARCO DEL MAULE",
 "Local_ESCUELA PABLO DE ROKHA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PABLO NERUDA CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA PABLO NERUDA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PABLO NERUDA SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA PACTO ANDINO L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PACTO ANDINO L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA PADRE ALBERTO HURTADO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PADRE ANDRE COINDRE SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PADRE ESTEBAN GUMUCIO VIVES LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PADRE JOSEPH BENEDIKT STEGMEIER OVALLE DE COQUIMBO",
 "Local_ESCUELA PADRE LUIS OLIVA NAVARRETE PENCAHUE DEL MAULE",
 "Local_ESCUELA PADRE PEDRO CAMPOS MENCHACA YUMBEL DEL BIOBIO",
 "Local_ESCUELA PAHUIL CHANCO DEL MAULE",
 "Local_ESCUELA PALESTINA LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PALMARES ORIENTE QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAMPA RIOS RIO BUENO DE LOS RIOS",
 "Local_ESCUELA PANGUE ARRIBA SAN RAFAEL DEL MAULE",
 "Local_ESCUELA PANGUILEMO EDITA GALLEGOS RODRIGUEZ TALCA DEL MAULE",
 "Local_ESCUELA PANIMAVIDA COLBUN DEL MAULE",
 "Local_ESCUELA PARTICULAR 167 RAMON GUINEZ PUCON DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR ALFA Y OMEGA LAJA DEL BIOBIO",
 "Local_ESCUELA PARTICULAR ARTURO PRAT FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CATRIPULLI CURARREHUE DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR CAUNICU ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA PARTICULAR CORAZON DE JESUS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR EL PORVENIR PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR FRANCIA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR HABIT-ART PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA DEHESA CUNCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR LA MILAGROSA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PARTICULAR LUIS ISRAEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR MARGARITA NASEAU TOME DEL BIOBIO",
 "Local_ESCUELA PARTICULAR MONO PAINE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUESTRA SENORA DEL CARMEN PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR NUEVA LIQUINE PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA PARTICULAR NUMERO 8 VILCUN VILCUN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE ALEJANDRO ORTEGA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PADRE JUAN WEVERING SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L1 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR PRESIDENTE JOSE JOAQUIN PRIETO L2 LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PARTICULAR SAGRADA FAMILIA VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN BERNARDO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN FRANCISCO DE ASIS LAUTARO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN JOSE OBRERO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PARTICULAR SAN JOSE SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA PARTICULAR SAN JUAN TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN RAFAEL ARCANGEL PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SAN SEBASTIAN SAAVEDRA DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SANTA MARIA DE LA RIBERA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR SUBVENCIONADA PADRE ISIDORO TOLTEN DE LA ARAUCANIA",
 "Local_ESCUELA PARTICULAR TRES CERROS PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_ESCUELA PASO INTERNACIONAL PEHUENCHE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA PATAGONIA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PATRICIO CHAVEZ SOTO CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA PATRICIO LYNCH ZALDIVAR VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PAUL HARRIS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR IQUIQUE DE TARAPACA",
 "Local_ESCUELA PAULA JARAQUEMADA ALQUIZAR PAINE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PAULO FREIRE CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO AGUIRRE CERDA LINARES DEL MAULE",
 "Local_ESCUELA PEDRO ANTONIO GONZALEZ CUREPTO DEL MAULE",
 "Local_ESCUELA PEDRO DE ONA PUREN DE LA ARAUCANIA",
 "Local_ESCUELA PEDRO MARIN ALEMANY MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PEDRO PABLO LEMAITRE PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEDRO QUINTANA MANSILLA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA PEDRO RUIZ ALDEA LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA PEDRO SARMIENTO DE GAMBOA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PEHUEN LEBU DEL BIOBIO",
 "Local_ESCUELA PENCO PENCO DEL BIOBIO",
 "Local_ESCUELA PILAR MOLINER DE NUEZ SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PILOTO PARDO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PISAGUA HUARA DE TARAPACA",
 "Local_ESCUELA PLACIDO VILLARROEL IQUIQUE DE TARAPACA",
 "Local_ESCUELA PLAYA LINDA DE LIPIMAVIDA VICHUQUEN DEL MAULE",
 "Local_ESCUELA POETA NERUDA DE ISLA NEGRA EL QUISCO DE VALPARAISO",
 "Local_ESCUELA POETA NERUDA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA OSCAR CASTRO ZUNIGA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETA VICENTE HUIDOBRO LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETAS DE CHILE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA POETISA GABRIELA MISTRAL AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA POLONIA GUTIERREZ LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PORONGO CAUQUENES DEL MAULE",
 "Local_ESCUELA PORTUGAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA PORVENIR DE CATO COIHUECO DE NUBLE",
 "Local_ESCUELA POZA VERDE LA LIGUA DE VALPARAISO",
 "Local_ESCUELA PREMIO NOBEL PABLO NERUDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESBITERO JOSE AGUSTIN GOMEZ GORBEA DE LA ARAUCANIA",
 "Local_ESCUELA PRESIDENTE AGUIRRE CERDA CARTAGENA DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE CARLOS IBANEZ DEL CAMPO LINARES DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA MOLINA DEL MAULE",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE EDUARDO FREI MONTALVA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE JORGE ALESSANDRI R. LA UNION DE LOS RIOS",
 "Local_ESCUELA PRESIDENTE JOSE MANUEL BALMACEDA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE PEDRO AGUIRRE CERDA SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE RIESCO ERRAZURIZ L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE ROOSEVELT CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PRESIDENTE SALVADOR ALLENDE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA PROFESOR MANUEL CASTRO RAMOS IQUIQUE DE TARAPACA",
 "Local_ESCUELA PROFESOR MANUEL GUERRERO CEBALLOS CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESOR RAMON DEL RIO ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA AURELIA ROJAS BURGOS LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA GLADYS VALENZUELA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROFESORA MARIA LUISA SEPULVEDA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROSPERIDAD TALCA DEL MAULE",
 "Local_ESCUELA PROVIDENCIA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE ARAUCO CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROVINCIA DE CHILOE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PROYECTO DE FUTURO PAILLACO DE LOS RIOS",
 "Local_ESCUELA PUBLICA REPUBLICA NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_ESCUELA PUDETO ANCUD DE LOS LAGOS",
 "Local_ESCUELA PUERTO RICO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA PUQUELDON PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA PURISIMA CONCEPCION DE POCILLAS CAUQUENES DEL MAULE",
 "Local_ESCUELA QUEBRADA DE ALVARADO OLMUE DE VALPARAISO",
 "Local_ESCUELA QUECHEREGUAS DE PICHINGAL MOLINA DEL MAULE",
 "Local_ESCUELA RADIMADI LA UNION DE LOS RIOS",
 "Local_ESCUELA RAFAEL VALDIVIESO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RAIMAPU FREIRE DE LA ARAUCANIA",
 "Local_ESCUELA RALCO LEPOY ALTO BIOBIO DEL BIOBIO",
 "Local_ESCUELA RAMON BELMAR SALDIAS LINARES DEL MAULE",
 "Local_ESCUELA RAMON EDUARDO RAMIREZ HENRIQUEZ CURACAUTIN DE LA ARAUCANIA",
 "Local_ESCUELA RAUCO RAUCO DEL MAULE",
 "Local_ESCUELA REBECA MATTE BELLO RENCA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RECAREDO VIGUERAS ARANEDA SANTA JUANA DEL BIOBIO",
 "Local_ESCUELA REINA DE SUECIA L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINA DE SUECIA L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REINO DE DINAMARCA MOLINA DEL MAULE",
 "Local_ESCUELA RENE SCHNEIDER SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARABE SIRIA VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA ARGENTINA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ARGENTINA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA REPUBLICA ARGENTINA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA REPUBLICA ARGENTINA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA CHECA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ALEMANIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE AUSTRIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE BOLIVIA CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE BRASIL CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA DE COLOMBIA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE COSTA RICA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ESTADOS UNIDOS DE NORTEAMERICA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE FRANCIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE FRANCIA QUINTERO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DE FRANCIA REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA REPUBLICA DE GRECIA COQUIMBO DE COQUIMBO",
 "Local_ESCUELA REPUBLICA DE GRECIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE HONDURAS EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE INDONESIA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ISRAEL TRAIGUEN DE LA ARAUCANIA",
 "Local_ESCUELA REPUBLICA DE ITALIA - LOCAL 2 CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE ITALIA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DE ITALIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE ITALIA PENCO DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DE LA INDIA QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LAS FILIPINAS LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE LOS EE.UU. DE AMERICA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE MEXICO CHILLAN DE NUBLE",
 "Local_ESCUELA REPUBLICA DE MEXICO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE PANAMA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE POLONIA LAMPA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL BRASIL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL ECUADOR ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA REPUBLICA DEL ECUADOR EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA DEL PARAGUAY VALPARAISO DE VALPARAISO",
 "Local_ESCUELA REPUBLICA DEL PERU HUALPEN DEL BIOBIO",
 "Local_ESCUELA REPUBLICA DEL PERU SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REPUBLICA ESTADOS UNIDOS CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY CURICO DEL MAULE",
 "Local_ESCUELA REPUBLICA ORIENTAL DEL URUGUAY SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA REVERENDO PADRE PATRICIO CARIOLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA RICARDO CAMPILLAY CONTRERAS ALTO DEL CARMEN DE ATACAMA",
 "Local_ESCUELA RICARDO EDUARDO LATCHAM PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIO COLORADO SAN ESTEBAN DE VALPARAISO",
 "Local_ESCUELA RIO NEGRO RIO NEGRO DE LOS LAGOS",
 "Local_ESCUELA RISOPATRON PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RIVERA DEL MAULE PENCAHUE DEL MAULE",
 "Local_ESCUELA ROBERTO OJEDA TORRES PAILLACO DE LOS RIOS",
 "Local_ESCUELA ROCIO DE LOS ANGELES PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROMILIO ARELLANO TRONCOSO LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA ROMULO PENA MATURANA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA ROSA YANEZ RODRIGUEZ CORONEL DEL BIOBIO",
 "Local_ESCUELA ROSALINA PESCIO VARGAS PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSARIO CONCHA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ROSITA RENARD CORONEL DEL BIOBIO",
 "Local_ESCUELA RUBEN DARIO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA RURAL 21 DE MAYO PAILLACO DE LOS RIOS",
 "Local_ESCUELA RURAL ADELA GARCIA GARCIA QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL ALFONSO OSSES PEREZ MARIQUINA DE LOS RIOS",
 "Local_ESCUELA RURAL AMANECER 2000 QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL ANTILHUE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL ARTISTICA ALUMNO MARCELO GUENTEO SOLIS QUELLON DE LOS LAGOS",
 "Local_ESCUELA RURAL BAHIA MANSA SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_ESCUELA RURAL BORDEMAR (NUEVA) QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CALCURRUPE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL CANITAS LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL CARBONEROS CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL CARRETERA AUSTRAL RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CHAUQUEAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHAYAHUE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL CHOROICO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA DIUMEN RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL COLONIA RIO SUR PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CON INTERNADO RIO BLANCO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL CORRENTOSO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL CRISTO REY PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL CRUCERO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL CUCAO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL CURINANCO VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL CURRINE FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL DORILA AGUILA AGUILAR MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL DUAO MAULE DEL MAULE",
 "Local_ESCUELA RURAL EL AVELLANAL CALBUCO DE LOS LAGOS",
 "Local_ESCUELA RURAL EL ENCANTO PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL EL PULPITO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ENRIQUE HEVIA LABBE LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL EPSON PUERTO VARAS DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTACION NUEVO PORVENIR PUYEHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL ESTAQUILLA LOS MUERMOS DE LOS LAGOS",
 "Local_ESCUELA RURAL FOLILCO LOS LAGOS DE LOS RIOS",
 "Local_ESCUELA RURAL HILDA HUNQUEN MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL HUELLELHUE VALDIVIA DE LOS RIOS",
 "Local_ESCUELA RURAL HUELMO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL HUILLINCO CHONCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL ISLA HUAPI FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL JOSE DANIEL BAHAMONDE BAHAMONDE DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL JUAN VICTORINO TANGOL DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA AGUADA CORRAL DE LOS RIOS",
 "Local_ESCUELA RURAL LA CAPILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA CHAMIZA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LA PAZ PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LA POZA SAN PABLO DE LOS LAGOS",
 "Local_ESCUELA RURAL LA RINCONADA PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LA VILLA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LAGO AZUL PANGUIPULLI DE LOS RIOS",
 "Local_ESCUELA RURAL LAS CAMPANAS PUQUELDON DE LOS LAGOS",
 "Local_ESCUELA RURAL LAS CASCADAS PUERTO OCTAY DE LOS LAGOS",
 "Local_ESCUELA RURAL LENCA PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL LINDA VISTA QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LLINGUA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LLIUCO QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL LONCOTORO LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ANGELES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS ARCES MAULLIN DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS LINARES DE CASMA FRUTILLAR DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PELLINES LLANQUIHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL LOS PINOS QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL LUZ Y SABER OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL MAILLEN ESTERO PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL MALLINLEMU DALCAHUE DE LOS LAGOS",
 "Local_ESCUELA RURAL MASHUE LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL MIRTA OYARZO VERA CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL MONTEMAR QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL NONTUELA FUTRONO DE LOS RIOS",
 "Local_ESCUELA RURAL NUEVA ISRAEL PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA RURAL NUMPAY MAULE DEL MAULE",
 "Local_ESCUELA RURAL OSTRICULTURA QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL PABLO CEA VASQUEZ COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PABLO NERUDA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL PARGA FRESIA DE LOS LAGOS",
 "Local_ESCUELA RURAL PEDRO VELAZQUEZ BONTES CASTRO DE LOS LAGOS",
 "Local_ESCUELA RURAL PICHIL OSORNO DE LOS LAGOS",
 "Local_ESCUELA RURAL PUENTE COLMO CONCON DE VALPARAISO",
 "Local_ESCUELA RURAL PUERTO NUEVO LA UNION DE LOS RIOS",
 "Local_ESCUELA RURAL PULLALLY PAPUDO DE VALPARAISO",
 "Local_ESCUELA RURAL RININAHUE LAGO RANCO DE LOS RIOS",
 "Local_ESCUELA RURAL RUNCA MAFIL DE LOS RIOS",
 "Local_ESCUELA RURAL SAN FRANCISCO QUINCHAO DE LOS LAGOS",
 "Local_ESCUELA RURAL SAN JOSE DE TRANQUI QUEILEN DE LOS LAGOS",
 "Local_ESCUELA RURAL SOL DEL PACIFICO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL TAC QUEMCHI DE LOS LAGOS",
 "Local_ESCUELA RURAL TEPUAL PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL TRAPEN PUERTO MONTT DE LOS LAGOS",
 "Local_ESCUELA RURAL VALLE DE LA LUNA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VALLE MANTILHUE BAJO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA RURAL VALLE SIMPSON COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA RURAL VILLA CHACAO ANCUD DE LOS LAGOS",
 "Local_ESCUELA RURAL VIVANCO RIO BUENO DE LOS RIOS",
 "Local_ESCUELA SALOMON SACK LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALOMON SALMAN DABUD LINARES DEL MAULE",
 "Local_ESCUELA SALTOS DEL LAJA CABRERO DEL BIOBIO",
 "Local_ESCUELA SALVADOR SANFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SALVADOR SANFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN ANDRES DE PICA PICA DE TARAPACA",
 "Local_ESCUELA SAN ANTONIO LINARES DEL MAULE",
 "Local_ESCUELA SAN CLEMENTE SAN CLEMENTE DEL MAULE",
 "Local_ESCUELA SAN DANIEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN FRANCISCO DE ASIS DE ERCILLA ERCILLA DE LA ARAUCANIA",
 "Local_ESCUELA SAN FRANCISCO DE ASIS MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SAN FRANCISCO DE CHIU CHIU CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA SAN FRANCISCO DE LA SELVA COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN JOSE CALBUCO DE LOS LAGOS",
 "Local_ESCUELA SAN JOSE DE COLICO CURANILAHUE DEL BIOBIO",
 "Local_ESCUELA SAN JOSE OBRERO DE CURACAVI CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JOSE OBRERO PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN JUAN BAUTISTA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LEONARDO MURIALDO LA REINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN LUIS DE CONTULMO CONTULMO DEL BIOBIO",
 "Local_ESCUELA SAN LUIS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SAN PEDRO COPIAPO DE ATACAMA",
 "Local_ESCUELA SAN PEDRO DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SAN PEDRO DE QUINTAY CASABLANCA DE VALPARAISO",
 "Local_ESCUELA SAN RAFAEL COQUIMBO DE COQUIMBO",
 "Local_ESCUELA SAN RAFAEL SAN RAFAEL DEL MAULE",
 "Local_ESCUELA SAN SANTIAGO DE BELEN PUTRE DE ARICA Y PARINACOTA",
 "Local_ESCUELA SAN VICENTE DE PAUL COPIAPO DE ATACAMA",
 "Local_ESCUELA SANITAS LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ADRIANA LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ANA L1 VALPARAISO DE VALPARAISO",
 "Local_ESCUELA SANTA BARBARA LINARES DEL MAULE",
 "Local_ESCUELA SANTA CLARA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA DELFINA RETIRO DEL MAULE",
 "Local_ESCUELA SANTA FE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA IRENE LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA JOAQUINA DE VEDRUNA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA LEONOR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA SANTA MARIA DE PENALOLEN PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA MARTA DE LIRAY COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA DE CHENA PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA ROSA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA SANTA TERESA DEL CARMELO COLINA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA DE HUECHURABA HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTA VICTORIA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SANTIAGO AMENGUAL B. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_ESCUELA SANTIAGO BUERAS NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA SANTIAGO DE GUAYAQUIL HUECHURABA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2 DANIEL REBOLLEDO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO 2DO DANIEL REBOLLEDO TALCA DEL MAULE",
 "Local_ESCUELA SARGENTO CANDELARIA CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SARGENTO CANDELARIA PEREZ SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_ESCUELA SELVA OSCURA VICTORIA DE LA ARAUCANIA",
 "Local_ESCUELA SENDERO DEL SABER SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SERAFIN GUTIERREZ VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA SILVANO FERNANDEZ YERBAS BUENAS DEL MAULE",
 "Local_ESCUELA SIXTO MENDEZ PARADA GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA SOCIEDAD DEL SOCORRO DE SENORAS OSORNO DE LOS LAGOS",
 "Local_ESCUELA SOL NACIENTE CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SONIA PLAZA CASTRO PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOR TERESA DE LOS ANDES LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SOTERO DEL RIO L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SU SANTIDAD JUAN XXIII SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA SUIZA OSORNO DE LOS LAGOS",
 "Local_ESCUELA SUPERIOR DE NINAS DE MOLINA MOLINA DEL MAULE",
 "Local_ESCUELA SUPERIOR NUEVA BILBAO CONSTITUCION DEL MAULE",
 "Local_ESCUELA SUSANA MONTES VELASCO TENO DEL MAULE",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNICA PROFESIONAL DOCTOR OSCAR MARIN SOCIAS L2 VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TECNO SUR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TEGUALDA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L1 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA L2 LIMACHE DE VALPARAISO",
 "Local_ESCUELA TENIENTE HERNAN MERINO CORREA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TENO ANEXO TENO DEL MAULE",
 "Local_ESCUELA TENO TENO DEL MAULE",
 "Local_ESCUELA TEODORO LOWEY VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA TERESA DE CALCUTA PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TERRITORIO ANTARTICO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THE LITTLE SCHOOL CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA THEODOR HEUSS QUILPUE DE VALPARAISO",
 "Local_ESCUELA THILDA PORTILLO OLIVARES IQUIQUE DE TARAPACA",
 "Local_ESCUELA THOMAS ALVA EDISON COLLIPULLI DE LA ARAUCANIA",
 "Local_ESCUELA THOMAS JEFFERSON D 465 HUALPEN DEL BIOBIO",
 "Local_ESCUELA THOMAS JEFFERSON LOS ANGELES DEL BIOBIO",
 "Local_ESCUELA TIMOTEO ARAYA ALEGRIA VILLA ALEGRE DEL MAULE",
 "Local_ESCUELA TOBALABA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOMAS VARGAS L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA TOQUI LAUTARO NACIMIENTO DEL BIOBIO",
 "Local_ESCUELA TULIO BURGOS RIVERA CHILE CHICO DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA TUPAHUE SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA ULDA ARACENA GONZALEZ F-203 NOGALES DE VALPARAISO",
 "Local_ESCUELA UNESCO CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNIFICADA ISLA GUAR CALBUCO DE LOS LAGOS",
 "Local_ESCUELA UNION LATINOAMERICANA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNION LATINOAMERICANA PITRUFQUEN DE LA ARAUCANIA",
 "Local_ESCUELA UNION NACIONAL ARABE PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA UNO ISABEL RIQUELME LINARES DEL MAULE",
 "Local_ESCUELA VADO DE TOPATER CALAMA DE ANTOFAGASTA",
 "Local_ESCUELA VALDIVIA DE PAINE BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALENTIN LETELIER VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VALLE DE CUYA CAMARONES DE ARICA Y PARINACOTA",
 "Local_ESCUELA VALLE DE MARIQUINA MARIQUINA DE LOS RIOS",
 "Local_ESCUELA VALLE DE PUANGUE CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE DEL INCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VALLE RAMADILLAS ARAUCO DEL BIOBIO",
 "Local_ESCUELA VEGAS DE ITATA COELEMU DE NUBLE",
 "Local_ESCUELA VICENTE HUIDOBRO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA VICENTE REYES PALAZUELOS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR CUCCUINI RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VICTOR DOMINGO SILVA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_ESCUELA VILLA ALEGRE TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CAROLINA TEMUCO DE LA ARAUCANIA",
 "Local_ESCUELA VILLA CENTINELA SUR TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA CULENAR TALCA DEL MAULE",
 "Local_ESCUELA VILLA HUEQUEN ANGOL DE LA ARAUCANIA",
 "Local_ESCUELA VILLA INDEPENDENCIA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA INDEPENDENCIA TALCAHUANO DEL BIOBIO",
 "Local_ESCUELA VILLA INDEPENDENCIA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA JESUS DE COELEMU COELEMU DE NUBLE",
 "Local_ESCUELA VILLA LA CULTURA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA LA GRANJA MULCHEN DEL BIOBIO",
 "Local_ESCUELA VILLA LA PAZ TALCA DEL MAULE",
 "Local_ESCUELA VILLA LAS DUNAS SAN ANTONIO DE VALPARAISO",
 "Local_ESCUELA VILLA LAS NIEVES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_ESCUELA VILLA LO BURGOS PURRANQUE DE LOS LAGOS",
 "Local_ESCUELA VILLA MONTE VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VILLA PEDRO AGUIRRE CERDA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA PRAT SAGRADA FAMILIA DEL MAULE",
 "Local_ESCUELA VILLA SAN MIGUEL SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SAN PEDRO PUCON DE LA ARAUCANIA",
 "Local_ESCUELA VILLA SANTA ELENA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLA SUR PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VILLASECA BUIN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VINA PURISIMA TALCA DEL MAULE",
 "Local_ESCUELA VIOLETA PARRA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA VIOLETA PARRA VINA DEL MAR DE VALPARAISO",
 "Local_ESCUELA VIRGEN DEL CARMEN EL CARMEN DE NUBLE",
 "Local_ESCUELA VISTA HERMOSA CORONEL DEL BIOBIO",
 "Local_ESCUELA VOIPIR DE NANCUL VILLARRICA DE LA ARAUCANIA",
 "Local_ESCUELA VOLCAN ANTUCO ANTUCO DEL BIOBIO",
 "Local_ESCUELA WASHINGTON OMAR VENEGAS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_ESCUELA WELCOME SCHOOL PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_ESCUELA YERBAS BUENAS Y GIMNASIO ANCUD DE LOS LAGOS",
 "Local_ESCUELA ZAIDA ARANEDA VIGUERAS LOS ALAMOS DEL BIOBIO",
 "Local_ESTADIO DIAGUITA OVALLE DE COQUIMBO",
 "Local_ESTADIO LA PORTADA LA SERENA DE COQUIMBO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L1 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO LUCIO FARINA FERNANDEZ L2 QUILLOTA DE VALPARAISO",
 "Local_ESTADIO MONUMENTAL L1 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L2 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO MONUMENTAL L3 MACUL METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO NACIONAL JULIO MARTINEZ PRADANOS L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO PAUL HARRIS LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_ESTADIO RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_FACULTAD DE ARQUITECTURA UNIVERSIDAD DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_FACULTAD DE FILOSOFIA Y EDUCACION PUCV, CAMPUS SAUSALITO VINA DEL MAR DE VALPARAISO",
 "Local_FACULTAD DE INGENIERIA PUCV VALPARAISO DE VALPARAISO",
 "Local_GEORGE CHAYTOR ENGLISH COLLEGE TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO AUGUSTO ZUBIRI (EX EPICENTRO I) ARICA DE ARICA Y PARINACOTA",
 "Local_GIMNASIO DEPORTIVO LAS ANIMAS VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO FISCAL PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_GIMNASIO LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_GIMNASIO MUNICIPAL CASTRO DE LOS LAGOS",
 "Local_GIMNASIO MUNICIPAL CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL DE RAUCO RAUCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL LOTA DEL BIOBIO",
 "Local_GIMNASIO MUNICIPAL MACUL METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL NANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL PELARCO DEL MAULE",
 "Local_GIMNASIO MUNICIPAL PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL RINCONADA DE VALPARAISO",
 "Local_GIMNASIO MUNICIPAL SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO MUNICIPAL SAN JAVIER DEL MAULE",
 "Local_GIMNASIO MUNICIPAL SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_GIMNASIO MUNICIPAL TENO DEL MAULE",
 "Local_GIMNASIO OLIMPICO UFRO TEMUCO DE LA ARAUCANIA",
 "Local_GIMNASIO POLIDEPORTIVO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_GIMNASIO POLIDEPORTIVO MARTIN VARGAS MAIPU METROPOLITANA DE SANTIAGO",
 "Local_GIMNASIO UNIVERSIDAD DE LOS LAGOS PUERTO MONTT DE LOS LAGOS",
 "Local_GIMNASIOS INSTITUTO SALESIANO VALDIVIA DE LOS RIOS",
 "Local_GREEN HOUSE SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_HERNAN MERINO CORREA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_HRVATSKA SKOLA SAN ESTEBAN ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INST. SUPERIOR DE ADMINISTRACION Y TURISMO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO BICENTENARIO JAVIERA CARRERA VERDUGO SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO CHACABUCO LOS ANDES DE VALPARAISO",
 "Local_INSTITUTO CHILE ASIA PACIFICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO CIENTIFICO EDUCACIONAL JOSE MAZA SANCHO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO CLARET TEMUCO DE LA ARAUCANIA",
 "Local_INSTITUTO COMERCIAL ALBERTO VALENZUELA LLANOS SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL BLAS CANAS L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO COMERCIAL ELIODORO DOMINGUEZ DOMINGUEZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO COMERCIAL LINARES DEL MAULE",
 "Local_INSTITUTO COMERCIAL MARITIMO PACIFICO SUR L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO COMERCIAL OSORNO DE LOS LAGOS",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES ORIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L1 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO CUMBRE DE CONDORES PONIENTE L2 RENCA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE ADMINISTRACION Y COMERCIO ESTADO DE ISRAEL COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO DE HUMANIDADES ALFREDO SILVA SANTIAGO CONCEPCION DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES ANTONIO MORENO CASAMITJANA CORONEL DEL BIOBIO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE HUMANIDADES LUIS CAMPINO L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO DE MATEMATICAS PUCV MALAQUIAS MORALES MUNOZ VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L1 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO DEL PUERTO L2 SAN ANTONIO DE VALPARAISO",
 "Local_INSTITUTO EDUCACIONAL COLLICO VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO HERMANOS MATTE SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO HUMANIDADES MONSENOR JOSE MANUEL SANTO ASCARZA CHIGUAYANTE DEL BIOBIO",
 "Local_INSTITUTO HUMANIDADES SAN FRANCISCO DE ASIS LOTA DEL BIOBIO",
 "Local_INSTITUTO INDUSTRIAL SUPERIOR DE CHILLAN CHILLAN DE NUBLE",
 "Local_INSTITUTO INGLES CURICO DEL MAULE",
 "Local_INSTITUTO ITALIA DE VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_INSTITUTO LINARES LINARES DEL MAULE",
 "Local_INSTITUTO MIGUEL LEON PRADO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO O'HIGGINS DE MAIPU MAIPU METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO OBISPO SILVA LEZAETA CALAMA DE ANTOFAGASTA",
 "Local_INSTITUTO POLITECNICO SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO POLITECNICO SUPERIOR EGIDIO ROZ CONSTITUCION DEL MAULE",
 "Local_INSTITUTO POLITECNICO SUPERIOR JUAN TERRIER DAILLY CURICO DEL MAULE",
 "Local_INSTITUTO PRESIDENTE ERRAZURIZ LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO PROFESIONAL DUOC PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO RAFAEL ARIZTIA L1 QUILLOTA DE VALPARAISO",
 "Local_INSTITUTO SAN MIGUEL COLINA METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SAN SEBASTIAN BASICO YUMBEL DEL BIOBIO",
 "Local_INSTITUTO SAN VICENTE DE TAGUA TAGUA SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_INSTITUTO SANTA MARIA CHILLAN DE NUBLE",
 "Local_INSTITUTO SANTO TOMAS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE CHILE SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO DE COQUIMBO COQUIMBO DE COQUIMBO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO EDUARDO FREI MONTALVA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_INSTITUTO SUPERIOR DE COMERCIO ENRIQUE MALDONADO TALCA DEL MAULE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO JERARDO MUNOZ CAMPOS ANTOFAGASTA DE ANTOFAGASTA",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PROFESOR FERNANDO PEREZ BECERRA CHILLAN DE NUBLE",
 "Local_INSTITUTO SUPERIOR DE COMERCIO PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO (2) L1 VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNICO PROFESIONAL MARITIMO VALPARAISO VALPARAISO DE VALPARAISO",
 "Local_INSTITUTO TECNOLOGICO Y COMERCIAL RECOLETA-INTECO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_INTERNADO FEMENINO CHIMBARONGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_JARDIN INFANTIL RUCAPEQUEN CHILLAN VIEJO DE NUBLE",
 "Local_JUNIOR COLLEGE ARICA DE ARICA Y PARINACOTA",
 "Local_LIC.DE CIENC.Y HUM.SAN JOSEMARIA ESCRIVA COQUIMBO DE COQUIMBO",
 "Local_LICEO A- 5 JOVINA NARANJO FERNANDEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 OCTAVIO PALMA PEREZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-1 VALENTIN LETELIER L1 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-1 VALENTIN LETELIER L2 RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-127 FIDEL PINOCHET LE-BRUN SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 BASICA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-131 MEDIA HAYDEE AZOCAR MANSILLA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-2 POLITECNICO ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-33 GUILLERMO RIVERA COTAPOS L2 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO A-80 PRESIDENTE JOSE MANUEL BALMACEDA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ABATE MOLINA TALCA DEL MAULE",
 "Local_LICEO ABDON CIFUENTES CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ACADEMIA NACIONAL ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO ADVENTISTA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO AGRICOLA CHOLCHOL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO AGRICOLA JOSE ABELARDO NUNEZ ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGRICOLA PADRE FRANCISCO NAPOLITANO ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO AGROINDUSTRIAL RIO CLARO RIO CLARO DEL MAULE",
 "Local_LICEO AGUSTIN ROSS EDWARDS PICHILEMU DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ALBERTO BLEST GANA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALBERTO BLEST GANA LOS LAGOS DE LOS RIOS",
 "Local_LICEO ALCALDE SERGIO GONZALEZ GUTIERREZ POZO ALMONTE DE TARAPACA",
 "Local_LICEO ALEJANDRO ALVAREZ JOFRE OVALLE DE COQUIMBO",
 "Local_LICEO ALEMAN DEL VERBO DIVINO L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALEXANDER FLEMING DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE GALVARINO RIVEROS CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALMIRANTE PEDRO ESPINA RITCHIE TALCAHUANO DEL BIOBIO",
 "Local_LICEO ALONSO DE ERCILLA Y ZUNIGA ERCILLA DE LA ARAUCANIA",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO CORDILLERA DE LA FLORIDA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ALTO JAHUEL BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO AMANDA LABARCA VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANDRES ALCAZAR DE TUCAPEL TUCAPEL DEL BIOBIO",
 "Local_LICEO ANDRES BELLO PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO ANDRES BELLO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L1 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO HERMIDA FABRES L2 PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ANTONIO SALAMANCA MORALES CORONEL DEL BIOBIO",
 "Local_LICEO ANTONIO VARAS CAUQUENES DEL MAULE",
 "Local_LICEO ANTONIO VARAS L1 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ANTONIO VARAS L2 LAGO RANCO DE LOS RIOS",
 "Local_LICEO ARAUCANIA SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTISTICO ARMANDO CARRERA GONZALEZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO ARTISTICO D-13 JUAN NOE CREVANI ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO ARTURO ALESSANDRI PALMA LONGAVI DEL MAULE",
 "Local_LICEO ARTURO ALESSANDRI PALMA PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO ALESSANDRI PALMA ROMERAL DEL MAULE",
 "Local_LICEO ARTURO PEREZ CANTO RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ARTURO PRAT CHACON CISNES DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO ARTURO VALENZUELA CUNCO DE LA ARAUCANIA",
 "Local_LICEO AUGUSTO D HALMAR NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO AUGUSTO SANTELICES VALENZUELA LICANTEN DEL MAULE",
 "Local_LICEO AVENIDA RECOLETA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO B 42 TAJAMAR PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN MUNOZ GAMERO PUERTO OCTAY DE LOS LAGOS",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BENJAMIN VICUNA MACKENNA L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BERTA ZAMORANO LIZANA COLTAUCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L1 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BETSABE HORMAZABAL DE ALARCON L2 SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO A-71 GUILLERMO FELIU CRUZ ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO AGRICOLA DE LA PATAGONIA COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO AGRICOLA MARTA MARTINEZ CRUZ YERBAS BUENAS DEL MAULE",
 "Local_LICEO BICENTENARIO AGROPECUARIO LIKAN ANTAI SAN PEDRO DE ATACAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ANDRES SABELLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ARAUCANIA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO ARTISTICO ALEXANDER GRAHAM BELL VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CHACABUCO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO CIUDAD DE LOS RIOS VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO BICENTENARIO CLAUDIO ARRAU LEON COIHUECO DE NUBLE",
 "Local_LICEO BICENTENARIO COLEGIO DIOCESANO OBISPO LABBE IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO NIRVANA ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO BICENTENARIO COLEGIO PANQUEHUE PANQUEHUE DE VALPARAISO",
 "Local_LICEO BICENTENARIO COMPLEJO EDUCACIONAL ANDRES ANTONIO GORBEA GORBEA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO CORDILLERA DE SAN FELIPE SAN FELIPE DE VALPARAISO",
 "Local_LICEO BICENTENARIO DE ANCUD ANCUD DE LOS LAGOS",
 "Local_LICEO BICENTENARIO DE CAUQUENES CAUQUENES DEL MAULE",
 "Local_LICEO BICENTENARIO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA CARLOS MONTANE CASTRO QUIRIHUE DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA DIEGO PORTALES PALAZUELOS SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA NUEVO MUNDO MULCHEN DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE JUVENAL HERNANDEZ JAQUE EL CARMEN DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA POLIVALENTE SAN NICOLAS, CAMPUS SERGIO MARTIN ALAMOS SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNICO PUENTE NUBLE SAN NICOLAS DE NUBLE",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TECNOLOGICO FEDERICO SCHWAGER CORONEL DEL BIOBIO",
 "Local_LICEO BICENTENARIO DE EXCELENCIA TREHUACO TREGUACO DE NUBLE",
 "Local_LICEO BICENTENARIO DE HOTELERIA Y TURISMO PUCON DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE MOLINA MARIA DEL TRANSITO DE LA CRUZ MOLINA DEL MAULE",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE NINAS DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO DE VALLENAR VALLENAR DE ATACAMA",
 "Local_LICEO BICENTENARIO DE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO BICENTENARIO DIEGO PORTALES PALAZUELOS CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO ENRIQUE BALLACEY COTTEREAU ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO FRANCISCO BILBAO BARQUIN DE QUILICURA QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO INDOMITO DE PUREN PUREN DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO INGENIERO RICARDO FENNER RUEDI LA UNION DE LOS RIOS",
 "Local_LICEO BICENTENARIO ISIDORA RAMOS DE GAJARDO LEBU DEL BIOBIO",
 "Local_LICEO BICENTENARIO LUIS CRUZ MARTINEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO LUIS GONZALEZ VASQUEZ NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO MANUEL DE SALAS L1 CASABLANCA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MANUEL JESUS ORTIZ SAN IGNACIO DE NUBLE",
 "Local_LICEO BICENTENARIO MARTA NAREA DIAZ ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MARY GRAHAM (BASICA) L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO MERCEDES FRITIS MACKENNEY COPIAPO DE ATACAMA",
 "Local_LICEO BICENTENARIO ORIENTE DE TALCA TALCA DEL MAULE",
 "Local_LICEO BICENTENARIO PABLO NERUDA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO PADRE ALBERTO HURTADO CRUCHAGA PICA DE TARAPACA",
 "Local_LICEO BICENTENARIO PAUL HARRIS PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO POLITECNICO CESAREO AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO BICENTENARIO POLITECNICO EMA ESPINOZA CORREA LAUTARO DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO JOSE MANUEL PINTO ARIAS PINTO DE NUBLE",
 "Local_LICEO BICENTENARIO POLITECNICO JUANITA FERNANDEZ SOLAR ANGOL DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLITECNICO MANUEL MONTT VICTORIA DE LA ARAUCANIA",
 "Local_LICEO BICENTENARIO POLIVALENTE NUESTRA SENORA DE LA MERCED SAN CARLOS DE NUBLE",
 "Local_LICEO BICENTENARIO QUEMCHI QUEMCHI DE LOS LAGOS",
 "Local_LICEO BICENTENARIO RURAL CERRO CASTILLO RIO IBANEZ DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO BICENTENARIO SAN FELIPE DE ARAUCO ARAUCO DEL BIOBIO",
 "Local_LICEO BICENTENARIO SAN PEDRO DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA CRUZ DE LARQUI BULNES DE NUBLE",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SANTA MARIA IQUIQUE DE TARAPACA",
 "Local_LICEO BICENTENARIO SANTA TERESA DE LOS ANDES COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO SIMON BOLIVAR LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO AMANCAY DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL DE MINERIA CABILDO DE VALPARAISO",
 "Local_LICEO BICENTENARIO TECNICO PROFESIONAL MARY GRAHAM (MEDIA) VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO BICENTENARIO TERESA PRATS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO VALPARAISO (B-29) L2 VALPARAISO DE VALPARAISO",
 "Local_LICEO BICENTENARIO ZAPALLAR ZAPALLAR DE VALPARAISO",
 "Local_LICEO CAMILO HENRIQUEZ DE TEMUCO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CAMPANARIO YUNGAY DE NUBLE",
 "Local_LICEO CAPITAN IGNACIO CARRERA PINTO COLBUN DEL MAULE",
 "Local_LICEO CARDENAL ANTONIO SAMORE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL ANTONIO SAMORE SANTA BARBARA DEL BIOBIO",
 "Local_LICEO CARDENAL CARO BASICA BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L1 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARDENAL CARO MEDIA L2 BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARLOS CONDELL TALCA DEL MAULE",
 "Local_LICEO CARLOS COUSINO GOYENECHEA LOTA DEL BIOBIO",
 "Local_LICEO CARLOS IBANEZ DEL CAMPO FRESIA DE LOS LAGOS",
 "Local_LICEO CARLOS ROBERTO MONDACA CORTES VICUNA DE COQUIMBO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA CARVAJAL DE PRAT L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMELA SILVA DONOSO L3 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO CARMEN AURORA RODRIGUEZ HENRIQUEZ COQUIMBO DE COQUIMBO",
 "Local_LICEO CATOLICO ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO CHIGUAYANTE CHIGUAYANTE DEL BIOBIO",
 "Local_LICEO CHILOE L1 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHILOE L2 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L1 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CHRISTA MC AULIFFE L2 EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO CIENTIFICO HUMANISTA BRAINSTORM TEMUCO DE LA ARAUCANIA",
 "Local_LICEO CIENTIFICO HUMANISTA LA CHIMBA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO CIUDAD DE BRASILIA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLARA SOLOVERA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CLAUDINA URRUTIA DE LAVIN CAUQUENES DEL MAULE",
 "Local_LICEO CLAUDIO ARRAU DONIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO CLAUDIO FLORES SOTO LOS ALAMOS DEL BIOBIO",
 "Local_LICEO COEDUCACIONAL LA IGUALDAD VALPARAISO DE VALPARAISO",
 "Local_LICEO COEDUCACIONAL SANTA MARIA DE LOS ANGELES LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ALEJANDRO LUBET VERGARA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO COMERCIAL ANDRES BELLO LOPEZ CORONEL DEL BIOBIO",
 "Local_LICEO COMERCIAL CAMILO HENRIQUEZ LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL DE LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE LOS ANDES L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO COMERCIAL DE PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE QUILLOTA QUILLOTA DE VALPARAISO",
 "Local_LICEO COMERCIAL DE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO COMERCIAL DEL DESARROLLO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL DIEGO PORTALES L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL DIEGO PORTALES PALAZUELO LOS ANGELES DEL BIOBIO",
 "Local_LICEO COMERCIAL ENRIQUE OYARZUN MONDACA CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL FEMENINO DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO COMERCIAL GABRIEL GONZALEZ VIDELA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL JORGE ALESSANDRI RODRIGUEZ RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO COMERCIAL MIRAMAR PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL MOLINA LAVIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL PRESIDENTE FREI MONTALVA LOTA DEL BIOBIO",
 "Local_LICEO COMERCIAL PROFESOR SERGIO MORAGA ARCIL TALCAHUANO DEL BIOBIO",
 "Local_LICEO COMERCIAL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO COMERCIAL REPUBLICA DE BRASIL PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMERCIAL TEMUCO BICENTENARIO DE EXCELENCIA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO COMERCIAL VATE VICENTE HUIDOBRO SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO COMPLEJO EDUCACIONAL JAVIERA CARRERA TALCA DEL MAULE",
 "Local_LICEO CONFEDERACION SUIZA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO CONSTITUCION CONSTITUCION DEL MAULE",
 "Local_LICEO COPIULEMU FLORIDA DEL BIOBIO",
 "Local_LICEO CORDILLERA CHINCOLCO PETORCA DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CORINA URBINA VILLANUEVA L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO CRISTO REDENTOR LOS ALAMOS DEL BIOBIO",
 "Local_LICEO DARIO SALAS L1 SANTA MARIA DE VALPARAISO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 21 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE APLICACION RECTOR JORGE E SCHNE 29 L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L1 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE BATUCO L2 LAMPA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DE CIENCIAS Y HUMANIDADES PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO DE CULTURA Y DIFUSION ARTISTICA TALCA DEL MAULE",
 "Local_LICEO DE ESTUDIOS CONTABLES Y ADMINISTR. ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES DE ANTOFAGASTA MARIO BAHAMONDE SILVA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DE HOMBRES MANUEL MONTT PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO DE HOMBRES NEANDRO SCHILLING SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE HUARA HUARA DE TARAPACA",
 "Local_LICEO DE HUEPIL TUCAPEL DEL BIOBIO",
 "Local_LICEO DE LIMACHE L1 LIMACHE DE VALPARAISO",
 "Local_LICEO DE NINAS CONCEPCION DEL BIOBIO",
 "Local_LICEO DE NINAS EDUARDO CHARME SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE NINAS RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE OLMUE OLMUE DE VALPARAISO",
 "Local_LICEO DE PELARCO PELARCO DEL MAULE",
 "Local_LICEO DE REQUINOA L1 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE REQUINOA L2 REQUINOA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO DE SALAMANCA SALAMANCA DE COQUIMBO",
 "Local_LICEO DE YUNGAY YUNGAY DE NUBLE",
 "Local_LICEO DEPORTIVO ELENA DUVAUCHELLE CABEZON IQUIQUE DE TARAPACA",
 "Local_LICEO DIEGO PORTALES COQUIMBO DE COQUIMBO",
 "Local_LICEO DOCTOR ALEJANDRO DEL RIO LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR JUAN VERDAGUER PLANAS RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO DOCTOR VICTOR RIOS RUIZ ANTUCO DEL BIOBIO",
 "Local_LICEO DOMINGO HERRERA RIVERA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO DOMINGO ORTIZ DE ROZAS ILLAPEL DE COQUIMBO",
 "Local_LICEO DOMINGO SANTA MARIA CONCEPCION DEL BIOBIO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO DR. ROBERTO HUMERES OYANEDER L2 SAN FELIPE DE VALPARAISO",
 "Local_LICEO EDUARDO DE LA BARRA VALPARAISO DE VALPARAISO",
 "Local_LICEO EL BOLLENAR MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL PRINCIPAL PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROBLE LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EL ROSARIO DE LITUECHE L1 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO EL ROSARIO DE LITUECHE L2 LITUECHE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ELEUTERIO RAMIREZ MOLINA CALAMA DE ANTOFAGASTA",
 "Local_LICEO ELEUTERIO RAMIREZ OSORNO DE LOS LAGOS",
 "Local_LICEO ELVIRA BRADY MALDONADO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ELVIRA SANCHEZ DE GARCES MOSTAZAL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO ENRIQUE BACKAUSSE PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ERASMO ESCALA ARRIAGADA PENALOLEN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESMERALDA COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESPIRITU SANTO DEL VERBO DIVINO SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L1 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO ESTACION CENTRAL L2 ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIA SUBERCASEAUX L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO EUGENIO MARIA DE HOSTOS LA REINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EUGENIO PEREIRA SALAS PEDRO AGUIRRE CERDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL ARTISTICO Y DE APLICACION ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL MANUEL DE SALAS L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO EXPERIMENTAL UMAG PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO FEDERICO ALBERT FAUPP CHANCO DEL MAULE",
 "Local_LICEO FEDERICO HEISE MARTI PARRAL DEL MAULE",
 "Local_LICEO FEDERICO VARELA CHANARAL DE ATACAMA",
 "Local_LICEO FERMIN DEL REAL CASTILLO CHEPICA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FERNANDO ARIZTIA RUIZ COPIAPO DE ATACAMA",
 "Local_LICEO FERNANDO BINVIGNAT MARIN COQUIMBO DE COQUIMBO",
 "Local_LICEO FERNANDO LAZCANO CURICO DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA ARMANET VILLA ALEGRE DEL MAULE",
 "Local_LICEO FRANCISCO ANTONIO ENCINA LAS CABRAS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO FRANCISCO BASCUNAN GUERRERO QUILLECO DEL BIOBIO",
 "Local_LICEO FRANCISCO COLOANE CASTRO DE LOS LAGOS",
 "Local_LICEO FRANCISCO DE AGUIRRE CALAMA DE ANTOFAGASTA",
 "Local_LICEO FRANCISCO FRIAS VALENZUELA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRANCISCO HERNANDEZ ORTIZ-PIZARRO CALBUCO DE LOS LAGOS",
 "Local_LICEO FRANCISCO JAVIER KRUGGER ALVARADO BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO FRAY PABLO DE ROYO SAN PABLO DE LOS LAGOS",
 "Local_LICEO GABRIELA MISTRAL CANETE DEL BIOBIO",
 "Local_LICEO GABRIELA MISTRAL DE LA SERENA LA SERENA DE COQUIMBO",
 "Local_LICEO GABRIELA MISTRAL DE MELIPILLA MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO GABRIELA MISTRAL MAFIL DE LOS RIOS",
 "Local_LICEO GABRIELA MISTRAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO GABRIELA MISTRAL SAN ANTONIO DE VALPARAISO",
 "Local_LICEO GABRIELA MISTRAL TEMUCO DE LA ARAUCANIA",
 "Local_LICEO GASTRONOMIA Y TURISMO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO GASTRONOMIA Y TURISMO L2 QUILPUE DE VALPARAISO",
 "Local_LICEO GRANADEROS DE PUTRE PUTRE DE ARICA Y PARINACOTA",
 "Local_LICEO GREGORIO CORDOVEZ LA SERENA DE COQUIMBO",
 "Local_LICEO GREGORIO MORALES MIRANDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO GUILLERMO MARIN LARRAIN RETIRO DEL MAULE",
 "Local_LICEO HARDWARE SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO HECTOR PEREZ BIOTT TALCA DEL MAULE",
 "Local_LICEO HERIBERTO SOTO SOTO SAN FERNANDO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERMANOS SOTOMAYOR BAEZA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO HERNANDO DE MAGALLANES PORVENIR DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO HUALANE HUALANE DEL MAULE",
 "Local_LICEO HUERTOS FAMILIARES TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO HUMANISTA CIENTIFICO JOSE DE LA CRUZ MIRANDA CORREA CANETE DEL BIOBIO",
 "Local_LICEO IGNACIO CARRERA PINTO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO IGNACIO CARRERA PINTO TALCA DEL MAULE",
 "Local_LICEO INDIRA GANDHI LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL A 116 PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ARMANDO QUEZADA ACHARAN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO INDUSTRIAL BENJAMIN FRANKLIN QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L1 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL CHILENO-ALEMAN L2 NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION HERNAN VALENZUELA L1 HUALPEN DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE LA CONSTRUCCION VICTOR BEZANILLA SALINAS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE RENGO RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL DE SAN MIGUEL AGUSTIN EDWARDS ROSS SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL DE TOME TOME DEL BIOBIO",
 "Local_LICEO INDUSTRIAL DE VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_LICEO INDUSTRIAL DOMINGO MATTE PEREZ MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL ERNESTO PINTO LAGARRIGUE RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL EULOGIO GORDO MONEO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO INDUSTRIAL JOSE TOMAS DE URMENETA COQUIMBO DE COQUIMBO",
 "Local_LICEO INDUSTRIAL METODISTA CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO INDUSTRIAL MIGUEL AYLWIN GAJARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INDUSTRIAL OSORNO OSORNO DE LOS LAGOS",
 "Local_LICEO INDUSTRIAL PRESIDENTE PEDRO AGUIRRE CERDA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO INDUSTRIAL SAMUEL VIVANCO PARADA LOS ANGELES DEL BIOBIO",
 "Local_LICEO INDUSTRIAL VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO INGENIERO MILITAR JUAN MACKENNA O'REILLY PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO INMACULADA CONCEPCION CAUQUENES DEL MAULE",
 "Local_LICEO INSTITUTO COMERCIAL DE ARICA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO INSULAR ENSENANZA BASICA Y GIMNASIO QUINCHAO DE LOS LAGOS",
 "Local_LICEO INSULAR ENSENANZA MEDIA QUINCHAO DE LOS LAGOS",
 "Local_LICEO ISABEL POBLETE VARGAS PERQUENCO DE LA ARAUCANIA",
 "Local_LICEO ISABEL RIQUELME QUILLECO DEL BIOBIO",
 "Local_LICEO ISAURA DINATOR DE GUZMAN SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAMES MUNDELL CHOLCHOL DE LA ARAUCANIA",
 "Local_LICEO JAN COMENIUS TEMUCO DE LA ARAUCANIA",
 "Local_LICEO JAVIERA CARRERA L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JAVIERA CARRERA L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO JEAN BUCHANAN DE LARRAIN PEUMO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ CALAMA DE ANTOFAGASTA",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ LA SERENA DE COQUIMBO",
 "Local_LICEO JORGE ALESSANDRI RODRIGUEZ VICTORIA DE LA ARAUCANIA",
 "Local_LICEO JORGE TEILLIER SANDOVAL LAUTARO DE LA ARAUCANIA",
 "Local_LICEO JOSE ANTONIO CARVAJAL COPIAPO DE ATACAMA",
 "Local_LICEO JOSE DOMINGO CANAS QUILICURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE FRANCISCO VERGARA L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO JOSE IGNACIO ZENTENO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE MANUEL BORGONO NUNEZ L1 PETORCA DE VALPARAISO",
 "Local_LICEO JOSE TORIBIO MEDINA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE TORIBIO MEDINA RIO NEGRO DE LOS LAGOS",
 "Local_LICEO JOSE VICTORINO LASTARRIA GORBEA DE LA ARAUCANIA",
 "Local_LICEO JOSE VICTORINO LASTARRIA L1 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSE VICTORINO LASTARRIA L2 PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO JOSEFINA AGUIRRE MONTENEGRO COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO JUAN AGUSTIN MORALES GONZALEZ MOLINA DEL MAULE",
 "Local_LICEO JUAN ANTONIO RIOS L1 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN ANTONIO RIOS L2 QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN BAUTISTA CONTARDI PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO JUAN DANTE PARRAGUEZ ARELLANO SAN ANTONIO DE VALPARAISO",
 "Local_LICEO JUAN DE DIOS PUGA YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN GOMEZ MILLAS EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN GOMEZ MILLAS YERBAS BUENAS DEL MAULE",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN PABLO II DE LAS CONDES L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO JUAN RUSQUE PORTAL L1 NOGALES DE VALPARAISO",
 "Local_LICEO JUAN XXIII SEDE EL BELLOTO L1 QUILPUE DE VALPARAISO",
 "Local_LICEO JUANA ROSS DE EDWARDS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO LA ASUNCION TALCAHUANO DEL BIOBIO",
 "Local_LICEO LA PORTADA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO LAS AMERICAS PUYEHUE DE LOS LAGOS",
 "Local_LICEO LAS ARAUCARIAS BASICA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LAS ARAUCARIAS MEDIA CURACAUTIN DE LA ARAUCANIA",
 "Local_LICEO LATINOAMERICANO PICHIDEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO LAURA URRUTIA BENAVENTE LONGAVI DEL MAULE",
 "Local_LICEO LENKA FRANULIC NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LIBERTADOR BERNARDO O'HIGGINS RIQUELME CHILLAN DE NUBLE",
 "Local_LICEO LIBERTADOR GENERAL BERNARDO OA'HIGGINS IQUIQUE DE TARAPACA",
 "Local_LICEO LONQUIMAY LONQUIMAY DE LA ARAUCANIA",
 "Local_LICEO LOS ALMENDROS L1 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ALMENDROS L2 LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS ANDES MELIPEUCO DE LA ARAUCANIA",
 "Local_LICEO LOS ANGELES A-59 L1 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS ANGELES A-59 L2 LOS ANGELES DEL BIOBIO",
 "Local_LICEO LOS CASTANOS LAUTARO DE LA ARAUCANIA",
 "Local_LICEO LOS CONDORES ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO LOS HEROES DE LA CONCEPCION CERRO NAVIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LOS JAZMINES MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCERO GONZALEZ CONCEPCION DEL BIOBIO",
 "Local_LICEO LUCILA GODOY ALCAYAGA SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUCILA GODOY ALCAYAGA TRAIGUEN DE LA ARAUCANIA",
 "Local_LICEO LUIS ALBERTO BARRERA PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS CRUZ MARTINEZ DE CURICO CURICO DEL MAULE",
 "Local_LICEO LUIS CRUZ MARTINEZ IQUIQUE DE TARAPACA",
 "Local_LICEO LUIS CRUZ MARTINEZ NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO LUIS DE ALAVA FLORIDA DEL BIOBIO",
 "Local_LICEO LUIS EDMUNDO CORREA ROJAS CUREPTO DEL MAULE",
 "Local_LICEO LUIS HUMBERTO ACOSTA GAY EL MONTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO LUIS URBINA FLORES RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MACHALI MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MADRE VICENCIA ESTACION CENTRAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MALAQUIAS CONCHA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANIHUALES AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO MANUEL BARROS BORGONO SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL BULNES BULNES DE NUBLE",
 "Local_LICEO MANUEL JESUS ANDRADE BORQUEZ CHONCHI DE LOS LAGOS",
 "Local_LICEO MANUEL MARIN FRITIS L1 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MARIN FRITIS L2 PUTAENDO DE VALPARAISO",
 "Local_LICEO MANUEL MONTT SAN JAVIER DEL MAULE",
 "Local_LICEO MANUEL RODRIGUEZ TILTIL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MANUEL ROJAS MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA AURORA GUINEZ RAMIREZ PUREN DE LA ARAUCANIA",
 "Local_LICEO MARIA CARVAJAL FUENZALIDA PAINE METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA LUISA BOMBAL VALPARAISO DE VALPARAISO",
 "Local_LICEO MARIA LUISA BOMBAL VITACURA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIA REINA PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L1 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARIO BERTERO CEVASCO L2 ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MARTA DONOSO ESPEJO TALCA DEL MAULE",
 "Local_LICEO MARTIN RUIZ DE GAMBOA CHILLAN DE NUBLE",
 "Local_LICEO MATILDE BRANDAU DE ROSS L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAXIMILIANO SALAS MARCHAN L2 LOS ANDES DE VALPARAISO",
 "Local_LICEO MAYOR GENERAL (E) OSCAR BONILLA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_LICEO MERCEDES MARIN DEL SOLAR MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO METROPOLITANO DE ADULTOS SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL ANGEL CERDA LEIVA MULCHEN DEL BIOBIO",
 "Local_LICEO MIGUEL DE CERVANTES Y SAAVEDRA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MIGUEL RAFAEL PRADO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MINERO AMERICA CALAMA DE ANTOFAGASTA",
 "Local_LICEO MIREYA CATALAN URZUA PAREDONES DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR BASICA PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L1 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MONSENOR ENRIQUE ALVEAR MEDIA L2 PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MULTIGENERO DOCTORA ELOISA DIAZ INZUNZA L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL ATENEA CUNCO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL BARROS ARANA TEODORO SCHMIDT DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE CODEGUA CODEGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL DE LOLOL LOLOL DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL DE LUMACO LUMACO DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL DE NACIMIENTO NACIMIENTO DEL BIOBIO",
 "Local_LICEO MUNICIPAL DE SANTA CRUZ SANTA CRUZ DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL F-860 L1 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL F-860 L2 MARIA PINTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL INSTITUTO CARDENAL CARO MARCHIHUE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL JOSE VICTORINO LASTARRIA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LA FRONTERA PITRUFQUEN DE LA ARAUCANIA",
 "Local_LICEO MUNICIPAL LUIS GREGORIO VALENZUELA LAVIN COINCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL LUIS LABORDA L1 HIJUELAS DE VALPARAISO",
 "Local_LICEO MUNICIPAL MISAEL LOBOS MONROY GRANEROS DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL PABLO NERUDA NAVIDAD DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO MUNICIPAL POETA NERUDA LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL RIO CLARO YUMBEL DEL BIOBIO",
 "Local_LICEO MUNICIPAL SAN JOAQUIN SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO MUNICIPAL TROVOLHUE CARAHUE DE LA ARAUCANIA",
 "Local_LICEO NACIONAL DE MAIPU L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NACIONAL DE MAIPU L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO NICOLAS FEDERICO LOHSE VARGAS LOS VILOS DE COQUIMBO",
 "Local_LICEO NUESTRA SENORA DE LA PAZ L1 VINA DEL MAR DE VALPARAISO",
 "Local_LICEO NUESTRA SENORA DE LAS MERCEDES PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUESTRA SENORA MARIA INMACULADA EL BOSQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVA ZELANDIA SANTA JUANA DEL BIOBIO",
 "Local_LICEO NUEVO AMANECER LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LICEO NUEVO HORIZONTE VICHUQUEN DEL MAULE",
 "Local_LICEO NUEVO PORVENIR SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LICEO ORIENTE RENGO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L1 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSCAR CASTRO ZUNIGA L2 RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO OSORNO COLLEGE OSORNO DE LOS LAGOS",
 "Local_LICEO PABLO NERUDA DE TALCA TALCA DEL MAULE",
 "Local_LICEO PABLO NERUDA TEMUCO DE LA ARAUCANIA",
 "Local_LICEO PADRE LUIS ALBERTO SALDES IRARRAZABAL YUMBEL DEL BIOBIO",
 "Local_LICEO PADRE SIGISFREDO PANGUIPULLI DE LOS RIOS",
 "Local_LICEO PARROQUIAL SAN ANTONIO VINA DEL MAR DE VALPARAISO",
 "Local_LICEO PARROQUIAL TERESITA DE LOS ANDES RINCONADA DE VALPARAISO",
 "Local_LICEO PARTICULAR CARLOS CONDELL LOS ANGELES DEL BIOBIO",
 "Local_LICEO PARTICULAR MIXTO LOS ANDES L1 LOS ANDES DE VALPARAISO",
 "Local_LICEO PARTICULAR MIXTO SAN FELIPE L1 SAN FELIPE DE VALPARAISO",
 "Local_LICEO PARTICULAR SUBVENCIONADO LIBERTAD VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO PATRICIO MEKIS DE PADRE HURTADO PADRE HURTADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PAULA JARAQUEMADA RECOLETA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PEDRO AGUIRRE CERDA PUERTO VARAS DE LOS LAGOS",
 "Local_LICEO PEDRO REGALADO VIDELA ORDENES ANDACOLLO DE COQUIMBO",
 "Local_LICEO PEDRO TRONCOSO MACHUCA VALLENAR DE ATACAMA",
 "Local_LICEO PELDEHUE COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PELLUHUE PELLUHUE DEL MAULE",
 "Local_LICEO PENAFLOR PENAFLOR METROPOLITANA DE SANTIAGO",
 "Local_LICEO PENCOPOLITANO PENCO DEL BIOBIO",
 "Local_LICEO POETA FEDERICO GARCIA LORCA CONCHALI METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA PABLO NERUDA LO PRADO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETA VICENTE HUIDOBRO L1 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETA VICENTE HUIDOBRO L2 CARTAGENA DE VALPARAISO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L1 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL BASICA L2 CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POETISA GABRIELA MISTRAL MEDIA CALERA DE TANGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO AMERICA LOS ANDES DE VALPARAISO",
 "Local_LICEO POLITECNICO ANDRES BELLO LONCOCHE DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO ANTULAFKEN SAN JUAN DE LA COSTA DE LOS LAGOS",
 "Local_LICEO POLITECNICO B-4 ANTONIO VARAS DE LA BARRA ARICA DE ARICA Y PARINACOTA",
 "Local_LICEO POLITECNICO C-120 L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO C-120 L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CAPITAN IGNACIO CARRERA PINTO SAN CARLOS DE NUBLE",
 "Local_LICEO POLITECNICO CARAMPANGUE ARAUCO DEL BIOBIO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L1 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO CIENCIA Y TECNOLOGIA L2 LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_LICEO POLITECNICO DE CONCON CONCON DE VALPARAISO",
 "Local_LICEO POLITECNICO DE LINARES LINARES DEL MAULE",
 "Local_LICEO POLITECNICO DE OVALLE OVALLE DE COQUIMBO",
 "Local_LICEO POLITECNICO DIEGO PORTALES PALAZUELOS TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLITECNICO DOMINGO SANTA MARIA RENAICO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO GENERAL OSCAR BONILLA BRADANOV CABRERO DEL BIOBIO",
 "Local_LICEO POLITECNICO HANNOVER MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO HEROES DE LA CONCEPCION LAJA DEL BIOBIO",
 "Local_LICEO POLITECNICO HOLANDA LLANQUIHUE DE LOS LAGOS",
 "Local_LICEO POLITECNICO JOSE GUTIERREZ DE LA FUENTE IQUIQUE DE TARAPACA",
 "Local_LICEO POLITECNICO MARGA MARGA L1 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARGA MARGA L2 QUILPUE DE VALPARAISO",
 "Local_LICEO POLITECNICO MARIA WARD SAN IGNACIO DE NUBLE",
 "Local_LICEO POLITECNICO MELIPILLA L1 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MELIPILLA L2 MELIPILLA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO MIRASOL PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO POLITECNICO PABLO RODRIGUEZ CAVIEDES ILLAPEL DE COQUIMBO",
 "Local_LICEO POLITECNICO PESQUERO MEHUIN MARIQUINA DE LOS RIOS",
 "Local_LICEO POLITECNICO PUEBLO NUEVO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO POLITECNICO QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO QUINTERO QUINTERO DE VALPARAISO",
 "Local_LICEO POLITECNICO RAUL SILVA HENRIQUEZ PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLITECNICO SAGRADO CORAZON LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO SARA BLINDER DARGOLTZ SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLITECNICO VILLARRICA VILLARRICA DE LA ARAUCANIA",
 "Local_LICEO POLIVALENTE BAHIA DARWIN LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE CAMILO HENRIQUEZ G. LANCO DE LOS RIOS",
 "Local_LICEO POLIVALENTE DALCAHUE DALCAHUE DE LOS LAGOS",
 "Local_LICEO POLIVALENTE DE MOLINA MOLINA DEL MAULE",
 "Local_LICEO POLIVALENTE DE RAUCO RAUCO DEL MAULE",
 "Local_LICEO POLIVALENTE DIEGO MISSENE BURGOS COBQUECURA DE NUBLE",
 "Local_LICEO POLIVALENTE DOCTOR LUIS VARGAS SALCEDO CERRILLOS METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE DOCTOR RIGOBERTO IGLESIAS BASTIAS DE LEBU LEBU DEL BIOBIO",
 "Local_LICEO POLIVALENTE DOMINGO LATRILLE TOCOPILLA DE ANTOFAGASTA",
 "Local_LICEO POLIVALENTE ENRIQUE MAC IVER CONSTITUCION DEL MAULE",
 "Local_LICEO POLIVALENTE FERNANDO SILVA CASTELLON CATEMU DE VALPARAISO",
 "Local_LICEO POLIVALENTE JUAN PACHECO ALTAMIRANO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO POLIVALENTE LA FRONTERA NEGRETE DEL BIOBIO",
 "Local_LICEO POLIVALENTE LAS SALINAS TALCAHUANO DEL BIOBIO",
 "Local_LICEO POLIVALENTE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LORENZO ARENAS OLIVO CONCEPCION DEL BIOBIO",
 "Local_LICEO POLIVALENTE LOS GUINDOS BUIN METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE LUIS CRUZ MARTINEZ QUILLON DE NUBLE",
 "Local_LICEO POLIVALENTE MANUEL ARISTIDES ZANARTU ZANARTU CABRERO DEL BIOBIO",
 "Local_LICEO POLIVALENTE MARIA BEHETY PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO POLIVALENTE MARIANO LATORRE CURANILAHUE DEL BIOBIO",
 "Local_LICEO POLIVALENTE NAHUELBUTA CONTULMO DEL BIOBIO",
 "Local_LICEO POLIVALENTE OLOF PALME LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE RIGOBERTO FONTT IZQUIERDO COLINA METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE SAGRADA FAMILIA SAGRADA FAMILIA DEL MAULE",
 "Local_LICEO POLIVALENTE SAN JOSE DE LA PRECIOSA SANGRE QUINTA NORMAL METROPOLITANA DE SANTIAGO",
 "Local_LICEO POLIVALENTE TOMAS ARNALDO HERRERA VEGA PEMUCO DE NUBLE",
 "Local_LICEO POLIVANENTE BENJAMIN VICUNA MACKENNA VALDIVIA DE LOS RIOS",
 "Local_LICEO PORTAL DE LA CISTERNA LA CISTERNA METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE ANIBAL PINTO GARMENDIA. IQUIQUE DE TARAPACA",
 "Local_LICEO PRESIDENTE BALMACEDA CURACAVI METROPOLITANA DE SANTIAGO",
 "Local_LICEO PRESIDENTE GABRIEL GONZALEZ VIDELA SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL ABDON CIFUENTES L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PROFESIONAL EL SAUCE TALCA DEL MAULE",
 "Local_LICEO PUBLICO BICENTENARIO CLAUDIO ARRAU LEON CARAHUE DE LA ARAUCANIA",
 "Local_LICEO PUENTE ALTO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO PULMAHUE L1 LA LIGUA DE VALPARAISO",
 "Local_LICEO PUNTA DE RIELES LOS MUERMOS DE LOS LAGOS",
 "Local_LICEO PURKUYEN SAN RAMON METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L1 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAFAEL SOTOMAYOR L2 LAS CONDES METROPOLITANA DE SANTIAGO",
 "Local_LICEO RAHUE OSORNO DE LOS LAGOS",
 "Local_LICEO RAUL BROUSSAIN CAMPINO AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO RAYEN MAPU QUELLON DE LOS LAGOS",
 "Local_LICEO REBECA MATTE BELLO CONCEPCION DEL BIOBIO",
 "Local_LICEO RECTOR ABDON ANDRADE COLOMA LA UNION DE LOS RIOS",
 "Local_LICEO REINO DE SUECIA SAAVEDRA DE LA ARAUCANIA",
 "Local_LICEO REPUBLICA ARGENTINA LOS ANDES DE VALPARAISO",
 "Local_LICEO REPUBLICA DE GRECIA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA ARTURO BONOMETTI BROGI CHILLAN DE NUBLE",
 "Local_LICEO REPUBLICA DE ITALIA ISLA DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DE ITALIA QUINTA DE TILCOCO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO REPUBLICA DE SIRIA NUNOA METROPOLITANA DE SANTIAGO",
 "Local_LICEO REPUBLICA DEL BRASIL LANCO DE LOS RIOS",
 "Local_LICEO REPUBLICA DEL ECUADOR CONCEPCION DEL BIOBIO",
 "Local_LICEO REPUBLICA DEL ECUADOR TOME DEL BIOBIO",
 "Local_LICEO RODULFO AMANDO PHILIPPI PAILLACO DE LOS RIOS",
 "Local_LICEO RURAL LAS QUEMAS PUERTO MONTT DE LOS LAGOS",
 "Local_LICEO RURAL PUTU CONSTITUCION DEL MAULE",
 "Local_LICEO SALESIANO CAMILO ORTUZAR MONTT MACUL METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAMCA ARUMANTI IQUIQUE DE TARAPACA",
 "Local_LICEO SAMUEL ROMAN ROJAS COMBARBALA DE COQUIMBO",
 "Local_LICEO SAN AGUSTIN DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO SAN CLEMENTE ENTRE RIOS SAN CLEMENTE DEL MAULE",
 "Local_LICEO SAN CONRADO DE FUTRONO FUTRONO DE LOS RIOS",
 "Local_LICEO SAN ESTEBAN SAN ESTEBAN DE VALPARAISO",
 "Local_LICEO SAN FELIPE BENICIO DE COYHAIQUE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO SAN FRANCISCO DE ASIS ARAUCO DEL BIOBIO",
 "Local_LICEO SAN FRANCISCO DE ASIS NUEVA IMPERIAL DE LA ARAUCANIA",
 "Local_LICEO SAN FRANCISCO DE PLACILLA PLACILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO SAN FRANCISCO DE QUITO L1 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN FRANCISCO DE QUITO L2 INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN GERONIMO PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN ISIDRO LA CRUZ DE VALPARAISO",
 "Local_LICEO SAN JOSE DE MAIPO SAN JOSE DE MAIPO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SAN JUAN BAUTISTA DE HUALQUI HUALQUI DEL BIOBIO",
 "Local_LICEO SAN LUIS DE ALBA MARIQUINA DE LOS RIOS",
 "Local_LICEO SAN PEDRO SAN PEDRO DE LA PAZ DEL BIOBIO",
 "Local_LICEO SAN PEDRO SAN PEDRO METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTA CLARA (SEDE BRASIL) LOS ANDES DE VALPARAISO",
 "Local_LICEO SANTA FE LOS ANGELES DEL BIOBIO",
 "Local_LICEO SANTA TERESA DE LOS ANDES VINA DEL MAR DE VALPARAISO",
 "Local_LICEO SANTA TERESITA INDEPENDENCIA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTIAGO BUERAS Y AVARIA MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO SANTO CURA DE ARS MAFIL DE LOS RIOS",
 "Local_LICEO SARA BRAUN PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_LICEO SERGIO SILVA BASCUNAN LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO SU SANTIDAD JUAN PABLO SEGUNDO ALTO HOSPICIO DE TARAPACA",
 "Local_LICEO TALAGANTE BASICA TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L1 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TALAGANTE MEDIA L2 TALAGANTE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO AGRICOLA OBISPO RAFAEL LIRA INFANTE LA CRUZ DE VALPARAISO",
 "Local_LICEO TECNICO AMELIA COURBIS TALCA DEL MAULE",
 "Local_LICEO TECNICO BICENTENARIO JUANITA FERNANDEZ SOLAR LOS ANGELES DEL BIOBIO",
 "Local_LICEO TECNICO CARLOS ALESSANDRI ALTAMIRANO ALGARROBO DE VALPARAISO",
 "Local_LICEO TECNICO DE RANCAGUA RANCAGUA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO DE TALCAHUANO TALCAHUANO DEL BIOBIO",
 "Local_LICEO TECNICO DE VALPARAISO L1 VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO FEMENINO A-29 DE CONCEPCION CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO FEMENINO LAS COMPANIAS LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO FILIDOR GAETE MONSALVEZ ARAUCO DEL BIOBIO",
 "Local_LICEO TECNICO MARTA BRUNET LA SERENA DE COQUIMBO",
 "Local_LICEO TECNICO MUNICIPAL OLIVAR DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL BARON VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL CENTENARIO TEMUCO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL DE LA MADERA CORONEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL DIEGO PORTALES LINARES DEL MAULE",
 "Local_LICEO TECNICO PROFESIONAL EL LLANO PIRQUE METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL EL TAMBO SAN VICENTE DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO TECNICO PROFESIONAL FORESTAL PEHUEN - ROBLE HUACHO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL GONZALO GUGLIELMI MONTIEL YUMBEL DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL HEROES DE ATACAMA COPIAPO DE ATACAMA",
 "Local_LICEO TECNICO PROFESIONAL JORGE SANCHEZ UGARTE CONCEPCION DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL JUAN PABLO II GALVARINO DE LA ARAUCANIA",
 "Local_LICEO TECNICO PROFESIONAL LUCILA GODOY ALCAYAGA HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL MANNHEIM L1 QUILPUE DE VALPARAISO",
 "Local_LICEO TECNICO PROFESIONAL PATRICIO AYLWIN AZOCAR LA GRANJA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNICO PROFESIONAL PEDRO DEL RIO ZANARTU HUALPEN DEL BIOBIO",
 "Local_LICEO TECNICO PROFESIONAL PROFESOR RICARDO NAVARRETE COYHAIQUE DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_LICEO TECNICO PROFESIONAL RIO BUENO RIO BUENO DE LOS RIOS",
 "Local_LICEO TECNICO PROFESIONAL VIOLETA PARRA SANDOVAL SAN CARLOS DE NUBLE",
 "Local_LICEO TECNICO VALDIVIA VALDIVIA DE LOS RIOS",
 "Local_LICEO TECNOLOGICO ALFREDO NAZAR FERES VALPARAISO DE VALPARAISO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L1 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L2 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO ENRIQUE KIRBERG BALTIANSKY L3 MAIPU METROPOLITANA DE SANTIAGO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TECNOLOGICO VILLA ALEMANA L2 VILLA ALEMANA DE VALPARAISO",
 "Local_LICEO TENIENTE FRANCISCO MERY AGUIRRE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_LICEO TERESA DE LOS ANDES CASTRO DE LOS LAGOS",
 "Local_LICEO THOMAS ALVA EDISON RENCA METROPOLITANA DE SANTIAGO",
 "Local_LICEO TOMAS BURGOS PURRANQUE DE LOS LAGOS",
 "Local_LICEO TOMAS LAGO CHILLAN VIEJO DE NUBLE",
 "Local_LICEO TRAPAQUEANTE TIRUA DEL BIOBIO",
 "Local_LICEO VALENTIN LETELIER LINARES DEL MAULE",
 "Local_LICEO VALLE DE CODPA CAMARONES DE ARICA Y PARINACOTA",
 "Local_LICEO VICENTE ALBERTO PALACIOS VALDES TOME DEL BIOBIO",
 "Local_LICEO VICENTE PEREZ ROSALES RIO BUENO DE LOS RIOS",
 "Local_LICEO VICTOR JARA LA PINTANA METROPOLITANA DE SANTIAGO",
 "Local_LICEO VICTOR JARA PERALILLO DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_LICEO VOLCAN SAN JOSE PUENTE ALTO METROPOLITANA DE SANTIAGO",
 "Local_LICEO YOBILO DE CORONEL CORONEL DEL BIOBIO",
 "Local_LICEO ZAPALLAR CURICO DEL MAULE",
 "Local_LINCOLN COLLEGE LA FLORIDA LA FLORIDA METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE PUDAHUEL PUDAHUEL METROPOLITANA DE SANTIAGO",
 "Local_LINCOLN COLLEGE SAN BERNARDO SAN BERNARDO METROPOLITANA DE SANTIAGO",
 "Local_LYCEE ANTOINE DE SAINT EXUPERY COLINA METROPOLITANA DE SANTIAGO",
 "Local_MARIA EDUCA LA SERENA DE COQUIMBO",
 "Local_NETLAND SCHOOL ANTOFAGASTA DE ANTOFAGASTA",
 "Local_NORTH AMERICAN COLLEGE SEDE SOTOMAYOR ARICA DE ARICA Y PARINACOTA",
 "Local_POLIDEPORTIVO AYSEN AYSEN DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO",
 "Local_POLIDEPORTIVO CENTENARIO ANTOFAGASTA DE ANTOFAGASTA",
 "Local_POLIDEPORTIVO DE CASTRO CASTRO DE LOS LAGOS",
 "Local_POLIDEPORTIVO MACHALI DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_POLIDEPORTIVO MUNICIPAL CALLE LARGA CALLE LARGA DE VALPARAISO",
 "Local_POLIDEPORTIVO MUNICIPAL NATALES DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_POLIDEPORTIVO OLIMPICO MAIPU METROPOLITANA DE SANTIAGO",
 "Local_POLIDEPORTIVO PADRE LAS CASAS DE LA ARAUCANIA",
 "Local_POLIDEPORTIVO RIO CLARO DEL MAULE",
 "Local_POLIDERPORTIVO SAN CLEMENTE DEL MAULE",
 "Local_RECINTO INTERIOR ESTADIO MUNICIPAL PALMILLA DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS",
 "Local_SAINT PETER'S SCHOOL VINA DEL MAR DE VALPARAISO",
 "Local_SAINT TRINITY COLLEGE LO ESPEJO METROPOLITANA DE SANTIAGO",
 "Local_SALON AUDITORIUM MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_SALON DE EVENTOS MUNICIPAL RIO HURTADO DE COQUIMBO",
 "Local_SCUOLA ITALIANA ARTURO DELLA' ORO VINA DEL MAR VINA DEL MAR DE VALPARAISO",
 "Local_SCUOLA ITALIANA ARTURO DELLA'ORO L1 VALPARAISO DE VALPARAISO",
 "Local_SCUOLA ITALIANA GIROLAMO LONGHI VILLA ALEMANA L1 VILLA ALEMANA DE VALPARAISO",
 "Local_SUN FLOWER SCHOOL TEMUCO DE LA ARAUCANIA",
 "Local_TEATRO MUNICIPAL MAIPU METROPOLITANA DE SANTIAGO",
 "Local_THE AMERICAN SCHOOL PUERTO MONTT DE LOS LAGOS",
 "Local_THE KINGSTOWN SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L1 VINA DEL MAR DE VALPARAISO",
 "Local_THE MACKAY SCHOOL L2 VINA DEL MAR DE VALPARAISO",
 "Local_THE MAYFLOWER SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MAYFLOWER SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE MISSION COLLEGE EDUCACION BASICA Y GIMNASIO OSORNO DE LOS LAGOS",
 "Local_THE NEWLAND SCHOOL L1 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE NEWLAND SCHOOL L2 LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_THE SOUTHLAND SCHOOL LO BARNECHEA METROPOLITANA DE SANTIAGO",
 "Local_UCSC EDIFICIO FACEA CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD ANDRES BELLO, CAMPUS VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD ARTURO PRAT ARICA DE ARICA Y PARINACOTA",
 "Local_UNIVERSIDAD ARTURO PRAT IQUIQUE DE TARAPACA",
 "Local_UNIVERSIDAD ARTURO PRAT L1 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT L2 SANTIAGO METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD ARTURO PRAT VICTORIA DE LA ARAUCANIA",
 "Local_UNIVERSIDAD AUSTRAL DE CHILE PUERTO MONTT DE LOS LAGOS",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE PROVIDENCIA METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD AUTONOMA DE CHILE TALCA DEL MAULE",
 "Local_UNIVERSIDAD CATOLICA - CAMPUS SAN JUAN PABLO SEGUNDO TEMUCO DE LA ARAUCANIA",
 "Local_UNIVERSIDAD CATOLICA DEL NORTE ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD CATOLICA SEDE CURICO CURICO DEL MAULE",
 "Local_UNIVERSIDAD DE ANTOFAGASTA ANTOFAGASTA DE ANTOFAGASTA",
 "Local_UNIVERSIDAD DE LAS AMERICAS L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD DE MAGALLANES PUNTA ARENAS DE MAGALLANES Y DE LA ANTARTICA CHILENA",
 "Local_UNIVERSIDAD DE TALCA SAN JOAQUIN METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VALPARAISO SAN MIGUEL METROPOLITANA DE SANTIAGO",
 "Local_UNIVERSIDAD DE VINA DEL MAR, SEDE MIRAFLORES (2) VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA EDIFICIO P L2 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD FEDERICO SANTA MARIA, SEDE VINA DEL MAR L1 VINA DEL MAR DE VALPARAISO",
 "Local_UNIVERSIDAD SANTO TOMAS CONCEPCION DEL BIOBIO",
 "Local_UNIVERSIDAD SANTO TOMAS VALDIVIA DE LOS RIOS",
 "Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP L1 VALPARAISO DE VALPARAISO",
 "Local_UNIVERSIDAD VINA DEL MAR, SEDE RECREO VINA DEL MAR DE VALPARAISO",
]

# Función que calcula la probabilidad de voto para todos los grupos, candidatos y distritos
def fun_p_full(v_da, alpha, beta):
    # v_da : matriz de atributos de distrito, tensor de PyTorch (D, A)
    # alpha : matriz de atributos de candidato, tensor de PyTorch (C, A)
    # beta : matriz de coeficientes de grupo y candidato, tensor de PyTorch (G, C)
    # retorna p_dgc : 3D tensor de probabilidades de voto, tensor de PyTorch (D, G, C)
    
    #random tensor for testing
    #v_da = torch.randn((D, A), dtype=torch.float32)
    #alpha = torch.randn((C, A), dtype=torch.float32)
    #beta = torch.randn((G, C), dtype=torch.float32)

    v_alphat_dc = torch.matmul(v_da, alpha.t())  # D x C
    term_dgc = torch.exp(beta.unsqueeze(0) + v_alphat_dc.unsqueeze(1))  # D x G x C
    # concatenar un tensor de unos de tamaño D x G x 1 a term_dgc
    tensor = torch.zeros((term_dgc.shape[0], term_dgc.shape[1], 1), dtype=torch.float64)
    epsilon = 1e0
    tensor += epsilon
    term_dgc = torch.cat([term_dgc, tensor], dim=2)  # D x G x C
    term_dgc_sum = torch.sum(term_dgc, dim=2, keepdim=True)
    p_dgc = term_dgc / term_dgc_sum
    # check if p_dgc is between 0 and 1
    if not torch.all((p_dgc >= 0) & (p_dgc <= 1)):
        raise ValueError("Probabilities in p_dgc are not between 0 and 1.")
    return p_dgc

# Función que calcula el r todos las mesas grupos candidatos
def fun_r_full(w_bg, v_da, e_bd, alpha, beta, p_dgc=None, p_bgc=None):
    # w_bg : matriz de votantes de mesa b del grupo g, tensor de PyTorch (B, G)
    # v_da : matriz de atributos de distrito, tensor de PyTorch (D, A)
    # e_bd : matriz que tiene un 1 si mesa b pertenece a distrito d, tensor de PyTorch (B, D)
    # alpha : matriz de atributos de candidato, tensor de PyTorch (C, A)
    # beta : matriz de coeficientes de grupo y candidato, tensor de PyTorch (G, C)
    # retorna r_bgc : matriz de probabilidades posterior de voto, tensor de PyTorch (B, G, C)

    I_b = torch.sum(w_bg, dim=1)  # I_b : número de votantes en la mesa b

    if p_dgc is None and p_bgc is None:
        p_dgc = fun_p_full(v_da, alpha, beta)

    if p_bgc is None:
        p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
        #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)

    # check if p_bgc is between 0 and 1
    if not torch.all((p_bgc >= 0) & (p_bgc <= 1)):
        raise ValueError("Probabilities in p_bgc are not between 0 and 1.")
    # Calcular r_bgc
    weighted_p_bgc = w_bg.unsqueeze(2) * p_bgc
    sum_weighted_p_bgc = torch.sum(weighted_p_bgc, dim=1)
    r_bgc = (sum_weighted_p_bgc.unsqueeze(1) - p_bgc) / (I_b.unsqueeze(1).unsqueeze(2) - 1)

    return r_bgc

# Función que hace el e-step, retorna q_bgc
def e_step(x_bc, w_bg, v_da, e_bd, beta, alpha):
    # x_bc : votos de la mesa b para el candidato c, tensor de PyTorch (B, C)
    # w_bg : votantes de mesa b del grupo g, tensor de PyTorch (B, G)
    # e_bd : matriz que tiene un 1 si mesa b pertenece a distrito d, tensor de PyTorch (B, D)
    # beta : tensor de PyTorch (G, C)
    # alpha : tensor de PyTorch (C, A)
    # retorna q_bgc : matriz de probabilidades posterior de voto, tensor de PyTorch (B, G, C)

    p_dgc = fun_p_full(v_da, alpha, beta)
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
    r_bgc = fun_r_full(w_bg, v_da, e_bd, alpha, beta, p_dgc=p_dgc, p_bgc=p_bgc)
    
    t_bgc = x_bc.unsqueeze(1) * p_bgc / r_bgc
    epsilon = 1e-1 # 1e-10  # Un valor pequeño para evitar divisiones por cero
    sum_t_bgc = torch.sum(t_bgc, dim=2, keepdim=True) + epsilon  # Hay 0's en sum_t_bgc
    q_bgc = t_bgc / sum_t_bgc
    
    return q_bgc

# Función que hace el m-step, retorna beta_new, alpha_new
def m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter = 100, lambda_beta=0.0, lambda_alpha=0.0):
    # x_bc : votos de la mesa b para el candidato c, tensor de PyTorch (B, C)
    # w_bg : votantes de mesa b del grupo g, tensor de PyTorch (B, G)
    # v_da : matriz de atributos de distrito, tensor de PyTorch (D, A)
    # e_bd : matriz que tiene un 1 si mesa b pertenece a distrito d, tensor de PyTorch (B, D)
    # q_bgc : matriz de probabilidades posterior de voto, tensor de PyTorch (B, G, C)
    # retorna beta_new, alpha_new

    B = x_bc.shape[0]
    G, C_minus_1 = beta.shape
    C = C_minus_1 + 1
    D, A = v_da.shape

    v_ba = torch.matmul(e_bd, v_da)

    regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)
    #optimizer = optim.Adam([alpha, beta], lr=0.0000000000001)

    # Negativo del Q
    def objective_function(alpha, beta):
        p_dgc = fun_p_full(v_da, alpha, beta)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
        #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
        log_p_bgc = torch.log(torch.clamp(p_bgc, min=1e-12))
        # print(log_p_bgc)
        # print(q_bgc)
        # print(torch.sum(q_bgc * log_p_bgc, dim=2))
        # get the numpy value of torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
        # torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2), )

        # print(torch.sum(w_bg.float() * torch.sum(q_bgc * log_p_bgc, dim=2)))
        loss = -torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2), dtype=torch.float64)
        if regularization:
            loss += lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)
        return loss
    
    def fo_grad_and_Hessian(alpha, beta, lambda_beta = lambda_beta, lambda_alpha = lambda_alpha):
        #Loss
        wq_bgc = w_bg.unsqueeze(2) * q_bgc
        p_dgc = fun_p_full(v_da, alpha, beta)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
        # check if p_bgc is between 0 and 1
        if not torch.all((p_bgc >= 0) & (p_bgc <= 1)):
            raise ValueError("Probabilities in p_bgc are not between 0 and 1.")
        #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
        log_p_bgc = torch.log(torch.clamp(p_bgc, min=1e-12))
        loss = -torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
        #Ridge
        if regularization:
            loss += lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)

        #Gradient
        wp_bgc = w_bg.unsqueeze(2) * p_bgc
        grad_beta = torch.zeros((G, C), dtype=torch.float64)
        grad_beta += -torch.sum(wp_bgc, dim=0) + torch.sum(wq_bgc, dim=0)  # G x C + G x C
        grad_beta *= -1
        #Ridge
        #concatenar 0's a beta
        beta = torch.cat([beta, torch.zeros((G, 1), dtype=torch.float64)], dim=1)
        if regularization:
            grad_beta += 2 * lambda_beta * beta
        
        grad_alpha = torch.zeros((C, A), dtype=torch.float64)
        grad_alpha -= torch.sum(wp_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
        grad_alpha += torch.sum(wq_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
        grad_alpha *= -1
        #Ridge
        #concatenar 0's a alpha
        alpha = torch.cat([alpha, torch.zeros((1, A), dtype=torch.float64)], dim=0)
        if regularization:
            grad_alpha += 2 * lambda_alpha * alpha

        grad_alpha = grad_alpha[:(C-1), :A]
        grad_beta = grad_beta[:G, :(C-1)]
        grad = torch.cat([torch.reshape(grad_alpha, (-1,)), torch.reshape(grad_beta, (-1,))], dim=0)

        #Hessian
        p_bgc_ = p_bgc[:, :, :(C-1)]
        wp_bgc = w_bg.unsqueeze(2) * p_bgc_
        wp_gc = torch.sum(wp_bgc, dim=0)

        ones_c = torch.ones(C-1, dtype=torch.float64)
        ones_c_diag = torch.diag(ones_c)
        # Matriz de forma G x G, con unos en la diagonal
        ones_g = torch.ones(G, dtype=torch.float64)
        ones_g_diag = torch.diag(ones_g)

        h_beta_beta = torch.zeros((G, C-1, G, C-1), dtype=torch.float64)
        ones_gcgc = ones_g_diag.unsqueeze(1).unsqueeze(3) * ones_c_diag.unsqueeze(0).unsqueeze(2)
        wp_gcgc = wp_gc.unsqueeze(2).unsqueeze(3) * ones_gcgc
        h_beta_beta = -wp_gcgc
        wpp_gcc = oe.contract('bgc,bgk->gck', wp_bgc, p_bgc_, backend='torch')
        #wpp_gcc = torch.einsum('bgc,bgk->gck', wp_bgc, p_bgc_)
        wpp_gcgc = wpp_gcc.unsqueeze(2) * ones_g_diag.unsqueeze(1).unsqueeze(3)
        h_beta_beta += wpp_gcgc
        # h_beta_beta *= -1 # COMENTAR?
        if regularization:
            h_beta_beta += 2 * lambda_beta * torch.ones((G, C-1, G, C-1), dtype=torch.float64)
        h_beta_beta = h_beta_beta.reshape(G*(C-1), G*(C-1))

        h_alpha_alpha = torch.zeros((C-1, A, C-1, A), dtype=torch.float64)
        wpvv_caa = oe.contract('bgc,ba,bo->cao', wp_bgc, v_ba, v_ba, backend='torch')
        #wpvv_caa = torch.einsum('bgc,ba,bo->cao', wp_bgc, v_ba, v_ba)
        wpvv_caca = wpvv_caa.unsqueeze(2) * ones_c_diag.unsqueeze(1).unsqueeze(3)
        h_alpha_alpha = -wpvv_caca
        wppvv_caa = oe.contract('bgc,ba,bo,bgk->cako', wp_bgc, v_ba, v_ba, p_bgc_, backend='torch')
        #wppvv_caa = torch.einsum('bgc,ba,bo,bgk->cako', wp_bgc, v_ba, v_ba, p_bgc_)
        h_alpha_alpha += wppvv_caa
        # h_alpha_alpha *= -1 # COMENTAR?
        if regularization:
            h_alpha_alpha += 2 * lambda_alpha * torch.ones((C-1, A, C-1, A), dtype=torch.float64)
        h_alpha_alpha = h_alpha_alpha.reshape((C-1)*A, (C-1)*A)

        h_beta_alpha = torch.zeros((G, C-1, C-1, A), dtype=torch.float64)
        wpv_gca = oe.contract('bgc,ba->gca', wp_bgc, v_ba, backend='torch')
        #wpv_gca = torch.einsum('bgc,ba->gca', wp_bgc, v_ba)
        wpv_gcca = wpv_gca.unsqueeze(2) * ones_c_diag.unsqueeze(0).unsqueeze(3)
        h_beta_alpha = -wpv_gcca
        wppv_gcca = oe.contract('bgc,ba,bgk->gcka', wp_bgc, v_ba, p_bgc_, backend='torch')
        #wppv_gcca = torch.einsum('bgc,ba,bgk->gcka', wp_bgc, v_ba, p_bgc_)
        h_beta_alpha += wppv_gcca
        # h_beta_alpha *= -1 # COMENTAR?
        h_beta_alpha = h_beta_alpha.reshape(G*(C-1), (C-1)*A)

        h_alpha_beta = h_beta_alpha.t()

        hessian = -torch.cat([torch.cat([h_alpha_alpha, h_alpha_beta], dim=1), torch.cat([h_beta_alpha, h_beta_beta], dim=1)], dim=0)

        return loss, grad, hessian

    # Minimization
    def Newton_damped(alpha_bs=0.5, beta_bs=0.5, tol=tol, max_iter=10, t_min = 1e-10):
        # puntos iniciales
        alpha_torch = alpha.clone().detach().requires_grad_(True)
        beta_torch = beta.clone().detach().requires_grad_(True)

        # t = 1
        for n_iters_newton in range(max_iter):
            fo, g, H = fo_grad_and_Hessian(alpha_torch, beta_torch)
            # print(f"\tf0 = {fo}")
            # Delta = n veces el maximo de la diagonal de H

            # n = 2
            # Delta = n * tol * torch.max(torch.diag(H))
            # # Identidad
            # I = torch.eye(H.shape[0], dtype=torch.float64)
            # # Factor de regularización
            # H = H + Delta * I

            # n = 1
            # tau = 0.2
            # Delta = n * tol**(torch.exp(-tau*torch.tensor(lambda_alpha+lambda_beta))) * torch.max(torch.diag(H))
            # # Identidad
            # I = torch.eye(H.shape[0], dtype=torch.float64)
            # # Factor de regularización
            # H = H + Delta * I

            tau = 0.5
            eta = tol**(torch.exp(-tau*torch.tensor(lambda_alpha+lambda_beta)))
            # print(f"\teta = {eta}")
            # Identidad
            I = torch.eye(H.shape[0], dtype=torch.float64)
            # Factor de regularización
            H = (1 - eta) * H + eta * torch.max(torch.diag(H)) * I

            # print(f"\tfo = {fo}\tt = {t}")
            # print(f"\tbeta_torch[:3,0] = {beta_torch[:3,0]}")
            # print(f"\tH[1,1] = {H[1,1]}")
            # print(f"\tg[1] = {g[1]}")
            #avg_H = torch.mean(torch.diag(H))
            #avg_g = torch.mean(g)
            #H = H / avg_H
            #g = g / avg_g
            #v = (-avg_g / avg_H) * torch.linalg.solve(H, g)
            # H = H / factor_NR
            # g = g / factor_NR
            # iH = torch.inverse(H)
            # v = -torch.mv(iH, g)
            v = -torch.linalg.solve(H, g)
            # print(f"v = {v}")
            # print(f'v.shape = {v.shape}')
            v_alpha = v[:((C-1)*A)].reshape((C-1, A))
            v_beta = v[((C-1)*A):].reshape((G, C-1))
            t = 1
            # print(f"\t\tnin = {n_iters_newton}\ttol = {tol}\tmax(abs(g)) = {torch.max(torch.abs(g))}")
            if torch.max(torch.abs(g)) < tol:
                # print(f"\ttol = {tol}")
                # print(f"\ttorch.max(torch.abs(g)) = {torch.max(torch.abs(g))}")
                break
            # print(f"\talpha_bs * t * torch.dot(g, v) = {alpha_bs * t * torch.dot(g, v)}")
            while objective_function(alpha_torch + t*v_alpha, beta_torch + t*v_beta) > fo + alpha_bs * t * torch.dot(g, v):
                # print(f"\tizq = {objective_function(alpha_torch + t*v_alpha, beta_torch + t*v_beta):.6f}")
                # print(f"\tder = {fo + alpha_bs * t * torch.dot(g, v):.6f}")
                t *= beta_bs
                if t < t_min:
                    break
            t = max(t, t_min)
            # print(f'\t\tt = {t}')
            # print(f"\t\t\tnit = {n_iters_newton}\tt = {t}")
            # print maximum between torch.max(t*v_alpha) and torch.max(t*v_beta)
            #print(f"\tmax(t*v_alpha, t*v_beta) = {torch.max(torch.max(t*v_alpha), torch.max(t*v_beta))}")
            alpha_torch = alpha_torch + t * v_alpha
            beta_torch = beta_torch + t * v_beta
            # fo, g, H = fo_grad_and_Hessian(alpha_torch, beta_torch)
            # print(f"\tf1 = {fo}")
            #n_iters_newton += 1
            # print(f'n_iters_newton = {n_iters_newton}')
        # print(f"\tn_iters_newton = {n_iters_newton}")
        return beta_torch, alpha_torch, n_iters_newton + 1
    
    beta_opt, alpha_opt, n_iters_newton = Newton_damped(alpha_bs = 0.5, beta_bs = 0.5, tol = tol, max_iter = max_iter)

    return beta_opt, alpha_opt, n_iters_newton

# función que dado un delta de log-likelihood, entrega el número de iteraciones máximo
def get_max_iter(delta_ll):
    # delta_ll : delta de log-likelihood
    # retorna max_iter : número máximo de iteraciones
    # max_iter = 20
    if delta_ll < 1e-3:
        max_iter = 2
    else:
        max_iter = 1

    return max_iter

# function that computes the log-likelihood
def compute_ll(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', lambda_beta=0, lambda_alpha=0):
    # check if alpha is numpy array
    if isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)
    regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)
    # Calcular el log-likelihood
    p_dgc = fun_p_full(v_da, alpha, beta)
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
    log_p_bgc = torch.log(p_bgc)
    if q_bgc is None:
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    Q = torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
    if regularization:
       Q -= lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)

    q_bgc_clipped = torch.clamp(q_bgc, min=1e-10)
    log_q_bgc = torch.log(q_bgc_clipped)
    Exp_Y = torch.sum(w_bg * torch.sum(q_bgc * log_q_bgc, dim=2))
    # if regularization:
    #    Exp_Y -= lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)
    log_likelihood = Q - Exp_Y
    if verbose:
        print("-" * 50)
        print(f"log_likelihood_{add_text}= {log_likelihood}")
    return log_likelihood, Q

# function that computes the log-likelihood assuming x is multinomial
def compute_ll_multinomial(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', lambda_beta=0, lambda_alpha=0):
    # check if alpha is numpy array
    if isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)
    regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)

    # Calcular el log-likelihood
    p_dgc = fun_p_full(v_da, alpha, beta)
    # check if p_dgc is between 0 and 1
    if not torch.all((p_dgc >= 0) & (p_dgc <= 1)):
        raise ValueError("p_dgc values are not between 0 and 1. Check the input parameters.")
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    # check if p_bgc is between 0 and 1
    if not torch.all((p_bgc >= 0) & (p_bgc <= 1)):
        raise ValueError("p_bgc values are not between 0 and 1. Check the input parameters.")
    p_bc = ((p_bgc * w_bg.unsqueeze(2)).sum(dim=1)) / (w_bg.sum(dim=1, keepdim=True) + 1e-12) # BxC / BxG
    # check if p_bc is between 0 and 1
    if not torch.all((p_bc >= 0) & (p_bc <= 1)):
        raise ValueError("p_bc values are not between 0 and 1. Check the input parameters.")
    #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
    log_p_bc = torch.log(torch.clamp(p_bc, min=1e-12))
    if q_bgc is None:
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    
    # Calcular el log-likelihood
    x_b = x_bc.sum(dim=1)  # Suma sobre las columnas -> vector de tamaño (B,)

    # Cálculo de ln(factorial_xb) y ln(factorial_xbc) usando lgamma
    ln_factorial_xb = torch.lgamma(x_b + 1)
    ln_factorial_xbc = torch.lgamma(x_bc + 1).sum(dim=1)

    # Cálculo del primer término: sum_b ln(factorial_xb / factorial_xbc)
    term1 = ln_factorial_xb - ln_factorial_xbc

    # Cálculo del segundo término: sum_b sum_c x_bc * ln(p_bc)
    term2 = (x_bc * log_p_bc).sum(dim=1)

    # Resultado final
    resultado = term1 + term2

    # Suma final sobre todas las filas
    log_likelihood = resultado.sum()

    if verbose:
        print("-" * 50)
        print(f"log_likelihood_{add_text}= {log_likelihood}")
    return log_likelihood

def compute_ll_multinomial_v2(x_bc, w_bg, v_da, e_bd, beta, alpha, 
                           q_bgc=None, verbose=False, add_text='', 
                           lambda_beta=0.0, lambda_alpha=0.0):
    """
    Computes the multinomial log-likelihood:
    
    ll ≈ ∑_b [ ln(x_b!) - ∑_c ln(x_bc!) + ∑_c x_bc * ln(p_bc) ]

    Parameters
    ----------
    x_bc : tensor (B, C)
        Observed vote counts per mesa and candidate.
    w_bg : tensor (B, G)
        Weights per mesa and group.
    v_da : tensor (D, A)
        Attribute matrix per district.
    e_bd : tensor (B, D)
        Mesa-district assignment.
    beta : tensor (A,)
        Coefficients for attributes.
    alpha : tensor (G, C)
        Group-candidate parameters.
    q_bgc : optional, tensor (B, G, C)
        Posterior responsibilities. If None, computed with e_step.
    verbose : bool
        Whether to print log-likelihood.
    add_text : str
        Optional text for logging.
    lambda_beta, lambda_alpha : float
        Regularization parameters.

    Returns
    -------
    log_likelihood : float
        Total log-likelihood over all mesas.
    """
    # Convert np arrays to torch tensors if needed
    if isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)

    # Compute p_bc using the model
    p_dgc = fun_p_full(v_da, alpha, beta)
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    p_bc = oe.contract('bd,bgc,bg->bc', e_bd, p_bgc, w_bg, backend='torch')

    # Ensure numerical stability
    log_p_bc = torch.log(torch.clamp(p_bc, min=1e-12))

    # Posterior responsibilities (if needed)
    if q_bgc is None:
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)

    # First term: log(x_b!) - sum_c log(x_bc!)
    x_b = x_bc.sum(dim=1)                              # Total votos por mesa
    term1 = torch.lgamma(x_b + 1)                      # log(x_b!)
    term1 -= torch.lgamma(x_bc + 1).sum(dim=1)         # - sum_c log(x_bc!)

    # Second term: sum_c x_bc * log(p_bc)
    term2 = (x_bc * log_p_bc).sum(dim=1)

    # Total log-likelihood por mesa
    ll_b = term1 + term2

    # Total log-likelihood global
    log_likelihood = ll_b.sum()

    if verbose:
        print("-" * 50)
        print(f"log_likelihood_{add_text} = {log_likelihood.item():.4f}")

    return log_likelihood

# function that computes the log-likelihood and gradient
def compute_ll_grad(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', lambda_beta=0, lambda_alpha=0):
    # check if alpha is numpy array
    if isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)

    B = x_bc.shape[0]
    G, C_minus_1 = beta.shape
    C = C_minus_1 + 1
    D, A = v_da.shape

    v_ba = torch.matmul(e_bd, v_da)

    regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)

    if q_bgc is None:
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    wq_bgc = w_bg.unsqueeze(2) * q_bgc
    p_dgc = fun_p_full(v_da, alpha, beta)
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
    log_p_bgc = torch.log(p_bgc)
    loss = torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
    #Ridge
    if regularization:
        loss -= lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)

    #Gradient
    wp_bgc = w_bg.unsqueeze(2) * p_bgc
    grad_beta = torch.zeros((G, C), dtype=torch.float64)
    grad_beta += -torch.sum(wp_bgc, dim=0) + torch.sum(wq_bgc, dim=0)  # G x C + G x C
    # grad_beta *= -1
    #Ridge
    #concatenar 0's a beta
    beta = torch.cat([beta, torch.zeros((G, 1), dtype=torch.float64)], dim=1)
    if regularization:
        grad_beta -= 2 * lambda_beta * beta
    
    grad_alpha = torch.zeros((C, A), dtype=torch.float64)
    grad_alpha -= torch.sum(wp_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
    grad_alpha += torch.sum(wq_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
    # grad_alpha *= -1
    #Ridge
    #concatenar 0's a alpha
    alpha = torch.cat([alpha, torch.zeros((1, A), dtype=torch.float64)], dim=0)
    if regularization:
        grad_alpha -= 2 * lambda_alpha * alpha

    grad_alpha = grad_alpha[:(C-1), :A]
    grad_beta = grad_beta[:G, :(C-1)]
    grad = torch.cat([torch.reshape(grad_alpha, (-1,)), torch.reshape(grad_beta, (-1,))], dim=0)

    return grad

# function that computes the log-likelihood, gradient and Hessian
def compute_ll_grad_Hessian(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', lambda_beta=0, lambda_alpha=0):
    # check if alpha is numpy array
    if isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)

    B = x_bc.shape[0]
    G, C_minus_1 = beta.shape
    C = C_minus_1 + 1
    D, A = v_da.shape

    v_ba = torch.matmul(e_bd, v_da)

    regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)

    if q_bgc is None:
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    wq_bgc = w_bg.unsqueeze(2) * q_bgc
    p_dgc = fun_p_full(v_da, alpha, beta)
    p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
    #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
    log_p_bgc = torch.log(p_bgc)
    loss = torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
    #Ridge
    if regularization:
        loss -= lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)

    #Gradient
    wp_bgc = w_bg.unsqueeze(2) * p_bgc
    grad_beta = torch.zeros((G, C), dtype=torch.float64)
    grad_beta += -torch.sum(wp_bgc, dim=0) + torch.sum(wq_bgc, dim=0)  # G x C + G x C
    # grad_beta *= -1
    #Ridge
    #concatenar 0's a beta
    beta = torch.cat([beta, torch.zeros((G, 1), dtype=torch.float64)], dim=1)
    if regularization:
        grad_beta -= 2 * lambda_beta * beta

    grad_alpha = torch.zeros((C, A), dtype=torch.float64)
    grad_alpha -= torch.sum(wp_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
    grad_alpha += torch.sum(wq_bgc.unsqueeze(3) * v_ba.unsqueeze(1).unsqueeze(2), dim=(0, 1))  # C x A
    # grad_alpha *= -1
    #Ridge
    #concatenar 0's a alpha
    alpha = torch.cat([alpha, torch.zeros((1, A), dtype=torch.float64)], dim=0)
    if regularization:
        grad_alpha -= 2 * lambda_alpha * alpha

    grad_alpha = grad_alpha[:(C-1), :A]
    grad_beta = grad_beta[:G, :(C-1)]
    grad = torch.cat([torch.reshape(grad_alpha, (-1,)), torch.reshape(grad_beta, (-1,))], dim=0)

    #Hessian
    p_bgc_ = p_bgc[:, :, :(C-1)]
    wp_bgc = w_bg.unsqueeze(2) * p_bgc_
    wp_gc = torch.sum(wp_bgc, dim=0)

    ones_c = torch.ones(C-1, dtype=torch.float64)
    ones_c_diag = torch.diag(ones_c)
    # Matriz de forma G x G, con unos en la diagonal
    ones_g = torch.ones(G, dtype=torch.float64)
    ones_g_diag = torch.diag(ones_g)

    h_beta_beta = torch.zeros((G, C-1, G, C-1), dtype=torch.float64)
    ones_gcgc = ones_g_diag.unsqueeze(1).unsqueeze(3) * ones_c_diag.unsqueeze(0).unsqueeze(2)
    wp_gcgc = wp_gc.unsqueeze(2).unsqueeze(3) * ones_gcgc
    h_beta_beta = -wp_gcgc
    wpp_gcc = oe.contract('bgc,bgk->gck', wp_bgc, p_bgc_, backend='torch')
    #wpp_gcc = torch.einsum('bgc,bgk->gck', wp_bgc, p_bgc_)
    wpp_gcgc = wpp_gcc.unsqueeze(2) * ones_g_diag.unsqueeze(1).unsqueeze(3)
    h_beta_beta += wpp_gcgc
    # h_beta_beta *= -1 # COMENTAR?
    if regularization:
        h_beta_beta += 2 * lambda_beta * torch.ones((G, C-1, G, C-1), dtype=torch.float64)
    h_beta_beta = h_beta_beta.reshape(G*(C-1), G*(C-1))

    h_alpha_alpha = torch.zeros((C-1, A, C-1, A), dtype=torch.float64)
    wpvv_caa = oe.contract('bgc,ba,bo->cao', wp_bgc, v_ba, v_ba, backend='torch')
    #wpvv_caa = torch.einsum('bgc,ba,bo->cao', wp_bgc, v_ba, v_ba)
    wpvv_caca = wpvv_caa.unsqueeze(2) * ones_c_diag.unsqueeze(1).unsqueeze(3)
    h_alpha_alpha = -wpvv_caca
    wppvv_caa = oe.contract('bgc,ba,bo,bgk->cako', wp_bgc, v_ba, v_ba, p_bgc_, backend='torch')
    #wppvv_caa = torch.einsum('bgc,ba,bo,bgk->cako', wp_bgc, v_ba, v_ba, p_bgc_)
    h_alpha_alpha += wppvv_caa
    # h_alpha_alpha *= -1 # COMENTAR?
    if regularization:
        h_alpha_alpha += 2 * lambda_alpha * torch.ones((C-1, A, C-1, A), dtype=torch.float64)
    h_alpha_alpha = h_alpha_alpha.reshape((C-1)*A, (C-1)*A)

    h_beta_alpha = torch.zeros((G, C-1, C-1, A), dtype=torch.float64)
    wpv_gca = oe.contract('bgc,ba->gca', wp_bgc, v_ba, backend='torch')
    #wpv_gca = torch.einsum('bgc,ba->gca', wp_bgc, v_ba)
    wpv_gcca = wpv_gca.unsqueeze(2) * ones_c_diag.unsqueeze(0).unsqueeze(3)
    h_beta_alpha = -wpv_gcca
    wppv_gcca = oe.contract('bgc,ba,bgk->gcka', wp_bgc, v_ba, p_bgc_, backend='torch')
    #wppv_gcca = torch.einsum('bgc,ba,bgk->gcka', wp_bgc, v_ba, p_bgc_)
    h_beta_alpha += wppv_gcca
    # h_beta_alpha *= -1 # COMENTAR?
    h_beta_alpha = h_beta_alpha.reshape(G*(C-1), (C-1)*A)

    h_alpha_beta = h_beta_alpha.t()

    hessian = -torch.cat([torch.cat([h_alpha_alpha, h_alpha_beta], dim=1), torch.cat([h_beta_alpha, h_beta_beta], dim=1)], dim=0)

    return loss, grad, hessian

# Función que implementa el algoritmo EM
def EM_algorithm(x_bc, w_bg, v_da, e_bd, alpha = None, beta = None, 
                 start_iter=0, max_iterations=100, tolerance_ab=1e-3, tolerance_ll=0.05, time_limit=3600, 
                 seed_ab=0, lambda_beta=0.0, lambda_alpha=0.0, print_every=10, multinomial=True):
    # print_every : cada cuantas líneas se imprime el log, 0 si es que no se imprime
    G = w_bg.shape[1]  # Número de grupos
    B, C = x_bc.shape  # Número de mesas y candidatos
    A = v_da.shape[1]  # Número de atributos

    # torch.manual_seed(seed_ab)
    # alpha = torch.randn((C-1, A), dtype=torch.float64, requires_grad=True)
    # beta = torch.randn((G, C-1), dtype=torch.float64, requires_grad=True)

    # initialize alpha and beta with zeros
    if alpha is None:
        alpha = torch.zeros((C-1, A), dtype=torch.float64, requires_grad=True)
        # alpha = torch.randn((C-1, A), dtype=torch.float64, requires_grad=True)
    if beta is None:
        beta = torch.zeros((G, C-1), dtype=torch.float64, requires_grad=True)
        # beta = torch.randn((G, C-1), dtype=torch.float64, requires_grad=True)

    # check if alpha is numpy array
    if alpha is not None and isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)
    if beta is not None and isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)

    #a = torch.zeros((2, 3), dtype=torch.float64, requires_grad=True)
    diff_beta = 10000.0
    diff_alpha = 10000.0

    numeros = []
    # fn_objetivo = []
    likelihoods_old = []
    likelihoods = []
    # medir tiempo inicial del EM
    tiempo_inicial = time.time()

    # regularization = bool(lambda_beta != 0.0 or lambda_alpha != 0.0)

    list_alpha = []
    list_beta = []

    razon_parada = "limite de iteraciones"
    for iter in range(start_iter, max_iterations):
        num = iter + 1
        numeros.append(num)

        # print(f"EM iter = {iter}\td_alpha = {diff_alpha:.4f}\td_beta = {diff_beta:.4f}")
        if (print_every > 0) and (iter % (10 * print_every) == 0):
            # print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tm_iters\ttime_ac")
            # print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tlog_like_old\td ll\t\td llold\t\tm_iters\ttime_ac")
            print(f"EM iter\td_alpha\td_beta\t\tlog-likelihood\tlog_like_old\td ll\t\td llold\t\tm_iters\ttime_ac")
        
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)

        tol = 1 / (num)

        if len(likelihoods) > 1:
            delta_ll = likelihoods[-1] - likelihoods[-2]
        else:
            delta_ll = 100000000

        # max_iter = get_max_iter(delta_ll = delta_ll)
        max_iter = 1
        beta_new, alpha_new, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter, lambda_beta=lambda_beta, 
                                                     lambda_alpha=lambda_alpha)

        # antes
        # ll_q_old, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=q_bgc, verbose=False, add_text='', 
        #                          lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # ll, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
        #                    lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)

        if multinomial:
            ll_q_old = compute_ll_multinomial(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=q_bgc, verbose=False, add_text='', 
                                            lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            ll = compute_ll_multinomial(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
                                        lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)

        else:
            ll_q_old, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=q_bgc, verbose=False, add_text='', 
                                 lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            ll, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
                            lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)

        # p_dgc = fun_p_full(v_da, alpha_new, beta_new)
        # p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
        # log_p_bgc = torch.log(p_bgc)
        # loss = -torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
        # if regularization:
        #     loss += lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)
        # # print(f"loss = {loss:.4f}")
        # fn_objetivo.append(loss.item())

        # # Calcular el likelihood
        # epsilon = 1e-10
        # q_bgc_clipped = torch.clamp(q_bgc, min=epsilon)
        # log_q_bgc = torch.log(q_bgc_clipped)
        # exp_value = torch.sum(w_bg * torch.sum(q_bgc * log_q_bgc, dim=2))
        # # Hay que agregar el término de regularización aqui?
        # # if regularization:
        # #     exp_value += lambda_beta * torch.sum(beta**2) + lambda_alpha * torch.sum(alpha**2)
        # likelihood = - loss - exp_value
        # print(f"likelihood = {likelihood}")

        likelihoods.append(ll.item())
        likelihoods_old.append(ll_q_old.item())
        if (print_every > 0) and (iter % print_every == 0):
            # print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
            # print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{ll_q_old:.4f}\t{((likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 0):.4f}\t{((likelihoods_old[-1] - likelihoods_old[-2]) if len(likelihoods_old) > 1 else 0):.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
            print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{ll:.4f}\t{ll_q_old:.4f}\t{((likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 0):.4f}\t{((likelihoods_old[-1] - likelihoods_old[-2]) if len(likelihoods_old) > 1 else 0):.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
        diff_ll = (likelihoods[-1] - likelihoods[-2]) if (len(likelihoods) > 1) else 1000.0
        
        # Comparar los últimos dos valores de likelihood
        if len(likelihoods) > 1 and diff_ll < 0:
            print(f"Detenido en iteración {iter} porque el likelihood actual {likelihoods[-1]:.4f} es menor que el anterior {likelihoods[-2]:.4f}")
            razon_parada = "ll decreciente"
            break

        # Terminar si likelihood es nan
        if torch.isnan(ll):
            print(f"Detenido en iteración {iter} porque el likelihood es nan")
            razon_parada = "ll nan"
            break

        # Terminar por limite de tiempo
        if time.time() - tiempo_inicial > time_limit:
            print(f"Detenido en iteración {iter} porque se ha superado el tiempo límite")
            razon_parada = "tiempo"
            break

        # Condición de parada
        # print(f'beta_new.shape = {beta_new.shape}')
        # print(f'beta.shape = {beta.shape}')
        diff_beta = torch.max(torch.abs(beta_new - beta))
        # print(f'alpha_new.shape = {alpha_new.shape}')
        # print(f'alpha.shape = {alpha.shape}')
        diff_alpha = torch.max(torch.abs(alpha_new - alpha))

        beta = beta_new.clone().detach().requires_grad_(True)
        alpha = alpha_new.clone().detach().requires_grad_(True)

        # append alpha and beta, to keep last two alphas and betas
        list_alpha.append(alpha)
        list_beta.append(beta)

        if len(list_alpha) > 2:
            list_alpha.pop(0)

        if len(list_beta) > 2:
            list_beta.pop(0)

        # if diff_beta < tolerance_ab and diff_alpha < tolerance_ab and diff_ll < tolerance_ll:
        #     print(f"diff_beta = {diff_beta:.8f}\ndiff_alpha = {diff_alpha:.8f}\ndiff_ll = {diff_ll:.8f}")
        #     razon_parada = "converge"
        #     break

        if diff_ll < tolerance_ll:
            print(f"diff_beta = {diff_beta:.8f}\ndiff_alpha = {diff_alpha:.8f}\ndiff_ll = {diff_ll:.8f}")
            razon_parada = "converge"
            break
    
    # if graph:
    #     # Crear el gráfico
    #     plt.plot(numeros, fn_objetivo, marker='o')
    #     plt.xlabel('Iteración')
    #     plt.ylabel('Función objetivo')
    #     plt.title('Función objetivo vs. Iteración')
    #     plt.grid(True)
    #     plt.show()
    print(f"Razón parada: {razon_parada}")
    # Convertir alpha y beta a arrays numpy
    alpha_np = alpha.detach().numpy()
    beta_np = beta.detach().numpy()

    return beta_np, alpha_np, iter, razon_parada, diff_ll, list_alpha, list_beta

# Ejemplo de x_bc, w_bg, v_da, e_bd, b = 4, c = 5, g = 2, a = 2, d = 2
# x_bc = torch.tensor([[1, 2, 3, 4, 5], [2, 3, 4, 5, 1], [3, 4, 5, 1, 2], [4, 5, 1, 2, 3]], dtype=torch.float64)
# w_bg = torch.tensor([[10, 20], [20, 30], [30, 40], [40, 50]], dtype=torch.float64)
# v_da = torch.tensor([[1, 2], [2, 1]], dtype=torch.float64)
# e_bd = torch.tensor([[1, 0], [0, 1], [1, 0], [0, 1]], dtype=torch.float64)

def EM_algorithm_gcg_old(x_bc, w_bg, v_da, e_bd, alpha = None, beta = None, 
                 start_iter=0, max_iterations=100, tolerance_ab=1e-3, tolerance_ll=0.05, time_limit=3600, 
                 seed_ab=0, lambda_beta=0.0, lambda_alpha=0.0, print_every=1, p=5):
    # print_every : cada cuantas líneas se imprime el log, 0 si es que no se imprime
    G = w_bg.shape[1]  # Número de grupos
    B, C = x_bc.shape  # Número de mesas y candidatos
    A = v_da.shape[1]  # Número de atributos


    # initialize alpha and beta with zeros
    if alpha is None:
        alpha = torch.zeros((C-1, A), dtype=torch.float64, requires_grad=True)
        
    if beta is None:
        beta = torch.zeros((G, C-1), dtype=torch.float64, requires_grad=True)


    # check if alpha is numpy array
    if alpha is not None and isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)


    if beta is not None and isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)


    diff_beta = 10000.0
    diff_alpha = 10000.0


    numeros = []
    likelihoods_old = []
    likelihoods = []
    # medir tiempo inicial del EM
    tiempo_inicial = time.time()


    razon_parada = "limite de iteraciones"
    for iter in range(start_iter, max_iterations):
        num = iter + 1
        numeros.append(num)


        # print(f"EM iter = {iter}\td_alpha = {diff_alpha:.4f}\td_beta = {diff_beta:.4f}")
        if (print_every > 0) and (iter % (10 * print_every) == 0):
            # print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tm_iters\ttime_ac")
            print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tlog_like_old\td ll\t\td llold\t\tm_iters\ttime_ac")
        
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)


        tol = 1 / (num)


        if len(likelihoods) > 1:
            delta_ll = likelihoods[-1] - likelihoods[-2]
        else:
            delta_ll = 100000000


        # max_iter = get_max_iter(delta_ll = delta_ll)
        max_iter = 1
        beta_new, alpha_new, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter, lambda_beta=lambda_beta, 
                                                     lambda_alpha=lambda_alpha)


        # antes
        ll_q_old, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=q_bgc, verbose=False, add_text='', 
                                 lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        ll, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
                           lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)


        likelihoods.append(ll.item())
        likelihoods_old.append(ll_q_old.item())
        if (print_every > 0) and (iter % print_every == 0):
            # print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
            print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{ll_q_old:.4f}\t{((likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 0):.4f}\t{((likelihoods_old[-1] - likelihoods_old[-2]) if len(likelihoods_old) > 1 else 0):.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
        diff_ll = (likelihoods[-1] - likelihoods[-2]) if (len(likelihoods) > 1) else 1000.0
        
        # Comparar los últimos dos valores de likelihood
        if len(likelihoods) > 1 and diff_ll < 0:
            print(f"Detenido en iteración {iter} porque el likelihood actual {likelihoods[-1]:.4f} es menor que el anterior {likelihoods[-2]:.4f}")
            razon_parada = "ll decreciente"
            break


        # Terminar si likelihood es nan
        if torch.isnan(ll):
            print(f"Detenido en iteración {iter} porque el likelihood es nan")
            razon_parada = "ll nan"
            break


        # Terminar por limite de tiempo
        if time.time() - tiempo_inicial > time_limit:
            print(f"Detenido en iteración {iter} porque se ha superado el tiempo límite")
            razon_parada = "tiempo"
            break


        # Condición de parada
        diff_beta = torch.max(torch.abs(beta_new - beta))
        diff_alpha = torch.max(torch.abs(alpha_new - alpha))


        if diff_beta < tolerance_ab and diff_alpha < tolerance_ab and diff_ll < tolerance_ll:
            print(f"diff_beta = {diff_beta:.8f}\ndiff_alpha = {diff_alpha:.8f}\ndiff_ll = {diff_ll:.8f}")
            razon_parada = "converge"
            beta = beta_new.clone().detach().requires_grad_(True)
            alpha = alpha_new.clone().detach().requires_grad_(True)
            break


        if (iter % p) == 0:
        # if iter == 0:
            # d_k
            d_iter_beta = beta_new - beta
            # print(f'd_iter_beta = {d_iter_beta}')
            d_iter_alpha = alpha_new - alpha
            # print(f'd_iter_alpha = {d_iter_alpha}')


        if iter >= 0:
            # alpha_k, buscar line search
            omega_iter_beta_list = [0.0, 1.0, 10.0, 100.0]
            omega_iter_alpha_list = [0.0, 1.0, 10.0, 100.0]


            # Inicializar variables para almacenar el máximo
            max_ll_value = -float('inf')  # El valor inicial del log-likelihood (puedes ajustar según la escala de tu función)
            best_omega_iter_beta = None
            best_omega_iter_alpha = None


            for omega_iter_beta in omega_iter_beta_list:
                for omega_iter_alpha in omega_iter_alpha_list:
                    ll, _ = compute_ll(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta+omega_iter_beta*d_iter_beta, 
                                       alpha=alpha+omega_iter_alpha*d_iter_alpha, q_bgc=None, verbose=False, add_text='', 
                                       lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
                    
                    if ll > max_ll_value:
                        max_ll_value = ll
                        best_omega_iter_beta = omega_iter_beta
                        best_omega_iter_alpha = omega_iter_alpha


            # print(f'best_omega_iter_beta = {best_omega_iter_beta}')
            # print(f'best_omega_iter_alpha = {best_omega_iter_alpha}')
            # print('-'*50)


            beta_iter_plus_one = beta + best_omega_iter_beta*d_iter_beta
            # print(f'beta_iter_plus_one = {beta_iter_plus_one}')
            alpha_iter_plus_one = alpha + best_omega_iter_alpha*d_iter_alpha
            # print(f'alpha_iter_plus_one = {alpha_iter_plus_one}')


            # beta_k
            g_iter_plus_one = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta_iter_plus_one, alpha=alpha_iter_plus_one, 
                                              q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            g_iter_plus_one_beta = g_iter_plus_one[:G*(C-1)].reshape(G, C-1)
            # print(f'g_iter_plus_one_beta = {g_iter_plus_one_beta}')
            g_iter_plus_one_alpha = g_iter_plus_one[G*(C-1):].reshape(C-1, A)
            # print(f'g_iter_plus_one_alpha = {g_iter_plus_one_alpha}')


            g_iter = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta, alpha=alpha, 
                                     q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            g_iter_beta = g_iter[:G*(C-1)].reshape(G, C-1)
            # print(f'g_iter_beta = {g_iter_beta}')
            g_iter_alpha = g_iter[G*(C-1):].reshape(C-1, A)
            # print(f'g_iter_alpha = {g_iter_alpha}')
            
            q_bgc_new_new = e_step(x_bc, w_bg, v_da, e_bd, beta_iter_plus_one, alpha_iter_plus_one)
            # print(f'q_bgc_new_new = {q_bgc_new_new}')
            beta_new_new, alpha_new_new, _ = m_step(x_bc, w_bg, v_da, e_bd, q_bgc_new_new, alpha_iter_plus_one, beta_iter_plus_one, 
                                                    tol, max_iter, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            # print(f'beta_new_new = {beta_new_new}')
            # print(f'alpha_new_new = {alpha_new_new}')


            g_tilda_iter_plus_one_beta = beta_new_new - beta_iter_plus_one #GxC
            # g_tilda_iter_plus_one_beta = g_tilda_iter_plus_one_beta.flatten()
            # print(f'g_tilda_iter_plus_one_beta = {g_tilda_iter_plus_one_beta}')
            g_tilda_iter_plus_one_alpha = alpha_new_new - alpha_iter_plus_one #CxA
            # g_tilda_iter_plus_one_alpha = g_tilda_iter_plus_one_alpha.flatten()
            # print(f'g_tilda_iter_plus_one_alpha = {g_tilda_iter_plus_one_alpha}')
            delta_g_iter_beta = g_iter_plus_one_beta - g_iter_beta #GxC
            # delta_g_iter_beta = delta_g_iter_beta.flatten()
            # print(f'delta_g_iter_beta = {delta_g_iter_beta}')
            delta_g_iter_alpha = g_iter_plus_one_alpha - g_iter_alpha #CxA
            # delta_g_iter_alpha = delta_g_iter_alpha.flatten()
            # print(f'delta_g_iter_alpha = {delta_g_iter_alpha}')


            epsilon = 1e-10
            # d_iter_beta = d_iter_beta.flatten()
            # d_iter_alpha = d_iter_alpha.flatten()
            psi_iter_beta = (torch.matmul(g_tilda_iter_plus_one_beta.T, delta_g_iter_beta)) / (torch.matmul(d_iter_beta.T, delta_g_iter_beta) + epsilon) #CxC
            # print(f'psi_iter_beta = {psi_iter_beta}')
            psi_iter_alpha = (torch.matmul(g_tilda_iter_plus_one_alpha.T, delta_g_iter_alpha)) / (torch.matmul(d_iter_alpha.T, delta_g_iter_alpha) + epsilon) #AxA
            # print(f'psi_iter_alpha = {psi_iter_alpha}')


            # d_k_plus_one
            # g_tilda_iter_plus_one_beta = g_tilda_iter_plus_one_beta.reshape(G, C-1)
            # d_iter_beta = d_iter_beta.reshape(G, C-1)
            # d_iter_beta = g_tilda_iter_plus_one_beta - psi_iter_beta * d_iter_beta # GxC
            d_iter_beta = g_tilda_iter_plus_one_beta - torch.matmul(psi_iter_beta, d_iter_beta.T).T # GxC
            # print(f'd_iter_beta = {d_iter_beta}')
            # g_tilda_iter_plus_one_alpha = g_tilda_iter_plus_one_alpha.reshape(C-1, A)
            # d_iter_alpha = d_iter_alpha.reshape(C-1, A)
            # d_iter_alpha = g_tilda_iter_plus_one_alpha - psi_iter_alpha * d_iter_alpha # CxA
            d_iter_alpha = g_tilda_iter_plus_one_alpha - torch.matmul(psi_iter_alpha, d_iter_alpha.T).T # CxA
            # print(f'd_iter_alpha = {d_iter_alpha}')


            beta = beta_iter_plus_one.clone().detach().requires_grad_(True)
            # print(f'beta = {beta}')
            alpha = alpha_iter_plus_one.clone().detach().requires_grad_(True)
            # print(f'alpha = {alpha}')


            # print(f'iter = {iter} acabada')


    print(f"Razón parada: {razon_parada}")
    # Convertir alpha y beta a arrays numpy
    alpha_np = alpha.detach().numpy()
    beta_np = beta.detach().numpy()


    return beta_np, alpha_np, iter, razon_parada

def EM_algorithm_gcg(x_bc, w_bg, v_da, e_bd, alpha = None, beta = None, 
                 start_iter=0, max_iterations=100, tolerance_ab=1e-3, tolerance_ll=0.05, time_limit=3600, 
                 seed_ab=0, lambda_beta=0.0, lambda_alpha=0.0, print_every=1, p=1):
    # print_every : cada cuantas líneas se imprime el log, 0 si es que no se imprime
    G = w_bg.shape[1]  # Número de grupos
    B, C = x_bc.shape  # Número de mesas y candidatos
    A = v_da.shape[1]  # Número de atributos


    # function that maximizes in a line search
    def line_search_maximize_torch(func, x0, direction, tol=1e-5, max_iter=100):
        """
        Performs a line search to maximize a given function along a direction using PyTorch tensors.
        
        Parameters:
        - func: The function to maximize (should take a torch tensor as input).
        - x0: The starting point (torch tensor).
        - direction: The direction of search (torch tensor).
        - tol: The tolerance for convergence (default: 1e-5).
        - max_iter: The maximum number of iterations (default: 100).
        
        Returns:
        - The optimal point (torch tensor) that maximizes the function along the given direction.
        """
        
        # Normalize the direction using torch.norm()
        direction = direction / torch.norm(direction)
        
        # Golden section search constants
        golden_ratio = (torch.sqrt(torch.tensor(5.0)) - 1) / 2
        
        # Initial boundaries for alpha (the step along the direction)
        alpha_low = torch.tensor(0.0)
        alpha_high = torch.tensor(1.0)
        
        # Compute points in between using the golden ratio
        alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
        alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
        
        # Evaluate function at the initial points
        f_alpha1 = func(x0 + alpha1 * direction)
        f_alpha2 = func(x0 + alpha2 * direction)
        
        iter_count = 0
        
        while torch.abs(alpha_high - alpha_low) > tol and iter_count < max_iter:
            iter_count += 1
            
            if f_alpha1 > f_alpha2:
                alpha_high = alpha2
                alpha2 = alpha1
                f_alpha2 = f_alpha1
                alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
                f_alpha1 = func(x0 + alpha1 * direction)
            else:
                alpha_low = alpha1
                alpha1 = alpha2
                f_alpha1 = f_alpha2
                alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
                f_alpha2 = func(x0 + alpha2 * direction)
        
        # The optimal alpha is the midpoint of the interval
        alpha_opt = (alpha_low + alpha_high) / 2
        
        # Return the optimal point as a torch tensor
        return x0 + alpha_opt * direction


    # function that maximizes in a line search
    def line_search_maximize_torch_ll(alpha0, beta0, d_alpha, d_beta, tol=1e-5, max_iter=100):   
        # Compute ll initial
        # ll0, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0, alpha0, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'll0 = {ll0}') 


        # Normalize the direction using torch.norm()
        t_norm = torch.norm(torch.concat([torch.flatten(d_alpha), torch.flatten(d_beta)]))
        d_alpha = d_alpha / t_norm
        d_beta = d_beta / t_norm
        
        # Golden section search constants
        golden_ratio = (torch.sqrt(torch.tensor(5.0)) - 1) / 2
        
        # Initial boundaries for alpha (the step along the direction)
        alpha_low = torch.tensor(0.0)
        alpha_high = torch.tensor(1.0)
        
        # Compute points in between using the golden ratio
        alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
        alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
        
        # Evaluate function at the initial points
        f_alpha1, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha1 * d_beta, alpha0 + alpha1 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'f_alpha1_init = {f_alpha1}')
        f_alpha2, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha2 * d_beta, alpha0 + alpha2 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'f_alpha2_init = {f_alpha2}')


        iter_count = 0
        best_f_alpha = max(f_alpha1, f_alpha2)  # Initialize with the best current value
        list_alpha_low = [alpha_low]
        list_alpha_high = [alpha_high]
        
        while torch.abs(alpha_high - alpha_low) > tol and iter_count < max_iter:
            iter_count += 1
            
            if f_alpha1 > f_alpha2:
                alpha_high = alpha2
                # append to list
                list_alpha_high.append(alpha_high)
                alpha2 = alpha1
                f_alpha2 = f_alpha1
                alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
                f_alpha1, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha1 * d_beta, alpha0 + alpha1 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
                # print(f'f_alpha1 = {f_alpha1}')
            else:
                alpha_low = alpha1
                # append to list
                list_alpha_low.append(alpha_low)
                alpha1 = alpha2
                f_alpha1 = f_alpha2
                alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
                f_alpha2, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha2 * d_beta, alpha0 + alpha2 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
                # print(f'f_alpha2 = {f_alpha2}')


            # Check if the new values are declining
            current_max_f_alpha = max(f_alpha1, f_alpha2)


            # ll decreciente, keep alpha low and high from the previous iteration
            if current_max_f_alpha < best_f_alpha:
                alpha_low = list_alpha_low[-2]
                alpha_high = list_alpha_high[-2]
                break
            # ll creciente, se actualiza el mejor
            else:
                best_f_alpha = current_max_f_alpha


        # The optimal alpha is the midpoint of the interval
        alpha_mid = (alpha_low + alpha_high) / 2
        
        # Return the optimal point as a torch tensor
        alpha_max = alpha0 + alpha_mid * d_alpha
        beta_max = beta0 + alpha_mid * d_beta
        return alpha_max, beta_max


    # initialize alpha and beta with zeros
    if alpha is None:
        alpha = torch.zeros((C-1, A), dtype=torch.float64, requires_grad=True)
        
    if beta is None:
        beta = torch.zeros((G, C-1), dtype=torch.float64, requires_grad=True)


    # check if alpha is numpy array
    if alpha is not None and isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)


    if beta is not None and isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)


    diff_beta = 10000.0
    diff_alpha = 10000.0


    numeros = []
    likelihoods_old = []
    likelihoods = []
    # medir tiempo inicial del EM
    tiempo_inicial = time.time()


    razon_parada = "limite de iteraciones"
    # inicializar valores de d_0 con valores iniciales de g_tilda_k1
    # EM
    q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    tol = 1 / (1)
    # max_iter = get_max_iter(delta_ll = delta_ll)
    max_iter = 1
    beta_EM, alpha_EM, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter, 
                                                lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
    g_tilda_k1_alpha = alpha_EM - alpha
    g_tilda_k1_beta = beta_EM - beta
    # obtener gradiente de theta_0
    g_0 = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta, alpha=alpha, 
                            q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
    g_k_beta = g_0[:G*(C-1)].reshape(G, C-1)
    g_k_alpha = g_0[G*(C-1):].reshape(C-1, A)


    for iter in range(start_iter, max_iterations):
        num = iter + 1
        numeros.append(num)


        # print(f"EM iter = {iter}\td_alpha = {diff_alpha:.4f}\td_beta = {diff_beta:.4f}")
        if (print_every > 0) and (iter % (10 * print_every) == 0):
            # print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tm_iters\ttime_ac")
            print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tlog_like_old\td ll\t\td llold\t\tm_iters\ttime_ac")


        if (iter % p) == 0:
            d_alpha = g_tilda_k1_alpha
            d_beta = g_tilda_k1_beta


        # line search
        # g_iter_plus_one_beta = g_iter_plus_one[:G*(C-1)].reshape(G, C-1)
        #     # print(f'g_iter_plus_one_beta = {g_iter_plus_one_beta}')
        #     g_iter_plus_one_alpha = g_iter_plus_one[G*(C-1):].reshape(C-1, A)
        
        # f = lambda x: compute_ll(x_bc, w_bg, v_da, e_bd, x[:G*(C-1)].reshape(G, C-1), x[G*(C-1):].reshape(C-1, A), q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # theta_k = torch.cat((torch.flatten(alpha), torch.flatten(beta)))
        # d_k = torch.cat((torch.flatten(d_alpha), torch.flatten(d_beta)))
        # theta_k1 = line_search_maximize_torch(f, theta_k, d_k, tol=1e-5, max_iter=100)
        alpha_new, beta_new = line_search_maximize_torch_ll(alpha, beta, d_alpha, d_beta, tol=1e-4, max_iter=100)


        # EM
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new)
        tol = 1 / (num)
        # max_iter = get_max_iter(delta_ll = delta_ll)
        max_iter = 1
        beta_EM, alpha_EM, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha_new, beta_new, tol, max_iter, 
                                                    lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        g_tilda_k1_alpha = alpha_EM - alpha_new
        g_tilda_k1_beta = beta_EM - beta_new


        # Grad
        g_k1 = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta_new, alpha=alpha_new,
                                q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        g_k1_beta = g_k1[:G*(C-1)].reshape(G, C-1)
        g_k1_alpha = g_k1[G*(C-1):].reshape(C-1, A)


        delta_g_alpha = g_k1_alpha - g_k_alpha # diferencia de gradiente de alpha
        delta_g_beta = g_k1_beta - g_k_beta # diferencia de gradiente de beta
        gamma_k = (torch.sum(g_tilda_k1_alpha * delta_g_alpha) + torch.sum(g_tilda_k1_beta * delta_g_beta)) / (torch.sum(d_alpha * delta_g_alpha) + torch.sum(d_beta * delta_g_beta))
        d_alpha = g_tilda_k1_alpha - gamma_k * d_alpha
        d_beta = g_tilda_k1_beta - gamma_k * d_beta


        # antes
        ll_q_old, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', 
                                 lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        ll, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
                           lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)


        likelihoods.append(ll.item())
        likelihoods_old.append(ll_q_old.item())
        if (print_every > 0) and (iter % print_every == 0):
            # print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
            print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{ll_q_old:.4f}\t{((likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 0):.4f}\t{((likelihoods_old[-1] - likelihoods_old[-2]) if len(likelihoods_old) > 1 else 0):.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
        diff_ll = (likelihoods[-1] - likelihoods[-2]) if (len(likelihoods) > 1) else 1000.0
        
        # Comparar los últimos dos valores de likelihood
        if len(likelihoods) > 1 and diff_ll < 0:
            print(f"Detenido en iteración {iter} porque el likelihood actual {likelihoods[-1]:.4f} es menor que el anterior {likelihoods[-2]:.4f}")
            razon_parada = "ll decreciente"
            break


        # Terminar si likelihood es nan
        if torch.isnan(ll):
            print(f"Detenido en iteración {iter} porque el likelihood es nan")
            razon_parada = "ll nan"
            break


        # Terminar por limite de tiempo
        if time.time() - tiempo_inicial > time_limit:
            print(f"Detenido en iteración {iter} porque se ha superado el tiempo límite")
            razon_parada = "tiempo"
            break


        # Condición de parada
        diff_beta = torch.max(torch.abs(beta_new - beta))
        diff_alpha = torch.max(torch.abs(alpha_new - alpha))


        if diff_beta < tolerance_ab and diff_alpha < tolerance_ab and diff_ll < tolerance_ll:
            print(f"diff_beta = {diff_beta:.8f}\ndiff_alpha = {diff_alpha:.8f}\ndiff_ll = {diff_ll:.8f}")
            razon_parada = "converge"
            break


        beta = beta_new.clone().detach().requires_grad_(True)
        alpha = alpha_new.clone().detach().requires_grad_(True)
        g_k_alpha = g_k1_alpha.clone().detach().requires_grad_(True)
        g_k_beta = g_k1_beta.clone().detach().requires_grad_(True)
    print(f"Razón parada: {razon_parada}")
    # Convertir alpha y beta a arrays numpy
    alpha_np = alpha.detach().numpy()
    beta_np = beta.detach().numpy()


    return beta_np, alpha_np, iter, razon_parada

def EM_algorithm_pncg(x_bc, w_bg, v_da, e_bd, alpha = None, beta = None, 
                 start_iter=0, max_iterations=100, tolerance_ab=1e-3, tolerance_ll=0.05, time_limit=3600, 
                 seed_ab=0, lambda_beta=0.0, lambda_alpha=0.0, print_every=1, p=3):
    # print_every : cada cuantas líneas se imprime el log, 0 si es que no se imprime
    G = w_bg.shape[1]  # Número de grupos
    B, C = x_bc.shape  # Número de mesas y candidatos
    A = v_da.shape[1]  # Número de atributos


    # function that maximizes in a line search
    def line_search_maximize_torch(func, x0, direction, tol=1e-5, max_iter=100):
        """
        Performs a line search to maximize a given function along a direction using PyTorch tensors.
        
        Parameters:
        - func: The function to maximize (should take a torch tensor as input).
        - x0: The starting point (torch tensor).
        - direction: The direction of search (torch tensor).
        - tol: The tolerance for convergence (default: 1e-5).
        - max_iter: The maximum number of iterations (default: 100).
        
        Returns:
        - The optimal point (torch tensor) that maximizes the function along the given direction.
        """
        
        # Normalize the direction using torch.norm()
        direction = direction / torch.norm(direction)
        
        # Golden section search constants
        golden_ratio = (torch.sqrt(torch.tensor(5.0)) - 1) / 2
        
        # Initial boundaries for alpha (the step along the direction)
        alpha_low = torch.tensor(0.0)
        alpha_high = torch.tensor(1.0)
        
        # Compute points in between using the golden ratio
        alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
        alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
        
        # Evaluate function at the initial points
        f_alpha1 = func(x0 + alpha1 * direction)
        f_alpha2 = func(x0 + alpha2 * direction)
        
        iter_count = 0
        
        while torch.abs(alpha_high - alpha_low) > tol and iter_count < max_iter:
            iter_count += 1
            
            if f_alpha1 > f_alpha2:
                alpha_high = alpha2
                alpha2 = alpha1
                f_alpha2 = f_alpha1
                alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
                f_alpha1 = func(x0 + alpha1 * direction)
            else:
                alpha_low = alpha1
                alpha1 = alpha2
                f_alpha1 = f_alpha2
                alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
                f_alpha2 = func(x0 + alpha2 * direction)
        
        # The optimal alpha is the midpoint of the interval
        alpha_opt = (alpha_low + alpha_high) / 2
        
        # Return the optimal point as a torch tensor
        return x0 + alpha_opt * direction


    # function that maximizes in a line search
    def line_search_maximize_torch_ll(alpha0, beta0, d_alpha, d_beta, tol=1e-5, max_iter=100):   
        # Compute ll initial
        # ll0, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0, alpha0, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'll0 = {ll0}') 


        # Normalize the direction using torch.norm()
        t_norm = torch.norm(torch.concat([torch.flatten(d_alpha), torch.flatten(d_beta)]))
        d_alpha = d_alpha / t_norm
        d_beta = d_beta / t_norm
        
        # Golden section search constants
        golden_ratio = (torch.sqrt(torch.tensor(5.0)) - 1) / 2
        
        # Initial boundaries for alpha (the step along the direction)
        alpha_low = torch.tensor(0.0)
        alpha_high = torch.tensor(1.0)
        
        # Compute points in between using the golden ratio
        alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
        alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
        
        # Evaluate function at the initial points
        f_alpha1, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha1 * d_beta, alpha0 + alpha1 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'f_alpha1_init = {f_alpha1}')
        f_alpha2, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha2 * d_beta, alpha0 + alpha2 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'f_alpha2_init = {f_alpha2}')


        iter_count = 0
        best_f_alpha = max(f_alpha1, f_alpha2)  # Initialize with the best current value
        
        while torch.abs(alpha_high - alpha_low) > tol and iter_count < max_iter:
            iter_count += 1
            
            if f_alpha1 > f_alpha2:
                alpha_high = alpha2
                alpha2 = alpha1
                f_alpha2 = f_alpha1
                alpha1 = alpha_low + (1 - golden_ratio) * (alpha_high - alpha_low)
                f_alpha1, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha1 * d_beta, alpha0 + alpha1 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
                # print(f'f_alpha1 = {f_alpha1}')
            else:
                alpha_low = alpha1
                alpha1 = alpha2
                f_alpha1 = f_alpha2
                alpha2 = alpha_low + golden_ratio * (alpha_high - alpha_low)
                f_alpha2, _ = compute_ll(x_bc, w_bg, v_da, e_bd, beta0 + alpha2 * d_beta, alpha0 + alpha2 * d_alpha, q_bgc=None, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
                # print(f'f_alpha2 = {f_alpha2}')


            # Check if the new values are declining
            current_max_f_alpha = max(f_alpha1, f_alpha2)


            # ll decreciente
            if current_max_f_alpha < best_f_alpha:
                break
            # ll creciente, se actualiza el mejor
            else:
                best_f_alpha = current_max_f_alpha


        # The optimal alpha is the midpoint of the interval
        alpha_mid = (alpha_low + alpha_high) / 2
        
        # Return the optimal point as a torch tensor
        alpha_max = alpha0 + alpha_mid * d_alpha
        beta_max = beta0 + alpha_mid * d_beta
        return alpha_max, beta_max


    # initialize alpha and beta with zeros
    if alpha is None:
        alpha = torch.zeros((C-1, A), dtype=torch.float64, requires_grad=True)
        
    if beta is None:
        beta = torch.zeros((G, C-1), dtype=torch.float64, requires_grad=True)


    # check if alpha is numpy array
    if alpha is not None and isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64)


    if beta is not None and isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64)


    diff_beta = 10000.0
    diff_alpha = 10000.0


    numeros = []
    likelihoods_old = []
    likelihoods = []
    # medir tiempo inicial del EM
    tiempo_inicial = time.time()


    razon_parada = "limite de iteraciones"
    for iter in range(start_iter, max_iterations):
        num = iter + 1
        numeros.append(num)


        # EM
        q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
        tol = 1 / (num)
        # max_iter = get_max_iter(delta_ll = delta_ll)
        max_iter = 1
        beta_EM, alpha_EM, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter, 
                                                    lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        
        beta = beta_EM.clone().detach().requires_grad_(True)
        alpha = alpha_EM.clone().detach().requires_grad_(True)


        # print(f"EM iter = {iter}\td_alpha = {diff_alpha:.4f}\td_beta = {diff_beta:.4f}")
        if (print_every > 0) and (iter % (10 * print_every) == 0):
            # print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tm_iters\ttime_ac")
            print(f"EM iter\td_alpha\td_beta\tQ\t\tlog-likelihood\tlog_like_old\td ll\t\td llold\t\tm_iters\ttime_ac")


        if (iter == 0):
            ll, grad, hess = compute_ll_grad_Hessian(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', 
                                                     lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            # Print shapes
            # print(f'll shape = {ll.shape}')
            # print(f'grad shape = {grad.shape}') 147
            # print(f'hess shape = {hess.shape}') 147x147
            Chol = torch.linalg.cholesky(hess) # 147x147
            # print(f'Chol = {Chol}')
            # print(f'Chol shape = {Chol.shape}')
            P = torch.inverse(Chol) * torch.inverse(Chol.T) #147x147
            # print(f'P = {P}')
            # print(f'P shape = {P.shape}')
            d_k = torch.matmul(P, grad) # P * grad, 147
            # print(f'd_k = {d_k}')
            d_alpha = d_k[G*(C-1):].reshape(C-1, A)
            d_beta = d_k[:G*(C-1)].reshape(G, C-1)


        if (iter % p) == 0 and (iter > 0):
            grad = compute_ll_grad(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', 
                                   lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            # print(f'grad = {grad}')
            d_k = P * grad


        alpha_new, beta_new = line_search_maximize_torch_ll(alpha, beta, d_alpha, d_beta, tol=1e-16, max_iter=100)
        # print(f'alpha_new = {alpha_new}')
        # print(f'beta_new = {beta_new}')


        # EM
        # q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new)
        # tol = 1 / (num)
        # # max_iter = get_max_iter(delta_ll = delta_ll)
        # max_iter = 1
        # beta_EM, alpha_EM, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha_new, beta_new, tol, max_iter, 
        #                                             lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)


        # Grad
        g_old = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta, alpha=alpha, 
                                q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'g_old = {g_old}')
        # g_old_beta = g_old[:G*(C-1)].reshape(G, C-1)
        # g_old_alpha = g_old[G*(C-1):].reshape(C-1, A)


        g_new = compute_ll_grad(x_bc=x_bc, w_bg=w_bg, v_da=v_da, e_bd=e_bd, beta=beta_new, alpha=alpha_new,
                                q_bgc=None, verbose=False, add_text='', lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        # print(f'g_new = {g_new}')
        # g_new_beta = g_new[:G*(C-1)].reshape(G, C-1)
        # g_new_alpha = g_new[G*(C-1):].reshape(C-1, A)


        # # FR
        # # print(f'num = {g_new.T * P * g_new}')
        # # print(f'den = {g_old.T * P * g_old}')
        # num = torch.sum(g_new.T * P * g_new)
        # den = torch.sum(g_old.T * P * g_old)
        # # divide both and sum
        # gamma_k =  - (num / den)
        # # print(f'gamma_k = {gamma_k}')


        # PR
        # num = torch.sum(g_new.T * P * (g_new - g_old))
        # den = torch.sum(g_old.T * P * g_old)
        # # divide both and sum
        # gamma_k =  - (num / den)


        # HS
        num = torch.sum(g_new.T * P * (g_new - g_old))
        den = torch.sum(d_k.T * (g_new - g_old))
        # divide both and sum
        gamma_k =  - (num / den)


        # delta_g_alpha = g_new_alpha - g_old_alpha # diferencia de gradiente de alpha
        # delta_g_beta = g_new_beta - g_old_beta # diferencia de gradiente de beta
        # gamma_k = (torch.sum(g_tilda_k1_alpha * delta_g_alpha) + torch.sum(g_tilda_k1_beta * delta_g_beta)) / (torch.sum(d_alpha * delta_g_alpha) + torch.sum(d_beta * delta_g_beta))
        d_k = P * g_new - gamma_k * d_k


        # antes
        ll_q_old, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta, alpha, q_bgc=None, verbose=False, add_text='', 
                                 lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        ll, Q = compute_ll(x_bc, w_bg, v_da, e_bd, beta_new, alpha_new, q_bgc=None, verbose=False, add_text='', 
                           lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)


        likelihoods.append(ll.item())
        likelihoods_old.append(ll_q_old.item())
        if (print_every > 0) and (iter % print_every == 0):
            # print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")
            print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{Q:.0f}\t{ll:.4f}\t{ll_q_old:.4f}\t{((likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 0):.4f}\t{((likelihoods_old[-1] - likelihoods_old[-2]) if len(likelihoods_old) > 1 else 0):.4f}\t{0}\t{time.time() - tiempo_inicial:.2f}")
        diff_ll = (likelihoods[-1] - likelihoods[-2]) if (len(likelihoods) > 1) else 1000.0
        
        # Comparar los últimos dos valores de likelihood
        if len(likelihoods) > 1 and diff_ll < 0:
            print(f"Detenido en iteración {iter} porque el likelihood actual {likelihoods[-1]:.4f} es menor que el anterior {likelihoods[-2]:.4f}")
            razon_parada = "ll decreciente"
            break


        # Terminar si likelihood es nan
        if torch.isnan(ll):
            print(f"Detenido en iteración {iter} porque el likelihood es nan")
            razon_parada = "ll nan"
            break


        # Terminar por limite de tiempo
        if time.time() - tiempo_inicial > time_limit:
            print(f"Detenido en iteración {iter} porque se ha superado el tiempo límite")
            razon_parada = "tiempo"
            break


        # Condición de parada
        diff_beta = torch.max(torch.abs(beta_new - beta))
        diff_alpha = torch.max(torch.abs(alpha_new - alpha))


        if diff_beta < tolerance_ab and diff_alpha < tolerance_ab and diff_ll < tolerance_ll:
            print(f"diff_beta = {diff_beta:.8f}\ndiff_alpha = {diff_alpha:.8f}\ndiff_ll = {diff_ll:.8f}")
            razon_parada = "converge"
            break


        beta = beta_new.clone().detach().requires_grad_(True)
        alpha = alpha_new.clone().detach().requires_grad_(True)


    print(f"Razón parada: {razon_parada}")
    # Convertir alpha y beta a arrays numpy
    alpha_np = alpha.detach().numpy()
    beta_np = beta.detach().numpy()


    return beta_np, alpha_np, iter, razon_parada

def EM_algorithm_qn1(x_bc, w_bg, v_da, e_bd, alpha = None, beta = None, start_iter=0, max_iterations=100, tolerance=1e-3, time_limit=3600, 
                     seed_ab=0, lambda_beta=0.0, lambda_alpha=0.0, print_every=10):
    
    # print_every : cada cuantas líneas se imprime el log, 0 si es que no se imprime
    G = w_bg.shape[1]  # Número de grupos
    B, C = x_bc.shape  # Número de mesas y candidatos
    A = v_da.shape[1]  # Número de atributos


    # initialize alpha and beta with zeros
    if alpha is None:
        alpha = torch.zeros((C-1, A), dtype=torch.float64, requires_grad=True)
    if beta is None:
        beta = torch.zeros((G, C-1), dtype=torch.float64, requires_grad=True)


    # check if alpha is numpy array
    if alpha is not None and isinstance(alpha, np.ndarray):
        alpha = torch.tensor(alpha, dtype=torch.float64, requires_grad=True)
    if beta is not None and isinstance(beta, np.ndarray):
        beta = torch.tensor(beta, dtype=torch.float64, requires_grad=True)


    # initialize A_alpha and A_beta
    A_alpha = -torch.eye(len(alpha), dtype=torch.float64) #CxC
    A_beta = -torch.eye(len(beta), dtype=torch.float64) # GxG


    # num = 1
    q_bgc = e_step(x_bc, w_bg, v_da, e_bd, beta, alpha)
    tol = 1
    max_iter = 1 #get_max_iter(delta_ll =likelihoods[-1] - likelihoods[-2]) if len(likelihoods) > 1 else 1
    beta_new, alpha_new, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc, alpha, beta, tol, max_iter, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
    print(f"beta_new = {beta_new}")
    print(f"alpha_new = {alpha_new}")


    # initialize g_tilda
    g_tilda_alpha = alpha_new - alpha # CxA
    g_tilda_beta = beta_new - beta # GxC


    diff_beta = 1000000.0
    diff_alpha = 1000000.0


    numeros = []
    fn_objetivo = []
    likelihoods = []
    # medir tiempo inicial del EM
    tiempo_inicial = time.time()
    razon_parada = "limite de iteraciones"


    for iter in range(start_iter, max_iterations):
        num = iter + 1
        numeros.append(num)


        if (print_every > 0) and (iter % (10 * print_every) == 0):
            print(f"EM iter\td_alpha\td_beta\tloss\tlog-likelihood\tm_iters\ttime_ac")


        tol = 1 / (num)
        # Paso a)
        # Delta alpha y beta, solve the linear system
        delta_alpha = torch.matmul(-A_alpha, g_tilda_alpha) # CxC * CxA = CxA
        # print(f"delta_alpha = {delta_alpha}") # Está creciendo mucho
        delta_beta = torch.matmul(-A_beta, g_tilda_beta) # GxG * GxC = GxC
        # print(f"delta_beta = {delta_beta}")


        # Delta g_tilda
        q_bgc_tilda = e_step(x_bc, w_bg, v_da, e_bd, beta + delta_beta, alpha + delta_alpha)
        beta_new_tilda, alpha_new_tilda, n_iters_newton = m_step(x_bc, w_bg, v_da, e_bd, q_bgc_tilda, alpha + delta_alpha, beta + delta_beta, 
                                                                 tol, max_iter, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
        delta_g_tilda_alpha = alpha_new_tilda - (alpha + delta_alpha) - g_tilda_alpha # CxA
        # print(f"delta_g_tilda_alpha = {delta_g_tilda_alpha}")
        delta_g_tilda_beta = beta_new_tilda - (beta + delta_beta) - g_tilda_beta # GxC
        # print(f"delta_g_tilda_beta = {delta_g_tilda_beta}")


        # Paso b)
        num_1_alpha = (delta_alpha - torch.matmul(A_alpha, delta_g_tilda_alpha)) # CxA
        num_2_alpha = torch.matmul(delta_alpha.T, A_alpha) # AxC * CxC = AxC
        #add a small value to the denominator to avoid division by zero
        den_1_alpha = torch.matmul(num_2_alpha.T, delta_g_tilda_alpha.T) + 1e1 # CxA * AxC = CxC


        num_1_beta = (delta_beta - torch.matmul(A_beta, delta_g_tilda_beta)) # GxC
        num_2_beta = torch.matmul(delta_beta.T, A_beta) # CxG * GxG = CxG
        den_1_beta = torch.matmul(num_2_beta.T, delta_g_tilda_beta.T) + 1e1 # GxC * CxG = GxG


        delta_A_alpha = (torch.matmul(num_1_alpha, num_2_alpha)) / den_1_alpha # CxC
        delta_A_beta = (torch.matmul(num_1_beta, num_2_beta)) / den_1_beta # GxG


        # Update A_alpha and A_beta
        A_alpha += delta_A_alpha
        # print(f"A_alpha = {A_alpha}")
        A_beta += delta_A_beta
        # print(f"A_beta = {A_beta}")
        
        # Paso c)
        p_dgc = fun_p_full(v_da, alpha_new, beta_new)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd, p_dgc, backend='torch')
        #p_bgc = torch.einsum('bd,dgc->bgc', e_bd, p_dgc)
        log_p_bgc = torch.log(p_bgc)
        loss = -torch.sum(w_bg * torch.sum(q_bgc * log_p_bgc, dim=2))
        # print(f"loss = {loss:.4f}")
        fn_objetivo.append(loss.item())


        # Calcular el likelihood
        epsilon = 1e-10
        q_bgc_clipped = torch.clamp(q_bgc, min=epsilon)
        log_q_bgc = torch.log(q_bgc_clipped)
        exp_value = torch.sum(w_bg * torch.sum(q_bgc * log_q_bgc, dim=2))
        likelihood = - loss - exp_value


        if (print_every > 0) and (iter % print_every == 0):
            print(f"{iter}\t{diff_alpha:.5f}\t{diff_beta:.5f}\t{loss:.0f}\t{likelihood:.4f}\t{n_iters_newton}\t{time.time() - tiempo_inicial:.2f}")


        likelihoods.append(likelihood.item())


        # Comparar los últimos dos valores de likelihood
        if len(likelihoods) > 1 and likelihoods[-1] < likelihoods[-2]:
            print(f"Detenido en iteración {iter} porque el likelihood actual {likelihoods[-1]:.4f} es menor que el anterior {likelihoods[-2]:.4f}")
            razon_parada = "ll decreciente"
            break


        # Terminar si likelihood es nan
        if torch.isnan(likelihood):
            print(f"Detenido en iteración {iter} porque el likelihood es nan")
            razon_parada = "ll nan"
            break


        # Terminar por limite de tiempo
        if time.time() - tiempo_inicial > time_limit:
            print(f"Detenido en iteración {iter} porque se ha superado el tiempo límite")
            razon_parada = "tiempo"
            break


        # Check for convergence
        diff_beta = torch.max(torch.abs(delta_beta))
        diff_alpha = torch.max(torch.abs(delta_alpha))


        # if alpha + delta_alpha > 5, or beta + delta_beta > 5, then divide delta by two :
        # while torch.max(torch.abs(alpha + delta_alpha)) > 3:
        #     delta_alpha = delta_alpha / 2
        
        # while torch.max(torch.abs(beta + delta_beta)) > 3:
        #     delta_beta = delta_beta / 2


        alpha = alpha + delta_alpha
        beta = beta + delta_beta
        g_tilda_alpha = g_tilda_alpha + delta_g_tilda_alpha
        g_tilda_beta = g_tilda_beta + delta_g_tilda_beta


        if diff_beta < tolerance and diff_alpha < tolerance:
            razon_parada = "converge"
            print(f"Detenido en iteración {iter} porque converge")
            break


    # Convertir alpha y beta a arrays numpy
    alpha_np = alpha.detach().numpy()
    beta_np = beta.detach().numpy()
    
    return beta_np, alpha_np, iter, razon_parada

# función que simula una elección
def sim_election(I, D, B, G, C, A, lambda_, seed=0, verbose=False):
    # Input:
    # I : número de votantes por mesa
    # D : número de distritos
    # B : número de mesas
    # G : número de grupos
    # C : número de candidatos
    # A : número de atributos
    # lambda_ : valor entre 0 y 1 de qué porcentaje de votantes es asignado al azar en las mesas del distrito
    # seed : semilla para la generación de números aleatorios
    # Output:
    # x_bc : votos de la mesa b para el candidato c, numpy array (B, C)
    # w_bg : votantes de mesa b del grupo g, numpy array (B, G)
    # v_da : matriz de atributos de distrito, numpy array (D, A)
    # e_bd : matriz que tiene un 1 si mesa b pertenece a distrito d, numpy array (B, D)
    # beta : numpy array (G, C)
    # alpha : numpy array (C, A)

    # Generar los parámetros beta y alpha
    # I = 50; D = 2; B = 4; G = 2; C = 3; A = 2
    np.random.seed(seed)
    alpha = np.random.randn(C - 1, A)
    #alpha[C-1, :] = 0
    # np.random.seed(seed)
    beta = np.random.randn(G, C - 1)
    #beta[:, C-1] = 0

    # funcion que genera una matriz con un uno al azar en cada fila
    def random_one_in_each_row(n, m):
        # Create a matrix of zeros
        matrix = np.zeros((n, m), dtype = int)
        # Choose a random column index for each row and set it to 1
        # np.random.seed(seed)
        random_indices = np.random.randint(0, m, n)
        matrix[np.arange(n), random_indices] = 1
        matrix[0:min(n,m),0:min(n,m)] = np.eye(min(n,m))
        return matrix
    
    # Generar e_bd asignación de mesas a distritos
    e_bd = random_one_in_each_row(B, D)
    
    # Generar v_da atributos de distrito
    # np.random.seed(seed)
    v_da = np.random.randn(D, A)
    v_da_torch = torch.tensor(v_da, dtype=torch.float64)
    
    # Get voting probabilities of each district, group, for each candidate
    alpha_torch = torch.tensor(alpha, dtype=torch.float64)
    beta_torch = torch.tensor(beta, dtype=torch.float64)
    p_dgc = fun_p_full(v_da_torch, alpha_torch, beta_torch).detach().numpy()
    
    # Generar los w_bg votantes de mesa b del grupo g
    w_bg = np.zeros((B, G), dtype=int)
    x_bc = np.zeros((B, C), dtype=int)
    for d in range(D):
        # d = 0
        #I_d = I * np.sum(e_bd, axis=0) # Número total de votantes del distrito D
        # get the ballot boxes from district D
        set_B_d = np.where(e_bd[:,d] == 1)[0] 
        B_d = np.sum(e_bd[:,d]) # numero de mesas del distrito D
        I_d = I * B_d # Número total de votantes del distrito D

        # G_fractions = np.random.dirichlet([10.0]*G, size=None) # GRUPOS ALERATORIOS
        G_fractions = [1/G]*G # TODOS LOS GRUPOS TIENEN LA MISMA CANTIDAD DE VOTANTES
        G_population = np.repeat(0, I_d)
        votes_population = np.repeat(0, I_d)
        g = 0
        for i in range(I_d):
            G_population[i] = g
            # print(f"p_dgc[{d}, {g}, :] = {p_dgc[d, g, :]}")
            votes_population[i] = np.random.choice(C, p = p_dgc[d, g, :])
            if i / I_d > sum(G_fractions[0:(g+1)]):
                g += 1
        # choose random index with numpy
        indices_aleatorizar = np.random.choice(I_d, round(lambda_ * I_d), replace=False)
        # indices_aleatorizar = random.sample(range(N), round(lambda_ * N))
        valores_aleatorizar = G_population[indices_aleatorizar]
        votos_aleatorizar = votes_population[indices_aleatorizar]
        indices_aleatorizar.sort()
        for k in range(len(valores_aleatorizar)):
            G_population[indices_aleatorizar[k]] = valores_aleatorizar[k]
            votes_population[indices_aleatorizar[k]] = votos_aleatorizar[k]
        G_population_2 = G_population.reshape(B_d, I)
        votes_population_2 = votes_population.reshape(B_d, I)

        # do an enumerate for in set_B_d
        for index_b, b in enumerate(set_B_d):
            if e_bd[b, d] == 1:
                w_bg[b] = np.array([sum(G_population_2[index_b,:] == g) for g in range(G)])
                x_bc[b] = np.array([sum(votes_population_2[index_b,:] == c) for c in range(C)])
    # if verbose:
    #     print("beta:")
    #     print(beta)
    #     print("alpha:")
    #     print(alpha)
    #     print("x_bc:")
    #     print(x_bc)
    #     print("w_bg:")
    #     print(w_bg)
    #     print("v_da:")
    #     print(v_da)
    #     print("e_bd:")
    #     print(e_bd)

    x_bc_torch = torch.tensor(x_bc, dtype=torch.float64)
    w_bg_torch = torch.tensor(w_bg, dtype=torch.float64)
    e_bd_torch = torch.tensor(e_bd, dtype=torch.float64)

    #return x_bc, w_bg, v_da, e_bd, beta, alpha
    return x_bc_torch, w_bg_torch, v_da_torch, e_bd_torch, beta, alpha

# funcion que prueba el EM con datos simulados
def test_EM(I = 100, D = 20, B = 1400, G = 4, C = 3, A = 2, lambda_ = 0.5, 
            seed_ab_real =  None, seed_init = None, max_iterations=100,
            save = False, multinomial = True):
    
    # Iniciar tiempo
    start_time = time.time()

    # Número total de mesas
    B_total = B * D

    if seed_ab_real is None:
        seed_ab_real = 0
        x_bc, w_bg, v_da, e_bd, beta_sim, alpha_sim = sim_election(I, D, B_total, G, C, A, lambda_= lambda_, seed=seed_ab_real)
    else:
        x_bc, w_bg, v_da, e_bd, beta_sim, alpha_sim = sim_election(I, D, B_total, G, C, A, lambda_= lambda_, seed=seed_ab_real)

    print("beta simulado:")
    print(beta_sim)
    print("alpha simulado:")
    print(alpha_sim)

    if seed_init is None:
        beta_opt, alpha_opt, _, razon_parada, _, _, _ = EM_algorithm(x_bc, w_bg, v_da, e_bd, max_iterations=max_iterations, 
                                                          tolerance_ab=1e-4, tolerance_ll=1e-4, multinomial=multinomial)
    else:
        np.random.seed(seed_init)
        alpha = np.random.randn(C - 1, A)
        # np.random.seed(seed_init)
        beta = np.random.randn(G, C - 1)
        beta_opt, alpha_opt, _, razon_parada, _, _, _ = EM_algorithm(x_bc, w_bg, v_da, e_bd, alpha=alpha, beta=beta, 
                                                                     max_iterations=max_iterations,
                                                                     tolerance_ab=1e-4, tolerance_ll=1e-4, multinomial=multinomial)

    print("beta obtenido:")
    print(beta_opt)
    print("alpha obtenido:")
    print(alpha_opt)

    print("Diferencia beta:")
    dif_beta = (beta_opt - beta_sim).round(2)
    print(dif_beta)
    print("Diferencia alpha:")
    dif_alpha = (alpha_opt - alpha_sim).round(2)
    print(dif_alpha)

    # Terminar tiempo
    end_time = time.time()
    elapsed_time = end_time - start_time
    print(f"Tiempo transcurrido: {elapsed_time:.2f} segundos")

    def format_val(val):
        if val is None:
            return "None"
        if isinstance(val, float):
            return str(val).replace(".", "_")
        return str(val)

    # Guardar
    if save:
        output_folder = f"{COD_FOLDER}Outputs/Sim_Election/"
        os.makedirs(output_folder, exist_ok=True)

        # Nombre del archivo con parámetros
        filename_base = (
                            f"I{I}_D{D}_B{B}_G{G}_C{C}_A{A}_lambda{format_val(lambda_)}_"
                            f"seedreal{format_val(seed_ab_real)}_seedinit{format_val(seed_init)}_"
                            f"multinomial{'T' if multinomial else 'F'}"
                        )

        # Diccionario con resultados
        results = {
            'tiempo': elapsed_time,
            'I': I, 'D': D, 'B': B, 'G': G, 'C': C, 'A': A, 'lambda_': lambda_,
            'seed_ab_real': seed_ab_real,
            'seed_init': seed_init,
            'max_iterations': max_iterations,
            'razon_parada': razon_parada,
            'beta_sim': beta_sim.tolist(),
            'alpha_sim': alpha_sim.tolist(),
            'beta_opt': beta_opt.tolist(),
            'alpha_opt': alpha_opt.tolist(),
            'dif_beta': dif_beta.tolist(),
            'dif_alpha': dif_alpha.tolist(),
            'multinomial': multinomial,
            'v_da': v_da.tolist(),
        }

        # Guardar como .pkl
        with open(os.path.join(output_folder, f"{filename_base}.pkl"), 'wb') as f:
            pickle.dump(results, f)

        # Guardar como .json
        with open(os.path.join(output_folder, f"{filename_base}.json"), 'w') as f:
            json.dump(results, f, indent=4)

        print(f"Archivos guardados como: {filename_base}.pkl y .json")

    return None

def batch_test_EM(  
                I_list = [100],
                D_list = [20],
                B_list = [1400],
                G_list = [4],
                C_list = [3],
                A_list = [2],
                lambda_list = [0.5],
                seed_ab_real_list = [None],
                seed_init_list = [None],
                max_iterations = 100,
                save = True,
                multinomial = True
                ):
    """
    Ejecuta test_EM para todas las combinaciones posibles de los parámetros dados como listas.
    """

    # Todas las combinaciones posibles
    combinaciones = list(itertools.product(
        I_list, D_list, B_list, G_list, C_list, A_list,
        lambda_list, seed_ab_real_list, seed_init_list
    ))

    print(f"Ejecutando {len(combinaciones)} combinaciones...")

    for i, (I, D, B, G, C, A, lambda_, seed_ab_real, seed_init) in enumerate(combinaciones):
        print("="*60)
        print(f"[{i+1}/{len(combinaciones)}] I={I}, D={D}, B={B}, G={G}, C={C}, A={A}, "
              f"lambda_={lambda_}, seed_real={seed_ab_real}, seed_init={seed_init}")

        test_EM(
            I=I, D=D, B=B, G=G, C=C, A=A,
            lambda_=lambda_,
            seed_ab_real=seed_ab_real,
            seed_init=seed_init,
            max_iterations=max_iterations,
            save=save,
            multinomial=multinomial
        )

def build_latex_time_table(
                        I_list=[100], D_list=[20], B_list=[1400], G_list=[4], C_list=[3], A_list=[2],
                        lambda_list=[0.5], seed_ab_real_list=range(1, 21), seed_init_list=[None],
                        multinomial=True,
                        COD_FOLDER="", folder='Outputs/Sim_Election'
                        ):
    """
    Genera una tabla LaTeX con el promedio del tiempo por combinación de (G,C) y (D,A),
    considerando archivos con combinaciones de parámetros dados.
    """

    def format_val(val):
        if val is None:
            return "None"
        if isinstance(val, float):
            return str(val).replace(".", "_")
        return str(val)

    full_folder = os.path.join(COD_FOLDER, folder)
    data = []
    razon_parada_count = {}  # Diccionario para contar las razones de parada

    combinaciones = list(
        itertools.product(
        I_list, D_list, B_list, G_list, C_list, A_list,
        lambda_list, seed_ab_real_list, seed_init_list
                        )
                        )

    for I, D, B, G, C, A, lambda_, seed_ab_real, seed_init in combinaciones:
        filename_base = (
            f"I{I}_D{D}_B{B}_G{G}_C{C}_A{A}_"
            f"lambda{format_val(lambda_)}_"
            f"seedreal{format_val(seed_ab_real)}_"
            f"seedinit{format_val(seed_init)}_"
            f"multinomial{'T' if multinomial else 'F'}"
        )
        # print(f"Buscando archivo: {filename_base}")

        path_pkl = os.path.join(full_folder, filename_base + '.pkl')
        path_json = os.path.join(full_folder, filename_base + '.json')

        path = path_pkl if os.path.exists(path_pkl) else (
               path_json if os.path.exists(path_json) else None)

        if path is None:
            print(f"❌ Archivo no encontrado: {filename_base}")
            continue

        try:
            with open(path, 'rb' if path.endswith('.pkl') else 'r') as f:
                contenido = pickle.load(f) if path.endswith('.pkl') else json.load(f)

            razon_parada = contenido.get('razon_parada', 'No especificada')
            data.append({
                'G': contenido['G'],
                'C': contenido['C'],
                'D': contenido['D'],
                'A': contenido['A'],
                'tiempo': contenido['tiempo'],
                'razon_parada': razon_parada
            })

            # Contar las razones de parada
            if razon_parada not in razon_parada_count:
                razon_parada_count[razon_parada] = 1
            else:
                razon_parada_count[razon_parada] += 1

        except Exception as e:
            print(f"⚠️ Error leyendo {path}: {e}")

    # Imprimir el recuento de razones de parada
    print("\nRecuento de Razones de Parada:")
    for razon, count in razon_parada_count.items():
        print(f"{razon}: {count}")

    df = pd.DataFrame(data)

    if df.empty:
        print("⚠️ No se encontraron datos válidos.")
        return None

    tabla = df.groupby(['G', 'C', 'D', 'A'])['tiempo'].mean().reset_index().round(2)
    tabla = tabla.pivot_table(index=['G', 'C'], columns=['D', 'A'], values='tiempo')
    tabla = tabla.sort_index(axis=1, level=[0, 1])

    d_a_map = OrderedDict()
    for d, a in tabla.columns:
        d_a_map.setdefault(d, []).append(a)

    total_cols = 2 + sum(len(a_list) + 1 for a_list in d_a_map.values())
    col_format = "cc" + "r" * (total_cols - 2)
    latex = [
        "\\begin{table}[H]",
        "\\centering",
        f"\\begin{{tabular}}{{{col_format}}}",
        "\\toprule"
    ]

    # Fila 1: D (desplazada una columna a la derecha)
    header1 = ["", "$D$"]
    for d, a_list in d_a_map.items():
        pad = [""] * ((len(a_list) - 1) // 2)
        header1 += [""] + pad + [f"\\multicolumn{{1}}{{c}}{{${d}$}}"] + pad
        if len(a_list) % 2 == 0:
            header1.append("")
    latex.append(" & ".join(header1) + " \\\\")

    # Fila 2: A (también una columna más a la derecha)
    header2 = ["", "$A$"]
    for a_list in d_a_map.values():
        header2.append("")
        header2 += [f"\\multicolumn{{1}}{{c}}{{${a}$}}" for a in a_list]
    latex.append(" & ".join(header2) + " \\\\")

    latex.append("\\midrule")
    latex.append("$G$ & $C$ & " + " & ".join([""] * (total_cols - 2)) + " \\\\")

    last_g = None
    for (g, c), row in tabla.iterrows():
        row_data = []
        for d, a_list in d_a_map.items():
            row_data.append("")
            for a in a_list:
                val = row.get((d, a), "")
                row_data.append(f"\\num{{{val:.2f}}}" if pd.notna(val) else "")
        g_str = str(g) if g != last_g else " "
        last_g = g
        latex.append(f"{g_str} & {c} & " + " & ".join(row_data) + " \\\\")

    latex += [
        "\\bottomrule",
        "\\end{tabular}",
        "\\caption{Promedio de tiempo de ejecución en segundos v2.}",
        "\\label{tab:tiempo_em}",
        "\\end{table}"
    ]

    print("\n".join(latex))

    return None

def build_latex_mae_tables_probs_old(
    I_list=[100], D_list=[10, 25, 50], B_list=[1400], G_list=[2, 5, 10], C_list=[2, 4, 8], A_list=[3, 6, 9],
    lambda_list=[0.5], seed_ab_real_list=range(1, 21), seed_init_list=[None], multinomial=True,
    COD_FOLDER="", folder='Outputs/Sim_Election'
    ):

    def format_val(val):
        if val is None:
            return "None"
        if isinstance(val, float):
            return str(val).replace(".", "_")
        return str(val)

    full_folder = os.path.join(COD_FOLDER, folder)
    data = []

    combinaciones = list(itertools.product(
        I_list, D_list, B_list, G_list, C_list, A_list,
        lambda_list, seed_ab_real_list, seed_init_list
    ))

    for I, D, B, G, C, A, lambda_, seed_ab_real, seed_init in combinaciones:
        filename_base = (
            f"I{I}_D{D}_B{B}_G{G}_C{C}_A{A}_"
            f"lambda{format_val(lambda_)}_"
            f"seedreal{format_val(seed_ab_real)}_"
            f"seedinit{format_val(seed_init)}_"
            f"multinomial{'T' if multinomial else 'F'}"
        )
        path_pkl = os.path.join(full_folder, filename_base + '.pkl')
        path_json = os.path.join(full_folder, filename_base + '.json')
        path = path_pkl if os.path.exists(path_pkl) else (path_json if os.path.exists(path_json) else None)

        if path is None:
            continue

        try:
            with open(path, 'rb' if path.endswith('.pkl') else 'r') as f:
                contenido = pickle.load(f) if path.endswith('.pkl') else json.load(f)

            v_da = torch.tensor(contenido['v_da'], dtype=torch.float64)
            alpha_sim = torch.tensor(contenido['alpha_sim'], dtype=torch.float64)
            alpha_opt = torch.tensor(contenido['alpha_opt'], dtype=torch.float64)
            beta_sim = torch.tensor(contenido['beta_sim'], dtype=torch.float64)
            beta_opt = torch.tensor(contenido['beta_opt'], dtype=torch.float64)

            p_sim = fun_p_full(v_da, alpha_sim, beta_sim)
            p_opt = fun_p_full(v_da, alpha_opt, beta_opt)
            mae_p = torch.abs(p_sim - p_opt).mean().item()

            mae_alpha = torch.abs(alpha_sim - alpha_opt).mean().item()
            mae_beta = torch.abs(beta_sim - beta_opt).mean().item()
            mae_parametros = torch.abs(torch.cat((alpha_sim.view(-1), beta_sim.view(-1)), dim=0) - torch.cat((alpha_opt.view(-1), beta_opt.view(-1)), dim=0)).mean().item()

            data.append({
                'G': contenido['G'],
                'C': contenido['C'],
                'D': contenido['D'],
                'A': contenido['A'],
                'mae_prob': mae_p,
                'mae_alpha': mae_alpha,
                'mae_beta': mae_beta,
                'mae_parametros': mae_parametros, # este quiero poner en la tabla
            })

        except Exception as e:
            print(f"⚠️ Error en {filename_base}: {e}")

    df = pd.DataFrame(data)
    if df.empty:
        print("⚠️ No se encontraron datos válidos.")
        return

    def generar_tabla_latex(df, campo, titulo, label):
        tabla = df.groupby(['G', 'C', 'D', 'A'])[campo].mean().reset_index()
        tabla = tabla.pivot_table(index=['G', 'C'], columns=['D', 'A'], values=campo).round(2)
        tabla.columns.names = [None, None]
        tabla.index.names = [None, None]

        from collections import OrderedDict
        d_a_map = OrderedDict()
        for d, a_list in sorted(tabla.columns):
            d_a_map.setdefault(d, []).append(a_list)

        total_cols = 2 + sum(len(a_list) + 1 for a_list in d_a_map.values())
        col_format = "cc" + "r" * (total_cols - 2)

        latex = [
            "\\begin{table}[H]",
            "\\centering",
            f"\\begin{{tabular}}{{{col_format}}}",
            "\\toprule"
        ]

        # Encabezado D desplazado
        header1 = ["", "$D$"]
        for d, a_list in d_a_map.items():
            pad = [""] * ((len(a_list) - 1) // 2)
            header1 += [""] + pad + [f"\\multicolumn{{1}}{{c}}{{${d}$}}"] + pad
            if len(a_list) % 2 == 0:
                header1.append("")
        latex.append(" & ".join(header1) + " \\\\")

        # Encabezado A desplazado
        header2 = ["", "$A$"]
        for a_list in d_a_map.values():
            header2.append("")
            header2 += [f"\\multicolumn{{1}}{{c}}{{${a}$}}" for a in a_list]
        latex.append(" & ".join(header2) + " \\\\")

        latex.append("\\midrule")
        latex.append("$G$ & $C$ & " + " & ".join([""] * (total_cols - 2)) + " \\\\")

        last_g = None
        for (g, c), row in tabla.iterrows():
            row_vals = []
            for d, a_list in d_a_map.items():
                row_vals.append("")
                for a in a_list:
                    val = row.get((d, a), "")
                    row_vals.append(f"\\num{{{val:.2f}}}" if pd.notna(val) else "")
            g_str = str(g) if g != last_g else " "
            last_g = g
            latex.append(f"{g_str} & {c} & " + " & ".join(row_vals) + " \\\\")

        latex.append("\\bottomrule")
        latex.append("\\end{tabular}")
        latex.append(f"\\caption{{{titulo}}}")
        latex.append(f"\\label{{{label}}}")
        latex.append("\\end{table}")

        print("\n".join(latex))
    
    generar_tabla_latex(df, 'mae_prob', 'Tabla MAE de Probabilidades v2.', 'tab:mae_prob')
    print("\n")
    generar_tabla_latex(df, 'mae_parametros', 'Tabla MAE de Parámetros estimados v2.', 'tab:mae_parametros')
    return None

def build_latex_mae_tables_probs(
    I_list=[100], D_list=[10, 25, 50], B_list=[1400], G_list=[2, 5, 10], C_list=[2, 4, 8], A_list=[3, 6, 9],
    lambda_list=[0.5], seed_ab_real_list=range(1, 21), seed_init_list=[None], multinomial=True,
    COD_FOLDER="", folder='Outputs/Sim_Election'
    ):

    def format_val(val):
        if val is None:
            return "None"
        if isinstance(val, float):
            return str(val).replace(".", "_")
        return str(val)

    full_folder = os.path.join(COD_FOLDER, folder)
    data = []

    combinaciones = list(itertools.product(
        I_list, D_list, B_list, G_list, C_list, A_list,
        lambda_list, seed_ab_real_list, seed_init_list
    ))

    for I, D, B, G, C, A, lambda_, seed_ab_real, seed_init in combinaciones:
        filename_base = (
            f"I{I}_D{D}_B{B}_G{G}_C{C}_A{A}_"
            f"lambda{format_val(lambda_)}_"
            f"seedreal{format_val(seed_ab_real)}_"
            f"seedinit{format_val(seed_init)}_"
            f"multinomial{'T' if multinomial else 'F'}"
        )
        path_pkl = os.path.join(full_folder, filename_base + '.pkl')
        path_json = os.path.join(full_folder, filename_base + '.json')
        path = path_pkl if os.path.exists(path_pkl) else (path_json if os.path.exists(path_json) else None)

        if path is None:
            continue

        try:
            with open(path, 'rb' if path.endswith('.pkl') else 'r') as f:
                contenido = pickle.load(f) if path.endswith('.pkl') else json.load(f)

            v_da = torch.tensor(contenido['v_da'], dtype=torch.float64)
            alpha_sim = torch.tensor(contenido['alpha_sim'], dtype=torch.float64)
            alpha_opt = torch.tensor(contenido['alpha_opt'], dtype=torch.float64)
            beta_sim = torch.tensor(contenido['beta_sim'], dtype=torch.float64)
            beta_opt = torch.tensor(contenido['beta_opt'], dtype=torch.float64)

            p_sim = fun_p_full(v_da, alpha_sim, beta_sim)
            p_opt = fun_p_full(v_da, alpha_opt, beta_opt)
            mae_p = torch.abs(p_sim - p_opt).mean().item()

            mae_alpha = torch.abs(alpha_sim - alpha_opt).mean().item()
            mae_beta = torch.abs(beta_sim - beta_opt).mean().item()
            mae_parametros = torch.abs(torch.cat((alpha_sim.view(-1), beta_sim.view(-1)), dim=0) - torch.cat((alpha_opt.view(-1), beta_opt.view(-1)), dim=0)).mean().item()

            tvd_dg = 0.5 * torch.sum(torch.abs(p_sim - p_opt), dim=2)  # shape: (D, G)
            avg_tvd = tvd_dg.mean().item()

            data.append({
                'G': contenido['G'],
                'C': contenido['C'],
                'D': contenido['D'],
                'A': contenido['A'],
                'mae_prob': mae_p,
                'mae_alpha': mae_alpha,
                'mae_beta': mae_beta,
                'mae_parametros': mae_parametros,
                'avg_tvd': avg_tvd,
            })

        except Exception as e:
            print(f"⚠️ Error en {filename_base}: {e}")

    df = pd.DataFrame(data)
    print(f"df: {df}")
    if df.empty:
        print("⚠️ No se encontraron datos válidos.")
        return

    def generar_tabla_latex(df, campo, titulo, label, n_decimales=3):
        tabla = df.groupby(['G', 'C', 'D', 'A'])[campo].mean().reset_index()
        tabla = tabla.pivot_table(index=['G', 'C'], columns=['D', 'A'], values=campo)
        tabla.columns.names = [None, None]
        tabla.index.names = [None, None]

        from collections import OrderedDict
        d_a_map = OrderedDict()
        for d, a_list in sorted(tabla.columns):
            d_a_map.setdefault(d, []).append(a_list)

        total_cols = 2 + sum(len(a_list) + 1 for a_list in d_a_map.values())
        col_format = "cc" + "r" * (total_cols - 2)

        latex = [
            "\\begin{table}[H]",
            "\\centering",
            f"\\begin{{tabular}}{{{col_format}}}",
            "\\toprule"
        ]

        # Encabezado D desplazado
        header1 = ["", "$D$"]
        for d, a_list in d_a_map.items():
            pad = [""] * ((len(a_list) - 1) // 2)
            header1 += [""] + pad + [f"\\multicolumn{{1}}{{c}}{{${d}$}}"] + pad
            if len(a_list) % 2 == 0:
                header1.append("")
        latex.append(" & ".join(header1) + " \\\\")

        # Encabezado A desplazado
        header2 = ["", "$A$"]
        for a_list in d_a_map.values():
            header2.append("")
            header2 += [f"\\multicolumn{{1}}{{c}}{{${a}$}}" for a in a_list]
        latex.append(" & ".join(header2) + " \\\\")

        latex.append("\\midrule")
        latex.append("$G$ & $C$ & " + " & ".join([""] * (total_cols - 2)) + " \\\\")

        umbral = 10 ** (-n_decimales)
        formato_decimal = f"{{:.{n_decimales}f}}"
        menor_a = f"<{formato_decimal.format(umbral).replace('.', ',')}"

        last_g = None
        for (g, c), row in tabla.iterrows():
            row_vals = []
            for d, a_list in d_a_map.items():
                row_vals.append("")
                for a in a_list:
                    val = row.get((d, a), "")
                    if pd.isna(val):
                        row_vals.append("")
                    elif abs(val) < umbral:
                        row_vals.append(menor_a)
                    else:
                        num = formato_decimal.format(val).replace('.', ',')
                        row_vals.append(f"\\num{{{num}}}")
            g_str = str(g) if g != last_g else " "
            last_g = g
            latex.append(f"{g_str} & {c} & " + " & ".join(row_vals) + " \\\\")

        latex.append("\\bottomrule")
        latex.append("\\end{tabular}")
        latex.append(f"\\caption{{{titulo}}}")
        latex.append(f"\\label{{{label}}}")
        latex.append("\\end{table}")

        print("\n".join(latex))

    generar_tabla_latex(df, 'mae_prob', 'Tabla MAE de Probabilidades v2.', 'tab:mae_prob', n_decimales=3)
    print("\n")
    generar_tabla_latex(df, 'mae_parametros', 'Tabla MAE de Parámetros estimados v2.', 'tab:mae_parametros', n_decimales=2)
    print("\n")
    generar_tabla_latex(df, 'avg_tvd', 'Tabla TVD de Probabilidades estimadas v2.', 'tab:avg_tvd', n_decimales=3)
    return None

def build_latex_distances_between_seeds(
    I_list=[100], D_list=[10, 25, 50], B_list=[1400], G_list=[2, 5, 10], C_list=[2, 4, 8], A_list=[3, 6, 9],
    lambda_list=[0.5], seed_ab_real_list=range(1, 21), seed_init_list=[None], multinomial=True,
    COD_FOLDER="", folder='Outputs/Sim_Election'
    ):

    def format_val(val):
        if val is None:
            return "None"
        if isinstance(val, float):
            return str(val).replace(".", "_")
        return str(val)

    full_folder = os.path.join(COD_FOLDER, folder)
    data = []

    combinaciones = list(itertools.product(I_list, D_list, B_list, G_list, C_list, A_list, lambda_list))

    for I, D, B, G_, C_, A_, lambda_ in combinaciones:
        soluciones_alpha, soluciones_beta, soluciones_prob = [], [], []

        for seed_ab_real in seed_ab_real_list:
            for seed_init in seed_init_list:
                filename_base = (
                    f"I{I}_D{D}_B{B}_G{G_}_C{C_}_A{A_}_"
                    f"lambda{format_val(lambda_)}_"
                    f"seedreal{format_val(seed_ab_real)}_"
                    f"seedinit{format_val(seed_init)}_"
                    f"multinomial{'T' if multinomial else 'F'}"
                )
                path_pkl = os.path.join(full_folder, filename_base + '.pkl')
                path_json = os.path.join(full_folder, filename_base + '.json')
                path = path_pkl if os.path.exists(path_pkl) else (path_json if os.path.exists(path_json) else None)

                if path is None:
                    continue

                try:
                    with open(path, 'rb' if path.endswith('.pkl') else 'r') as f:
                        contenido = pickle.load(f) if path.endswith('.pkl') else json.load(f)

                    v_da = torch.tensor(contenido['v_da'], dtype=torch.float64)
                    alpha_opt = torch.tensor(contenido['alpha_opt'], dtype=torch.float64)
                    beta_opt = torch.tensor(contenido['beta_opt'], dtype=torch.float64)

                    soluciones_alpha.append(alpha_opt)
                    soluciones_beta.append(beta_opt)
                    soluciones_prob.append(fun_p_full(v_da, alpha_opt, beta_opt))

                except Exception as e:
                    print(f"⚠️ Error en {filename_base}: {e}")

        if len(soluciones_prob) >= 2:
            dist_prob, mae_prob, max_prob = [], [], []
            dist_prob_norm, cosine_prob = [], []
            dist_param, dist_param_norm, cosine_param = [], [], []
            avg_tvd_list, max_tvd_list = [], []

            for i in range(len(soluciones_prob)):
                for j in range(i + 1, len(soluciones_prob)):
                    # Probabilidades
                    p_i = soluciones_prob[i].view(-1)
                    p_j = soluciones_prob[j].view(-1)
                    delta_p = torch.abs(p_i - p_j)

                    dist_prob.append(torch.norm(p_i - p_j, p=2).item())
                    mae_prob.append(delta_p.mean().item())
                    max_prob.append(delta_p.max().item())
                    dist_prob_norm.append(torch.norm(p_i - p_j, p=2).item() / (p_i.numel() ** 0.5))
                    cosine_prob.append(1 - torch.nn.functional.cosine_similarity(p_i, p_j, dim=0).item())

                    # Parámetros
                    alpha_i = soluciones_alpha[i].view(-1)
                    alpha_j = soluciones_alpha[j].view(-1)
                    beta_i = soluciones_beta[i].view(-1)
                    beta_j = soluciones_beta[j].view(-1)
                    param_i = torch.cat((alpha_i, beta_i))
                    param_j = torch.cat((alpha_j, beta_j))

                    dist_param.append(torch.norm(param_i - param_j, p=2).item())
                    dist_param_norm.append(torch.norm(param_i - param_j, p=2).item() / (param_i.numel() ** 0.5))
                    cosine_param.append(1 - torch.nn.functional.cosine_similarity(param_i, param_j, dim=0).item())

                    # Calcula TVD entre probabilidades (D x G x C)
                    p_i_reshaped = soluciones_prob[i]
                    p_j_reshaped = soluciones_prob[j]
                    tvd_dg = 0.5 * torch.sum(torch.abs(p_i_reshaped - p_j_reshaped), dim=2)  # shape (D, G)
                    avg_tvd_pair = tvd_dg.mean().item()
                    max_tvd_pair = tvd_dg.max().item()

                    avg_tvd_list.append(avg_tvd_pair)
                    max_tvd_list.append(max_tvd_pair)

            data.append({
                'G': G_,
                'C': C_,
                'D': D,
                'A': A_,
                'dist_prob': np.mean(dist_prob),
                'mae_prob': np.mean(mae_prob),
                'max_prob': np.mean(max_prob),
                'dist_prob_norm': np.mean(dist_prob_norm),
                'cosine_prob': np.mean(cosine_prob),
                'dist_param': np.mean(dist_param),
                'dist_param_norm': np.mean(dist_param_norm),
                'cosine_param': np.mean(cosine_param),
                'avg_tvd': np.mean(avg_tvd_list),
                'max_tvd': np.mean(max_tvd_list),
            })

    df = pd.DataFrame(data)
    if df.empty:
        print("⚠️ No se encontraron datos válidos.")
        return

    # print(f"df:\n {df}")

    def generar_tabla_latex(df, campo, titulo, label, n_decimales=3):
        tabla = df.groupby(['G', 'C', 'D', 'A'])[campo].mean().reset_index()
        tabla = tabla.pivot_table(index=['G', 'C'], columns=['D', 'A'], values=campo)
        tabla.columns.names = [None, None]
        tabla.index.names = [None, None]

        from collections import OrderedDict
        d_a_map = OrderedDict()
        for d, a_list in sorted(tabla.columns):
            d_a_map.setdefault(d, []).append(a_list)

        total_cols = 2 + sum(len(a_list) + 1 for a_list in d_a_map.values())
        col_format = "cc" + "r" * (total_cols - 2)

        latex = ["\\begin{table}[H]", "\\centering"]

        # Reducir espacio entre columnas SOLO si es TVD
        if "tvd" in campo:
            latex.append("\\setlength{\\tabcolsep}{4pt}")

        latex.append(f"\\begin{{tabular}}{{{col_format}}}")
        latex.append("\\toprule")

        # Encabezado D desplazado
        header1 = ["", "$D$"]
        for d, a_list in d_a_map.items():
            pad = [""] * ((len(a_list) - 1) // 2)
            header1 += [""] + pad + [f"\\multicolumn{{1}}{{c}}{{${d}$}}"] + pad
            if len(a_list) % 2 == 0:
                header1.append("")
        latex.append(" & ".join(header1) + " \\\\")

        # Encabezado A desplazado
        header2 = ["", "$A$"]
        for a_list in d_a_map.values():
            header2.append("")
            header2 += [f"\\multicolumn{{1}}{{c}}{{${a}$}}" for a in a_list]
        latex.append(" & ".join(header2) + " \\\\")

        latex.append("\\midrule")
        latex.append("$G$ & $C$ & " + " & ".join([""] * (total_cols - 2)) + " \\\\")

        umbral = 10 ** (-n_decimales)
        formato_decimal = f"{{:.{n_decimales}f}}"
        menor_a = f"<{formato_decimal.format(umbral).replace('.', ',')}"

        last_g = None
        for (g, c), row in tabla.iterrows():
            row_vals = []
            for d, a_list in d_a_map.items():
                row_vals.append("")
                for a in a_list:
                    val = row.get((d, a), "")
                    if pd.isna(val):
                        row_vals.append("")
                    elif abs(val) < umbral:
                        row_vals.append(menor_a)
                    else:
                        num = formato_decimal.format(val).replace('.', ',')
                        row_vals.append(f"\\num{{{num}}}")
            g_str = str(g) if g != last_g else " "
            last_g = g
            latex.append(f"{g_str} & {c} & " + " & ".join(row_vals) + " \\\\")

        latex.append("\\bottomrule")
        latex.append("\\end{tabular}")

        # Restaurar solo si se modificó
        if "tvd" in campo:
            latex.append("\\setlength{\\tabcolsep}{6pt}")

        latex.append(f"\\caption{{{titulo}}}")
        latex.append(f"\\label{{{label}}}")
        latex.append("\\end{table}")

        print("\n".join(latex))
    
    # Generar tablas
    # generar_tabla_latex(df, 'dist_prob', 'Distancia Euclidiana entre probabilidades', 'tab:dist_prob')
    # print("\n")
    # generar_tabla_latex(df, 'mae_prob', 'Error absoluto medio entre probabilidades', 'tab:mae_prob')
    # generar_tabla_latex(df, 'max_prob', 'Máxima diferencia absoluta entre probabilidades', 'tab:max_prob')
    generar_tabla_latex(df, 'dist_prob_norm', 'Distancia Euclidiana normalizada entre probabilidades', 'tab:dist_prob_norm')
    print("\n")
    # generar_tabla_latex(df, 'cosine_prob', 'Distancia coseno entre probabilidades', 'tab:cosine_prob')
    # print("\n")
    # generar_tabla_latex(df, 'dist_param', 'Distancia Euclidiana entre parámetros', 'tab:dist_param')
    # print("\n")
    generar_tabla_latex(df, 'dist_param_norm', 'Distancia Euclidiana normalizada entre parámetros estimados v2.', 'tab:dist_param_norm')
    print("\n")
    # generar_tabla_latex(df, 'cosine_param', 'Distancia coseno entre parámetros', 'tab:cosine_param')
    # print("\n")
    generar_tabla_latex(df, 'avg_tvd', 'TVD promedio entre probabilidades.', 'tab:avg_tvd', n_decimales=3)
    print("\n")
    generar_tabla_latex(df, 'max_tvd', 'Máxima TVD entre probabilidades.', 'tab:max_tvd', n_decimales=3)

    return df




# Define a function to apply the desired transformations to string columns
def preprocess_string_columns(df):
    for col in df.columns:
        if df[col].dtype == 'object':
            df[col] = df[col].str.strip().str.upper().apply(lambda x: unidecode(x) if isinstance(x, str) else x)
    return df

# function that read data from election
def get_xwve_from_election(regiones_filtro=[], atributos_filtro=[], built_df=True, eleccion='2021_Presidencial', 
                           estandarizar=False, corr_threshold = 0.8, n_pca_components=0, n_pls_components=0, groups='ALL',
                           atributos_circ=False, distmin=False, return_pls_weights=False):
    # regiones_filtro : lista de regiones a considerar
    # atributos_filtro : lista de atributos a considerar
    # built_df : si se quiere construir el dataframe, o leerlo
    # estandarizar : si se quiere estandarizar los beta
    # n_pca_components : número de componentes principales a considerar, 0 si es que no se usa PCA

    # Delete columns with high correlation
    def delete_corr_columns(df, list_cols_id = ['Comuna'], corr_threshold = 1.0):
        if corr_threshold >= 1.0:
            return df

        # Save column Comuna
        comuna = df[list_cols_id]

        # Drop column Comuna
        df = df.drop(columns=list_cols_id)

        # Calculate the correlation matrix
        corr_matrix = df.corr().abs()

        # Identify pairs of highly correlated columns
        high_corr_pairs = []
        for i in range(len(corr_matrix.columns)):
            for j in range(i):
                if corr_matrix.iloc[i, j] > corr_threshold:
                    high_corr_pairs.append((corr_matrix.columns[i], corr_matrix.columns[j]))

        # Create a set to keep track of columns to drop
        cols_to_drop = set()

        # Iterate through the pairs and add one of each pair to the set of columns to drop
        for col1, col2 in high_corr_pairs:
            if col1 not in cols_to_drop:
                cols_to_drop.add(col2)

        # Drop the columns from the DataFrame
        df_reduced = df.drop(columns=cols_to_drop)

        # Add the column Comuna back to the DataFrame
        df_reduced = pd.concat([comuna, df_reduced], axis=1)

        df_reduced.columns.tolist()

        return df_reduced

        # atributos.shape
        # # Select numeric columns
        # numeric_columns = atributos.select_dtypes(include=['number'])

        # # Count the number of numeric columns
        # num_numeric_columns = numeric_columns.shape[1]
    
    def calculate_vip(model, X):
        t = model.x_scores_  # Scores
        w = model.x_weights_  # Pesos
        q = model.y_loadings_  # Cargas de Y
        p, h = w.shape
        vip = np.zeros((p,))
        s = np.diag(t.T @ t @ q.T @ q).reshape(-1, 1)
        total_s = np.sum(s)
        for i in range(p):
            weight = np.sum([(w[i, j]**2) * s[j] for j in range(h)])
            vip[i] = np.sqrt(p * weight / total_s)
        return vip

    llave_mesa = ['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa']

    if (built_df == True) and (eleccion == '2021_Presidencial'): 
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', sheet_name='Votación en Chile', skiprows = 6)

        votes = preprocess_string_columns(votes)

        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes['Primer apellido'] = votes['Primer apellido'].fillna('') #.apply(lambda x: x.strip().replace('"',''))
        # create a column with the full name of the candidate
        votes['CANDIDATO'] = votes['Nombres'] + ' ' + votes['Primer apellido']
        votes['CANDIDATO'] = votes['CANDIDATO'].apply(lambda x: x.strip())

        # only add CANDIDATO if PRIMER APELLIDO is not empty
        votes.loc[votes['Primer apellido'] == '', 'CANDIDATO'] = votes['Nombres']
        candidatos = [c for c in votes['CANDIDATO'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        # print(candidatos)
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='CANDIDATO', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])

        if estandarizar:
            # Crear una instancia de StandardScaler
            scaler = StandardScaler()

            # Ajustar el scaler a los datos de votos y transformarlos
            df_votos_estandarizado = pd.DataFrame(scaler.fit_transform(votes[candidatos]), columns=candidatos)

            # Combinar las columnas de identificación con los datos estandarizados
            votes = pd.concat([votes[llave_mesa], df_votos_estandarizado], axis=1)
        
        # save file with votes
        # votes.to_csv(f'{election_name}/{output_folder}/{election_name}_VOTOS.csv', index=False)
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', skiprows=6, sheet_name = 'Descripción votantes en Chile')
        
        electors = preprocess_string_columns(electors)

        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')
        
        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box

        if estandarizar:
            # Ajustar el scaler a los datos de votos y transformarlos
            df_electores_estandarizado = pd.DataFrame(scaler.fit_transform(electors[grupos]), columns=grupos)

            # Combinar las columnas de identificación con los datos estandarizados
            electors = pd.concat([electors[llave_mesa], df_electores_estandarizado], axis=1)
        
        # v_da
        #atributos = corr_variables()
        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2021_20250521.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2021.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal

        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        # If a column have NaN, replace it with the mean of the Region
        # Fill NaN values with the mean in numeric columns
        # atributos[atributos.select_dtypes(include=['number']).columns] = atributos.select_dtypes(include=['number']).apply(lambda x: x.fillna(x.mean()))
        # Drop columns that have NaN values
        # atributos = atributos.dropna(axis=1, how='any')
        atributos = atributos.dropna()

        # if atributos_circ:
        #     atributos = delete_corr_columns(atributos, 
        #                                     list_cols_id = ['Comuna', 'Circunscripción electoral'], 
        #                                     corr_threshold = corr_threshold)
        # else:
        #     atributos = delete_corr_columns(atributos,
        #                                     list_cols_id = ['Comuna'],
        #                                     corr_threshold = corr_threshold)
        
        atributos = preprocess_string_columns(atributos)

        # # Check rank of matrix
        # # drop comuna
        # atributos = atributos.drop(columns=['Comuna'])
        # # drop alejandro guillier
        # atributos = atributos.drop(columns=['ALEJANDRO NAVARRO BRAIN_Porcentaje'])
        # from numpy.linalg import matrix_rank
        # matrix_rank(atributos)

        # Solo hay que eliminar una de las columnas de porcentaje

        for column in atributos.select_dtypes(include=[np.number]).columns:
            atributos[column] = (atributos[column] - atributos[column].mean()) / atributos[column].std()
        
        # atributos.columns
        # get columns in the list atributos filtro or the one COMUNA
        # atributos = atributos[['Comuna'] + atributos_filtro]

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')
        # df.columns
        # atributos.columns
        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Circunscripción electoral'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')
        # df = pd.merge(df, atributos, on=['Comuna', 'Circunscripción electoral'], how='inner')
        #df.columns
        #df.head()

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Circunscripción electoral'], prefix='Circunscripcion')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Circunscripcion_ZUNIGA'])

        # Step 3: Standardize the Dummy Variables
        for column in df_dummies.select_dtypes(include=[np.number]).columns:
            df_dummies[column] = (df_dummies[column] - df_dummies[column].mean()) / df_dummies[column].std()
            
        for column in df_dummies_2.select_dtypes(include=[np.number]).columns:
            df_dummies_2[column] = (df_dummies_2[column] - df_dummies_2[column].mean()) / df_dummies_2[column].std()

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # df = df[df['ABSTENCION'] >= 0]

        candidatos = df.iloc[:, 5:13].columns.tolist()
        grupos = df.iloc[:, 14:30].columns.tolist()

        if estandarizar:
            df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_scaled.csv', index=False)

        else:
            # save file with votes, electors and attributes
            if atributos_circ:
                if distmin:
                    df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distmin_2021.csv', index=False)
                    print("Dataframe guardado")
                else:
                    df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distprom_2021.csv', index=False)
                    print("Dataframe guardado")
            else:
                df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes.csv', index=False)
                print("Dataframe guardado")

        exit()

    if (built_df == True) and (eleccion == '2023_Plebiscito'):
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', sheet_name='Votación en Chile', skiprows = 6)

        votes = preprocess_string_columns(votes)

        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes['Opciones'] = votes['Opciones'].apply(lambda x: x.strip())
        candidatos = [c for c in votes['Opciones'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        # print(candidatos)
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='Opciones', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', skiprows=6, sheet_name='Descripción votantes en Chile')
        
        electors = preprocess_string_columns(electors)

        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box
        
        # v_da
        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2023_20250523.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2023.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        atributos = atributos.dropna()
        # Fill NaN values with the mean in numeric columns
        # atributos[atributos.select_dtypes(include=['number']).columns] = atributos.select_dtypes(include=['number']).apply(lambda x: x.fillna(x.mean()))

        # if atributos_circ:
        #     atributos = delete_corr_columns(atributos,
        #                                     list_cols_id = ['Comuna', 'Local'],
        #                                     corr_threshold = corr_threshold)
        # else:
        #     atributos = delete_corr_columns(atributos, 
        #                                     list_cols_id = ['Comuna'], 
        #                                     corr_threshold = corr_threshold)
        
        atributos = preprocess_string_columns(atributos)

        for column in atributos.select_dtypes(include=[np.number]).columns:
            atributos[column] = (atributos[column] - atributos[column].mean()) / atributos[column].std()

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')
        # df.columns
        # atributos.columns
        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Local'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')
        # df = pd.merge(df, atributos, on=['Comuna', 'Circunscripción electoral'], how='inner')
        #df.columns
        #df.head()

        df['Local'] = df['Local'] + ' ' + df['Comuna'] + ' ' + df['Región']

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Local'], prefix='Local')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        #df_dummies.columns

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP TALCA DEL MAULE'])

        # Step 3: Standardize the Dummy Variables
        for column in df_dummies.select_dtypes(include=[np.number]).columns:
            df_dummies[column] = (df_dummies[column] - df_dummies[column].mean()) / df_dummies[column].std()
        
        for column in df_dummies_2.select_dtypes(include=[np.number]).columns:
            df_dummies_2[column] = (df_dummies_2[column] - df_dummies_2[column].mean()) / df_dummies_2[column].std()

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # df = df[df['ABSTENCION'] >= 0]

        candidatos = df.iloc[:, 5:8].columns.tolist()
        grupos = df.iloc[:, 9:25].columns.tolist()

        if atributos_circ:
            if distmin:
                df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distmin_2023.csv', index=False)
            else:
                df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distprom_2023.csv', index=False)
            print("Dataframe guardado")
        else:
            df.to_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_2023.csv', index=False)
            print("Dataframe guardado")

        exit()

    if (built_df == False) and (eleccion == '2021_Presidencial'):
        if atributos_circ:
            if distmin:
                df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distmin_2021.csv')
            else:
                df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distprom_2021.csv')
        else:
            df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes.csv')
        # Drop na values
        df = df.dropna()
        # Reset index
        df = df.reset_index(drop=True)
    
    if (built_df == False) and (eleccion == '2023_Plebiscito'):
        if atributos_circ:
            if distmin:
                df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distmin_2023.csv')
            else:
                df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_circ_distprom_2023.csv')
        else:
            df = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes_2023.csv')
        # Drop na values
        df = df.dropna()
        # Reset index
        df = df.reset_index(drop=True)

    # aplicar filtros
    if len(regiones_filtro) > 0:
        df = df[df['Región'].isin(regiones_filtro)]

    if len(atributos_filtro) > 0:
        if eleccion == '2021_Presidencial':
            primeras_30_columnas = df.columns[:30].tolist()
            # ultimas_columnas = df.columns[85:].tolist()
            # Combinar las primeras 29 columnas con las columnas adicionales, evitando duplicados
            columnas_seleccionadas = list(dict.fromkeys(primeras_30_columnas + atributos_filtro))
            df = df[columnas_seleccionadas]
        if eleccion == '2023_Plebiscito':
            primeras_columnas = df.columns[:25].tolist()
            # ultimas_columnas = df.columns[80:].tolist()
            # Combinar las primeras 25 columnas con las columnas adicionales, evitando duplicados
            columnas_seleccionadas = list(dict.fromkeys(primeras_columnas + atributos_filtro))
            df = df[columnas_seleccionadas]

    # construir x, w, e, v

    if eleccion == '2021_Presidencial':
        # x_bc: numero de votos de la mesa b para el candidato c
        x_bc = df.iloc[:, 5:13].values
        candidatos = df.iloc[:, 5:13].columns.tolist()

        # Descuadre
        descuadre = df['DESCUADRE'].values

        # w_bg: numero de votantes de la mesa b del grupo g
        w_bg_df = df.iloc[:, 14:30]

        # w_bg_df prima
        factor = (w_bg_df.sum(axis=1) - descuadre) / w_bg_df.sum(axis=1)
        # Pass it to BxG
        factor = factor.values.reshape(-1,1)
        # Multiply w_bg_df by a
        w_bg_df = w_bg_df * factor

        if groups == 'ALL':
            w_bg = w_bg_df.values
            grupos = w_bg_df.columns.tolist()

        if groups == 'ONE':
            # sumar los votantes de los grupos
            w_bg = w_bg_df.sum(axis=1).values
            # w_bg shape must be (b,1)
            w_bg = w_bg.reshape(-1,1)
            grupos = ['TODOS']

        if groups == 'GENDER':
            # Identificar las columnas por género
            cols_hombres = [col for col in w_bg_df.columns if col.endswith('H')]
            cols_mujeres = [col for col in w_bg_df.columns if col.endswith('M')]

            # Crear nuevas columnas agrupadas por género
            w_bg_df['Hombres'] = w_bg_df[cols_hombres].sum(axis=1)
            w_bg_df['Mujeres'] = w_bg_df[cols_mujeres].sum(axis=1)

            w_bg_df = w_bg_df.drop(columns=cols_hombres + cols_mujeres)

            w_bg = w_bg_df.values

            grupos = ['Hombres', 'Mujeres']

        if groups == 'AGE':
            # Extraer los rangos etarios únicos de los nombres de las columnas
            rangos_etarios = {col.split()[0] for col in w_bg_df.columns}

            # Sumar por rango etario
            for rango in rangos_etarios:
                columnas_rango = [col for col in w_bg_df.columns if col.startswith(rango)]
                w_bg_df[rango] = w_bg_df[columnas_rango].sum(axis=1)

            # Drop first 16 columns
            w_bg_df = w_bg_df.drop(columns=w_bg_df.columns[:16])
            # Sort columns
            w_bg_df = w_bg_df.reindex(sorted(w_bg_df.columns), axis=1)

            w_bg = w_bg_df.values
            grupos = w_bg_df.columns.tolist()

        # check with assert that n_pca is an integer number greater or equal than zero
        assert isinstance(n_pca_components, int) and n_pca_components >= 0, 'n_pca_components must be an integer number greater or equal than zero' 
        if n_pca_components > 0 and n_pls_components == 0:
            v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
            v_da_df = v_da_df.sort_index()
            # Aplicar PCA con el número seleccionado de componentes
            pca_selected = PCA(n_components=n_pca_components)
            principal_components = pca_selected.fit_transform(v_da_df)
            # Crear un DataFrame con las componentes principales seleccionadas y el indice de la comuna
            v_da_df = pd.DataFrame(data=principal_components, columns=[f'Principal_Component_{i+1}' for i in range(n_pca_components)], index=v_da_df.index)
            v_da = v_da_df.values
            # PCA variance percentage plot
            if False:
                pca = PCA()
                pca.fit(v_da_df)
                cumulative_explained_variance = np.cumsum(pca.explained_variance_ratio_)
                plt.plot(range(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o', linestyle='-')
                plt.xlabel('Number of Principal Components')
                plt.ylabel('Cumulative Explained Variance')
                plt.title('Cumulative Explained Variance vs. Number of Principal Components')
                plt.grid(True)
                plt.show()
                plt.savefig(f'{COD_FOLDER}Outputs/PCA/PCA_variance_percentage.png')
                exit()
        
        elif n_pca_components == 0 and n_pls_components > 0:
            # Get x_dc
            # x_dc_df = df[['Comuna'] + candidatos].drop_duplicates().set_index('Comuna')
            x_dc_df = df[['Circunscripción electoral'] + candidatos].drop_duplicates().set_index('Circunscripción electoral')
            # Sum votes for each candidate in each Comuna
            x_dc_df = x_dc_df.groupby('Circunscripción electoral').sum()
            # Get percentage of votes for each candidate in each Comuna
            x_dc_df = x_dc_df.div(x_dc_df.sum(axis=1), axis=0)
            # Sort by Comuna
            x_dc_df = x_dc_df.sort_index()
            x_dc = x_dc_df.values
            
            # Get v_da
            v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
            v_da_df = v_da_df.sort_index()
            v_da = v_da_df.values

            if False:
                exit()

            # Ajustar modelo PLS
            pls = PLSRegression(n_components=n_pls_components)
            pls.fit(v_da, x_dc)

            pls_weights_df = pd.DataFrame(pls.x_weights_,
                                          index=v_da_df.columns,
                                          columns=[f'Latente_{i+1}' for i in range(pls.x_weights_.shape[1])]
                                         )

            # VIP para las variables
            vip_scores = calculate_vip(pls, v_da)
            print("VIP de las variables:\n", vip_scores)

            # Crear un DataFrame con los VIP y ordenarlos
            vip_df = pd.DataFrame({'Variable': v_da_df.columns, 'VIP': vip_scores})
            vip_df = vip_df.sort_values(by="VIP", ascending=False)

            if False:
                variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'n_activos': ['n_ocupados', 'n_desocupados', 'n_inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'edad': ['edad'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja', 'ecivil_Soltero'],

            'sist_previsional': ['o31_Sí', 'o31_No'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Publico'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            'inmigrante': ['inmigrante_No inmigrante'],

            'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor', 'ypchtotcor'],

            'nivel_escolaridad': ['educ_Colegio'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            'Hombres': ['Frac_Hombres'],

            'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }

                # Crear un mapeo de cada variable a su paquete correspondiente
                var_to_package = {}
                for paquete, lista_vars in variables_package.items():
                    for var in lista_vars:
                        var_to_package[var] = paquete

                # Agregar la columna "Paquete" a vip_df según el mapeo
                vip_df['Paquete'] = vip_df['Variable'].map(var_to_package)
                vip_df['Paquete'].fillna('Dummies', inplace=True)

                # Calcular el VIP al cuadrado para cada variable
                vip_df['VIP_squared'] = vip_df['VIP'] ** 2

                # Contar la cantidad de variables en cada paquete
                package_counts = vip_df.groupby('Paquete')['Variable'].count().to_dict()

                # Agrupar por paquete y sumar los VIP al cuadrado de las variables que lo componen
                vip_paquetes = vip_df.groupby('Paquete')['VIP_squared'].sum().reset_index()

                # Aplicar la raíz cuadrada para obtener el VIP de cada paquete
                vip_paquetes['VIP'] = np.sqrt(vip_paquetes['VIP_squared'])

                # Calcular el VIP normalizado
                vip_paquetes['VIP_normalized'] = vip_paquetes['VIP'] / vip_paquetes['Paquete'].map(package_counts)

                # Ordenar los paquetes por el VIP calculado en orden descendente
                vip_paquetes = vip_paquetes.sort_values(by='VIP', ascending=False)

                # Listas de paquetes para diferenciar colores
                comuna_paquetes = ['votos_2017', 'n_activos', 'dormitorio', 'zona', 'tipohogar', 'pobreza', 'situacion_vivienda', 'edad', 'años_escolaridad', 'ecivil', 'sist_previsional', 'cond_actividad', 'salud', 'sist_salud', 'comuna_madre', 'comuna_5_años_prev', 'inmigrante', 'etnia', 'dinero', 'nivel_escolaridad', 'SIMCE']
                circunscripcion_paquetes = ['Hombres', 'Edad', 'Frac_Inmigrantes', 'Frac_Pueblos', 'Vivienda_Ocupada', 'Vivienda_Part_Colect', 'Casa_Depa', 'Frac_Pared', 'Frac_Techo', 'Frac_Piso_Bueno', 'Frac_Mat_Aceptable', 'Frac_Agua_Aceptable', 'Densidad_Poblacion']  # Ajustar si hay más

                # Asignar colores
                colors = ['blue' if p in comuna_paquetes else 'red' if p in circunscripcion_paquetes else 'gray' for p in vip_paquetes['Paquete']]

                # Mostrar el DataFrame resultante
                print(vip_paquetes)

                # Definir leyenda
                legend_patches = [
                    mpatches.Patch(color='blue', label='Comuna'),
                    mpatches.Patch(color='red', label='Circunscripción'),
                    mpatches.Patch(color='gray', label='Otros')
                ]

                # Graficar los resultados (original)
                plt.figure(figsize=(10, 6))
                plt.bar(vip_paquetes['Paquete'], vip_paquetes['VIP'], color=colors)
                plt.xlabel('Paquete')
                plt.ylabel('VIP')
                plt.title('VIP por paquete (raíz de la suma de VIP^2)')
                plt.xticks(rotation=90, ha='right')
                plt.legend(handles=legend_patches, loc='upper right')
                plt.tight_layout()
                plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/VIP_paquetes_{str(n_pls_components)}.png')
                plt.show()

                # Graficar los resultados normalizados
                plt.figure(figsize=(10, 6))
                plt.bar(vip_paquetes['Paquete'], vip_paquetes['VIP_normalized'], color=colors)
                plt.xlabel('Paquete')
                plt.ylabel('VIP Normalizado')
                plt.title('VIP normalizado por paquete')
                plt.xticks(rotation=90, ha='right')
                plt.legend(handles=legend_patches, loc='upper right')
                plt.tight_layout()
                plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/VIP_paquetes_normalizados_{str(n_pls_components)}.png')
                plt.show()

                exit()

            # Transformar v_da a componentes latentes
            v_da_transformed = pls.transform(v_da)
            print(f'v_da_transformed.shape: {v_da_transformed.shape}')

            v_da = v_da_transformed
            v_da_df = pd.DataFrame(data=v_da, columns=[f'Latent_Component_{i+1}' for i in range(n_pls_components)], index=v_da_df.index)

        else:
            # v_da: valor del atributo para cada distrito
            v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
            v_da_df = v_da_df.sort_index()
            v_da = v_da_df.values

        # v_ba = df[atributos_filtro].values

        # e_bd: matriz que tiene un 1 si mesa b pertenece a distrito d
        e_bd_df = pd.get_dummies(df['Circunscripción electoral'], prefix='', prefix_sep='')
        e_bd = e_bd_df.values

        x_bc_torch = torch.tensor(x_bc, dtype=torch.float64)
        w_bg_torch = torch.tensor(w_bg, dtype=torch.float64)
        v_da_torch = torch.tensor(v_da, dtype=torch.float64)
        e_bd_torch = torch.tensor(e_bd, dtype=torch.float64)

    if eleccion == '2023_Plebiscito':
        # x_bc: numero de votos de la mesa b para el candidato c
        x_bc = df.iloc[:, 5:8].values
        candidatos = df.iloc[:, 5:8].columns.tolist()

        # Descuadre
        descuadre = df['DESCUADRE'].values

        # w_bg: numero de votantes de la mesa b del grupo g
        w_bg_df = df.iloc[:, 9:25]

        # w_bg_df prima
        factor = (w_bg_df.sum(axis=1) - descuadre) / w_bg_df.sum(axis=1)
        # Pass it to BxG
        factor = factor.values.reshape(-1,1)
        # Multiply w_bg_df by a
        w_bg_df = w_bg_df * factor

        if groups == 'ALL':
            w_bg = w_bg_df.values
            grupos = w_bg_df.columns.tolist()

        if groups == 'ONE':
            # sumar los votantes de los grupos
            w_bg = w_bg_df.sum(axis=1).values
            # w_bg shape must be (b,1)
            w_bg = w_bg.reshape(-1,1)
            grupos = ['TODOS']

        if groups == 'GENDER':
            # Identificar las columnas por género
            cols_hombres = [col for col in w_bg_df.columns if col.endswith('H')]
            cols_mujeres = [col for col in w_bg_df.columns if col.endswith('M')]

            # Crear nuevas columnas agrupadas por género
            w_bg_df['Hombres'] = w_bg_df[cols_hombres].sum(axis=1)
            w_bg_df['Mujeres'] = w_bg_df[cols_mujeres].sum(axis=1)

            w_bg_df = w_bg_df.drop(columns=cols_hombres + cols_mujeres)

            w_bg = w_bg_df.values

            grupos = ['Hombres', 'Mujeres']

        if groups == 'AGE':
            # Extraer los rangos etarios únicos de los nombres de las columnas
            rangos_etarios = {col.split()[0] for col in w_bg_df.columns}

            # Sumar por rango etario
            for rango in rangos_etarios:
                columnas_rango = [col for col in w_bg_df.columns if col.startswith(rango)]
                w_bg_df[rango] = w_bg_df[columnas_rango].sum(axis=1)

            # Drop first 16 columns
            w_bg_df = w_bg_df.drop(columns=w_bg_df.columns[:16])
            # Sort columns
            w_bg_df = w_bg_df.reindex(sorted(w_bg_df.columns), axis=1)

            w_bg = w_bg_df.values
            grupos = w_bg_df.columns.tolist()

        # check with assert that n_pca is an integer number greater or equal than zero
        assert isinstance(n_pca_components, int) and n_pca_components >= 0, 'n_pca_components must be an integer number greater or equal than zero' 
        if n_pca_components > 0 and n_pls_components == 0:
            v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
            v_da_df = v_da_df.sort_index()
            # Aplicar PCA con el número seleccionado de componentes
            pca_selected = PCA(n_components=n_pca_components)
            principal_components = pca_selected.fit_transform(v_da_df)
            # Crear un DataFrame con las componentes principales seleccionadas y el indice de la comuna
            v_da_df = pd.DataFrame(data=principal_components, columns=[f'Principal_Component_{i+1}' for i in range(n_pca_components)], index=v_da_df.index)
            v_da = v_da_df.values
            # PCA variance percentage plot
            if False:
                pca = PCA()
                pca.fit(v_da_df)
                cumulative_explained_variance = np.cumsum(pca.explained_variance_ratio_)
                plt.plot(range(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o', linestyle='-')
                plt.xlabel('Number of Principal Components')
                plt.ylabel('Cumulative Explained Variance')
                plt.title('Cumulative Explained Variance vs. Number of Principal Components')
                plt.grid(True)
                plt.show()
                plt.savefig(f'{COD_FOLDER}Outputs/PCA/PCA_variance_percentage.png')
                exit()

        elif n_pca_components == 0 and n_pls_components > 0:
            # Get x_dc
            x_dc_df = df[['Local'] + candidatos].drop_duplicates().set_index('Local')
            # Sum votes for each candidate in each Comuna
            x_dc_df = x_dc_df.groupby('Local').sum()
            # Get percentage of votes for each candidate in each Comuna
            x_dc_df = x_dc_df.div(x_dc_df.sum(axis=1), axis=0)
            # Sort by Comuna
            x_dc_df = x_dc_df.sort_index()
            x_dc = x_dc_df.values
            
            # Get v_da
            v_da_df = df[['Local'] + atributos_filtro].drop_duplicates().set_index('Local')
            v_da_df = v_da_df.sort_index()
            # print(f'v_da_df: {v_da_df}')
            v_da = v_da_df.values

            if False:
                # Determinar el número máximo de componentes
                max_components = len(atributos_filtro)

                # Listas para almacenar la varianza explicada
                explained_variance_x = []
                explained_variance_y = []

                # Iterar sobre diferentes números de componentes
                for n_components in range(1, max_components + 1):
                    pls = PLSRegression(n_components=n_components)
                    pls.fit(v_da, x_dc)

                    # Calcular la varianza explicada acumulada en X
                    variance_x = np.cumsum(np.var(pls.x_scores_, axis=0)) / np.var(v_da, axis=0).sum()
                    explained_variance_x.append(variance_x[-1] * 100)

                    # Calcular la varianza explicada acumulada en Y
                    variance_y = np.cumsum(np.var(pls.y_scores_, axis=0)) / np.var(x_dc, axis=0).sum()
                    explained_variance_y.append(variance_y[-1] * 100)
                    print(f'n_components: {n_components}')

                # Graficar los resultados
                plt.figure(figsize=(8, 6))
                plt.plot(range(1, max_components + 1), explained_variance_x, label='Varianza explicada en X (%)', marker='o')
                plt.plot(range(1, max_components + 1), explained_variance_y, label='Varianza explicada en Y (%)', marker='s')
                plt.xlabel('Número de Componentes Latentes')
                plt.ylabel('Varianza Explicada Acumulada (%)')
                plt.title('Varianza Explicada Acumulada vs Número de Componentes (PLS)')
                plt.grid(True)
                plt.legend()
                plt.tight_layout()

                # Guardar y mostrar el gráfico
                plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold/PLS_variance_percentage.png')
                plt.show()
                exit()

            # Ajustar modelo PLS
            pls = PLSRegression(n_components=n_pls_components)
            pls.fit(v_da, x_dc)

            pls_weights_df = pd.DataFrame(pls.x_weights_,
                                          index=v_da_df.columns,
                                          columns=[f'Latente_{i+1}' for i in range(pls.x_weights_.shape[1])]
                                         )

            # VIP para las variables
            vip_scores = calculate_vip(pls, v_da)
            print("VIP de las variables:\n", vip_scores)

            # Crear un DataFrame con los VIP y ordenarlos
            vip_df = pd.DataFrame({'Variable': v_da_df.columns, 'VIP': vip_scores})
            vip_df = vip_df.sort_values(by="VIP", ascending=False)

            if False:
                variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'n_activos': ['n_ocupados', 'n_desocupados', 'n_inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'edad': ['edad'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja', 'ecivil_Soltero'],

            'sist_previsional': ['o31_Sí', 'o31_No'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Publico'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            'inmigrante': ['inmigrante_No inmigrante'],

            'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor', 'ypchtotcor'],

            'nivel_escolaridad': ['educ_Colegio'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            'Hombres': ['Frac_Hombres'],

            'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }

                # Crear un mapeo de cada variable a su paquete correspondiente
                var_to_package = {}
                for paquete, lista_vars in variables_package.items():
                    for var in lista_vars:
                        var_to_package[var] = paquete

                # Agregar la columna "Paquete" a vip_df según el mapeo
                vip_df['Paquete'] = vip_df['Variable'].map(var_to_package)
                vip_df['Paquete'].fillna('Dummies', inplace=True)

                # Calcular el VIP al cuadrado para cada variable
                vip_df['VIP_squared'] = vip_df['VIP'] ** 2

                # Contar la cantidad de variables en cada paquete
                package_counts = vip_df.groupby('Paquete')['Variable'].count().to_dict()

                # Agrupar por paquete y sumar los VIP al cuadrado de las variables que lo componen
                vip_paquetes = vip_df.groupby('Paquete')['VIP_squared'].sum().reset_index()

                # Aplicar la raíz cuadrada para obtener el VIP de cada paquete
                vip_paquetes['VIP'] = np.sqrt(vip_paquetes['VIP_squared'])

                # Calcular el VIP normalizado
                vip_paquetes['VIP_normalized'] = vip_paquetes['VIP'] / vip_paquetes['Paquete'].map(package_counts)

                # Ordenar los paquetes por el VIP calculado en orden descendente
                vip_paquetes = vip_paquetes.sort_values(by='VIP', ascending=False)

                # Listas de paquetes para diferenciar colores
                comuna_paquetes = ['votos_2017', 'n_activos', 'dormitorio', 'zona', 'tipohogar', 'pobreza', 'situacion_vivienda', 'edad', 'años_escolaridad', 'ecivil', 'sist_previsional', 'cond_actividad', 'salud', 'sist_salud', 'comuna_madre', 'comuna_5_años_prev', 'inmigrante', 'etnia', 'dinero', 'nivel_escolaridad', 'SIMCE']
                circunscripcion_paquetes = ['Hombres', 'Edad', 'Frac_Inmigrantes', 'Frac_Pueblos', 'Vivienda_Ocupada', 'Vivienda_Part_Colect', 'Casa_Depa', 'Frac_Pared', 'Frac_Techo', 'Frac_Piso_Bueno', 'Frac_Mat_Aceptable', 'Frac_Agua_Aceptable', 'Densidad_Poblacion']  # Ajustar si hay más

                # Asignar colores
                colors = ['blue' if p in comuna_paquetes else 'red' if p in circunscripcion_paquetes else 'gray' for p in vip_paquetes['Paquete']]

                # Mostrar el DataFrame resultante
                print(vip_paquetes)

                # Definir leyenda
                legend_patches = [
                    mpatches.Patch(color='blue', label='Comuna'),
                    mpatches.Patch(color='red', label='Circunscripción'),
                    mpatches.Patch(color='gray', label='Otros')
                ]

                # Graficar los resultados (original)
                plt.figure(figsize=(10, 6))
                plt.bar(vip_paquetes['Paquete'], vip_paquetes['VIP'], color=colors)
                plt.xlabel('Paquete')
                plt.ylabel('VIP')
                plt.title('VIP por paquete (raíz de la suma de VIP^2)')
                plt.xticks(rotation=90, ha='right')
                plt.legend(handles=legend_patches, loc='upper right')
                plt.tight_layout()
                plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/VIP_paquetes_{str(n_pls_components)}.png')
                plt.show()

                # Graficar los resultados normalizados
                plt.figure(figsize=(10, 6))
                plt.bar(vip_paquetes['Paquete'], vip_paquetes['VIP_normalized'], color=colors)
                plt.xlabel('Paquete')
                plt.ylabel('VIP Normalizado')
                plt.title('VIP normalizado por paquete')
                plt.xticks(rotation=90, ha='right')
                plt.legend(handles=legend_patches, loc='upper right')
                plt.tight_layout()
                plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/VIP_paquetes_normalizados_{str(n_pls_components)}.png')
                plt.show()

                exit()

            # Transformar v_da a componentes latentes
            v_da_transformed = pls.transform(v_da)
            print(f'v_da_transformed.shape: {v_da_transformed.shape}')

            v_da = v_da_transformed
            v_da_df = pd.DataFrame(data=v_da, columns=[f'Latent_Component_{i+1}' for i in range(n_pls_components)], index=v_da_df.index)

        else:
            # v_da: valor del atributo para cada distrito
            v_da_df = df[['Local'] + atributos_filtro].drop_duplicates().set_index('Local')
            v_da_df = v_da_df.sort_index()
            v_da = v_da_df.values

        # v_ba = df[atributos_filtro].values

        # e_bd: matriz que tiene un 1 si mesa b pertenece a distrito d
        e_bd_df = pd.get_dummies(df['Local'], prefix='', prefix_sep='')
        e_bd = e_bd_df.values

        x_bc_torch = torch.tensor(x_bc, dtype=torch.float64)
        w_bg_torch = torch.tensor(w_bg, dtype=torch.float64)
        v_da_torch = torch.tensor(v_da, dtype=torch.float64)
        e_bd_torch = torch.tensor(e_bd, dtype=torch.float64)

    #return x_bc, w_bg, v_da, e_bd
    # print(f'x_bc_torch = {x_bc_torch}')
    # print(f'w_bg_torch = {w_bg_torch}')
    # print(f'v_da_torch = {v_da_torch}')
    # print(f'e_bd_torch = {e_bd_torch}')

    if return_pls_weights and n_pls_components > 0:
        return x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos, grupos, df, pls_weights_df
    else:
        return x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos, grupos, df

    # return x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos, grupos, df

# function that converts to serizable object (for JSON)
def convert_to_serializable(obj):
    if isinstance(obj, (int, float, str, bool, type(None))):  # handle basic types
        return obj
    elif isinstance(obj, np.ndarray):
        return obj.tolist()
    elif isinstance(obj, (np.float32, np.float64)):
        return float(obj)
    elif isinstance(obj, (np.int32, np.int64)):
        return int(obj)
    elif isinstance(obj, torch.Tensor):  # for PyTorch tensors
        return obj.tolist()
    # elif isinstance(obj, tf.Tensor):  # for TensorFlow tensors
    #     return obj.numpy().tolist()
    elif isinstance(obj, list):
        return [convert_to_serializable(item) for item in obj]
    elif isinstance(obj, dict):
        return {key: convert_to_serializable(value) for key, value in obj.items()}
    else:
        return str(obj)  # convert any remaining non-serializable object to string or handle as needed

# function that splits in train and test set
def train_test_split_manual(x, w, e, e_df, test_size=0.25, random_state=None, split_distritos=False, bootstrap_seed = None):
    #x = x_bc; w = w_bg; v = v_da; e = e_bd; e_df = e_bd_df
    # print(f'split_distritos = {split_distritos}')
    if split_distritos: # split por comunas
        e_df = e_df.astype(int) # False as 0, True as 1
        # print(f'e_df = {e_df}')
        mesas_distritos = e_df.sum(axis=0) # number of ballot boxes per district, dim = D
        # print(f"mesas_distritos = {mesas_distritos}")
        mesas_distritos_strat = pd.qcut(mesas_distritos, q=5, labels=False) # stratify by number of ballot boxes per district
        # print(f"mesas_distritos_strat = {mesas_distritos_strat}")

        # Split the data with stratification based on the binned variable
        distritos_train = None; distritos_test = None
        # print(f"test_size = {test_size}")
        if test_size > 0:
            distritos_train, distritos_test = train_test_split(e_df.columns, test_size=test_size, stratify=mesas_distritos_strat, random_state=random_state)
            # Sort them alphabetically
            distritos_train = np.sort(distritos_train)
            distritos_test = np.sort(distritos_test)
            # print(f"distritos_train = {distritos_train}")
            # print(f"distritos_test = {distritos_test}")
        else:
            distritos_train = e_df.columns
            distritos_test = pd.Index([])
        # print type of distritos_train and distritos_test
        # print(f"distritos_train = {distritos_train}")
        # print(f"distritos_test = {distritos_test}")
        # exit()
        # print(mesas_distritos_strat[distritos_train].value_counts())
        # print(mesas_distritos_strat[distritos_test].value_counts())
        # aplicar bootstrapp sobre los distritos
        # print(f'bootstrapp_seed = {bootstrap_seed}')
        if bootstrap_seed is not None:
            np.random.seed(bootstrap_seed)
            distritos_train = np.random.choice(distritos_train, size=len(distritos_train), replace=True)
            # distritos_test = np.random.choice(distritos_test, size=len(distritos_test), replace=True)
        mesas_train = e_df[distritos_train]
        # print(f"mesas_train = {mesas_train}")
        mesas_test = e_df[distritos_test]
        # print(f"mesas_test = {mesas_test}")
        # Keep those rows with at least one 1 value
        filas_train = mesas_train.any(axis=1)
        # print(f"filas_train = {filas_train}")
        filas_test = mesas_test.any(axis=1)
        # print(f"filas_test = {filas_test}")

        # print(f'x.shape = {x}')
        # print(f'filas_train = {filas_train}')
        x_train = x[filas_train] #x_train.shape
        # print(f"x_train.shape = {x_train.shape}")
        # print(f"x_train = {x_train}")
        x_test = x[filas_test] #x_test.shape
        # print(f"x_test.shape = {x_test.shape}")
        # print(f"x_test = {x_test}")
        w_train = w[filas_train] #w_train.shape
        # print(f"w_train.shape = {w_train.shape}")
        # print(f"w_train = {w_train}")
        w_test = w[filas_test] #w_test.shape
        # print(f"w_test.shape = {w_test.shape}")
        # print(f"w_test = {w_test}")
        e_train = e[filas_train] #e_train.shape
        # print(f"e_train.shape = {e_train.shape}")
        # print(f"e_train = {e_train}")
        e_test = e[filas_test] #e_test.shape
        # print(f"e_test.shape = {e_test.shape}")
        # print(f"e_test = {e_test}")
        # Get e_df for train and test
        e_df_train = e_df[filas_train]
        # print(f"e_df_train.shape = {e_df_train.shape}")
        e_df_test = e_df[filas_test]
        # print(f"e_df_test.shape = {e_df_test.shape}")

        names_distritos_train = distritos_train.tolist() #names of distritos_train
        names_distritos_test = distritos_test.tolist()

        print(f"mesas en train = {int(np.sum(mesas_distritos[distritos_train])):d}")
        print(f"mesas en test = {int(np.sum(mesas_distritos[distritos_test])):d}")
        print(f"porcentage de mesas en test = {100*np.sum(mesas_distritos[distritos_test])/np.sum(mesas_distritos):.2f}%")

        # distritos = range(e.shape[1])
        # mesas_distritos = torch.sum(e, axis=0) # number of ballot boxes per district, dim = D
        # mesas_distritos_numpy = mesas_distritos.numpy()
        # mesas_distritos_strat = pd.qcut(mesas_distritos_numpy, q=5, labels=False) # stratify by number of ballot boxes per district, dim = D

        # # Split the data with stratification based on the binned variable
        # distritos_train, distritos_test = train_test_split(distritos, test_size=test_size, stratify=mesas_distritos_strat, random_state=random_state)
        # distritos_train_01 = torch.tensor([d in distritos_train for d in distritos], dtype=torch.float64) # 1 if district belongs to train set, 0 o/w, dim = D
        # distritos_test_01 = torch.tensor([d in distritos_test for d in distritos], dtype=torch.float64) # 1 if district belongs to test set, 0 o/w, dim = D
        # filas_train = torch.mm(e, distritos_train_01.unsqueeze(1)).squeeze() # 1 if ballot box belongs to train set, 0 o/w, dim = B
        # filas_test = torch.mm(e, distritos_test_01.unsqueeze(1)).squeeze() # 1 if ballot box belongs to test set, 0 o/w, dim = B
        # x_train = x[filas_train > 0]
        # x_test = x[filas_test > 0]
        # # x_train.shape
        # # x_test.shape
        # # x.shape
        # w_train = w[filas_train > 0]
        # w_test = w[filas_test > 0]
        # e_train = e[filas_train > 0]
        # e_test = e[filas_test > 0]
        # # Arreglar
        # names_distritos_train = None
        # names_distritos_test = None
        # # names_distritos_train = [names_distritos[d] for d in distritos_train]
        # # names_distritos_test = [names_distritos[d] for d in distritos_test]
        # # compute number of ballots in train and test set

    else:
        # Split the data into training and testing sets
        x_train, x_test, w_train, w_test, e_train, e_test = train_test_split(x, w, e, test_size=test_size, random_state=random_state)
        names_distritos_train = None
        names_distritos_test = None
        # Get e_df for train and test
        e_df_train = None
        e_df_test = None
        if bootstrap_seed is not None:
            # Generate random indices for sampling with replacement
            filas_train = x_train.shape[0]
            np.random.seed(bootstrap_seed)
            random_indices = np.random.choice(filas_train, size=filas_train, replace=True)
            x_train = x_train[random_indices, :]
            w_train = w_train[random_indices, :]
            e_train = e_train[random_indices, :]

    return x_train, x_test, w_train, w_test, e_train, e_test, e_df_train, e_df_test, names_distritos_train, names_distritos_test

# function that splits the train in K folds, returning K-1 folds together and the last fold separate
def k_fold_from_train_manual(x, w, e, e_df, K_folds = 5, k_fold = 1, random_state=None, split_distritos=False, bootstrap_seed = None):
    #x = x_bc; w = w_bg; v = v_da; e = e_bd; e_df = e_bd_df
    # print(f'split_distritos = {split_distritos}')
    if split_distritos: # split por comunas
        aux_df = e_df
        # Drop columns with all zeros
        aux_df = aux_df.loc[:, (aux_df != 0).any(axis=0)]
        aux_df = aux_df.astype(int) # False as 0, True as 1
        # print(f'e_df = {e_df}')
        mesas_distritos = aux_df.sum(axis=0) # number of ballot boxes per district, dim = D
        # print(f"mesas_distritos = {mesas_distritos}")
        mesas_distritos_strat = pd.qcut(mesas_distritos, q=5, labels=False) # stratify by number of ballot boxes per district
        # print(f"mesas_distritos_strat = {mesas_distritos_strat}")

        # Split the data with stratification based on the binned variable
        distritos_train = None; distritos_test = None
        # print(f"test_size = {test_size}")
        if K_folds > 1:
            # distritos_train, distritos_test = train_test_split(e_df.columns, test_size=test_size, stratify=mesas_distritos_strat, random_state=random_state)
            # Inicializar StratifiedKFold con 5 folds
            skf = StratifiedKFold(n_splits=K_folds, shuffle=True, random_state=random_state)
            distritos_trainf = []
            distritos_val = []
            for fold, (train_index, test_index) in enumerate(skf.split(np.zeros(len(mesas_distritos_strat)), mesas_distritos_strat), 1):
                # print(f"fold = {fold}")
                if fold == k_fold:
                    distritos_val = aux_df.columns[test_index]
                    # convert distritos_val to pandas
                    # distritos_val = pd.Index(distritos_val)
                    # print(f"distritos_val = {distritos_val}")
                    distritos_trainf.append(aux_df.columns[train_index])
                    # print(f"distritos_trainf = {distritos_trainf}")
                # print(f"test_index = {test_index}")
            # print(f"distritos_trainf = {distritos_trainf}")
            distritos_trainf = np.concatenate(distritos_trainf)
            # convert distritos_trainf to pandas
            distritos_trainf = pd.Index(distritos_trainf)
            # print(f"distritos_train = {distritos_trainf}")
            # print(f"distritos_val = {distritos_val}")
            # print(f"distritos_train = {distritos_train}")
            # print(f"distritos_test = {distritos_test}")
        else:
            distritos_trainf = aux_df.columns
            distritos_val = pd.Index([])
        # print type of distritos_train and distritos_test
        # print(f"distritos_train = {distritos_train}")
        # print(f"distritos_test = {distritos_test}")
        # exit()
        # print(mesas_distritos_strat[distritos_trainf].value_counts())
        # print(mesas_distritos_strat[distritos_val].value_counts())
        # aplicar bootstrapp sobre los distritos
        # print(f'bootstrapp_seed = {bootstrap_seed}')
        if bootstrap_seed is not None:
            np.random.seed(bootstrap_seed)
            distritos_trainf = np.random.choice(distritos_trainf, size=len(distritos_trainf), replace=True)
            # distritos_test = np.random.choice(distritos_test, size=len(distritos_test), replace=True)
        # Reset index of e_df
        e_df = e_df.reset_index(drop=True)
        mesas_trainf = e_df[distritos_trainf]
        # print(f"mesas_train = {mesas_train}")
        mesas_val = e_df[distritos_val]
        # print(f"mesas_test = {mesas_test}")
        # Keep those rows with at least one 1 value
        filas_trainf = mesas_trainf.any(axis=1)
        # print(f"filas_train = {filas_train}")
        filas_val = mesas_val.any(axis=1)
        # print(f"filas_test = {filas_test}")

        # print(f'x.shape = {x}')
        # print(f'filas_train = {filas_train}')
        x_trainf = x[filas_trainf] #x_train.shape
        # print(f"x_train = {x_train}")
        x_val = x[filas_val] #x_test.shape
        # print(f"x_test = {x_test}")
        w_trainf = w[filas_trainf] #w_train.shape
        # print(f"w_train = {w_train}")
        w_val = w[filas_val] #w_val.shape
        # print(f"w_val = {w_val}")
        e_trainf = e[filas_trainf] #e_train.shape
        # print(f"e_train = {e_train}")
        e_val = e[filas_val] #e_test.shape
        # print(f"e_test = {e_test}")

        names_distritos_trainf = distritos_trainf.tolist() #names of distritos_train
        names_distritos_val    = distritos_val.tolist()

        print(f"mesas en trainf = {int(np.sum(mesas_distritos[distritos_trainf])):d}")
        print(f"mesas en val    = {int(np.sum(mesas_distritos[distritos_val])):d}")
        print(f"porcentage de mesas en val = {100*np.sum(mesas_distritos[distritos_val])/np.sum(mesas_distritos):.2f}%")

        # distritos = range(e.shape[1])
        # mesas_distritos = torch.sum(e, axis=0) # number of ballot boxes per district, dim = D
        # mesas_distritos_numpy = mesas_distritos.numpy()
        # mesas_distritos_strat = pd.qcut(mesas_distritos_numpy, q=5, labels=False) # stratify by number of ballot boxes per district, dim = D

        # # Split the data with stratification based on the binned variable
        # distritos_train, distritos_test = train_test_split(distritos, test_size=test_size, stratify=mesas_distritos_strat, random_state=random_state)
        # distritos_train_01 = torch.tensor([d in distritos_train for d in distritos], dtype=torch.float64) # 1 if district belongs to train set, 0 o/w, dim = D
        # distritos_test_01 = torch.tensor([d in distritos_test for d in distritos], dtype=torch.float64) # 1 if district belongs to test set, 0 o/w, dim = D
        # filas_train = torch.mm(e, distritos_train_01.unsqueeze(1)).squeeze() # 1 if ballot box belongs to train set, 0 o/w, dim = B
        # filas_test = torch.mm(e, distritos_test_01.unsqueeze(1)).squeeze() # 1 if ballot box belongs to test set, 0 o/w, dim = B
        # x_train = x[filas_train > 0]
        # x_test = x[filas_test > 0]
        # # x_train.shape
        # # x_test.shape
        # # x.shape
        # w_train = w[filas_train > 0]
        # w_test = w[filas_test > 0]
        # e_train = e[filas_train > 0]
        # e_test = e[filas_test > 0]
        # # Arreglar
        # names_distritos_train = None
        # names_distritos_test = None
        # # names_distritos_train = [names_distritos[d] for d in distritos_train]
        # # names_distritos_test = [names_distritos[d] for d in distritos_test]
        # # compute number of ballots in train and test set

    else:
        # Split the data into training and testing sets
        x_train, x_test, w_train, w_test, e_train, e_test = train_test_split(x, w, e, test_size=1/K_folds, random_state=random_state)
        names_distritos_train = None
        names_distritos_test = None
        if bootstrap_seed is not None:
            # Generate random indices for sampling with replacement
            filas_train = x_train.shape[0]
            np.random.seed(bootstrap_seed)
            random_indices = np.random.choice(filas_train, size=filas_train, replace=True)
            x_train = x_train[random_indices, :]
            w_train = w_train[random_indices, :]
            e_train = e_train[random_indices, :]

    # print(f"x_trainf = {x_trainf}")
    # print(f"x_val = {x_val}")
    # exit(1)
    return x_trainf, x_val, w_trainf, w_val, e_trainf, e_val, names_distritos_trainf, names_distritos_val

lambda_alpha_arr_args = [0.0, 0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0, 50.0]
lambda_beta_arr_args = [0.0, 0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0, 50.0]
# lambda_alpha_arr_args = [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0, 50.0]
# lambda_beta_arr_args = [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0, 50.0]

# function that decodes an integer to a pair of alpha beta
def decode_alpha_beta(n, lambda_alpha_arr=lambda_alpha_arr_args, lambda_beta_arr=lambda_beta_arr_args):
    assert 0 <= n < len(lambda_alpha_arr) * len(lambda_beta_arr), 'n must be greater than or equal to zero and less than the product of the lengths of lambda_alpha_arr and lambda_beta_arr'
    i = n // len(lambda_beta_arr)
    j = n % len(lambda_beta_arr)
    # for example, if n = 7 and len(lambda_alpha_arr) = 2 and len(lambda_beta_arr) = 5, then i = 7 // 5 = 1 and j = 7 % 5 = 2
    return lambda_alpha_arr[i], lambda_beta_arr[j]

# function that encodes a pair of alpha beta to an integer
def encode_alpha_beta(alpha, beta, lambda_alpha_arr=lambda_alpha_arr_args, lambda_beta_arr=lambda_beta_arr_args):
    i = lambda_alpha_arr.index(alpha)
    j = lambda_beta_arr.index(beta)
    return i * len(lambda_beta_arr) + j

# function that converts a float into a string with a fixed number of decimals, replacing the dot by _
def float_to_string(x, decimals=2):
    # Format the number with the specified number of decimal places
    formatted_num = f"{x:.{decimals}f}"
    # Replace the decimal dot with an underscore
    return formatted_num.replace(".", "_")
    
# create the filename for pickles and json files
# create the filename for pickles and json files
def generate_filename(
    method, train_frac, K_folds, k_fold, split_distritos,
    n_pca_components=None, n_pls_components=None, seed_train=None,
    bootstrap_seed=None, lambda_alpha=None, lambda_beta=None,
    n_attributes=None, fs_etapa=None, fs_atributo=None,
    extention="", groups='ALL', eleccion='2021_Presidencial',
    atributos_circ=False, distmin=False, comuna=False, circ=False,
    dummies_circ=False
):
    # ------------- PCA -------------------------------------------------
    if method == 'PCA' and K_folds is not None:
        filename = (
            f"{COD_FOLDER}Outputs/PCA_kfold/"
            f"PCA_tf{int(train_frac*100)}_K{K_folds}_k{k_fold}"
            f"_sc{'T' if split_distritos else 'F'}_n{n_pca_components}"
            f"_st{seed_train}_sb{'n' if bootstrap_seed is None else bootstrap_seed}"
        )
    elif method == 'PCA':
        filename = (
            f"{COD_FOLDER}Outputs/PCA/"
            f"PCA_tf{int(train_frac*100)}_sc{'T' if split_distritos else 'F'}"
            f"_n{n_pca_components}_st{seed_train}"
            f"_sb{'n' if bootstrap_seed is None else bootstrap_seed}"
        )

    # ------------- Ridge -----------------------------------------------
    elif method == 'Ridge':
        filename = (
            f"{COD_FOLDER}Outputs/Ridge/"
            f"Ridge_tf{int(train_frac*100)}_K{K_folds}_k{k_fold}"
            f"_sc{'T' if split_distritos else 'F'}"
            f"_lb{float_to_string(lambda_beta)}_la{float_to_string(lambda_alpha)}"
            f"{'_na'+str(n_attributes) if n_attributes is not None else ''}"
        )

    # ------------- FS, FSLOO, FSRAND -----------------------------------
    elif method in ('FS', 'FSLOO', 'FSRAND'):
        # nombre base para carpetas y prefijo
        tag = method          # "FS" | "FSLOO" | "FSRAND"
        anio = "_2021" if eleccion == "2021_Presidencial" else "_2023"
        carpeta = (
            f"{COD_FOLDER}Outputs/{tag}_kfold{anio}/"
            f"{str(groups)+'_circ' if atributos_circ else str(groups)}/"
            f"{'distmin' if distmin else 'distprom'}/"
        )
        filename = (
            f"{carpeta}{tag}"
            f"_tf{int(train_frac*100)}_K{K_folds}_k{k_fold}"
            f"_sc{'T' if split_distritos else 'F'}"
            f"_st{seed_train}_sb{'n' if bootstrap_seed is None else bootstrap_seed}"
            f"{'_e'+str(fs_etapa)      if fs_etapa      is not None else ''}"
            f"{'_a'+str(fs_atributo)   if fs_atributo   is not None else ''}"
            f"_comuna{'T' if comuna else 'F'}"
            f"_circ{'T'   if circ   else 'F'}"
            f"_dummies{'T' if dummies_circ else 'F'}"
        )

    # ------------- PLS -------------------------------------------------
    elif method == 'PLS':
        anio = "_2021" if eleccion == "2021_Presidencial" else "_2023"
        carpeta = (
            f"{COD_FOLDER}Outputs/PLS_kfold{anio}/"
            f"{str(groups)+'_circ' if atributos_circ else str(groups)}/"
            f"{'distmin' if distmin else 'distprom'}/"
        )
        filename = (
            f"{carpeta}PLS"
            f"_tf{int(train_frac*100)}_K{K_folds}_k{k_fold}"
            f"_sc{'T' if split_distritos else 'F'}"
            f"_n{'n' if n_pls_components is None else n_pls_components}"
            f"_st{seed_train}_sb{'n' if bootstrap_seed is None else bootstrap_seed}"
            f"_comuna{'T' if comuna else 'F'}"
            f"_circ{'T'   if circ   else 'F'}"
            f"_dummies{'T' if dummies_circ else 'F'}"
        )

    # ------------- extra extensión -------------------------------------
    filename += extention
    return filename

# funcion que corre el EM para primera vuelta de elección de 2021 con PCA
def run_P2021_EM_PCA(regiones_filtro=[], atributos_filtro=[], max_iterations=100, EM_tolerance_ab=1e-3, EM_tolerance_ll=0.5, time_limit=3600,
                     save=False, built_df=False, eleccion='2021_Presidencial', estandarizar=False, 
                     n_pca_components=0, train_frac = 1.0, K_folds = 5, k_fold = 1, seed_train=0, split_distritos = False, 
                     alpha = None, beta = None, start_iter = 0, bootstrap_seed = None, groups='ALL', atributos_circ=False):
    assert 0 < train_frac <= 1, 'train_frac must be greater than 0 and less than or equal to one'
    # get data
    x_bc, w_bg, v_da, v_da_df, e_bd, e_bd_df, candidatos, grupos, _ = get_xwve_from_election(regiones_filtro=regiones_filtro, 
                                                            atributos_filtro=atributos_filtro, 
                                                            built_df=built_df, 
                                                            eleccion=eleccion, 
                                                            estandarizar=estandarizar,
                                                            n_pca_components=n_pca_components,
                                                            groups=groups,
                                                            atributos_circ=atributos_circ)
    # print(f"x_bc = {x_bc}")
    # print(f"w_bg = {w_bg}")
    # print(f"v_da = {v_da}")
    # print(f"e_bd = {e_bd}")

    # Split the data into training and testing sets
    # x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos)

    # Divide df into train and test
    x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, e_bd_df_train, e_bd_df_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed=bootstrap_seed)
    
    # With K_folds > 1, divide the training set into K_folds
    x_bc_trainf, x_bc_val, w_bg_trainf, w_bg_val, e_bd_trainf, e_bd_val, names_distritos_trainf, names_distritos_val = k_fold_from_train_manual(x_bc_train, w_bg_train, e_bd_train, e_bd_df_train, K_folds = K_folds, k_fold = k_fold, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed = bootstrap_seed)
    
    # Filter comunas of v_da_df
    v_da_df = v_da_df.loc[names_distritos_val]

    # PCA variance percentage plot
    if False:
        # Aplicar PCA con el número seleccionado de componentes
        pca_selected = PCA(n_components=n_pca_components)
        principal_components = pca_selected.fit_transform(v_da_df)
        pca = PCA()
        pca.fit(v_da_df)
        cumulative_explained_variance = np.cumsum(pca.explained_variance_ratio_)
        plt.plot(range(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o', linestyle='-')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Cumulative Explained Variance')
        plt.title('Cumulative Explained Variance vs. Number of Principal Components')
        plt.grid(True)
        plt.axvline(x=n_pca_components, color='red', linestyle='--', label=f'n = {n_pca_components}')
        plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/PCA_variance_percentage_K{K_folds}_k{k_fold}.png')
        plt.show()
        exit()

    # x_bc_trainf, x_bc_val, w_bg_trainf, w_bg_val, e_bd_trainf, e_bd_val, names_distritos_trainf, names_distritos_val = k_fold_from_train_manual(x_bc, w_bg, e_bd, e_bd_df, K_folds = K_folds, k_fold = k_fold, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed=bootstrap_seed)
    # print(f"x_bc_train = {x_bc_train}")
    # print(f"w_bg_train = {w_bg_train}")
    # print(f"v_da = {v_da}")
    # print(f"e_bd_train = {e_bd_train}")
    # print(f"e_bd_df = {e_bd_df}")
    # print(f"names_distritos_train = {names_distritos_train}")
    # print(f"names_distritos_test = {names_distritos_test}")

    start_time = time.time()  # Start timer for sim_election
    beta_opt, alpha_opt, n_EM_iter, razon_parada, diff_ll, list_alpha, list_beta = EM_algorithm(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, alpha=alpha, beta=beta, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, start_iter=start_iter)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha, beta=beta, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=120, start_iter=start_iter)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm_gcg(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha_opt, beta=beta_opt, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=600*5, start_iter=start_iter, p = 3)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm_pncg(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha_opt, beta=beta_opt, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, start_iter=start_iter)
    
    print(f"beta_opt = {beta_opt}")
    print(f"alpha_opt = {alpha_opt}")
    EM_time = time.time() - start_time  # End timer for sim_election
    print(f"tiempo de EM_algorithm: {EM_time:.2f} segundos")

    # compute the log-likelihood
    likelihood_trainf, _ = compute_ll(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, beta_opt, alpha_opt, verbose=True, add_text='train')
    if train_frac < 1.0:
        likelihood_test, _ = compute_ll(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None
    else:
        likelihood_test = None
    if K_folds > 1:
        likelihood_val, _ = compute_ll(x_bc_val, w_bg_val, v_da, e_bd_val, beta_opt, alpha_opt, verbose=True, add_text='val') if train_frac < 1.0 else None
    else:
        likelihood_val = None

    # create dictionary to then store results
    results = {'regiones_filtro': regiones_filtro, 
               'atributos_filtro': atributos_filtro, 
               'max_iterations': max_iterations,
               'n_pca_components': n_pca_components,
                'train_frac': train_frac,
                'K_folds': K_folds,
                'k_fold': k_fold,
                'seed_train': seed_train,
                'split_distritos': split_distritos,
                'EM_tolerance_ab': EM_tolerance_ab,
                'EM_tolerance_ll': EM_tolerance_ll,
                'names_distritos_trainf': names_distritos_trainf,
                'names_distritos_val': names_distritos_val,
                'names_distritos_test': names_distritos_test,
                'beta_opt': beta_opt, 
               'alpha_opt': alpha_opt,
                'n_EM_iter': n_EM_iter, 
                'razon_parada': razon_parada,
                'diff_ll': diff_ll,
                'list_alpha': list_alpha,
                'list_beta': list_beta,
                'EM_time': EM_time,
                'max_abs_alpha': np.max(np.abs(alpha_opt)),
                'max_abs_beta': np.max(np.abs(beta_opt)),
               'likelihood_trainf': likelihood_trainf, 
               'likelihood_val': likelihood_val,
               'likelihood_test': likelihood_test,
               'bootstrap_seed': bootstrap_seed,
               'candidatos': candidatos,
               'grupos': grupos,
               'atributos_circ': atributos_circ}
    results_seriazable = {key: convert_to_serializable(value) for key, value in results.items()}
    # Save the variables to a file
    if save:
        method = "PCA"
        filename =  generate_filename(method=method, train_frac=train_frac, K_folds = K_folds, k_fold=k_fold, split_distritos=split_distritos, 
                                    n_pca_components = n_pca_components, seed_train = seed_train, bootstrap_seed = bootstrap_seed, 
                                    lambda_alpha = None, lambda_beta = None, n_attributes = None,
                                    fs_etapa = None, fs_atributo = None, extention = "")
        with open(f'{filename}.json', 'w') as file:
            json.dump(results_seriazable, file, indent=4)  # indent=4 for pretty-printing
        file.close()
        with open(f'{filename}.pkl', 'wb') as file:
            pickle.dump(results, file)
        file.close()

    return beta_opt, alpha_opt

def run_P2021_EM_ridge(regiones_filtro = [], atributos_filtro = [], max_iterations=100, EM_tolerance_ab=1e-3, EM_tolerance_ll=0.5, time_limit=3600, 
                       lambda_beta = 0.0, lambda_alpha = 0.0, 
                       save=False, built_df=False, eleccion='2021_Presidencial', estandarizar=False, 
                       train_frac = 1.0, seed_train=0, split_distritos=False, n_attributes=None, 
                       alpha = None, beta = None, start_iter = 0):
    assert 0 < train_frac <= 1, 'train_frac must be greater than 0 and less than or equal to one'
    # get data
    x_bc, w_bg, v_da, e_bd, e_bd_df = get_xwve_from_election(regiones_filtro=regiones_filtro,
                                                    atributos_filtro=atributos_filtro,
                                                    built_df=built_df, eleccion=eleccion,estandarizar=estandarizar)
    
    # Split the data into training and testing sets
    x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos)
    
    start_time = time.time()  # Start timer for sim_election
    beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha, beta=beta, 
                                                                max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, 
                                                                lambda_beta=lambda_beta, lambda_alpha=lambda_alpha, start_iter=start_iter)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm_qn1(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha, beta=beta,
    #                                                                 max_iterations=max_iterations, tolerance=EM_tolerance, time_limit=time_limit, 
    #                                                                 lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
    print(f"beta_opt = {beta_opt}")
    print(f"alpha_opt = {alpha_opt}")
    EM_time = time.time() - start_time  # End timer for sim_election
    print(f"tiempo de EM_algorithm: {EM_time:.2f} segundos")


    # compute the log-likelihood
    likelihood_train, _ = compute_ll(x_bc_train, w_bg_train, v_da, e_bd_train, beta_opt, alpha_opt, verbose=True, add_text='train')
    likelihood_test, _ = compute_ll(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None


    # create dictionary to then store results
    results = {'regiones_filtro': regiones_filtro, 
               'atributos_filtro': atributos_filtro, 
               'max_iterations': max_iterations,
               'lambda_beta': lambda_beta,
               'lambda_alpha': lambda_alpha,
               'train_frac': train_frac,
               'seed_train': seed_train,
               'split_distritos': split_distritos,
               'EM_tolerance_ab': EM_tolerance_ab,
               'EM_tolerance_ll': EM_tolerance_ll,
               'time_limit': time_limit,
               'names_distritos_train': names_distritos_train,
               'names_distritos_test': names_distritos_test,
               'beta_opt': beta_opt, 
               'alpha_opt': alpha_opt,
               'n_EM_iter': n_EM_iter, 
               'razon_parada': razon_parada,
               'EM_time': EM_time,
                'max_abs_alpha': np.max(np.abs(alpha_opt)),
                'max_abs_beta': np.max(np.abs(beta_opt)),
               'likelihood_train': likelihood_train, 
               'likelihood_test': likelihood_test}
    
    results_seriazable = {key: convert_to_serializable(value) for key, value in results.items()}
    # Save the variables to a file
    if save:
        pca_ = False
        filename = generate_filename(pca_, train_frac, split_distritos, lambda_beta, lambda_alpha, n_attributes, seed_train=seed_train)
        with open(f'{filename}.json', 'w') as file:
            json.dump(results_seriazable, file, indent=4)
        file.close()
        with open(f'{filename}.pkl', 'wb') as file:
            pickle.dump(results, file)
        file.close()
    return beta_opt, alpha_opt

# funcion que corre el EM para primera vuelta de elección de 2021 con FS
def run_P2021_EM_FS(regiones_filtro = [], atributos_filtro = [], max_iterations=100, EM_tolerance_ab=1e-3, EM_tolerance_ll=0.5, 
                    time_limit = 3600, save=False, built_df=False, eleccion='2021_Presidencial', estandarizar=False, 
                    train_frac = 1.0, K_folds = 5, k_fold = 1, seed_train=0, split_distritos = False, 
                    alpha = None, beta = None, start_iter = 0, bootstrap_seed = None,
                    fs_etapa = 0, fs_atributo = 0, groups='ALL', atributos_circ=False, distmin=False,
                    comuna=False, circ=False, dummies_circ=False, method_tag: str = "FS"):
    assert 0 < train_frac <= 1, 'train_frac must be greater than 0 and less than or equal to one'
    # get data
    x_bc, w_bg, v_da, v_da_df, e_bd, e_bd_df, candidatos, grupos, _ = get_xwve_from_election(regiones_filtro=regiones_filtro, 
                                                                                atributos_filtro=atributos_filtro, 
                                                                                built_df=built_df, 
                                                                                eleccion=eleccion,
                                                                                estandarizar=estandarizar,
                                                                                groups=groups,
                                                                                atributos_circ=atributos_circ,
                                                                                distmin=distmin)

    # Split the data into training and testing sets
    # x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos)
    # Divide df into train and test
    x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, e_bd_df_train, e_bd_df_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed=bootstrap_seed)
    # With K_folds > 1, divide the training set into K_folds
    x_bc_trainf, x_bc_val, w_bg_trainf, w_bg_val, e_bd_trainf, e_bd_val, names_distritos_trainf, names_distritos_val = k_fold_from_train_manual(x_bc_train, w_bg_train, e_bd_train, e_bd_df_train, K_folds = K_folds, k_fold = k_fold, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed = bootstrap_seed)
    
    start_time = time.time()  # Start timer for sim_election
    beta_opt, alpha_opt, n_EM_iter, razon_parada, diff_ll, list_alpha, list_beta = EM_algorithm(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, alpha=alpha, beta=beta, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, start_iter=start_iter)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha, beta=beta, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=120, start_iter=start_iter)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm_gcg(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha_opt, beta=beta_opt, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=600*5, start_iter=start_iter, p = 3)
    # beta_opt, alpha_opt, n_EM_iter, razon_parada = EM_algorithm_pncg(x_bc_train, w_bg_train, v_da, e_bd_train, alpha=alpha_opt, beta=beta_opt, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, start_iter=start_iter)
    
    print(f"beta_opt = {beta_opt}")
    print(f"alpha_opt = {alpha_opt}")
    EM_time = time.time() - start_time  # End timer for sim_election
    print(f"tiempo de EM_algorithm: {EM_time:.2f} segundos")

    # compute the log-likelihood
    # likelihood_trainf, _ = compute_ll(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, beta_opt, alpha_opt, verbose=True, add_text='train')
    likelihood_trainf = compute_ll_multinomial(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, beta_opt, alpha_opt, verbose=True, add_text='train')
    if train_frac < 1.0:
        # likelihood_test, _ = compute_ll(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None
        likelihood_test = compute_ll_multinomial(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None
    else:
        likelihood_test = None
    if K_folds > 1:
        # likelihood_val, _ = compute_ll(x_bc_val, w_bg_val, v_da, e_bd_val, beta_opt, alpha_opt, verbose=True, add_text='val') if train_frac < 1.0 else None
        likelihood_val = compute_ll_multinomial(x_bc_val, w_bg_val, v_da, e_bd_val, beta_opt, alpha_opt, verbose=True, add_text='val') if train_frac < 1.0 else None
    else:
        likelihood_val = None
    
    # create dictionary to then store results
    results = {'regiones_filtro': regiones_filtro, 
               'atributos_filtro': atributos_filtro, 
               'max_iterations': max_iterations,
                'train_frac': train_frac,
                'K_folds': K_folds,
                'k_fold': k_fold,
                'seed_train': seed_train,
                'split_distritos': split_distritos,
                'EM_tolerance_ab': EM_tolerance_ab,
                'EM_tolerance_ll': EM_tolerance_ll,
                'names_distritos_trainf': names_distritos_trainf,
                'names_distritos_val': names_distritos_val,
                'names_distritos_test': names_distritos_test,
                'beta_opt': beta_opt, 
               'alpha_opt': alpha_opt,
                'n_EM_iter': n_EM_iter, 
                'razon_parada': razon_parada,
                'diff_ll': diff_ll,
                'list_alpha': list_alpha,
                'list_beta': list_beta,
                'EM_time': EM_time,
                'max_abs_alpha': np.max(np.abs(alpha_opt)),
                'max_abs_beta': np.max(np.abs(beta_opt)),
               'likelihood_trainf': likelihood_trainf, 
               'likelihood_val': likelihood_val,
               'likelihood_test': likelihood_test,
               'bootstrap_seed': bootstrap_seed,
                'candidatos': candidatos,
                'grupos': grupos,
               'fs_etapa': fs_etapa,
               'fs_atributo': fs_atributo,
               'atributos_circ': atributos_circ,
               'distmin': distmin,
               'comuna': comuna,
               'circ': circ,
               'dummies_circ': dummies_circ}

    results_seriazable = {key: convert_to_serializable(value) for key, value in results.items()}
    # Save the variables to a file
    if save:
        filename = generate_filename(method=method_tag, train_frac=train_frac, K_folds=K_folds, k_fold=k_fold, split_distritos=split_distritos, 
                                     n_pca_components=None, seed_train=seed_train, bootstrap_seed=bootstrap_seed, 
                                     lambda_alpha=None, lambda_beta=None, n_attributes=None,
                                     fs_etapa=fs_etapa, fs_atributo=fs_atributo, extention = "", groups=groups, eleccion=eleccion,
                                     atributos_circ=atributos_circ, distmin=distmin, comuna=comuna, circ=circ, dummies_circ=dummies_circ)
        with open(f'{filename}.json', 'w') as file:
            json.dump(results_seriazable, file, indent=4)  # indent=4 for pretty-printing
        file.close()
        with open(f'{filename}.pkl', 'wb') as file:
            pickle.dump(results, file)
        file.close()

    return beta_opt, alpha_opt

# funcion que corre el EM para primera vuelta de elección de 2021 con PCA
def run_P2021_EM_PLS(regiones_filtro=[], atributos_filtro=[], max_iterations=100, EM_tolerance_ab=1e-3, EM_tolerance_ll=0.5, time_limit=3600,
                     save=False, built_df=False, eleccion='2021_Presidencial', estandarizar=False, 
                     n_pls_components=0, train_frac = 1.0, K_folds = 5, k_fold = 1, seed_train=0, split_distritos = False, 
                     alpha = None, beta = None, start_iter = 0, bootstrap_seed = None, groups='ALL', atributos_circ=False, distmin=False,
                     comuna=False, circ=False, dummies_circ=False):
    assert 0 < train_frac <= 1, 'train_frac must be greater than 0 and less than or equal to one'
    # get data
    x_bc, w_bg, v_da, v_da_df, e_bd, e_bd_df, candidatos, grupos, _ = get_xwve_from_election(regiones_filtro=regiones_filtro, 
                                                            atributos_filtro=atributos_filtro, 
                                                            built_df=built_df, 
                                                            eleccion=eleccion, 
                                                            estandarizar=estandarizar,
                                                            n_pls_components=n_pls_components,
                                                            groups=groups,
                                                            atributos_circ=atributos_circ,
                                                            distmin=distmin)

    # Divide df into train and test
    x_bc_train, x_bc_test, w_bg_train, w_bg_test, e_bd_train, e_bd_test, e_bd_df_train, e_bd_df_test, names_distritos_train, names_distritos_test = train_test_split_manual(x_bc, w_bg, e_bd, e_bd_df, test_size=1-train_frac, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed=bootstrap_seed)
    # With K_folds > 1, divide the training set into K_folds
    x_bc_trainf, x_bc_val, w_bg_trainf, w_bg_val, e_bd_trainf, e_bd_val, names_distritos_trainf, names_distritos_val = k_fold_from_train_manual(x_bc_train, w_bg_train, e_bd_train, e_bd_df_train, K_folds = K_folds, k_fold = k_fold, random_state=seed_train, split_distritos=split_distritos, bootstrap_seed = bootstrap_seed)
    # print(f'names_distritos_val = {names_distritos_val}')
    # print(f'v_da_df = {v_da_df}')

    # Filter comunas of v_da_df
    v_da_df = v_da_df.loc[names_distritos_val]

    # PCA variance percentage plot
    if False:
        # Aplicar PCA con el número seleccionado de componentes
        pca_selected = PCA(n_components=n_pca_components)
        principal_components = pca_selected.fit_transform(v_da_df)
        pca = PCA()
        pca.fit(v_da_df)
        cumulative_explained_variance = np.cumsum(pca.explained_variance_ratio_)
        plt.plot(range(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o', linestyle='-')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Cumulative Explained Variance')
        plt.title('Cumulative Explained Variance vs. Number of Principal Components')
        plt.grid(True)
        plt.axvline(x=n_pca_components, color='red', linestyle='--', label=f'n = {n_pca_components}')
        plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/PCA_variance_percentage_K{K_folds}_k{k_fold}.png')
        plt.show()
        exit()

    start_time = time.time()  # Start timer for sim_election
    beta_opt, alpha_opt, n_EM_iter, razon_parada, diff_ll, list_alpha, list_beta = EM_algorithm(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, alpha=alpha, beta=beta, max_iterations=max_iterations, tolerance_ab=EM_tolerance_ab, tolerance_ll=EM_tolerance_ll, time_limit=time_limit, start_iter=start_iter)

    print(f"beta_opt = {beta_opt}")
    print(f"alpha_opt = {alpha_opt}")
    EM_time = time.time() - start_time  # End timer for sim_election
    print(f"tiempo de EM_algorithm: {EM_time:.2f} segundos")

    # compute the log-likelihood
    # likelihood_trainf, _ = compute_ll(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, beta_opt, alpha_opt, verbose=True, add_text='train')
    likelihood_trainf = compute_ll_multinomial(x_bc_trainf, w_bg_trainf, v_da, e_bd_trainf, beta_opt, alpha_opt, verbose=True, add_text='train')
    if train_frac < 1.0:
        # likelihood_test, _ = compute_ll(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None
        likelihood_test = compute_ll_multinomial(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True, add_text='test') if train_frac < 1.0 else None
    else:
        likelihood_test = None
    if K_folds > 1:
        # likelihood_val, _ = compute_ll(x_bc_val, w_bg_val, v_da, e_bd_val, beta_opt, alpha_opt, verbose=True, add_text='val') if train_frac < 1.0 else None
        likelihood_val = compute_ll_multinomial(x_bc_val, w_bg_val, v_da, e_bd_val, beta_opt, alpha_opt, verbose=True, add_text='val') if train_frac < 1.0 else None
    else:
        likelihood_val = None

    # create dictionary to then store results
    results = {'regiones_filtro': regiones_filtro, 
               'atributos_filtro': atributos_filtro, 
               'max_iterations': max_iterations,
               'n_pls_components': n_pls_components,
                'train_frac': train_frac,
                'K_folds': K_folds,
                'k_fold': k_fold,
                'seed_train': seed_train,
                'split_distritos': split_distritos,
                'EM_tolerance_ab': EM_tolerance_ab,
                'EM_tolerance_ll': EM_tolerance_ll,
                'names_distritos_trainf': names_distritos_trainf,
                'names_distritos_val': names_distritos_val,
                'names_distritos_test': names_distritos_test,
                'beta_opt': beta_opt, 
               'alpha_opt': alpha_opt,
                'n_EM_iter': n_EM_iter, 
                'razon_parada': razon_parada,
                'diff_ll': diff_ll,
                'list_alpha': list_alpha,
                'list_beta': list_beta,
                'EM_time': EM_time,
                'max_abs_alpha': np.max(np.abs(alpha_opt)),
                'max_abs_beta': np.max(np.abs(beta_opt)),
               'likelihood_trainf': likelihood_trainf, 
               'likelihood_val': likelihood_val,
               'likelihood_test': likelihood_test,
               'bootstrap_seed': bootstrap_seed,
               'candidatos': candidatos,
               'grupos': grupos,
               'atributos_circ': atributos_circ,
               'distmin': distmin,
               'comuna': comuna,
               'circ': circ,
               'dummies_circ': dummies_circ}
    results_seriazable = {key: convert_to_serializable(value) for key, value in results.items()}
    # Save the variables to a file
    if save:
        method = "PLS"
        filename =  generate_filename(method=method, train_frac=train_frac, K_folds = K_folds, k_fold=k_fold, split_distritos=split_distritos, 
                                    n_pca_components=None, n_pls_components = n_pls_components, seed_train = seed_train, bootstrap_seed = bootstrap_seed, 
                                    lambda_alpha = None, lambda_beta = None, n_attributes = None,
                                    fs_etapa = None, fs_atributo = None, extention = "", groups=groups, eleccion=eleccion,
                                    atributos_circ=atributos_circ, distmin=distmin, comuna=comuna, circ=circ, dummies_circ=dummies_circ)

        with open(f'{filename}.json', 'w') as file:
            json.dump(results_seriazable, file, indent=4)  # indent=4 for pretty-printing
        file.close()
        with open(f'{filename}.pkl', 'wb') as file:
            pickle.dump(results, file)
        file.close()

    return beta_opt, alpha_opt

# funcion que corre el EM para primera vuelta de elección de 2021
def run_P2021_EM(max_iterations=100, EM_tolerance_ab=1e-4, EM_tolerance_ll=0.5, time_limit=3600, save=False, built_df=False, eleccion='2021_Presidencial', 
                 estandarizar=False, method = 'PCA', pca_=True, ridge1 = None, lambda_beta = 0.0, lambda_alpha = 0.0, split_distritos=False, train_frac = 1.0, 
                 K_folds = 5, k_fold = 1, continue_ = False, seed_train = 0, bootstrap_seed = None, fs_etapa = 0, fs_atributo = 0, groups='ALL',
                 K_folds_prev = 4, train_frac_prev = 0.8, atributos_circ=False, distmin=False, comuna=False, circ=False, dummies_circ=False):
    #regiones_filtro = ['METROPOLITANA DE SANTIAGO']
    regiones_filtro = []
    # atributos_filtro = ["SEBASTIAN PIÑERA ECHENIQUE_Porcentaje", "ALEJANDRO GUILLIER ALVAREZ_Porcentaje", 
    #                    "BEATRIZ SANCHEZ MUÑOZ_Porcentaje", "prom_soc8b_com"]

    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    if method == 'PCA':
        # set n_pca_components to the first line argument of the terminal
        n_pca_components = int(sys.argv[4])

        if continue_:
            # get alpha and beta from file
            filename = generate_filename(method='PCA', train_frac=train_frac, K_folds=K_folds, k_fold=k_fold, split_distritos=split_distritos, 
                                        n_pca_components=n_pca_components, seed_train=seed_train, bootstrap_seed=bootstrap_seed, 
                                        lambda_alpha = None, lambda_beta = None, n_attributes = None,
                                        fs_etapa = None, fs_atributo = None, extention = "", atributos_circ=atributos_circ)
            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
            file.close()
            list_alpha = results.get('list_alpha', None)
            # get the penultimate alpha
            alpha = list_alpha[-2]
            list_beta = results.get('list_beta', None)
            # get the penultimate beta
            beta = list_beta[-2]
            n_EM_iter = results.get('n_EM_iter', None)
        else:
            alpha = None
            beta = None
            n_EM_iter = 0

        run_P2021_EM_PCA(regiones_filtro = regiones_filtro, 
                         atributos_filtro = atributos_filtro, 
                         max_iterations=max_iterations, 
                         EM_tolerance_ab=EM_tolerance_ab,
                         EM_tolerance_ll=EM_tolerance_ll,
                         time_limit = time_limit,
                         save=save, 
                         built_df=built_df, 
                         eleccion=eleccion,
                         estandarizar=estandarizar, 
                         n_pca_components=n_pca_components, 
                         train_frac = train_frac, 
                         K_folds = K_folds, 
                         k_fold = k_fold,
                         seed_train=seed_train, 
                         split_distritos=split_distritos,
                         alpha=alpha, 
                         beta=beta,
                         start_iter=n_EM_iter,
                         bootstrap_seed=bootstrap_seed,
                         groups=groups
                         )

    # PLS
    elif method == 'PLS':
        n_pls_components = int(sys.argv[4])

        if continue_:
            # get alpha and beta from file
            filename = generate_filename(method='PLS', train_frac=train_frac, K_folds=K_folds, k_fold=k_fold, split_distritos=split_distritos, 
                                        n_pls_components=n_pls_components, seed_train=seed_train, bootstrap_seed=bootstrap_seed, 
                                        lambda_alpha = None, lambda_beta = None, n_attributes = None,
                                        fs_etapa = None, fs_atributo = None, extention = "", atributos_circ=atributos_circ, distmin=distmin,
                                        comuna=comuna, circ=circ, dummies_circ=dummies_circ)
            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
            file.close()
            list_alpha = results.get('list_alpha', None)
            # get the penultimate alpha
            alpha = list_alpha[-2]
            list_beta = results.get('list_beta', None)
            # get the penultimate beta
            beta = list_beta[-2]
            n_EM_iter = results.get('n_EM_iter', None)

        else:
            alpha = None
            beta = None
            n_EM_iter = 0

        run_P2021_EM_PLS(regiones_filtro=regiones_filtro, 
                         atributos_filtro=atributos_filtro, 
                         max_iterations=max_iterations, 
                         EM_tolerance_ab=EM_tolerance_ab, 
                         EM_tolerance_ll=EM_tolerance_ll, 
                         time_limit=time_limit,
                         save=save,
                         built_df=built_df,
                         eleccion=eleccion,
                         estandarizar=estandarizar,
                         n_pls_components=n_pls_components,
                         train_frac=train_frac,
                         K_folds=K_folds,
                         k_fold=k_fold,
                         seed_train=seed_train,
                         split_distritos=split_distritos,
                         alpha=alpha, 
                         beta=beta, 
                         start_iter=n_EM_iter, 
                         bootstrap_seed=bootstrap_seed, 
                         groups=groups,
                         atributos_circ=atributos_circ,
                         distmin=distmin,
                         comuna=comuna,
                         circ=circ,
                         dummies_circ=dummies_circ) 
    
    # forward selection 
    elif method == 'FS':
        variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }

        def decode_fs_etapa_atributo(numero):
            # Convertimos el número a string y aseguramos que tenga 4 dígitos
            numero_str = str(numero).zfill(4)
            
            # Decodificamos la etapa y el atributo
            etapa = int(numero_str[:2])  # Primer dígito
            print(f"\n\tetapa = {etapa}")
            atributo = int(numero_str[2:])  # Dos últimos dígitos
            print(f"\n\tatributo = {atributo}")
            
            # Validamos que la etapa y el atributo estén dentro de los límites
            if etapa < 0:
                raise ValueError("La etapa debe ser 0 o mayor.")
            
            if etapa == 0:
                return etapa, None  # Sin atributos en la etapa 0

            return etapa, atributo
        
        if bootstrap_seed is None:
            fs_etapa, fs_atributo = decode_fs_etapa_atributo(sys.argv[4])

            if fs_etapa == 0:
                run_P2021_EM_FS(regiones_filtro=regiones_filtro, 
                                atributos_filtro=[], 
                                max_iterations=max_iterations, 
                                EM_tolerance_ab=EM_tolerance_ab, 
                                EM_tolerance_ll=EM_tolerance_ll, 
                                time_limit=time_limit,
                                save=save, 
                                built_df=built_df, 
                                eleccion=eleccion,
                                estandarizar=estandarizar, 
                                train_frac=train_frac,
                                K_folds=K_folds,
                                k_fold=k_fold,
                                seed_train=seed_train, 
                                split_distritos=split_distritos, 
                                alpha=None, 
                                beta=None, 
                                start_iter=0, 
                                bootstrap_seed=bootstrap_seed,
                                fs_etapa=fs_etapa, 
                                fs_atributo=fs_atributo,
                                groups=groups,
                                atributos_circ=atributos_circ,
                                distmin=distmin,
                                comuna=comuna,
                                circ=circ
                                )
                
            elif fs_etapa == 1:
                paquete = list(variables_package.keys())[fs_atributo]
                atributos_filtro_subset = variables_package[paquete]
                # print(f"\n\tatributos_filtro_subset = {atributos_filtro_subset}")
                # exit()
                
                run_P2021_EM_FS(regiones_filtro=regiones_filtro, 
                                atributos_filtro=atributos_filtro_subset, 
                                max_iterations=max_iterations, 
                                EM_tolerance_ab=EM_tolerance_ab, 
                                EM_tolerance_ll=EM_tolerance_ll, 
                                time_limit=time_limit,
                                save=save, 
                                built_df=built_df, 
                                eleccion=eleccion,
                                estandarizar=estandarizar, 
                                train_frac=train_frac, 
                                K_folds=K_folds,
                                k_fold=k_fold,
                                seed_train=seed_train, 
                                split_distritos=split_distritos, 
                                alpha=None, 
                                beta=None, 
                                start_iter=0, 
                                bootstrap_seed=bootstrap_seed,
                                fs_etapa=fs_etapa, 
                                fs_atributo=fs_atributo,
                                groups=groups,
                                atributos_circ=atributos_circ,
                                distmin=distmin,
                                comuna=comuna,
                                circ=circ,
                                dummies_circ=dummies_circ
                                )
                
            else:
                fs_etapa, fs_atributo = decode_fs_etapa_atributo(sys.argv[4])
                fs_etapa_anterior = fs_etapa - 1
                fs_atributo_anterior = len(variables_package) - (fs_etapa - 2)

                ll_test_dict = defaultdict(list)
                atributos_dict = defaultdict(list)
                alpha_dict = defaultdict(list)
                beta_dict = defaultdict(list)

                for k_ in range(1, K_folds_prev + 1):
                    for i in range(fs_atributo_anterior):
                        filename = generate_filename(
                            method="FS",
                            train_frac=train_frac_prev,
                            K_folds=K_folds_prev,
                            k_fold=k_,
                            split_distritos=split_distritos,
                            seed_train=seed_train,
                            bootstrap_seed=bootstrap_seed,
                            fs_etapa=fs_etapa_anterior,
                            fs_atributo=i,
                            groups='ALL',
                            eleccion=eleccion,
                            atributos_circ=atributos_circ,
                            distmin=distmin,
                            comuna=comuna,
                            circ=circ,
                            dummies_circ=dummies_circ
                        )

                        if not os.path.exists(f'{filename}.pkl'):
                            raise FileNotFoundError(f"No existe {filename}.pkl")

                        with open(f'{filename}.pkl', 'rb') as f:
                            results = pickle.load(f)

                        ll_test_dict[i].append(results['likelihood_val'])
                        atributos_dict[i] = results['atributos_filtro']
                        alpha_dict[i].append(results['alpha_opt'])
                        beta_dict[i].append(results['beta_opt'])

                max_avg_ll = -np.inf
                best_atributo = None
                for i, vals in ll_test_dict.items():
                    avg_ll = np.mean(vals)
                    if avg_ll > max_avg_ll:
                        max_avg_ll = avg_ll
                        best_atributo = i

                atributos_filtro_subset = atributos_dict[best_atributo]
                alpha = np.mean(alpha_dict[best_atributo], axis=0)
                beta = np.mean(beta_dict[best_atributo], axis=0)

                # --- AGREGAR UN NUEVO PAQUETE COMPLETO ---
                mapa_var_paquete = {v: p for p, lst in variables_package.items() for v in lst}
                paquetes_sel = {mapa_var_paquete[v] for v in atributos_filtro_subset if v in mapa_var_paquete}
                paquetes_restantes = [p for p in variables_package if p not in paquetes_sel]

                if fs_atributo >= len(paquetes_restantes):
                    raise ValueError(f"fs_atributo={fs_atributo} fuera de rango ({len(paquetes_restantes)} paquetes restantes)")

                nuevo_paquete = paquetes_restantes[fs_atributo]
                atributos_nuevos = variables_package[nuevo_paquete]
                atributos_filtro_subset += atributos_nuevos

                print(f"\n🧩 Etapa {fs_etapa}: se agregó el paquete '{nuevo_paquete}' con {len(atributos_nuevos)} variables:")
                for v in atributos_nuevos:
                    print(f"   - {v}")

                # Ajustar alpha
                n_nuevas = len(atributos_nuevos)
                alpha = np.column_stack((alpha, np.zeros((alpha.shape[0], n_nuevas))))

                # Ejecutar modelo
                run_P2021_EM_FS(
                    regiones_filtro=regiones_filtro,
                    atributos_filtro=atributos_filtro_subset,
                    max_iterations=max_iterations,
                    EM_tolerance_ab=EM_tolerance_ab,
                    EM_tolerance_ll=EM_tolerance_ll,
                    time_limit=time_limit,
                    save=save,
                    built_df=built_df,
                    eleccion=eleccion,
                    estandarizar=estandarizar,
                    train_frac=train_frac,
                    K_folds=K_folds,
                    k_fold=k_fold,
                    seed_train=seed_train,
                    split_distritos=split_distritos,
                    alpha=alpha,
                    beta=None,
                    start_iter=0,
                    bootstrap_seed=bootstrap_seed,
                    fs_etapa=fs_etapa,
                    fs_atributo=fs_atributo,
                    groups=groups,
                    atributos_circ=atributos_circ,
                    distmin=distmin,
                    comuna=comuna,
                    circ=circ,
                    dummies_circ=dummies_circ
                )
            
        if bootstrap_seed is not None:
            fs_etapa = int(sys.argv[4]) + 1
            fs_atributo = len(atributos_filtro) - (fs_etapa)

            fs_etapa_anterior = fs_etapa - 1
            fs_atributo_anterior = len(atributos_filtro) - (fs_etapa - 2)

            # Diccionario para almacenar valores de likelihood por atributo para cada fold
            ll_test_dict = defaultdict(list)
            atributos_dict = defaultdict(list)
            alpha_dict = defaultdict(list)
            beta_dict = defaultdict(list)

            for k_ in range(1, K_folds_prev+1):
                for i in range(fs_atributo_anterior):
                    filename = generate_filename(method="FS", train_frac=train_frac, K_folds=K_folds_prev, k_fold=k_, 
                                                split_distritos=split_distritos, n_pca_components=None, seed_train=seed_train, 
                                                bootstrap_seed=None, lambda_alpha=None, lambda_beta=None, n_attributes=None,
                                                fs_etapa=fs_etapa_anterior, fs_atributo=i, extention = "")
                    # check if the file exists
                    if not os.path.exists(f'{filename}.pkl'):
                        print(f"\n\trun_P2021_EM: El archivo {filename}.pkl no existe.\n\tSe ha terminado la ejecución\n")
                        exit()

                    with open(f'{filename}.pkl', 'rb') as file:
                        results = pickle.load(file)
                    file.close()

                    ll_test = results.get('likelihood_val', None)
                    atributos = results.get('atributos_filtro', None)
                    alpha = results.get('alpha_opt', None)
                    beta = results.get('beta_opt', None)

                    # Guardar valores en los diccionarios, agregando valores por cada fold
                    ll_test_dict[i].append(ll_test)
                    atributos_dict[i] = atributos
                    alpha_dict[i].append(alpha)
                    beta_dict[i].append(beta)

            # Calcular el promedio de likelihood para cada atributo y encontrar el máximo
            max_avg_ll = -np.inf
            best_atributo = None

            for i, ll_values in ll_test_dict.items():
                avg_ll = np.mean(ll_values)  # Promediar valores de likelihood por fold para cada atributo
                if avg_ll > max_avg_ll:
                    max_avg_ll = avg_ll
                    best_atributo = i

            # Obtener la información del mejor atributo
            atributos_filtro_subset = atributos_dict[best_atributo]
            print(f"\n\tatributos_filtro_subset = {atributos_filtro_subset}")
            # exit()

            alpha = alpha_dict[best_atributo]
            # get mean of alpha
            alpha = np.mean(alpha, axis=0)
            # print(f"\n\talpha = {alpha}")
            beta = beta_dict[best_atributo]
            # get mean of beta
            beta = np.mean(beta, axis=0)
            # print(f"\n\tbeta = {beta}")
            # exit()

            #Run the EM algorithm
            run_P2021_EM_FS(regiones_filtro=regiones_filtro, 
                            atributos_filtro=atributos_filtro_subset,
                            max_iterations=max_iterations, 
                            EM_tolerance_ab=EM_tolerance_ab, 
                            EM_tolerance_ll=EM_tolerance_ll, 
                            time_limit=time_limit,
                            save=save, 
                            built_df=built_df, 
                            eleccion=eleccion,
                            estandarizar=estandarizar, 
                            train_frac=train_frac, 
                            K_folds=K_folds,
                            k_fold=k_fold,
                            seed_train=seed_train, 
                            split_distritos=split_distritos, 
                            alpha=None, 
                            beta=None, 
                            start_iter=0, 
                            bootstrap_seed=bootstrap_seed,
                            fs_etapa=fs_etapa-1, 
                            fs_atributo=None,
                            groups=groups,
                            atributos_circ=atributos_circ,
                            distmin=distmin,
                            comuna=comuna,
                            circ=circ
                            )
    
    elif method == 'FSLOO':
        code = str(int(sys.argv[4])).zfill(4)   # ej.  0100  0201
        etapa      = int(code[:2])              # 01, 02 …
        idx_attr   = int(code[2:])              # 00, 01 …

        variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }

        # ── etapa 1 : TODAS las variables ──────────────────────────
        if etapa == 1:
            atributos = [v for lst in variables_package.values() for v in lst]
            run_P2021_EM_FS(
                regiones_filtro = regiones_filtro,
                atributos_filtro = atributos,
                fs_etapa = 1, fs_atributo = None,
                max_iterations = max_iterations,
                EM_tolerance_ab = EM_tolerance_ab,
                EM_tolerance_ll = EM_tolerance_ll,
                time_limit = time_limit,
                save = save, built_df = built_df,
                eleccion = eleccion,
                estandarizar = estandarizar,
                train_frac = train_frac,
                K_folds = K_folds, k_fold = k_fold,
                seed_train = seed_train,
                split_distritos = split_distritos,
                bootstrap_seed = bootstrap_seed,
                groups = groups,
                atributos_circ = atributos_circ,
                distmin = distmin,
                comuna = comuna, circ = circ, dummies_circ = dummies_circ,
                method_tag = "FSLOO"
            )

        # ── etapa 2 : leave-one-out ────────────────────────────────
        if etapa == 2:
            paquetes = list(variables_package.keys())
            if idx_attr >= len(paquetes):
                raise ValueError(f"Paquete {idx_attr:02d} fuera de rango (máx {len(paquetes)-1})")

            paquete_out = paquetes[idx_attr]
            attrs_in = [v for p,lst in variables_package.items() if p != paquete_out for v in lst]

            run_P2021_EM_FS(
                regiones_filtro = regiones_filtro,
                atributos_filtro = attrs_in,
                fs_etapa = 2, fs_atributo = idx_attr,
                max_iterations = max_iterations,
                EM_tolerance_ab = EM_tolerance_ab,
                EM_tolerance_ll = EM_tolerance_ll,
                time_limit = time_limit,
                save = save, built_df = built_df,
                eleccion = eleccion,
                estandarizar = estandarizar,
                train_frac = train_frac,
                K_folds = K_folds, k_fold = k_fold,
                seed_train = seed_train,
                split_distritos = split_distritos,
                bootstrap_seed = bootstrap_seed,
                groups = groups,
                atributos_circ = atributos_circ,
                distmin = distmin,
                comuna = comuna, circ = circ, dummies_circ = dummies_circ,
                method_tag = "FSLOO"
            )

    # ================================================================
    # MÉTODO  FSRAND   (máscara Bernoulli 0.5, semilla = argv[4])
    # ================================================================
    elif method == 'FSRAND':
        seed_rand = int(sys.argv[4])          # ← la semilla obligatoria

        variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }

        # ------- versión por PAQUETE (Bernoulli 0.5) ---------------------
        paquetes = list(variables_package.keys())           # ❶ nombres de paquetes
        rng       = np.random.default_rng(seed_rand)
        mask_pkg  = rng.random(len(paquetes)) < 0.5         # ❷ máscara por paquete

        # ❸ variables incluidas = unión de paquetes cuyo mask==True
        attrs = [
            v
            for keep, p in zip(mask_pkg, paquetes) if keep
            for v in variables_package[p]
        ]

        # Si se excluyeron todos los paquetes, forzamos uno cualquiera
        if not attrs:
            p_force = rng.choice(paquetes)
            attrs   = variables_package[p_force]

        run_P2021_EM_FS(
            regiones_filtro = regiones_filtro,
            atributos_filtro = attrs,
            fs_etapa = 0, fs_atributo = seed_rand,
            max_iterations = max_iterations,
            EM_tolerance_ab = EM_tolerance_ab,
            EM_tolerance_ll = EM_tolerance_ll,
            time_limit = time_limit,
            save = save, built_df = built_df,
            eleccion = eleccion,
            estandarizar = estandarizar,
            train_frac = train_frac,
            K_folds = K_folds, k_fold = k_fold,
            seed_train = seed_train,
            split_distritos = split_distritos,
            bootstrap_seed = bootstrap_seed,
            groups = groups,
            atributos_circ = atributos_circ,
            distmin = distmin,
            comuna = comuna, circ = circ, dummies_circ = dummies_circ,
            method_tag = "FSRAND"
        )
    
    return None

# funcion que corre el EM para primera vuelta de elección de 2021 usando argumentos en linea
def run_P2021_EM_args():
    # check with assert that the first argument must be either pca or ridge1 or ridge23
    assert sys.argv[1].lower() in [
        'pca', 'ridge1', 'ridge23',
        'fs', 'pls',
        'fsloo',   # ← leave-one-package-out
        'fsrand',  # ← random mask (p=0.5)
    ], "Método no soportado"
    
    # Upper case the first argument
    method = sys.argv[1].upper()
    train_frac = float(sys.argv[2])
    split_distritos = True if sys.argv[3] == 'T' else False
    K_folds = int(sys.argv[5])
    k_fold = int(sys.argv[6])
    
    # 2021_Presidencial
    # 2023_Plebiscito

    run_P2021_EM(max_iterations=10000000, EM_tolerance_ab=1e-4, EM_tolerance_ll=1e-4, time_limit=1*60*60, save=True, built_df=False, 
                 eleccion='2023_Plebiscito', method = method, split_distritos=split_distritos, train_frac = train_frac, 
                 K_folds = K_folds, k_fold = k_fold, continue_ = False, groups='ALL', K_folds_prev=4, train_frac_prev=0.8,
                 atributos_circ=True, distmin=True, comuna=True, circ=True, dummies_circ=True)

    return None

# funcion que corre el EM para primera vuelta de elección de 2021
def run_P2021_EM_args_bootstrap():
    # check with assert that the first argument must be either pca or ridge1 or ridge23
    assert sys.argv[1] in ['pca', 'ridge1', 'ridge23', 'fs', 'pls'], "The first argument must be either pca or ridge1 or ridge23"
    # Upper case the first argument
    method = sys.argv[1].upper()
    train_frac = float(sys.argv[2])
    split_distritos = True if sys.argv[3] == 'T' else False
    K_folds = int(sys.argv[5])
    k_fold = int(sys.argv[6])
    bootstrap_seed = int(sys.argv[7])

    # 2021_Presidencial
    # 2023_Plebiscito

    run_P2021_EM(max_iterations=10000000, EM_tolerance_ab=1e-4, EM_tolerance_ll=1e-4, time_limit=1*60*60, save=True, built_df=False, 
                 eleccion='2023_Plebiscito', method = method, split_distritos=split_distritos, train_frac=train_frac, 
                 bootstrap_seed = bootstrap_seed, K_folds = K_folds, k_fold = k_fold, continue_ = False, groups='ALL', K_folds_prev=4,
                 train_frac_prev=0.8, atributos_circ=True, distmin=True, comuna=True, circ=True, dummies_circ=True)
    
    return None

# function that plots the log-likelihood in train and test sets in PCA
def plot_likelihood_pca(save_plots = False, K_folds = 5):
    n_pca_min = 1
    n_pca_max = 55

    train_frac = 0.8 # 50, 60, 70, 80, 90
    split_distritos = True #True, False

    n_pca_range = list(range(n_pca_min, n_pca_max + 1))

    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)

    k_fold = list(range(1, K_folds + 1))

    for k_ in k_fold:
        ll_trainf = []
        ll_val = []
        for n_pca_components in n_pca_range:
            filename = generate_filename(method='PCA', train_frac=train_frac, K_folds=K_folds, k_fold=k_, split_distritos=split_distritos, 
                        n_pca_components=n_pca_components, seed_train = 0, bootstrap_seed = None, 
                        lambda_alpha = None, lambda_beta = None, n_attributes = None,
                        fs_etapa = None, fs_atributo = None, extention = "")
            # generate_filename(pca_, train_frac, split_distritos, None, None, None, n_pca_components, extention = "")
            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
            file.close()
            ll_trainf.append(results.get('likelihood_trainf', None))
            ll_val.append(results.get('likelihood_val', None))
    
        # make the plot for test data
        plt.figure(figsize=(10, 6))
        plt.plot(n_pca_range, ll_trainf, marker='o', linestyle='-', color='b', label='Trainf')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Log-likelihood')
        plt.title(f'Train Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        plt.legend(loc='lower center')
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/Train_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()
    
        plt.figure(figsize=(10, 6))
        plt.plot(n_pca_range, ll_val, marker='o', linestyle='-', color='r', label='Test')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Log-likelihood')
        plt.title(f'Test Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        plt.legend(loc='lower center')
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/Test_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()

        # plot both curves in the same plot with secondsry y axis
        fig, ax1 = plt.subplots(figsize=(10, 6))
        color = 'tab:blue'
        ax1.set_xlabel('Number of Principal Components')
        ax1.set_ylabel('Train Log-likelihood', color=color)
        train_line, = ax1.plot(n_pca_range, ll_trainf, marker='o', linestyle='-', color='b', label='Train')
        ax1.tick_params(axis='y', labelcolor=color)
        # ax1.legend(loc='upper left')
        ax2 = ax1.twinx()
        color = 'tab:red'
        ax2.set_ylabel('Test Log-likelihood', color=color)
        test_line, = ax2.plot(n_pca_range, ll_val, marker='o', linestyle='-', color='r', label='Test')
        ax2.tick_params(axis='y', labelcolor=color)
        # ax2.legend(loc='upper right')
        # Combine legends from both axes
        lines = [train_line, test_line]
        labels = [line.get_label() for line in lines]
        ax1.legend(lines, labels, loc='lower center')
        plt.title(f'Train and Test Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/Train_and_Test_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()

    return None

#function that plots the average log-likelihood in train and val sets in PCA
def plot_avg_likelihood_pca(save_plots=False, K_folds=5):
    n_pca_min = 1
    n_pca_max = 40 # 55
    train_frac = 0.8
    split_distritos = True
    n_pca_range = list(range(n_pca_min, n_pca_max + 1))

    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)

    avg_ll_trainf = []
    avg_ll_val = []
    avg_ll_test = []

    for n_pca_components in n_pca_range:
        ll_trainf_k = []
        ll_val_k = []
        ll_test_k = []

        for k_ in range(1, K_folds + 1):
            filename = generate_filename(method='PCA', train_frac=train_frac, K_folds=K_folds, k_fold=k_, 
                                         split_distritos=split_distritos, n_pca_components=n_pca_components, 
                                         seed_train=0, bootstrap_seed=None, lambda_alpha=None, 
                                         lambda_beta=None, n_attributes=None, fs_etapa=None, fs_atributo=None, extention="")

            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
                
            ll_trainf_k.append(results.get('likelihood_trainf', None))
            ll_val_k.append(results.get('likelihood_val', None))
            ll_test_k.append(results.get('likelihood_test', None))
        
        # Promedios para cada n_pca_components
        avg_ll_trainf.append(np.mean(ll_trainf_k))
        avg_ll_val.append(np.mean(ll_val_k))
        avg_ll_test.append(np.mean(ll_test_k))

    # Encontrar el número de componentes de PCA donde el log-verosimilitud de prueba es máximo
    max_test_idx = np.argmax(avg_ll_val)
    max_test_pca = n_pca_range[max_test_idx]
    max_test_value = avg_ll_val[max_test_idx]

    # Crear la figura y el eje principal
    fig, ax1 = plt.subplots(figsize=(12, 8))
    
    # Eje principal para Trainf
    color_train = 'tab:blue'
    ax1.set_xlabel('Number of Principal Components')
    ax1.set_ylabel('Trainf Average Log-likelihood', color=color_train)
    train_line, = ax1.plot(n_pca_range, avg_ll_trainf, marker='o', linestyle='-', color=color_train, label='Trainf Average')
    ax1.tick_params(axis='y', labelcolor=color_train)

    # Eje secundario para Val
    ax2 = ax1.twinx()
    color_val = 'tab:red'
    ax2.set_ylabel('Val Average Log-likelihood', color=color_val)
    val_line, = ax2.plot(n_pca_range, avg_ll_val, marker='o', linestyle='-', color=color_val, label='Val Average')
    ax2.tick_params(axis='y', labelcolor=color_val)

    # Eje terciario para Test
    ax3 = ax1.twinx()
    color_test = 'tab:green'
    ax3.spines['right'].set_position(('outward', 60))  # Desplazar el tercer eje hacia la derecha
    ax3.set_ylabel('Test Average Log-likelihood', color=color_test)
    test_line, = ax3.plot(n_pca_range, avg_ll_test, marker='o', linestyle='-', color=color_test, label='Test Average')
    ax3.tick_params(axis='y', labelcolor=color_test)

    # Línea vertical y anotación en el máximo log-verosimilitud de validación
    ax1.axvline(x=max_test_pca, color='gray', linestyle='--', label=f'Max Val Likelihood at {max_test_pca} PCs')
    ax2.annotate(f'Max: {max_test_pca} PCs', xy=(max_test_pca, max_test_value), 
                 xytext=(max_test_pca+2, max_test_value), textcoords='data', 
                 arrowprops=dict(facecolor='black', arrowstyle='->'),
                 color='red')

    # Combinar leyendas de los tres ejes
    lines = [train_line, val_line, test_line]
    labels = [line.get_label() for line in lines]
    ax1.legend(lines, labels, loc='lower center', ncol=3)

    # Título y opciones para guardar
    plt.title(f'Average Train, Val, and Test Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds})')
    if save_plots:
        plt.savefig(f'{COD_FOLDER}Outputs/PCA_kfold/Avg_Train_Val_Test_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}.png')
    plt.show()

    return None

# function that plots the log-likelihood in train and test sets in PCA
def plot_likelihood_pls(save_plots = False, K_folds = 5):
    n_pls_min = 1
    n_pls_max = 55

    train_frac = 0.8 # 50, 60, 70, 80, 90
    split_distritos = True #True, False

    n_pls_range = list(range(n_pls_min, n_pls_max + 1))

    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)

    k_fold = list(range(1, K_folds + 1))

    for k_ in k_fold:
        ll_trainf = []
        ll_val = []
        for n_pls_components in n_pls_range:
            filename = generate_filename(method='PLS', train_frac=train_frac, K_folds=K_folds, k_fold=k_, split_distritos=split_distritos, 
                        n_pls_components=n_pls_components, seed_train = 0, bootstrap_seed = None, 
                        lambda_alpha = None, lambda_beta = None, n_attributes = None,
                        fs_etapa = None, fs_atributo = None, extention = "")
            # generate_filename(pca_, train_frac, split_distritos, None, None, None, n_pca_components, extention = "")
            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
            file.close()
            ll_trainf.append(results.get('likelihood_trainf', None))
            ll_val.append(results.get('likelihood_val', None))
    
        # make the plot for test data
        plt.figure(figsize=(10, 6))
        plt.plot(n_pls_range, ll_trainf, marker='o', linestyle='-', color='b', label='Trainf')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Log-likelihood')
        plt.title(f'Train Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        plt.legend(loc='lower center')
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold/Train_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()
    
        plt.figure(figsize=(10, 6))
        plt.plot(n_pls_range, ll_val, marker='o', linestyle='-', color='r', label='Test')
        plt.xlabel('Number of Principal Components')
        plt.ylabel('Log-likelihood')
        plt.title(f'Test Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        plt.legend(loc='lower center')
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold/Test_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()

        # plot both curves in the same plot with secondsry y axis
        fig, ax1 = plt.subplots(figsize=(10, 6))
        color = 'tab:blue'
        ax1.set_xlabel('Number of Principal Components')
        ax1.set_ylabel('Train Log-likelihood', color=color)
        train_line, = ax1.plot(n_pls_range, ll_trainf, marker='o', linestyle='-', color='b', label='Train')
        ax1.tick_params(axis='y', labelcolor=color)
        # ax1.legend(loc='upper left')
        ax2 = ax1.twinx()
        color = 'tab:red'
        ax2.set_ylabel('Test Log-likelihood', color=color)
        test_line, = ax2.plot(n_pls_range, ll_val, marker='o', linestyle='-', color='r', label='Test')
        ax2.tick_params(axis='y', labelcolor=color)
        # ax2.legend(loc='upper right')
        # Combine legends from both axes
        lines = [train_line, test_line]
        labels = [line.get_label() for line in lines]
        ax1.legend(lines, labels, loc='lower center')
        plt.title(f'Train and Test Log-likelihood vs. Number of Principal Components ({split_label}, {train_frac_percentage}% Train, K = {K_folds}, k = {k_})')
        # plt.grid(True)
        if save_plots:
            plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold/Train_and_Test_Log-likelihood_vs_Number_of_Principal_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_k{k_}.png')
        plt.show()

    return None

# Function that plots the average log-likelihood in train and val sets using PLS
def plot_avg_likelihood_pls(n_pls_min=1, n_pls_max=50, train_frac=0.8, split_distritos=True, groups='ALL', eleccion='2021_Presidencial', 
                            K_folds=5, atributos_circ=False, distmin=False, save_plots=False, comuna=True, circ=True, dummies_circ=True):
    
    n_pls_range = list(range(n_pls_min, n_pls_max + 1))
    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)

    avg_ll_trainf = []
    avg_ll_val = []

    for n_pls_components in n_pls_range:
        ll_trainf_k = []
        ll_val_k = []

        for k_ in range(1, K_folds + 1):
            filename = generate_filename(method='PLS', train_frac=train_frac, K_folds=K_folds, k_fold=k_, 
                                         split_distritos=split_distritos, n_pls_components=n_pls_components, 
                                         seed_train=0, bootstrap_seed=None, lambda_alpha=None, 
                                         lambda_beta=None, n_attributes=None, fs_etapa=None, fs_atributo=None, extention="",
                                         groups=groups, eleccion=eleccion, atributos_circ=atributos_circ, distmin=distmin,
                                         comuna=comuna, circ=circ, dummies_circ=dummies_circ)

            with open(f'{filename}.pkl', 'rb') as file:
                results = pickle.load(file)
                
            ll_trainf_k.append(results.get('likelihood_trainf', None))
            ll_val_k.append(results.get('likelihood_val', None))
        
        avg_ll_trainf.append(np.mean(ll_trainf_k))
        avg_ll_val.append(np.mean(ll_val_k))

    # Encontrar el número de variables latentes con mejor log-verosimilitud de validación
    max_val_idx = np.argmax(avg_ll_val)
    max_val_pls = n_pls_range[max_val_idx]
    max_val_value = avg_ll_val[max_val_idx]

    print(f"Máximo log-verosimilitud de validación encontrado en {max_val_pls} variables latentes.")
    print(f"Valor máximo de log-verosimilitud de validación: {max_val_value:.4f}")

    # Crear la figura
    fig, ax1 = plt.subplots(figsize=(12, 8))
    
    miles_fmt = mtick.FuncFormatter(
        lambda x, pos: f"{x:,.0f}".replace(",", "X").replace(".", ",").replace("X", ".")
    )
    
    color_train = 'tab:blue'
    color_val = 'tab:red'

    ax1.set_xlabel('Número de variables latentes', fontsize=13)
    ax1.set_ylabel('Log-verosimilitud promedio (entrenamiento)', color=color_train, fontsize=13)
    train_line, = ax1.plot(n_pls_range, avg_ll_trainf, marker='o', linestyle='-', color=color_train, label='Entrenamiento')
    ax1.tick_params(axis='y', labelcolor=color_train)
    ax1.yaxis.set_major_formatter(miles_fmt)  # eje de entrenamiento

    ax2 = ax1.twinx()
    ax2.set_ylabel('Log-verosimilitud promedio (validación)', color=color_val, fontsize=13)
    val_line, = ax2.plot(n_pls_range, avg_ll_val, marker='o', linestyle='-', color=color_val, label='Validación')
    ax2.tick_params(axis='y', labelcolor=color_val)
    ax2.yaxis.set_major_formatter(miles_fmt)  # eje de validación

    ax1.axvline(x=max_val_pls, color='gray', linestyle='--', label=f'Max. Log-verosimilitud de validación en {max_val_pls} vars')
    ax2.annotate(f'Max: {max_val_pls}', xy=(max_val_pls, max_val_value), 
                 xytext=(max_val_pls + 2, max_val_value), textcoords='data',
                 arrowprops=dict(facecolor='black', arrowstyle='->'), color='green', fontsize=13)

    lines = [train_line, val_line]
    labels = [line.get_label() for line in lines]
    ax1.legend(lines, labels, loc='lower center', ncol=2, fontsize=13)

    plt.title(
        f"Log-verosimilitud promedio vs. número de variables latentes "
        f"({train_frac_percentage}% entrenamiento, K = {K_folds})",
        fontsize=13
    )

    if save_plots:
        folder_prefix = f'{COD_FOLDER}Outputs/PLS_kfold_2021' if eleccion == '2021_Presidencial' else f'{COD_FOLDER}Outputs/PLS_kfold_2023'
        carpeta = f'{folder_prefix}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
        nombre = f'Avg_Train_Val_Log-likelihood_vs_Number_of_Latent_Variables_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.png'
        plt.savefig(f'{carpeta}/{nombre}')
        
    plt.show()

    return None

def get_best_pls_latex_table(
    combinaciones: list[tuple[bool, bool, bool]],
    n_pls_max: int = 100,
    train_frac: float = 0.8,
    split_distritos: bool = True,
    groups: str = "ALL",
    eleccion: str = "2021_Presidencial",
    K_folds: int = 5,
    atributos_circ: bool = False,
    distmin: bool = False,
):
    """
    Retorna una tabla LaTeX con el mejor valor de validación y n_components
    para cada combinación, usando ✔︎ y ✘ en vez de T/F.
    """
    filas = []
    for comuna, circ, dummies_circ in combinaciones:
        n_pls_range = range(1, n_pls_max + 1)
        avg_ll_val = []

        for n_pls_components in n_pls_range:
            ll_val_k = []

            for k_ in range(1, K_folds + 1):
                filename = generate_filename(
                    method="PLS",
                    train_frac=train_frac,
                    K_folds=K_folds,
                    k_fold=k_,
                    split_distritos=split_distritos,
                    n_pls_components=n_pls_components,
                    seed_train=0,
                    bootstrap_seed=None,
                    lambda_alpha=None,
                    lambda_beta=None,
                    n_attributes=None,
                    fs_etapa=None,
                    fs_atributo=None,
                    extention="",
                    groups=groups,
                    eleccion=eleccion,
                    atributos_circ=atributos_circ,
                    distmin=distmin,
                    comuna=comuna,
                    circ=circ,
                    dummies_circ=dummies_circ,
                )

                try:
                    with open(f"{filename}.pkl", "rb") as file:
                        results = pickle.load(file)
                        ll = results.get("likelihood_val")
                        if ll is not None:
                            ll_val_k.append(ll)
                except FileNotFoundError:
                    break  # no existe el archivo → terminar este n

            if ll_val_k:
                avg_ll_val.append(np.mean(ll_val_k))
            else:
                break  # ya no hay más componentes viables

        if avg_ll_val:
            best_n = int(np.argmax(avg_ll_val) + 1)
            best_val = avg_ll_val[best_n - 1]
            filas.append((comuna, circ, dummies_circ, best_n, best_val))
        else:
            filas.append((comuna, circ, dummies_circ, "--", "--"))

    # === Construir LaTeX ===
    tick = r"\Checkmark"  # ✔︎
    cross = r""  # ✘
    # cross = r"\XSolid"  # ✘

    latex_lines = [
        r"\begin{table}[H]",
        r"\centering",
        r"\begin{tabular}{ccc cc}",
        r"\toprule",
        r"Comuna & Distrito & Dummies Distrito & Mejor n.º comp. & Log-Verosimilitud \\",
        r"\midrule",
    ]

    for comuna, circ, dummies, best_n, best_val in filas:
        comuna_str = tick if comuna else cross
        circ_str = tick if circ else cross
        dummies_str = tick if dummies else cross

        if isinstance(best_val, float):
            val_str = f"{best_val:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")
        else:
            val_str = best_val

        latex_lines.append(
            f"{comuna_str} & {circ_str} & {dummies_str} & {best_n} & {val_str} \\\\"
        )

    latex_lines += [
        r"\bottomrule",
        r"\end{tabular}",
        r"\caption{Mejor cantidad de componentes PLS y log-verosimilitud de validación para cada combinación.}",
        r"\label{tab:best_pls}",
        r"\end{table}",
    ]

    return "\n".join(latex_lines)

from typing import Literal

def evaluar_aporte_paquetes(
    carpeta_base: str,
    method: Literal["FSLOO", "FSRAND"] = "FSLOO",
    eleccion: str = "2021_Presidencial",
    grupos: str = "ALL",
    atributos_circ: bool = False,
    distmin: bool = True,
    comuna: bool = True,
    circ: bool = True,
    dummies_circ: bool = True,
    train_frac: float = 0.8,
    K_folds: int = 4,
    seeds: list[int] = list(range(4)),
    verbose: bool = False,
):
    variables_package = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }
    
    paquetes = list(variables_package.keys())

    sufijo_eleccion = "_2021" if eleccion == "2021_Presidencial" else "_2023"
    carpeta = os.path.join(
        "Outputs", carpeta_base,
        f"{method}_kfold{sufijo_eleccion}",
        f"{grupos}{'_circ' if atributos_circ else ''}",
        "distmin" if distmin else "distprom"
    )

    registros = []

    if method == "FSLOO":
        etapa1_vals = []
        for k_ in range(1, K_folds + 1):
            nombre1 = f"{method}_tf{int(train_frac*100)}_K{K_folds}_k{k_}_scT_st0_sb{'n'}_e1_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}.pkl"
            ruta1 = os.path.join(carpeta, nombre1)
            if not os.path.exists(ruta1): continue
            with open(ruta1, "rb") as f:
                etapa1_vals.append(pickle.load(f)["likelihood_val"])
        ll_todas = np.mean(etapa1_vals)

        for idx, paquete in enumerate(paquetes):
            vals = []
            verificados = 0
            for k_ in range(1, K_folds + 1):
                nombre2 = f"{method}_tf{int(train_frac*100)}_K{K_folds}_k{k_}_scT_st0_sb{'n'}_e2_a{idx}_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}.pkl"
                ruta2 = os.path.join(carpeta, nombre2)
                if not os.path.exists(ruta2): 
                    raise FileNotFoundError(
                        f"El archivo {ruta2} no existe. Verifica que el método y los parámetros sean correctos."
                    )
                with open(ruta2, "rb") as f:
                    data = pickle.load(f)
                atributos_usados = data.get("atributos_filtro", [])
                if any(v in atributos_usados for v in variables_package[paquete]):
                    raise ValueError(
                        f"El paquete {paquete} no debería estar presente en los atributos filtrados."
                    )
                vals.append(data["likelihood_val"])
                verificados += 1

            if vals:
                registros.append({
                    "paquete": paquete,
                    "ll_con": ll_todas,
                    "ll_sin": np.mean(vals),
                    "delta_ll": ll_todas - np.mean(vals),
                    "archivos_sin_paquete": verificados,
                    "total_archivos_esperado": K_folds
                })

    elif method == "FSRAND":
        apariciones = defaultdict(list)
        ausencias = defaultdict(list)

        for seed in seeds:
            ll_vals_fold = []
            usados_semilla = None  # Para guardar los atributos usados por esta semilla

            for k_ in range(1, K_folds+1):
                nombre = (
                    f"{method}_tf{int(train_frac*100)}_K{K_folds}_k{k_}"
                    f"_scT_st0_sbn_e0_a{seed}_comuna{'T' if comuna else 'F'}"
                    f"_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}.pkl"
                )
                ruta = os.path.join(carpeta, nombre)
                if not os.path.exists(ruta):
                    raise FileNotFoundError(f"Archivo no encontrado: {ruta}")
                # print(f"Procesando archivo: {ruta}")
                
                with open(ruta, "rb") as f:
                    data = pickle.load(f)
                ll_vals_fold.append(data["likelihood_val"])
                if usados_semilla is None:
                    usados_semilla = data.get("atributos_filtro", [])
            
            ll_prom_seed = np.mean(ll_vals_fold)

            for paquete in paquetes:
                atributos = variables_package[paquete]
                if any(v in usados_semilla for v in atributos):
                    apariciones[paquete].append(ll_prom_seed)
                else:
                    ausencias[paquete].append(ll_prom_seed)

        for paquete in paquetes:
            if apariciones[paquete] and ausencias[paquete]:
                registros.append({
                    "paquete": paquete,
                    "ll_con": np.mean(apariciones[paquete]),
                    "ll_sin": np.mean(ausencias[paquete]),
                    "delta_ll": np.mean(apariciones[paquete]) - np.mean(ausencias[paquete]),
                    "n_veces_presente": len(apariciones[paquete]),
                    "n_veces_ausente": len(ausencias[paquete]),
                })

    return pd.DataFrame(registros).sort_values("delta_ll", ascending=False)

def plot_ll_comparacion_doble(df: pd.DataFrame, titulo="Impacto en log-verosimilitud",
                               guardar=False, nombre_archivo="ll_comparacion.png", COD_FOLDER=".",
                               method="FSLOO", eleccion="2021_Presidencial", distmin=True, dpi=300,
                               renombrar_variables: dict = None, top_n=20):
    import matplotlib.pyplot as plt
    import numpy as np
    import os
    from matplotlib.ticker import FuncFormatter

    df = df.sort_values("delta_ll", ascending=False).head(top_n).copy()

    if renombrar_variables:
        df["paquete"] = df["paquete"].apply(lambda x: renombrar_variables.get(x, x))

    etiquetas = df["paquete"].tolist()
    ll_con = df["ll_con"].to_numpy()
    ll_sin = df["ll_sin"].to_numpy()
    delta = df["delta_ll"].to_numpy()
    y_pos = np.arange(len(etiquetas))

    fig, ax = plt.subplots(figsize=(15, max(6, len(etiquetas) * 0.6)))

    # Dibujar líneas entre puntos
    for i, (x1, x2) in enumerate(zip(ll_sin, ll_con)):
        ax.plot([x1, x2], [i, i], color="gray", linewidth=1.5, zorder=1)

    # Dibujar puntos
    ax.scatter(ll_sin, y_pos, color="red", label="Sin variable", s=80, zorder=2, edgecolor="black")
    ax.scatter(ll_con, y_pos, color="green", label="Con variable", s=80, zorder=2, edgecolor="black")

    # Calcular posición horizontal uniforme para todos los textos
    ll_min = min(ll_sin.min(), ll_con.min())
    ll_max = max(ll_sin.max(), ll_con.max())
    if eleccion == "2021_Presidencial" and method == "FSLOO":
        valor = 0.08
    elif eleccion == "2023_Plebiscito" and method == "FSLOO":
        valor = 0.10
    elif eleccion == "2021_Presidencial" and method == "FSRAND":
        valor = 0.12
    elif eleccion == "2023_Plebiscito" and method == "FSRAND":
        valor = 0.12

    x_texto_base = ll_max + valor * abs(ll_max - ll_min)

    for i, d in enumerate(delta):
        texto = f"{'+' if d >= 0 else ''}{d:,.1f}".replace(",", "X").replace(".", ",").replace("X", ".")
        ax.text(x_texto_base, i, texto, va="center", ha="right", fontsize=13)

    # Formato
    ax.set_yticks(y_pos)
    ax.set_yticklabels(etiquetas, fontsize=13)
    ax.set_xlabel("Log-verosimilitud de validación", fontsize=14)
    ax.set_title(titulo, fontsize=16)
    ax.grid(True, axis="x", linestyle="--", alpha=0.4)

    ax.xaxis.set_major_formatter(FuncFormatter(lambda x, _: f"{int(x):,}".replace(",", ".")))
    ax.legend(loc="lower left", fontsize=13)
    ax.invert_yaxis()

    # Mover la línea vertical negra (grilla) hacia la derecha
    margen = 0.15 * abs(ll_max - ll_min)  # más espacio a la derecha
    ax.set_xlim(ll_min - 0.02 * abs(ll_max - ll_min), ll_max + margen)

    plt.tight_layout()

    if guardar:
        output_path = (
            f"{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/ALL_circ/"
            f"{'distmin' if distmin else 'distprom'}/{nombre_archivo}"
        )
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        plt.savefig(output_path, dpi=dpi)
        print(f"Figura guardada en: {os.path.abspath(output_path)}")

    plt.show()
    return fig










def plot_likelihood_ridge_1(save_plots = False):
    n_ridge_min = 0
    n_ridge_max = len(lambda_alpha_arr_args) * len(lambda_beta_arr_args) - 1


    train_frac = 0.8 # 50, 60, 70, 80, 90
    split_distritos = True # True, False


    n_ridge_range = list(range(n_ridge_min, n_ridge_max + 1))
    ll_train = []
    ll_test = []


    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)


    for n_ridge_components in n_ridge_range:
        pca_ = False
        lambda_alpha, lambda_beta = decode_alpha_beta(n_ridge_components, lambda_alpha_arr=lambda_alpha_arr_args, lambda_beta_arr=lambda_beta_arr_args)
        filename = generate_filename(pca_, train_frac, split_distritos, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha, n_attributes=None, n_pca_components=None, extention = "")
        with open(f'{filename}.pkl', 'rb') as file:
            results = pickle.load(file)
        file.close()
        ll_train.append(results.get('likelihood_train', None))
        ll_test.append(results.get('likelihood_test', None))


    # make a heat map of the log-likelihood in the test set
    ll_test_matrix = np.array(ll_test).reshape(len(lambda_alpha_arr_args), len(lambda_beta_arr_args))
    plt.figure(figsize=(10, 6))
    sns.heatmap(ll_test_matrix, annot=True, fmt=".2f", xticklabels=lambda_beta_arr_args, yticklabels=lambda_alpha_arr_args)
    plt.xlabel('Ridge Lambda Beta')
    plt.ylabel('Ridge Lambda Alpha')
    plt.title(f'Test Log-likelihood vs. Ridge Lambda Beta and Lambda Alpha ({split_label}, {train_frac_percentage}% Train)')
    if save_plots:
        plt.savefig(f'{COD_FOLDER}Outputs/Ridge/Test_Log-likelihood_vs_Ridge_Lambda_Beta_and_Lambda_Alpha_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}.png')
    plt.show()


    return None

def plot_likelihood_ridge_23(save_plots = False):
    n_components_min = 1
    n_components_max = len(lambda_alpha_arr_args) * len(lambda_beta_arr_args) - 2


    train_frac = 0.8 # 50, 60, 70, 80, 90
    split_distritos = True # True, False


    n_ridge_range = list(range(n_components_min, n_components_max + 1))
    ll_train = []
    ll_test = []


    split_label = "SplitC" if split_distritos else "SplitM"
    train_frac_percentage = int(train_frac * 100)


    for n_ridge_components in n_ridge_range:
        pca_ = False
        filename = generate_filename(pca_, train_frac, split_distritos, lambda_beta=0, lambda_alpha=0, n_attributes=n_ridge_components, n_pca_components=None, extention = "")
        with open(f'{filename}.pkl', 'rb') as file:
            results = pickle.load(file)
        file.close()
        ll_train.append(results.get('likelihood_train', None))
        ll_test.append(results.get('likelihood_test', None))


    #make a plot of the log-likelihood in the train set
    plt.figure(figsize=(10, 6))
    plt.plot(n_ridge_range, ll_train, marker='o', linestyle='-', color='b', label='Train')
    plt.xlabel('Number of Ridge Components')
    plt.ylabel('Log-likelihood')
    plt.title(f'Train Log-likelihood vs. Number of Ridge Components ({split_label}, {train_frac_percentage}% Train)')
    # plt.grid(True)
    plt.legend(loc='lower center')
    if save_plots:
        plt.savefig(f'{COD_FOLDER}Outputs/Ridge/Train_Log-likelihood_vs_Number_of_Ridge_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}.png')
    plt.show()


    #make a plot of the log-likelihood in the test set
    plt.figure(figsize=(10, 6))
    plt.plot(n_ridge_range, ll_test, marker='o', linestyle='-', color='r', label='Test')
    plt.xlabel('Number of Ridge Components')
    plt.ylabel('Log-likelihood')
    plt.title(f'Test Log-likelihood vs. Number of Ridge Components ({split_label}, {train_frac_percentage}% Train)')
    # plt.grid(True)
    plt.legend(loc='lower center')
    if save_plots:
        plt.savefig(f'{COD_FOLDER}Outputs/Ridge/Test_Log-likelihood_vs_Number_of_Ridge_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}.png')
    plt.show()


    # plot both curves in the same plot with secondsry y axis
    fig, ax1 = plt.subplots(figsize=(10, 6))
    color = 'tab:blue'
    ax1.set_xlabel('Number of Ridge Components')
    ax1.set_ylabel('Train Log-likelihood', color=color)
    train_line, = ax1.plot(n_ridge_range, ll_train, marker='o', linestyle='-', color='b', label='Train')
    ax1.tick_params(axis='y', labelcolor=color)
    # ax1.legend(loc='upper left')
    ax2 = ax1.twinx()
    color = 'tab:red'
    ax2.set_ylabel('Test Log-likelihood', color=color)
    test_line, = ax2.plot(n_ridge_range, ll_test, marker='o', linestyle='-', color='r', label='Test')
    ax2.tick_params(axis='y', labelcolor=color)
    # ax2.legend(loc='upper right')
    # Combine legends from both axes
    lines = [train_line, test_line]
    labels = [line.get_label() for line in lines]
    ax1.legend(lines, labels, loc='lower center')
    plt.title(f'Train and Test Log-likelihood vs. Number of Ridge Components ({split_label}, {train_frac_percentage}% Train)')
    # plt.grid(True)
    if save_plots:
        plt.savefig(f'{COD_FOLDER}Outputs/Ridge/Train_and_Test_Log-likelihood_vs_Number_of_Ridge_Components_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}.png')
    plt.show()


    return None

def generar_tablas_por_razon_parada(razones_parada, base_filename='tabla'):
    # Convertir el diccionario a una lista de tuplas (lambda_beta, lambda_alpha, razon_parada, count)
    data = [(k[0], k[1], k[2], v) for k, v in razones_parada.items()]
    
    # Crear un DataFrame a partir de la lista
    df = pd.DataFrame(data, columns=['lambda_beta', 'lambda_alpha', 'razon_parada', 'count'])
    
    # Ordenar el DataFrame por lambda_beta, lambda_alpha y razon_parada
    df_sorted = df.sort_values(by=['lambda_beta', 'lambda_alpha', 'razon_parada'])
    
    # Obtener todas las razones de parada únicas
    razones_unicas = df_sorted['razon_parada'].unique()
    
    # Generar y guardar una tabla LaTeX para cada razon_parada
    for razon in razones_unicas:
        df_filtrado = df_sorted[df_sorted['razon_parada'] == razon]
        
        # Convertir a formato LaTeX
        tabla_latex = df_filtrado.to_latex(index=False)
        
        # Guardar la tabla en un archivo .tex con un nombre específico para la razón de parada
        archivo_tex = f'{base_filename}_{razon}.tex'
        with open(archivo_tex, 'w') as f:
            f.write(tabla_latex)
        
        print(f'Tabla para {razon} guardada en {archivo_tex}')

# funcion para procesar un archivo y obtener el likelihood 
def procesar_archivo(file_path, ll_train = None, ll_test = None, variable = None):
    likelihood_train = None  # Initialize as None
    likelihood_test = None   # Initialize as None

    if os.path.exists(file_path):
        with open(file_path, 'rb') as file:
            results = pickle.load(file)
        
        # Use .get() to safely access dictionary keys
        likelihood_train = results.get('likelihood_train')
        likelihood_test = results.get('likelihood_test')

        # Ensure ll_train and ll_test are dictionaries before assigning values
        if ll_train is not None and likelihood_train is not None:
            if variable is None:
                ll_train[file_path] = likelihood_train
            else:
                ll_train[variable] = likelihood_train
        
        if ll_test is not None and likelihood_test is not None:
            if variable is None:
                ll_test[file_path] = likelihood_test
            else:
                ll_test[variable] = likelihood_test
        
    else:
        print(f'El archivo {file_path} no existe.')

#function that returns maximum likelihood in test set and the name of the file
def get_max_likelihood(pca_ = False, ridge_1 = False):
    train_frac_list = [0.8]
    split_distritos_list = [True]
    ll_test = {}

    n_pca_components_list = list(range(1, 65))
    n_ridge_min = 0
    n_ridge_max = len(lambda_alpha_arr_args) * len(lambda_beta_arr_args) - 2
    n_ridge_range = list(range(n_ridge_min, n_ridge_max + 1))

    # Generar todos los posibles nombres de archivo para los criterios dados
    for train_frac in train_frac_list:
        for split_distritos in split_distritos_list:
            if pca_ and not ridge_1:
                for n_pca_components in n_pca_components_list:
                    filename = generate_filename(
                        method = "PCA",
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = None,
                        lambda_alpha = None,
                        n_attributes = None,
                        n_pca_components=n_pca_components,
                        seed_train=0,
                        extention=""
                    )
                    file_path = f'{filename}.pkl'
                    procesar_archivo(file_path, ll_test=ll_test)

            if not pca_ and ridge_1:
                for n_ridge_components in n_ridge_range:
                    lambda_alpha, lambda_beta = decode_alpha_beta(n_ridge_components, lambda_alpha_arr=lambda_alpha_arr_args, lambda_beta_arr=lambda_beta_arr_args)
                    filename = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = lambda_beta,
                        lambda_alpha = lambda_alpha,
                        n_attributes = None,
                        n_pca_components=None,
                        extention=""
                    )
                    file_path = f'{filename}.pkl'
                    procesar_archivo(file_path, ll_test=ll_test)

            if not pca_ and not ridge_1:
                for n_ridge_components in n_ridge_range:
                    filename = generate_filename(
                        method = "Ridge",
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = 0,
                        lambda_alpha = 0,
                        n_attributes = n_ridge_components,
                        n_pca_components=None,
                        extention=""
                    )
                    file_path = f'{filename}.pkl'
                    procesar_archivo(file_path, ll_test=ll_test)
    
    # ordenar ll_test de mayor a menor
    ll_test = {k: v for k, v in sorted(ll_test.items(), key=lambda item: item[1], reverse=True)}
    print(ll_test)
    # obtener el archivo con el mayor likelihood y el valor del likelihood
    max_likelihood_file = list(ll_test.keys())[0]
    print(f'Archivo con mayor likelihood en test set: {max_likelihood_file}')
    return max_likelihood_file

#function that returns maximum likelihood in test set and the name of the file, and sort values
def get_max_likelihood_sorted(pca_ = False, ridge_1 = False):
    file = get_max_likelihood(pca_=pca_, ridge_1=ridge_1)
    with open(file, 'rb') as f:
        results = pickle.load(f)
    f.close()
    
    alpha_opt = results.get('alpha_opt', None) #alpha_opt.shape
    beta_opt = results.get('beta_opt', None) 
    atributos_filtro = results.get('atributos_filtro', None)


    # En cada columna de alpha_opt, restar el de menor y mayor valor y luego aplicarle valor absoluto
    max_vals = np.maximum(np.max(alpha_opt, axis=0), 0)
    min_vals = np.minimum(np.min(alpha_opt, axis=0), 0)
    diff_vals = max_vals - min_vals
    top_indices = np.argsort(-diff_vals)


    # Sort alpha_opt columns according to the sorted attributes
    sorted_alpha_opt = alpha_opt[:, top_indices]
    # Crear una fila de ceros con el mismo número de columnas que el array original
    fila_ceros = np.zeros(sorted_alpha_opt.shape[1])
    # Agregar la fila de ceros al array original
    sorted_alpha_opt = np.vstack([sorted_alpha_opt, fila_ceros])


    # Candidate names
    votes = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', sheet_name='Votación en Chile', skiprows = 6)
    votes = preprocess_string_columns(votes)
    votes['Primer apellido'] = votes['Primer apellido'].fillna('') #.apply(lambda x: x.strip().replace('"',''))
    votes['CANDIDATO'] = votes['Nombres'] + ' ' + votes['Primer apellido']
    votes['CANDIDATO'] = votes['CANDIDATO'].apply(lambda x: x.strip())
    votes.loc[votes['Primer apellido'] == '', 'CANDIDATO'] = votes['Nombres']
    candidatos = [c for c in votes['CANDIDATO'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
    
    # Create a DataFrame where rows are candidates and columns are attributes, sorted by diff
    sorted_alpha_df = pd.DataFrame(
        sorted_alpha_opt, 
        columns=np.array(atributos_filtro)[top_indices],
        index=candidatos
    )


    # Transpose the DataFrame
    sorted_alpha_df = sorted_alpha_df.T


    # print(sorted_alpha_df)


    # Dictionary with descriptions of attributes
    variables_descripcion = {
    "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje": "Porcentaje de votos obtenidos por Sebastián Piñera en las elecciones presidenciales de 2017.",
    "ALEJANDRO GUILLIER ALVAREZ_Porcentaje": "Porcentaje de votos obtenidos por Alejandro Guillier en las elecciones presidenciales de 2017.",
    "BEATRIZ SANCHEZ MUÑOZ_Porcentaje": "Porcentaje de votos obtenidos por Beatriz Sánchez en las elecciones presidenciales de 2017.",
    "activ_Inactivos": "Personas que están fuera de la fuerza laboral.",
    "activ_Ocupados": "Personas que tienen un empleo.",
    "ecivil_En Pareja": "Personas que están en una relación de pareja, ya sea matrimonio o convivencia.",
    "CAROLINA GOIC BOROEVIC_Porcentaje": "Porcentaje de votos obtenidos por Carolina Goic en las elecciones presidenciales de 2017.",
    "JOSE ANTONIO KAST RIST_Porcentaje": "Porcentaje de votos obtenidos por José Antonio Kast en las elecciones presidenciales de 2017.",
    "ecivil_Soltero": "Personas que no están en una relación de pareja.",
    "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje": "Porcentaje de votos obtenidos por Marco Enríquez-Ominami en las elecciones presidenciales de 2017.",
    "numper": "Número total de personas en un hogar.",
    "n_ocupados": "Número de personas con empleo.",
    "n_inactivos": "Número de personas fuera de la fuerza laboral.",
    "ysubh": "Subsidios monetarios recibidos por el hogar.",
    "activ_Desocupados": "Personas que están buscando trabajo pero no lo tienen.",
    "ysub2h": "Nuevos subsidios monetarios recibidos por el hogar.",
    "may60c_Si": "Indica si en el hogar hay personas mayores de 60 años.",
    "edad": "Edad de la persona.",
    "yoautcorh": "Otros ingresos autónomos del hogar, corregidos.",
    "tipohogar_Extenso Monoparental": "Hogar conformado por un solo progenitor y otros familiares (hogar extenso).",
    "men18c_Si": "Indica si en el hogar hay personas menores de 18 años.",
    "sist_salud_Privado": "Personas que tienen acceso a un sistema de salud privado.",
    "pobreza_No pobres": "Personas que no están bajo la línea de pobreza.",
    "s28_Sano": "Personas que se consideran sanas.",
    "Region_METROPOLITANA DE SANTIAGO": "Dummy que indica si la persona vive en la Región Metropolitana de Santiago.",
    "prom_soc8b_com": "Promedio de puntajes en la prueba SIMCE de 8º básico.",
    "r1b_En otra comuna de Chile. Especifique ¿cuál comuna?": "¿En qué comuna o país vivía la madre de [NOMBRE] cuando él/ella nació?",
    "inmigrante_Inmigrante": "Persona que es inmigrante.",
    "zona_Rural": "Persona que vive en una zona rural.",
    "tipohogar_Nuclear Monoparental": "Hogar conformado por un solo progenitor y sus hijos.",
    "sexo_Mujer": "Sexo de la persona, en este caso, mujer.",
    "Region_DE TARAPACA": "Dummy que indica si la persona vive en la Región de Tarapacá.",
    "inmigrante_No sabe": "Persona que no sabe si es inmigrante o no.",
    "tot_hog": "Total de hogares en la vivienda.",
    "tipohogar_Nuclear Biparental": "Hogar conformado por dos progenitores y sus hijos.",
    "r2_No sabe": "¿En qué comuna o país vivía hace 5 años (2015)?",
    "etnia_Pertenece a pueblos indígenas": "Indica si la persona pertenece a algún pueblo indígena.",
    "Region_DE ARICA Y PARINACOTA": "Dummy que indica si la persona vive en la Región de Arica y Parinacota.",
    "v23_No": "La vivienda donde Ud. vive, ¿dispone de un sistema de eliminación de excretas? (Respuesta: No).",
    "EDUARDO ARTES BRICHETTI_Porcentaje": "Porcentaje de votos obtenidos por Eduardo Artés en las elecciones presidenciales de 2017.",
    "Region_DE ANTOFAGASTA": "Dummy que indica si la persona vive en la Región de Antofagasta.",
    "Region_DE ATACAMA": "Dummy que indica si la persona vive en la Región de Atacama.",
    "Region_DEL BIOBIO": "Dummy que indica si la persona vive en la Región del Biobío.",
    "tipohogar_Unipersonal": "Hogar conformado por una sola persona.",
    "pobreza_Pobres extremos": "Personas en situación de pobreza extrema.",
    "tipohogar_Censal": "Tipo de hogar según el censo.",
    "Region_DE VALPARAISO": "Dummy que indica si la persona vive en la Región de Valparaíso.",
    "r2_En otra comuna de Chile. Especifique ¿cuál comuna?": "¿En qué comuna o país vivía hace 5 años (2015)?",
    "v1_No Casa": "¿Cuál es el tipo de vivienda en la que usted reside? (Respuesta: No es una casa).",
    "o31_No": "¿Se encuentra afiliado a algún sistema previsional? (Respuesta: No).",
    "v27": "¿Cuántos dormitorios exclusivos para dormir tiene la vivienda?",
    "r2_Aún no nacía": "Persona que no había nacido hace 5 años.",
    "o31_No sabe": "Persona que no sabe si está afiliada a algún sistema previsional.",
    "v20_No Red": "¿De dónde proviene el agua de la vivienda? (Respuesta: No está conectada a una red).",
    "v13_No Legal": "Su hogar, ¿bajo qué situación ocupa la vivienda? (Respuesta: No es legal).",
    "Region_DE LA ARAUCANIA": "Dummy que indica si la persona vive en la Región de la Araucanía.",
    "Region_DE COQUIMBO": "Dummy que indica si la persona vive en la Región de Coquimbo.",
    "Region_DE LOS RIOS": "Dummy que indica si la persona vive en la Región de Los Ríos.",
    "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO": "Dummy que indica si la persona vive en la Región de Aysén.",
    "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS": "Dummy que indica si la persona vive en la Región de O'Higgins.",
    "Region_DE LOS LAGOS": "Dummy que indica si la persona vive en la Región de Los Lagos.",
    "tipohogar_Extenso Biparental": "Hogar conformado por dos progenitores y otros familiares (hogar extenso).",
    "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA": "Dummy que indica si la persona vive en la Región de Magallanes y la Antártica Chilena.",
    "Region_DEL MAULE": "Dummy que indica si la persona vive en la Región del Maule."
}
    
    # Transform keys to lower case
    variables_descripcion = {k.lower(): v for k, v in variables_descripcion.items()}


    # Sort by alphabetical order of attributes
    variables_descripcion = dict(sorted(variables_descripcion.items()))
    
    # Create a Daraframe with the description of the attributes
    atributos_descripcion = pd.DataFrame(
        list(variables_descripcion.items()),
        columns=['Atributo', 'Descripción']
    )


    # print(atributos_descripcion)


    electors = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', skiprows=6, sheet_name = 'Descripción votantes en Chile')
    electors = preprocess_string_columns(electors)
    electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
    electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
    electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
    grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
    grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g]


    # Crear una fila de ceros con el mismo número de columnas que el array original
    columna_ceros = np.zeros((beta_opt.shape[0], 1))
    # Agregar la fila de ceros al array original
    beta_opt = np.hstack([beta_opt, columna_ceros])


    # Create a DataFrame where rows are groups and columns are candidates
    beta_df = pd.DataFrame(
        beta_opt, 
        columns=candidatos,
        index=grupos
    )


    # print(beta_df)


    # Save both DataFrames to a CSV file, in different sheets
    with pd.ExcelWriter(f'{COD_FOLDER}Outputs/Ridge/Sorted_Alpha_Beta_Opt.xlsx') as writer:
        sorted_alpha_df.to_excel(writer, sheet_name='Alpha', index=True)
        beta_df.to_excel(writer, sheet_name='Beta', index=True)
        atributos_descripcion.to_excel(writer, sheet_name='Atributos', index=False)


    # Save both DataFrames to a Excel file, in different sheets
    # sorted_alpha_df.to_excel(f'{COD_FOLDER}Outputs/Ridge/Sorted_Alpha_Beta_Opt.xlsx', sheet_name='Alpha', index=True)


    
    # Save the DataFrame to a CSV file
    # sorted_alpha_df.to_csv(f'{COD_FOLDER}Outputs/Ridge/Sorted_Alpha_Opt.csv', index=False)
    # Save the DataFrame to a Excel file
    # sorted_alpha_df.to_excel(f'{COD_FOLDER}Outputs/Ridge/Sorted_Alpha_Opt.xlsx', index=False)


    return None
    # return sorted_alpha_df

# function that compares likelihoods in test set for different folders
def compare_likelihoods(pca_ = False, ridge_1 = False, train = True):
    train_frac_list = [0.8]
    split_distritos_list = [True]
    ll_new = {}
    ll_old = {}
    # ll_test_new = {}
    # ll_test_old = {}

    n_pca_components_list = list(range(1, 65))
    n_ridge_min = 0
    n_ridge_max = len(lambda_alpha_arr_args) * len(lambda_beta_arr_args) - 1
    n_ridge_range = list(range(n_ridge_min, n_ridge_max + 1))

    # Generar todos los posibles nombres de archivo para los criterios dados
    for train_frac in train_frac_list:
        for split_distritos in split_distritos_list:
            if pca_ and not ridge_1:
                for n_pca_components in n_pca_components_list:
                    filename_new = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = None,
                        lambda_alpha = None,
                        n_attributes = None,
                        n_pca_components=n_pca_components,
                        extention=""
                    )
                    file_path = f'{filename_new}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_new, variable=n_pca_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_new, variable=n_pca_components)


                    filename_old = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = None,
                        lambda_alpha = None,
                        n_attributes = None,
                        n_pca_components=n_pca_components,
                        folder_PCA="v2_PCA",
                        extention=""
                    )
                    file_path = f'{filename_old}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_old, variable=n_pca_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_old, variable=n_pca_components)


            if not pca_ and ridge_1:
                for n_ridge_components in n_ridge_range:
                    lambda_alpha, lambda_beta = decode_alpha_beta(n_ridge_components, lambda_alpha_arr=lambda_alpha_arr_args, lambda_beta_arr=lambda_beta_arr_args)
                    filename_new = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = lambda_beta,
                        lambda_alpha = lambda_alpha,
                        n_attributes = None,
                        n_pca_components=None,
                        extention=""
                    )
                    file_path = f'{filename_new}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_new, variable=n_ridge_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_new, variable=n_ridge_components)


                    filename_old = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = lambda_beta,
                        lambda_alpha = lambda_alpha,
                        n_attributes = None,
                        n_pca_components=None,
                        folder_PCA="v2_Ridge",
                        extention=""
                    )
                    file_path = f'{filename_old}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_old, variable=n_ridge_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_old, variable=n_ridge_components)


            if not pca_ and not ridge_1:
                for n_ridge_components in n_ridge_range:
                    filename_new = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = 0,
                        lambda_alpha = 0,
                        n_attributes = n_ridge_components,
                        n_pca_components=None,
                        extention=""
                    )
                    file_path = f'{filename_new}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_new, variable=n_ridge_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_new, variable=n_ridge_components)


                    filename_old = generate_filename(
                        pca_ = pca_,
                        train_frac = train_frac,
                        split_distritos = split_distritos,
                        lambda_beta = 0,
                        lambda_alpha = 0,
                        n_attributes = n_ridge_components,
                        n_pca_components=None,
                        folder_PCA="v2_Ridge",
                        extention=""
                    )
                    file_path = f'{filename_old}.pkl'
                    if train:
                        procesar_archivo(file_path=file_path, ll_train=ll_old, variable=n_ridge_components)
                    else:
                        procesar_archivo(file_path=file_path, ll_test=ll_old, variable=n_ridge_components)

    # Imprimir los resultados comparativos
    print(f"{'Component'}\t{'New Likelihood'}\t{'Old Likelihood'}")
    for component in ll_new:
        new_likelihood = ll_new.get(component, "N/A")
        old_likelihood = ll_old.get(component, "N/A")
        print(f"{component}\t\t{new_likelihood:.2f}\t{old_likelihood:.2f}")

    # Grafico con los likelihoods nuevos y viejos
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.plot(ll_new.keys(), ll_new.values(), marker='o', linestyle='-', color='b', label='New')
    ax.plot(ll_old.keys(), ll_old.values(), marker='o', linestyle='-', color='r', label='Old')
    ax.set_xlabel('Number of Components')
    ax.set_ylabel('Log-likelihood')
    ax.set_title('New vs. Old Log-likelihood')
    ax.legend(loc='lower center')
    plt.show()

    # Guardar el gráfico
    fig.savefig(f'{COD_FOLDER}Outputs/Comparative/Log-likelihood_Comparative_Train{"T" if train else "F"}_PCA{"T" if pca_ else "F"}_Ridge1{"T" if ridge_1 else "F"}.png')
    
    return None

def excel_ridge23():
    method = "Ridge"
    train_frac = 0.8
    split_distritos = True
    attributes = 64
    ll_test = {}
    for i in range(1, attributes+1):
        filename =      generate_filename(method, train_frac, split_distritos, 
                        n_pca_components = None, seed_train = None, bootstrap_seed = None, 
                        lambda_alpha = 0, lambda_beta = 0, n_attributes = i,
                        fs_etapa = None, fs_atributo = None, extention = "")
        file_path = f'{filename}.pkl'
        procesar_archivo(file_path, ll_test=ll_test)

    # ordenar ll_test de mayor a menor
    ll_test = {k: v for k, v in sorted(ll_test.items(), key=lambda item: item[1], reverse=True)}
    # obtener el archivo con el mayor likelihood y el valor del likelihood
    max_likelihood_file = list(ll_test.keys())[0]

    # Get variables from this file
    with open(max_likelihood_file, 'rb') as f:
        results = pickle.load(f)
    f.close()

    alpha_opt = results.get('alpha_opt', None) #alpha_opt.shape
    # Crear una fila de ceros con el mismo número de columnas que el array original
    fila_ceros = np.zeros(alpha_opt.shape[1])
    # Agregar la fila de ceros al array original
    alpha_opt = np.vstack([alpha_opt, fila_ceros])

    beta_opt = results.get('beta_opt', None)
    # Crear una fila de ceros con el mismo número de columnas que el array original
    columna_ceros = np.zeros((beta_opt.shape[0], 1))
    # Agregar la fila de ceros al array original
    beta_opt = np.hstack([beta_opt, columna_ceros])

    atributos_filtro = results.get('atributos_filtro', None)

    # Candidate names
    votes = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', sheet_name='Votación en Chile', skiprows = 6)
    votes = preprocess_string_columns(votes)
    votes['Primer apellido'] = votes['Primer apellido'].fillna('') #.apply(lambda x: x.strip().replace('"',''))
    votes['CANDIDATO'] = votes['Nombres'] + ' ' + votes['Primer apellido']
    votes['CANDIDATO'] = votes['CANDIDATO'].apply(lambda x: x.strip())
    votes.loc[votes['Primer apellido'] == '', 'CANDIDATO'] = votes['Nombres']
    candidatos = [c for c in votes['CANDIDATO'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']

    # Create a DataFrame where rows are candidates and columns are attributes, sorted by diff
    sorted_alpha_df = pd.DataFrame(
        alpha_opt, 
        columns=np.array(atributos_filtro),
        index=candidatos
    )

    electors = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', skiprows=6, sheet_name = 'Descripción votantes en Chile')
    electors = preprocess_string_columns(electors)
    electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
    electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
    electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
    grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
    grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g]

    # Create a DataFrame where rows are groups and columns are candidates
    beta_df = pd.DataFrame(
        beta_opt, 
        columns=candidatos,
        index=grupos
    )

    # Dictionary with descriptions of attributes
    variables_descripcion = {
    "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje": "Porcentaje de votos obtenidos por Sebastián Piñera en las elecciones presidenciales de 2017.",
    "ALEJANDRO GUILLIER ALVAREZ_Porcentaje": "Porcentaje de votos obtenidos por Alejandro Guillier en las elecciones presidenciales de 2017.",
    "BEATRIZ SANCHEZ MUÑOZ_Porcentaje": "Porcentaje de votos obtenidos por Beatriz Sánchez en las elecciones presidenciales de 2017.",
    "activ_Inactivos": "Personas que están fuera de la fuerza laboral.",
    "activ_Ocupados": "Personas que tienen un empleo.",
    "ecivil_En Pareja": "Personas que están en una relación de pareja, ya sea matrimonio o convivencia.",
    "CAROLINA GOIC BOROEVIC_Porcentaje": "Porcentaje de votos obtenidos por Carolina Goic en las elecciones presidenciales de 2017.",
    "JOSE ANTONIO KAST RIST_Porcentaje": "Porcentaje de votos obtenidos por José Antonio Kast en las elecciones presidenciales de 2017.",
    "ecivil_Soltero": "Personas que no están en una relación de pareja.",
    "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje": "Porcentaje de votos obtenidos por Marco Enríquez-Ominami en las elecciones presidenciales de 2017.",
    "numper": "Número total de personas en un hogar.",
    "n_ocupados": "Número de personas con empleo.",
    "n_inactivos": "Número de personas fuera de la fuerza laboral.",
    "ysubh": "Subsidios monetarios recibidos por el hogar.",
    "activ_Desocupados": "Personas que están buscando trabajo pero no lo tienen.",
    "ysub2h": "Nuevos subsidios monetarios recibidos por el hogar.",
    "may60c_Si": "Indica si en el hogar hay personas mayores de 60 años.",
    "edad": "Edad de la persona.",
    "yoautcorh": "Otros ingresos autónomos del hogar, corregidos.",
    "tipohogar_Extenso Monoparental": "Hogar conformado por un solo progenitor y otros familiares (hogar extenso).",
    "men18c_Si": "Indica si en el hogar hay personas menores de 18 años.",
    "sist_salud_Privado": "Personas que tienen acceso a un sistema de salud privado.",
    "pobreza_No pobres": "Personas que no están bajo la línea de pobreza.",
    "s28_Sano": "Personas que se consideran sanas.",
    "Region_METROPOLITANA DE SANTIAGO": "Dummy que indica si la persona vive en la Región Metropolitana de Santiago.",
    "prom_soc8b_com": "Promedio de puntajes en la prueba SIMCE de 8º básico.",
    "r1b_En otra comuna de Chile. Especifique ¿cuál comuna?": "¿En qué comuna o país vivía la madre de [NOMBRE] cuando él/ella nació?",
    "inmigrante_Inmigrante": "Persona que es inmigrante.",
    "zona_Rural": "Persona que vive en una zona rural.",
    "tipohogar_Nuclear Monoparental": "Hogar conformado por un solo progenitor y sus hijos.",
    "sexo_Mujer": "Sexo de la persona, en este caso, mujer.",
    "Region_DE TARAPACA": "Dummy que indica si la persona vive en la Región de Tarapacá.",
    "inmigrante_No sabe": "Persona que no sabe si es inmigrante o no.",
    "tot_hog": "Total de hogares en la vivienda.",
    "tipohogar_Nuclear Biparental": "Hogar conformado por dos progenitores y sus hijos.",
    "r2_No sabe": "¿En qué comuna o país vivía hace 5 años (2015)?",
    "etnia_Pertenece a pueblos indígenas": "Indica si la persona pertenece a algún pueblo indígena.",
    "Region_DE ARICA Y PARINACOTA": "Dummy que indica si la persona vive en la Región de Arica y Parinacota.",
    "v23_No": "La vivienda donde Ud. vive, ¿dispone de un sistema de eliminación de excretas? (Respuesta: No).",
    "EDUARDO ARTES BRICHETTI_Porcentaje": "Porcentaje de votos obtenidos por Eduardo Artés en las elecciones presidenciales de 2017.",
    "Region_DE ANTOFAGASTA": "Dummy que indica si la persona vive en la Región de Antofagasta.",
    "Region_DE ATACAMA": "Dummy que indica si la persona vive en la Región de Atacama.",
    "Region_DEL BIOBIO": "Dummy que indica si la persona vive en la Región del Biobío.",
    "tipohogar_Unipersonal": "Hogar conformado por una sola persona.",
    "pobreza_Pobres extremos": "Personas en situación de pobreza extrema.",
    "tipohogar_Censal": "Tipo de hogar según el censo.",
    "Region_DE VALPARAISO": "Dummy que indica si la persona vive en la Región de Valparaíso.",
    "r2_En otra comuna de Chile. Especifique ¿cuál comuna?": "¿En qué comuna o país vivía hace 5 años (2015)?",
    "v1_No Casa": "¿Cuál es el tipo de vivienda en la que usted reside? (Respuesta: No es una casa).",
    "o31_No": "¿Se encuentra afiliado a algún sistema previsional? (Respuesta: No).",
    "v27": "¿Cuántos dormitorios exclusivos para dormir tiene la vivienda?",
    "r2_Aún no nacía": "Persona que no había nacido hace 5 años.",
    "o31_No sabe": "Persona que no sabe si está afiliada a algún sistema previsional.",
    "v20_No Red": "¿De dónde proviene el agua de la vivienda? (Respuesta: No está conectada a una red).",
    "v13_No Legal": "Su hogar, ¿bajo qué situación ocupa la vivienda? (Respuesta: No es legal).",
    "Region_DE LA ARAUCANIA": "Dummy que indica si la persona vive en la Región de la Araucanía.",
    "Region_DE COQUIMBO": "Dummy que indica si la persona vive en la Región de Coquimbo.",
    "Region_DE LOS RIOS": "Dummy que indica si la persona vive en la Región de Los Ríos.",
    "Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO": "Dummy que indica si la persona vive en la Región de Aysén.",
    "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS": "Dummy que indica si la persona vive en la Región de O'Higgins.",
    "Region_DE LOS LAGOS": "Dummy que indica si la persona vive en la Región de Los Lagos.",
    "tipohogar_Extenso Biparental": "Hogar conformado por dos progenitores y otros familiares (hogar extenso).",
    "Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA": "Dummy que indica si la persona vive en la Región de Magallanes y la Antártica Chilena.",
    "Region_DEL MAULE": "Dummy que indica si la persona vive en la Región del Maule."
}
    
    # Transform keys to lower case
    variables_descripcion = {k.lower(): v for k, v in variables_descripcion.items()}

    # Sort by alphabetical order of attributes
    variables_descripcion = dict(sorted(variables_descripcion.items()))
    
    # Create a Daraframe with the description of the attributes
    atributos_descripcion = pd.DataFrame(
        list(variables_descripcion.items()),
        columns=['Atributo', 'Descripción']
    )

    with pd.ExcelWriter(f'{COD_FOLDER}Outputs/Ridge/Sorted_Alpha_Beta_Opt.xlsx') as writer:
        sorted_alpha_df.to_excel(writer, sheet_name='Alpha', index=True)
        beta_df.to_excel(writer, sheet_name='Beta', index=True)
        atributos_descripcion.to_excel(writer, sheet_name='Atributos', index=False)

    return None

def best_pca():
    method = "PCA"
    train_frac = 0.8
    split_distritos = True
    ll_test = {}

    n_pca_components_list = list(range(1, 55+1))

    for n_pca_components in n_pca_components_list:
        filename =      generate_filename(method, train_frac, split_distritos, 
                        n_pca_components = n_pca_components, seed_train = 0, bootstrap_seed = None, 
                        lambda_alpha = 0, lambda_beta = 0, n_attributes = None,
                        fs_etapa = None, fs_atributo = None, extention = "")
        file_path = f'{filename}.pkl'
        procesar_archivo(file_path, ll_test=ll_test)

    # ordenar ll_test de mayor a menor
    ll_test = {k: v for k, v in sorted(ll_test.items(), key=lambda item: item[1], reverse=True)}
    # obtener el archivo con el mayor likelihood y el valor del likelihood
    max_likelihood_file = list(ll_test.keys())[0]
    print(max_likelihood_file)
    return None

#function that between ll_decreciente, returns the one with the lowest time
def lowest_time(method='PCA'):
    if method == 'PCA':
        train_frac = 0.8
        split_distritos = True
        list_time = {}

        n_pca_components_list = list(range(1, 55+1))

        for n_pca_components in n_pca_components_list:
            filename =  generate_filename(method, train_frac, split_distritos, 
                            n_pca_components = n_pca_components, seed_train = 0, bootstrap_seed = None, 
                            lambda_alpha = 0, lambda_beta = 0, n_attributes = None,
                            fs_etapa = None, fs_atributo = None, extention = "")
            file_path = f'{filename}.pkl'
            with open(file_path, 'rb') as f:
                results = pickle.load(f)
            f.close()

            # razon de parada
            razon_parada = results.get('razon_parada', None)
            if razon_parada == 'll decreciente':
                list_time[n_pca_components] = results.get('EM_time', None)

        # Si
        # ordenar list_time de menor a mayor
        list_time = {k: v for k, v in sorted(list_time.items(), key=lambda item: item[1])}   
        # obtener el archivo con el menor tiempo y el valor del tiempo
        min_time_file = list(list_time.keys())[0]
        print(min_time_file)

    if method == 'FS':
        train_frac = 0.8
        split_distritos = True
        etapas = 19
        list_time = {}

        atributo_from = etapas * 100
        atributo_to = etapas * 100 + 55 - (etapas - 1)

        for atributo in range(atributo_to-atributo_from):
            filename = generate_filename(method=method,
                                        train_frac=train_frac,
                                        split_distritos=split_distritos,
                                        seed_train=0,
                                        fs_etapa=etapas,
                                        fs_atributo=atributo)
            file_path = f'{filename}.pkl'
            with open(file_path, 'rb') as f:
                results = pickle.load(f)
            f.close()

            # razon de parada
            razon_parada = results.get('razon_parada', None)
            if razon_parada == 'll decreciente':
                # Save it in the list with stage and attribute
                list_time[atributo] = results.get('EM_time', None)

        # ordenar list_time de menor a mayor
        list_time = {k: v for k, v in sorted(list_time.items(), key=lambda item: item[1])}   
        # obtener el archivo con el menor tiempo y el valor del tiempo
        min_time_file = list(list_time.keys())[0]
        print(min_time_file)
    
    return None

# Function that counts each stopping criterion from a list of files from PCA
def count_stopping_criterion_pca(train_frac, split_distritos, seed_train):
    method = "PCA"
    stopping_criterion_count = {}

    for n_pca_components in range(1, 56):
        # Generate filename and read it
        filename = generate_filename(method=method,
                                    train_frac=train_frac,
                                    split_distritos=split_distritos,
                                    seed_train=seed_train,
                                    n_pca_components=n_pca_components)
        
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the stopping criterion
        stopping_criterion = results.get('razon_parada', None)

        # Count the stopping criterion
        if stopping_criterion is not None:
            if stopping_criterion in stopping_criterion_count:
                stopping_criterion_count[stopping_criterion] += 1
            else:
                stopping_criterion_count[stopping_criterion] = 1

    print(stopping_criterion_count)

    return None

# Function that counts each stopping criterion from a list of files from FS
def count_stopping_criterion_fs(train_frac, split_distritos, seed_train, etapa):
    method = "FS"
    atributo_from = etapa * 100
    atributo_to = etapa * 100 + 55 - (etapa - 1)
    stopping_criterion_count = {}

    for atributo in range(atributo_from, atributo_to):
        # Generate filename and read it
        filename = generate_filename(method=method,
                                    train_frac=train_frac,
                                    split_distritos=split_distritos,
                                    seed_train=seed_train,
                                    fs_etapa=etapa,
                                    fs_atributo=atributo-atributo_from)
        
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the stopping criterion
        stopping_criterion = results.get('razon_parada', None)

        # Count the stopping criterion
        if stopping_criterion is not None:
            if stopping_criterion in stopping_criterion_count:
                stopping_criterion_count[stopping_criterion] += 1
            else:
                stopping_criterion_count[stopping_criterion] = 1

    print(stopping_criterion_count)

    return None

# Function that gets best ll_test for each FS stage
def best_ll_test_fs(etapas, K_folds=5):
    method = "FS"
    train_frac = 0.8
    split_distritos = True
    seed_train = 0
    k_fold = list(range(1, K_folds + 1))

    for k_ in k_fold:
        best_ll_test_per_stage = {}  # Reset for each k_

        for etapa in range(1, etapas + 1):
            atributo_from = etapa * 100
            atributo_to = etapa * 100 + 29 - (etapa - 1)
            best_ll_test = None

            for atributo in range(atributo_to - atributo_from):
                filename = generate_filename(method=method,
                                             train_frac=train_frac,
                                             K_folds=K_folds,
                                             k_fold=k_,
                                             split_distritos=split_distritos,
                                             seed_train=seed_train,
                                             fs_etapa=etapa,
                                             fs_atributo=atributo)
                file_path = f'{filename}.pkl'
                try:
                    with open(file_path, 'rb') as f:
                        results = pickle.load(f)
                    
                    ll_test_value = results.get('likelihood_val', None)
                    if ll_test_value is not None:
                        if best_ll_test is None or ll_test_value > best_ll_test:
                            best_ll_test = ll_test_value
                except FileNotFoundError:
                    print(f'File not found: {file_path}')
                    continue

            if best_ll_test is not None:
                best_ll_test_per_stage[etapa] = best_ll_test

        # Print highest ll_test among all stages for current k_
        if best_ll_test_per_stage:
            best_stage = max(best_ll_test_per_stage, key=best_ll_test_per_stage.get)
            print(f'For k={k_}, highest ll_test: {best_ll_test_per_stage[best_stage]} in stage {best_stage}')

            # Plot best ll_test per stage for current k_
            fig, ax = plt.subplots(figsize=(10, 6))
            ax.plot(best_ll_test_per_stage.keys(), best_ll_test_per_stage.values(), marker='o', linestyle='-', color='b')
            ax.set_xlabel('Stage')
            ax.set_ylabel('Log-likelihood')
            ax.set_title(f'Best Log-likelihood per Stage (k={k_})')
            plt.show()

    return None

# Function that averages ll_test for each FS stage
def plot_avg_likelihood_fs(etapas, K_folds=5, atributos_circ=False, eleccion='2021_Presidencial', groups='ALL', distmin=False, comuna=False, 
                           circ=False, dummies_circ=False, save_plots=False):
    train_frac = 0.8
    split_distritos = True
    seed_train = 0

    best_trainf_per_stage = []
    best_val_per_stage = []
    best_test_per_stage = []

    atributos_filtro = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }
   
    # Iterar sobre cada etapa
    for etapa in range(1, etapas + 1):
        atributo_from = etapa * 100
        atributo_to = etapa * 100 + len(atributos_filtro) - (etapa - 1)
        avg_likelihood_trainf_vals = []
        avg_likelihood_val_vals = []

        for atributo in range(atributo_to - atributo_from):
            likelihood_trainf_vals = []
            likelihood_val_vals = []

            for k_ in range(1, K_folds + 1):
                filename = generate_filename(
                    method="FS",
                    train_frac=train_frac,
                    K_folds=K_folds,
                    k_fold=k_,
                    split_distritos=split_distritos,
                    seed_train=seed_train,
                    fs_etapa=etapa,
                    fs_atributo=atributo,
                    eleccion=eleccion,
                    atributos_circ=atributos_circ,
                    distmin=distmin,
                    comuna=comuna,
                    circ=circ,
                    dummies_circ=dummies_circ
                )
                file_path = f"{filename}.pkl"
                try:
                    with open(file_path, "rb") as f:
                        results = pickle.load(f)
                    likelihood_trainf_vals.append(results.get("likelihood_trainf", 0))
                    likelihood_val_vals.append(results.get("likelihood_val", 0))
                except FileNotFoundError:
                    print(f"File not found: {file_path}")
                    continue

            avg_likelihood_trainf_vals.append(np.mean(likelihood_trainf_vals))
            avg_likelihood_val_vals.append(np.mean(likelihood_val_vals))

        best_trainf_per_stage.append(max(avg_likelihood_trainf_vals))
        best_val_per_stage.append(max(avg_likelihood_val_vals))

        print(f"Etapa {etapa}:")
        print(f" - Mejor promedio Trainf: {best_trainf_per_stage[-1]}")
        print(f" - Mejor promedio Val: {best_val_per_stage[-1]}")

    max_val_stage = np.argmax(best_val_per_stage) + 1

    etapas_range = range(1, etapas + 1)
    fig, ax1 = plt.subplots(figsize=(10, 6))

    miles_fmt = mtick.FuncFormatter(
        lambda x, pos: f"{x:,.0f}".replace(",", "X").replace(".", ",").replace("X", ".")
    )

    # Eje para Trainf
    color_trainf = 'tab:blue'
    ax1.set_xlabel('Etapas', fontsize=13)
    ax1.set_ylabel('Log-verosimilitud promedio (entrenamiento)', color=color_trainf, fontsize=13)
    trainf_line, = ax1.plot(etapas_range, best_trainf_per_stage, marker='o', linestyle='-', color=color_trainf, label='Entrenamiento')
    ax1.tick_params(axis='y', labelcolor=color_trainf)
    ax1.yaxis.set_major_formatter(miles_fmt)  # eje de entrenamiento

    # Eje secundario para Val
    ax2 = ax1.twinx()
    color_val = 'tab:red'
    ax2.set_ylabel('Log-verosimilitud promedio (validación)', color=color_val, fontsize=13)
    val_line, = ax2.plot(etapas_range, best_val_per_stage, marker='o', linestyle='-', color=color_val, label='Validación')
    ax2.tick_params(axis='y', labelcolor=color_val)
    ax2.yaxis.set_major_formatter(miles_fmt)  # eje de validación

    # Línea vertical roja en la etapa con mejor Val
    ax1.axvline(x=max_val_stage, color='red', linestyle='--', label=f'Log-verosimilitud máxima en validación (Etapa {max_val_stage})')

    # Leyenda combinada
    lines = [trainf_line, val_line]
    labels = [line.get_label() for line in lines]
    ax1.legend(lines + [ax1.lines[-1]], labels + [f'LL Max. en validación (Etapa {max_val_stage})'], loc='lower right', fontsize=13)

    plt.title(f'Log-verosimilitud promedio vs. Número de Etapas ({K_folds} Folds)', fontsize=13)

    train_frac_percentage = int(train_frac * 100)

    plt.title(
        f"Log-verosimilitud promedio vs. número de etapas "
        f"({train_frac_percentage}% entrenamiento, K = {K_folds})",
        fontsize=13
    )

    if save_plots:
        if eleccion == '2021_Presidencial':
            plt.savefig(f'{COD_FOLDER}Outputs/FS_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Avg_Train_and_Val_Log-verosimilitud_vs_Stages_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}.png')
        elif eleccion == '2023_Plebiscito':
            plt.savefig(f'{COD_FOLDER}Outputs/FS_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Avg_Train_and_Val_Log-verosimilitud_vs_Stages_tf{int(train_frac*100)}_sc{"T" if split_distritos else "F"}_K{K_folds}.png')

    plt.show()

    return None

# Function that makes an Excel of fs results
def excel_fs(etapas, K_folds=5, eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
             dummies_circ=False):
    method = "FS"
    train_frac = 0.8
    split_distritos = True
    seed_train = 0
    k_fold = list(range(1, K_folds + 1))

    atributos_filtro = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }
    
    # Diccionario inverso: variable individual -> nombre del paquete
    mapa_variable_a_paquete = {
        var: paquete for paquete, lista in atributos_filtro.items() for var in lista
    }

    resultados = {}

    for etapa in range(1, etapas + 1):
        atributo_from = etapa * 100
        atributo_to = etapa * 100 + len(atributos_filtro) - (etapa - 1)
        acumulador_etapa = {}

        for k_ in k_fold:
            for atributo in range(atributo_to - atributo_from):
                filename = generate_filename(
                    method=method,
                    train_frac=train_frac,
                    K_folds=K_folds,
                    k_fold=k_,
                    split_distritos=split_distritos,
                    seed_train=seed_train,
                    fs_etapa=etapa,
                    fs_atributo=atributo,
                    groups='ALL',
                    eleccion=eleccion,
                    atributos_circ=atributos_circ,
                    distmin=distmin,
                    comuna=comuna,
                    circ=circ,
                    dummies_circ=dummies_circ
                )

                file_path = f'{filename}.pkl'
                
                try:
                    with open(file_path, 'rb') as f:
                        results = pickle.load(f)
                    
                    ll_test_value = results.get('likelihood_val', None)
                    if ll_test_value is not None:
                        ll_test_value = ll_test_value.item()

                    lista_atributos = results.get('atributos_filtro', [])
                    if not lista_atributos:
                        continue
                    
                    ultima_variable = lista_atributos[-1]

                    # Solo incluir si pertenece a un paquete definido
                    if ultima_variable not in mapa_variable_a_paquete:
                        continue

                    paquete = mapa_variable_a_paquete[ultima_variable]

                    if ll_test_value is not None:
                        if paquete not in acumulador_etapa:
                            acumulador_etapa[paquete] = []
                        acumulador_etapa[paquete].append(ll_test_value)
                
                except FileNotFoundError:
                    print(f'File not found: {file_path}')
                    continue
        
        for paquete, valores_ll_test in acumulador_etapa.items():
            promedio_ll_test = sum(valores_ll_test) / len(valores_ll_test)
            if paquete not in resultados:
                resultados[paquete] = {}
            resultados[paquete][etapa] = promedio_ll_test

    df_resultados = pd.DataFrame(resultados).T
    print(df_resultados)

    output_path = f'{COD_FOLDER}Outputs/FS_kfold_{eleccion[:4]}/ALL_circ/{"distmin" if distmin else "distprom"}/FS_Results_K{K_folds}.xlsx'
    os.makedirs(os.path.dirname(output_path), exist_ok=True)

    with pd.ExcelWriter(output_path) as writer:
        df_resultados.to_excel(writer, sheet_name='FS_Results', index=True)

    return None

def excel_fs_old(etapas, K_folds=5, eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
             dummies_circ=False):
    method = "FS"
    train_frac = 0.8
    split_distritos = True
    seed_train = 0
    k_fold = list(range(1, K_folds + 1))

    atributos_filtro = {
            'votos_2017': ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje',
                           'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje',
                           'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje'],

            'cant_personas': ['tot_per'],

            'cond_actividad': ['activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos'],

            'dormitorio': ['v27'],

            'zona': ['zona_Urbano'],

            'tipohogar': ['tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental', 
                          'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental'],

            'pobreza': ['pobreza_Pobres no extremos', 'pobreza_No pobres'],

            'situacion_vivienda':['v13_Propia'],

            'años_escolaridad': ['esc2'],

            'ecivil': ['ecivil_En Pareja'],

            'sist_previsional': ['o31_Sí'],

            'salud': ['s28_Sano'],

            'sist_salud': ['sist_salud_Privado'],

            'comuna_madre': ['r1b_En [comuna de ubicación la vivienda]'],

            # 'comuna_5_años_prev': ['r2_En [comuna de ubicación de la vivienda]'],

            # 'inmigrante': ['inmigrante_No inmigrante'],

            # 'etnia': ['etnia_No pertenece a ninguno pueblo indígena'],

            'dinero': ['ytotcor'],

            'nivel_escolaridad': ['educ_Universidad'],

            'SIMCE': ['prom_lect8b_com', 'prom_mate8b_com', 'prom_soc8b_com',],

            # 'Hombres': ['Frac_Hombres'],

            # 'Edad': ['Frac_15-', 'Frac_65+'],

            'Frac_Inmigrantes': ['Frac_Inmigrantes'],

            'Frac_Pueblos': ['Frac_Pueblos'],

            'Vivienda_Ocupada': ['Frac_Viv_Ocupada'], 
            
            'Vivienda_Part_Colect': ['Frac_Viv_Particular', 'Frac_Viv_Colectiva'],

            'Casa_Depa': ['Frac_Casa', 'Frac_Depa'],

            'Frac_Pared': ['Frac_Pared_Horm'],

            'Frac_Techo': ['Frac_Techo_Bueno', 'Frac_Techo_Medio'],

            'Frac_Piso_Bueno': ['Frac_Piso_Bueno'],

            'Frac_Mat_Aceptable': ['Frac_Mat_Aceptable'],

            'Frac_Agua_Aceptable': ['Frac_Agua_Aceptable'],

            'Densidad_Poblacion': ['Densidad_Poblacion'],

            'regiones': ['Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA',
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO'],
        }
    
    # Crear un diccionario para almacenar los resultados
    resultados = {}

    for etapa in range(1, etapas+1):
        atributo_from = etapa * 100
        atributo_to = etapa * 100 + len(atributos_filtro) - (etapa - 1)
        
        # Diccionario para acumular valores de ll_test por atributo en cada etapa
        acumulador_etapa = {}

        for k_ in k_fold:
            for atributo in range(atributo_to - atributo_from):
                filename = generate_filename(
                    method=method,
                    train_frac=train_frac,
                    K_folds=K_folds,
                    k_fold=k_,
                    split_distritos=split_distritos,
                    seed_train=seed_train,
                    fs_etapa=etapa,
                    fs_atributo=atributo,
                    groups='ALL',
                    eleccion=eleccion,
                    atributos_circ=atributos_circ,
                    distmin=distmin,
                    comuna=comuna,
                    circ=circ,
                    dummies_circ=dummies_circ
                )

                file_path = f'{filename}.pkl'
                
                try:
                    with open(file_path, 'rb') as f:
                        results = pickle.load(f)
                    
                    ll_test_value = results.get('likelihood_val', None)
                    if ll_test_value is not None:
                        ll_test_value = ll_test_value.item()

                    ultimo_atributo = results.get('atributos_filtro', atributo)
                    ultimo_atributo = ultimo_atributo[-1]
                    
                    # Si ll_test tiene valor, lo guardamos en acumulador_etapa
                    if ll_test_value is not None:
                        if ultimo_atributo not in acumulador_etapa:
                            acumulador_etapa[ultimo_atributo] = []
                        acumulador_etapa[ultimo_atributo].append(ll_test_value)
                
                except FileNotFoundError:
                    print(f'File not found: {file_path}')
                    continue
        
        # Promediar los valores de k_ para cada atributo en la etapa actual
        for atributo, valores_ll_test in acumulador_etapa.items():
            promedio_ll_test = sum(valores_ll_test) / len(valores_ll_test)
            if atributo not in resultados:
                resultados[atributo] = {}
            resultados[atributo][etapa] = promedio_ll_test

    # Convertir el diccionario en un DataFrame
    df_resultados = pd.DataFrame(resultados).T
    print(df_resultados)

    # Guardar DataFrame en Excel
    if eleccion == '2021_Presidencial':
        with pd.ExcelWriter(f'{COD_FOLDER}Outputs/FS_kfold_2021/ALL_circ/FS_Results_K{K_folds}.xlsx') as writer:
            df_resultados.to_excel(writer, sheet_name='FS_Results', index=True)
    elif eleccion == '2023_Plebiscito':
        with pd.ExcelWriter(f'{COD_FOLDER}Outputs/FS_kfold_2023/ALL_circ/FS_Results_K{K_folds}.xlsx') as writer:
            df_resultados.to_excel(writer, sheet_name='FS_Results', index=True)

    return None

def plot_fs_waterfall_etapas(
    etapas: int,
    K_folds: int = 5,
    eleccion: str = "2021_Presidencial",
    distmin: bool = False,
    COD_FOLDER: str = "",
    titulo: str = "Mejor variable por etapa",
    guardar_figura: bool = False,
    nombre_archivo: str = "fs_waterfall_ll.png",
    dpi: int = 300,
    renombrar_variables: dict  = {}
):
    """
    Gráfico de cascada horizontal con una barra por etapa (mejor paquete),
    mostrando el delta en log-likelihood acumulado.

    - El eje X muestra separador de miles con punto (estándar visual)
    - Las etiquetas de los deltas usan formato chileno (punto miles, coma decimal)
    - Permite renombrar etiquetas del eje Y
    """

    # ---------- Leer Excel ----------
    excel_path = (
        f"{COD_FOLDER}Outputs/FS_kfold_{eleccion[:4]}/ALL_circ/"
        f"{'distmin' if distmin else 'distprom'}/FS_Results_K{K_folds}.xlsx"
    )
    if not os.path.isfile(excel_path):
        raise FileNotFoundError(f"No se encontró el archivo: {excel_path}")

    df = pd.read_excel(excel_path, sheet_name="FS_Results", index_col=0)
    df = df[[col for col in range(1, etapas + 1) if col in df.columns]]

    # ---------- Lógica base nula ----------
    ll_base = df.min().min()  # log-likelihood más bajo observado

    # ---------- Límites del eje X ----------
    ll_min = ll_base  # el eje debe partir desde esta base
    ll_max = df.max().max()

    # ---------- Construir lista de barras ----------
    items = []
    acumulado = None
    for etapa in df.columns:
        mejor_paquete = df[etapa].idxmax()
        valor = df.loc[mejor_paquete, etapa]

        if acumulado is None:
            base = ll_base
            delta = valor - base
            acumulado = valor
        else:
            delta = valor - acumulado
            base = acumulado
            acumulado = valor

        nombre_mostrar = renombrar_variables.get(mejor_paquete, mejor_paquete) if renombrar_variables else mejor_paquete
        items.append((nombre_mostrar, delta, base))

    # ---------- Preparar datos ----------
    labels = [it[0] for it in items]
    deltas = [it[1] for it in items]
    bases  = [it[2] for it in items]

    # ---------- Graficar ----------
    fig_height = max(5, len(labels) * 0.6)
    fig, ax = plt.subplots(figsize=(15, fig_height))

    offset_side = 0.015 * (ll_max - ll_min)

    def formato_chileno(num):
        return f"{num:,.1f}".replace(",", "X").replace(".", ",").replace("X", ".")

    def formato_miles_punto(x, _):
        return f"{int(x):,}".replace(",", ".")

    for i, (label, delta, base) in enumerate(zip(labels, deltas, bases)):
        color = "#77dd77" if delta >= 0 else "tab:red"
        ax.barh(i, delta, left=base, color=color, edgecolor="black")

        texto = f"{'+' if delta >= 0 else ''}{formato_chileno(delta)}"
        if abs(delta) < 10000:
            x_text = base + delta + offset_side if delta >= 0 else base + delta - offset_side
            ha = "left" if delta >= 0 else "right"
        else:
            x_text = base + delta / 2
            ha = "center"

        ax.text(x_text, i, texto, va="center", ha=ha, fontsize=15)

    # ---------- Texto acumulado final ----------
    texto_total = f"Mejor LL-val.: {formato_chileno(acumulado)}"
    ax.text(acumulado, -1, texto_total, ha="right", va="center", fontsize=15, color="black")

    # ---------- Formato ----------
    ax.set_yticks(np.arange(len(labels)))
    ax.set_yticklabels(labels, fontsize=15)
    ax.set_xlabel("Log-likelihood validación acumulado", fontsize=15)
    ax.tick_params(axis='x', labelsize=15)
    ax.set_title(titulo or f"Mejor variable por etapa – {eleccion.replace('_', ' ')}", fontsize=20)
    ax.invert_yaxis()
    ax.grid(True, axis="x", linestyle="--", alpha=0.5)

    margen = 0.01 * abs(ll_min)
    ax.set_xlim(ll_min - margen, ll_max + 4 * margen)

    # ✅ Formato del eje X: punto para separador de miles, punto decimal (estándar)
    ax.xaxis.set_major_formatter(FuncFormatter(formato_miles_punto))

    plt.tight_layout()

    # ---------- Guardar ----------
    if guardar_figura:
        output_path = (
            f"{COD_FOLDER}Outputs/FS_kfold_{eleccion[:4]}/ALL_circ/"
            f"{'distmin' if distmin else 'distprom'}/{nombre_archivo}"
        )
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        plt.savefig(output_path, dpi=dpi)
        print(f"Figura guardada en: {os.path.abspath(output_path)}")

    plt.show()
    return fig





# Get name of the highest likelihood file in a stage
def highest_likelihood_file_by_stage(etapas):
    method = "FS"
    train_frac = 0.8
    split_distritos = True
    seed_train = 0
    best_ll_test_per_stage = {}

    for etapa in range(1, etapas+1):
        atributo_from = etapa * 100
        # print(atributo_from)
        atributo_to = etapa * 100 + 55 - (etapa - 1)
        # print(atributo_to)
        best_ll_test = None
        best_ll_test_file = None

        for atributo in range(atributo_to-atributo_from):
            filename = generate_filename(method=method,
                                        train_frac=train_frac,
                                        split_distritos=split_distritos,
                                        seed_train=seed_train,
                                        fs_etapa=etapa,
                                        fs_atributo=atributo)
            # print(filename)
            file_path = f'{filename}.pkl'
            try:
                with open(file_path, 'rb') as f:
                    results = pickle.load(f)
                f.close()

                ll_test_value = results.get('likelihood_test', None)
                if ll_test_value is not None:
                    if best_ll_test is None or ll_test_value > best_ll_test:
                        best_ll_test = ll_test_value
                        best_ll_test_file = filename
            except FileNotFoundError:
                print(f'File not found: {file_path}')
                continue

        if best_ll_test_file is not None:
            best_ll_test_per_stage[etapa] = best_ll_test_file

    print(best_ll_test_per_stage)

    return None

# function that creates a .csv with the results of alpha and beta
def alpha_beta2csv():
    # read the results of alpha and beta from the .pkl file of FS

    # function that reads alpha and beta and saves them to a .csv file
    def gen_alpha_beta2csv(fullfilename):
        # with open(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e16_a30.pkl', 'r') as file:
        with open(fullfilename+'.pkl', 'rb') as file:
            results = pickle.load(file)
        file.close()
        # Create a list with the results of alpha and beta
        alpha = results.get('alpha_opt', None) # C x A
        beta = results.get('beta_opt', None) # G x C
        candidatos = ["ARTES", "PARISI", "BORIC", "KAST", "MEO", "SICHEL", "PROVOSTE"]
        atributos = results.get('atributos_filtro', None)
        edades = ["18-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "+80"]
        grupos = ['H-'+g for g in edades] + ['M-'+g for g in edades]
        # Create a DataFrame with the results of alpha
        df_alpha = pd.DataFrame(alpha.T, columns=candidatos, index=atributos)
        # Create a DataFrame with the results of beta
        df_beta = pd.DataFrame(beta, columns=candidatos, index=grupos)
        # Save the DataFrame to a .csv file
        # df_alpha.to_csv(fullfilename+'_alpha.csv', index=True)
        df_alpha.to_excel(fullfilename+'_alpha.xlsx', index=True)
        # df_beta.to_csv(fullfilename+'_beta.csv', index=True)
        df_beta.to_excel(fullfilename+'_beta.xlsx', index=True)
        return 0
        # df_beta.to_csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e16_a30_beta.csv', index=True)
    
    gen_alpha_beta2csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e19_a32') # ATACAM, ARICA, Rural
    # gen_alpha_beta2csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e16_a30.csv')
    # gen_alpha_beta2csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e3_a12') # ATACAM, ARICA, Rural
    # gen_alpha_beta2csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e1_a42') # ATACAMA
    # gen_alpha_beta2csv(f'{COD_FOLDER}Outputs/FS/FS_tf80_scT_st0_sbn_e1_a5') # KAST
    return None

# Function that counts each stopping criterion from a list of files
def count_stopping_criterion_bootstrap(method, train_frac, split_distritos, n_pca_components, seed_train,
                             bootstrap = False):
    # list of bootstrap seeds, from 0 to 100
    bootstrap_seeds = list(range(101))
    stopping_criterion_count = {}
    
    # Generate filename and read it
    for bootstrap_seed in bootstrap_seeds:
        filename = generate_filename(method=method, 
                                     train_frac=train_frac, 
                                     split_distritos=split_distritos, 
                                     n_pca_components=n_pca_components, 
                                     seed_train=seed_train, 
                                     bootstrap_seed=bootstrap_seed)
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()


        # Get the stopping criterion
        stopping_criterion = results.get('razon_parada', None)


        # Count the stopping criterion
        if stopping_criterion is not None:
            if stopping_criterion in stopping_criterion_count:
                stopping_criterion_count[stopping_criterion] += 1
            else:
                stopping_criterion_count[stopping_criterion] = 1

    print(stopping_criterion_count)

    return None

# Function that calculates the mean and standar deviation of alpha and beta
def mean_std_alpha_beta(method='PLS', train_frac=0.8, split_distritos=True, n_pls_components=None, fs_etapa=None, fs_atributo=None, 
                        seed_train=0, groups='ALL', eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=True,
                        circ=True, dummies_circ=False):

    bootstrap_seeds = list(range(1, 101))
    alpha_list = []
    beta_list = []

    for bootstrap_seed in bootstrap_seeds:
        if method == 'PLS':
            filename = generate_filename(method=method, train_frac=train_frac, K_folds=1, k_fold=1,
                                         split_distritos=split_distritos, n_pls_components=n_pls_components,
                                         seed_train=seed_train, bootstrap_seed=bootstrap_seed,
                                         groups=groups, eleccion=eleccion, atributos_circ=atributos_circ,
                                         distmin=distmin, comuna=comuna, circ=circ, dummies_circ=dummies_circ)
        elif method == 'FS':
            filename = generate_filename(method=method, train_frac=train_frac, K_folds=1, k_fold=1,
                                         split_distritos=split_distritos, seed_train=seed_train,
                                         bootstrap_seed=bootstrap_seed, fs_etapa=fs_etapa,
                                         atributos_circ=atributos_circ, distmin=distmin)

        with open(f'{filename}.pkl', 'rb') as f:
            results = pickle.load(f)

        alpha = results.get('alpha_opt', None)
        beta = results.get('beta_opt', None)
        candidatos = results.get('candidatos', None)
        grupos = results.get('grupos', None)

        if alpha is not None:
            alpha_list.append(alpha)
        if beta is not None:
            beta_list.append(beta)

    # Quitar último candidato (NULO o similar)
    candidatos = candidatos[:-1]

    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    alpha_mean = np.mean(stacked_alpha, axis=0)
    alpha_std = np.std(stacked_alpha, axis=0)
    beta_mean = np.mean(stacked_beta, axis=0)
    beta_std = np.std(stacked_beta, axis=0)

    confidence_level = 1.96
    alpha_ci_lower = alpha_mean - confidence_level * alpha_std
    alpha_ci_upper = alpha_mean + confidence_level * alpha_std
    beta_ci_lower = beta_mean - confidence_level * beta_std
    beta_ci_upper = beta_mean + confidence_level * beta_std

    alpha_zero_in_ci = np.logical_and(alpha_ci_lower <= 0, alpha_ci_upper >= 0)
    beta_zero_in_ci = np.logical_and(beta_ci_lower <= 0, beta_ci_upper >= 0)

    if np.any(alpha_zero_in_ci):
        print("Alpha confidence interval includes 0.")
    else:
        print("Alpha confidence interval does not include 0.")

    if np.any(beta_zero_in_ci):
        print("Beta confidence interval includes 0.")
    else:
        print("Beta confidence interval does not include 0.")

    alpha_mean_abs_std = np.abs(alpha_mean) / alpha_std
    beta_mean_abs_std = np.abs(beta_mean) / beta_std
    alpha_prob = 2 * norm.cdf(-alpha_mean_abs_std)
    beta_prob = 2 * norm.cdf(-beta_mean_abs_std)

    alpha_prob = np.round(alpha_prob, 4)
    beta_prob = np.round(beta_prob, 4)

    df_alpha_prob = pd.DataFrame(alpha_prob, index=candidatos)
    df_beta_prob = pd.DataFrame(beta_prob, index=grupos, columns=candidatos)

    df_alpha_mean = pd.DataFrame(alpha_mean, index=candidatos)
    df_beta_mean = pd.DataFrame(beta_mean, index=grupos, columns=candidatos)

    # Guardar a Excel
    carpeta = f'{COD_FOLDER}Outputs/{method}_kfold_2021' if eleccion == '2021_Presidencial' else f'{COD_FOLDER}Outputs/{method}_kfold_2023'
    carpeta += f'/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
    file_path = f'{carpeta}/{method}_alpha_beta_probabilities_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    with pd.ExcelWriter(file_path) as writer:
        df_alpha_prob.to_excel(writer, sheet_name='Alpha_Probabilities', index=True)
        df_beta_prob.to_excel(writer, sheet_name='Beta_Probabilities', index=True)
        df_alpha_mean.to_excel(writer, sheet_name='Alpha_Mean', index=True)
        df_beta_mean.to_excel(writer, sheet_name='Beta_Mean', index=True)

    return df_alpha_prob, df_beta_prob, df_alpha_mean, df_beta_mean

def generar_tabla_latex_pvalores_old(df: pd.DataFrame, caption: str, label: str, eleccion: str = "2021_Presidencial") -> str:
    """
    Genera una tabla LaTeX con p-valores formateados, con abreviaciones de candidatos en mayúsculas y ordenados.
    """
    def formatear_valor(x):
        return f"{x:,.4f}".replace(",", "X").replace(".", ",").replace("X", ".")

    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "MEO",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST", "NULO BLANCO": "NULO"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    # si el caption menciona a alpha, tomar la transpuesta del DataFrame
    if "alpha" in caption.lower():
        df = df.T

    columnas_validas = [col for col in orden_candidatos if col in df.columns]
    df = df[columnas_validas]
    df.columns = [abreviaciones.get(c, c).upper() for c in df.columns]
    df_fmt = df.applymap(formatear_valor)

    encabezado = " & " + " & ".join(df_fmt.columns) + " \\\\"
    separador = "\\midrule"
    filas = [f"{idx} & " + " & ".join(row.values) + " \\\\" for idx, row in df_fmt.iterrows()]

    tabla = [
        "\\begin{table}[H]",
        "\\centering",
        "\\begin{tabular}{" + "c" * (df_fmt.shape[1] + 1) + "}",
        "\\toprule",
        encabezado,
        separador,
        *filas,
        "\\bottomrule",
        "\\end{tabular}",
        f"\\caption{{{caption}}}",
        f"\\label{{{label}}}",
        "\\end{table}"
    ]

    return "\n".join(tabla)

def generar_tabla_latex_pvalores_old_v2(df: pd.DataFrame, caption: str, label: str, eleccion: str = "2021_Presidencial") -> str:
    def formatear_valor(x):
        return f"{x:,.4f}".replace(",", "X").replace(".", ",").replace("X", ".")

    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "MEO",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST", "NULO BLANCO": "NULO"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    if "alpha" in caption.lower():
        df = df.T
        df.index = df.index.astype(str)

    columnas_validas = [col for col in orden_candidatos if col in df.columns]
    df = df[columnas_validas]
    abrevs = [
        abreviaciones[c].capitalize() if abreviaciones[c].isupper() else abreviaciones[c].title()
        for c in columnas_validas
    ]

    # Separar edad y género
    edades = []
    generos = []
    for idx in df.index:
        partes = idx.strip().split()
        edad = " ".join(partes[:-1])
        genero = partes[-1]
        edades.append(edad)
        generos.append(genero)

    df["Edad"] = edades
    df["Genero"] = generos
    df["Edad_num"] = df["Edad"].str.extract(r"(\d+)").astype(int)
    df = df.sort_values(by=["Genero", "Edad_num"])

    nombre_columna = "Candidatos" if eleccion == "2021_Presidencial" else "Opciones"

    tabla = []
    tabla.append(r"\begin{table}[H]")
    tabla.append(r"\centering")
    tabla.append(r"\begin{tabular}{ll" + " @{\hspace{1em}}S[table-format=1.4]" * len(columnas_validas) + r"}")
    tabla.append(r"\toprule")

    # Encabezado
    tabla.append(
        r"\multicolumn{2}{c}{Grupo Dem.} & \multicolumn{" + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\"
    )
    tabla.append(
        r"\cmidrule(lr){1-2} \cmidrule(lr){3-" + str(2 + len(columnas_validas)) + r"}"
    )
    tabla.append(
        r"Sexo & Edad & " + " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) + r" \\"
    )
    tabla.append(r"\midrule")

    generos_unicos = df["Genero"].unique()
    for i, genero in enumerate(generos_unicos):
        if i == 1:
            tabla.append(r"\midrule")
        grupo = df[df["Genero"] == genero]
        first = True
        for _, row in grupo.iterrows():
            fila = []
            if first:
                fila.append(r"{\text{" + genero + r"}}")
                first = False
            else:
                fila.append("")
            fila.append(row["Edad"])
            for col in columnas_validas:
                fila.append(formatear_valor(row[col]))
            tabla.append(" & ".join(fila) + r" \\")

    tabla.append(r"\bottomrule")
    tabla.append(r"\end{tabular}")
    tabla.append(f"\\caption{{{caption}}}")
    tabla.append(f"\\label{{{label}}}")
    tabla.append(r"\end{table}")

    return "\n".join(tabla)

def generar_tabla_latex_pvalores(
    df: pd.DataFrame,
    caption: str,
    label: str,
    eleccion: str = "2021_Presidencial"
) -> str:
    """
    Genera una tabla LaTeX de p-valores con el mismo formato que
    `generar_tabla_latex_valores`.

    Parámetros
    ----------
    df : pd.DataFrame
        DataFrame con los p-valores. Las filas son grupos demográficos
        (o variables latentes) y las columnas los candidatos/opciones.
    caption : str
        Texto de la leyenda.
    label : str
        Etiqueta para \label.
    eleccion : {"2021_Presidencial","2023_Plebiscito"}
        Contexto para elegir orden y abreviaciones.
    """
    def formatear_valor(x: float) -> str:
        # 4 decimales con coma decimal
        return f"{x:,.4f}".replace(",", "X").replace(".", ",").replace("X", ".")

    # --------------------------------------------------
    # Orden y abreviaciones
    # --------------------------------------------------
    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI",
            "YASNA PROVOSTE", "FRANCO ALDO PARISI", "SEBASTIAN SICHEL",
            "JOSE ANTONIO KAST", "NULO BLANCO"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS",
            "GABRIEL BORIC": "BORIC",
            "MARCO ENRIQUEZ-OMINAMI": "ENRÍQUEZ",    # ⟵ mismo criterio que la otra función
            "YASNA PROVOSTE": "PROVOSTE",
            "FRANCO ALDO PARISI": "PARISI",
            "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST",
            "NULO BLANCO": "NULO"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR",
            "EN CONTRA": "EN CONTRA",
            "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    # --------------------------------------------------
    # Detección de caso α (variables latentes)
    # --------------------------------------------------
    is_alpha = "alpha" in caption.lower()
    if is_alpha:
        df = df.T
        df.index = df.index.astype(str)

    # Filtrar columnas válidas y reordenar
    columnas_validas = [c for c in orden_candidatos if c in df.columns]
    df = df[columnas_validas]

    # Abreviaciones con misma lógica que la otra función
    abrevs = [
        abreviaciones[c].capitalize()
        if abreviaciones[c].isupper()
        else abreviaciones[c].title()
        for c in columnas_validas
    ]

    nombre_columna = "Candidatos" if eleccion == "2021_Presidencial" else "Opciones"

    # --------------------------------------------------
    # Construcción de la tabla LaTeX
    # --------------------------------------------------
    tabla: list[str] = []
    tabla.append(r"\begin{table}[H]")
    tabla.append(r"\centering")
    # Misma anchura de columna que en la tabla de valores (16 mm)
    # --- Elegir formato de la(s) columna(s) S según la elección ---
    if eleccion == "2021_Presidencial":
        col_template = r" @{\hspace{1em}}S[table-format=1.4, table-column-width=16mm]"
    else:  # Por defecto, sin ancho fijo
        col_template = r" @{\hspace{1em}}S[table-format=1.4]"

    col_spec = ("c" if is_alpha else "ll") + col_template * len(columnas_validas)
    tabla.append(r"\begin{tabular}{" + col_spec + r"}")
    tabla.append(r"\toprule")

    # -------- Encabezados --------
    if is_alpha:
        # Fila de títulos agrupados
        tabla.append(
            r"\multicolumn{1}{c}{\makecell{Variable\\latente}} & "
            + r"\multicolumn{" + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\"
        )
        tabla.append(
            r"\cmidrule(lr){2-" + str(1 + len(columnas_validas)) + r"}"
        )
        # Fila de abreviaciones
        tabla.append(
            r" & " +
            " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) +
            r" \\"
        )
        tabla.append(r"\midrule")

        # Cuerpo de la tabla
        for idx, row in df.iterrows():
            # indice a numero
            idx = int(idx)
            idx += 1
            # indice a string
            idx = str(idx)
            fila = [str(idx)]  # índice ya es string
            fila += [formatear_valor(row[col]) for col in columnas_validas]
            tabla.append(" & ".join(fila) + r" \\")
    else:
        # ---- Caso grupos demográficos (sexo–edad) ----
        # Extraer edad y género
        edades, generos = [], []
        for idx in df.index:
            partes = idx.strip().split()
            edades.append(" ".join(partes[:-1]))
            generos.append(partes[-1])

        df = df.assign(Edad=edades, Genero=generos)
        # Para ordenar las edades numéricamente
        df["Edad_num"] = df["Edad"].str.extract(r"(\d+)").astype(int)
        df = df.sort_values(["Genero", "Edad_num"])

        tabla.append(
            r"\multicolumn{2}{c}{Grupo Dem.} & "
            + r"\multicolumn{" + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\"
        )
        tabla.append(
            r"\cmidrule(lr){1-2} \cmidrule(lr){3-" + str(2 + len(columnas_validas)) + r"}"
        )
        tabla.append(
            r"Sexo & Edad & " +
            " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) +
            r" \\"
        )
        tabla.append(r"\midrule")

        for i, genero in enumerate(df["Genero"].unique()):
            if i == 1:
                tabla.append(r"\midrule")  # línea separadora entre F y M (o vice-versa)

            grupo = df[df["Genero"] == genero]
            first = True
            for _, row in grupo.iterrows():
                fila = []
                fila.append(r"\text{" + genero + r"}" if first else "")
                first = False
                fila.append(row["Edad"])
                fila += [formatear_valor(row[col]) for col in columnas_validas]
                tabla.append(" & ".join(fila) + r" \\")

    # -------- Pie de tabla --------
    tabla.append(r"\bottomrule")
    tabla.append(r"\end{tabular}")
    tabla.append(f"\\caption{{{caption}}}")
    tabla.append(f"\\label{{{label}}}")
    tabla.append(r"\vspace{0.5em}")         # igual que en la tabla de valores
    tabla.append(r"\end{table}")

    return "\n".join(tabla)

def generar_tabla_latex_valores_old(df_mean, df_pval, caption, label, eleccion="2021_Presidencial"):
    """
    Genera una tabla LaTeX con valores promedio y asteriscos de significancia,
    alineados decimalmente con S[table-format=1.3] y nombres abreviados según la elección.
    """
    def obtener_significancia(pval):
        if pval < 0.01:
            return r"{$^{***\hspace{0.5cm}}$}"
        elif pval < 0.05:
            return r"{$^{**\hspace{0.5cm}}$}"
        elif pval < 0.1:
            return r"{$^{*\hspace{0.5cm}}$}"
        else:
            return ""

    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "MEO",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    if "alpha" in caption.lower():
        df_mean = df_mean.T
        df_pval = df_pval.T
        # Filas como string
        df_mean.index = df_mean.index.astype(str)
        df_pval.index = df_pval.index.astype(str)

    columnas_validas = [col for col in orden_candidatos if col in df_mean.columns]
    abrevs = [abreviaciones[c] for c in columnas_validas]

    tabla = []
    tabla.append(r"\begin{table}[H]")
    tabla.append(r"\centering")

    columnas_latex = "l" + " S[table-format=1.3, table-align-text-post=false]" * len(columnas_validas)
    tabla.append(r"\begin{tabular}{" + columnas_latex + "}")
    tabla.append(r"\toprule")
    encabezado = "Grupo & " + " & ".join(r"{\text{" + ab + "}}" for ab in abrevs) + r" \\"
    tabla.append(encabezado)
    tabla.append(r"\midrule")

    for idx in df_mean.index:
        fila = [idx]
        for col in columnas_validas:
            val = df_mean.loc[idx, col]
            pval = df_pval.loc[idx, col]
            sig = obtener_significancia(pval)
            fila.append(f"{val:.3f}{sig}")
        tabla.append(" & ".join(fila) + r" \\")

    tabla.append(r"\bottomrule")
    tabla.append(r"\end{tabular}")
    tabla.append(f"\\caption{{{caption}}}")
    tabla.append(f"\\label{{{label}}}")
    tabla.append(r"\vspace{0.5em}")
    tabla.append(r"\begin{flushleft}")
    tabla.append(r"\footnotesize Nota: $^{*} p<0.1$; $^{**} p<0.05$; $^{***} p<0.01$")
    tabla.append(r"\end{flushleft}")
    tabla.append(r"\end{table}")

    return "\n".join(tabla)

def generar_tabla_latex_valores_old_v2(df_mean, df_pval, caption, label, eleccion="2021_Presidencial"):
    def obtener_significancia(pval):
        if pval < 0.01:
            return r"{$^{***\hspace{0.5cm}}$}"
        elif pval < 0.05:
            return r"{$^{**\hspace{0.5cm}}$}"
        elif pval < 0.1:
            return r"{$^{*\hspace{0.5cm}}$}"
        else:
            return ""

    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "MEO",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    if "alpha" in caption.lower():
        df_mean = df_mean.T
        df_pval = df_pval.T
        df_mean.index = df_mean.index.astype(str)
        df_pval.index = df_pval.index.astype(str)

    columnas_validas = [col for col in orden_candidatos if col in df_mean.columns]
    abrevs = [
        abreviaciones[c].capitalize() if abreviaciones[c].isupper() else abreviaciones[c].title()
        for c in columnas_validas
    ]

    # Separar edad y género
    edades = []
    generos = []
    for idx in df_mean.index:
        partes = idx.strip().split()
        edad = " ".join(partes[:-1])
        genero = partes[-1]
        edades.append(edad)
        generos.append(genero)

    df_mean["Edad"] = edades
    df_mean["Genero"] = generos
    df_pval["Edad"] = edades
    df_pval["Genero"] = generos

    df_mean["Edad_num"] = df_mean["Edad"].str.extract(r"(\d+)").astype(int)
    df_mean = df_mean.sort_values(by=["Genero", "Edad_num"])
    df_pval = df_pval.loc[df_mean.index]

    tabla = []
    tabla.append(r"\begin{table}[H]")
    tabla.append(r"\centering")
    tabla.append(r"\begin{tabular}{ll" + " @{\hspace{1em}}S[table-format=1.3, table-align-text-post=false]" * len(columnas_validas) + r"}")
    tabla.append(r"\toprule")

    # Encabezado con dos niveles
    nombre_columna = "Candidatos" if eleccion == "2021_Presidencial" else "Opciones"

    tabla.append(
        r"\multicolumn{2}{c}{Grupo Dem.} & \multicolumn{" + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\"
    )
    tabla.append(
        r"\cmidrule(lr){1-2} \cmidrule(lr){3-" + str(2 + len(columnas_validas)) + r"}"
    )
    tabla.append(
    r"Sexo & Edad & " + " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) + r" \\"
)
    tabla.append(r"\midrule")

    # Agrupar por género
    generos_unicos = df_mean["Genero"].unique()
    for i, genero in enumerate(generos_unicos):
        if i == 1:
            tabla.append(r"\midrule")  # Línea antes del segundo grupo

        grupo = df_mean[df_mean["Genero"] == genero]
        first = True
        for _, row in grupo.iterrows():
            fila = []
            if first:
                fila.append(r"{\text{" + genero + r"}}")
                first = False
            else:
                fila.append("")  # Celda vacía para alinear

            fila.append(row["Edad"])
            for col in columnas_validas:
                val = row[col]
                pval = df_pval.loc[row.name, col]
                sig = obtener_significancia(pval)
                fila.append(f"{val:.3f}{sig}")
            tabla.append(" & ".join(fila) + r" \\")

    tabla.append(r"\bottomrule")
    tabla.append(r"\end{tabular}")
    tabla.append(f"\\caption{{{caption}}}")
    tabla.append(f"\\label{{{label}}}")
    tabla.append(r"\vspace{0.5em}")
    tabla.append(r"\begin{flushleft}")
    tabla.append(r"\footnotesize Nota: $^{{*}} p<0.1$; $^{{**}} p<0.05$; $^{{***}} p<0.01$")
    tabla.append(r"\end{flushleft}")
    tabla.append(r"\end{table}")

    return "\n".join(tabla)

def generar_tabla_latex_valores(df_mean, df_pval, caption, label, eleccion="2021_Presidencial"):
    
    def obtener_significancia(pval):
        if pval < 0.01:
            return r"{$^{***\hspace{0.0cm}}$}"
        elif pval < 0.05:
            return r"{$^{**\hspace{0.0cm}}$}"
        elif pval < 0.1:
            return r"{$^{*\hspace{0.0cm}}$}"
        else:
            return ""

    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "ENRÍQUEZ",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no soportada")

    is_alpha = "alpha" in caption.lower()
    if is_alpha:
        df_mean = df_mean.T
        df_pval = df_pval.T
        df_mean.index = df_mean.index.astype(str)
        df_pval.index = df_pval.index.astype(str)

    columnas_validas = [col for col in orden_candidatos if col in df_mean.columns]
    abrevs = [
        abreviaciones[c].capitalize() if abreviaciones[c].isupper() else abreviaciones[c].title()
        for c in columnas_validas
    ]

    nombre_columna = "Candidatos" if eleccion == "2021_Presidencial" else "Opciones"

    tabla = []
    tabla.append(r"\begin{table}[H]")
    tabla.append(r"\centering")
    # --- Elegir formato de la(s) columna(s) S según la elección ---
    if eleccion == "2021_Presidencial":
        col_template = r" @{\hspace{1em}}S[table-format=1.3, table-align-text-post=false, table-column-width=16mm]"
    elif eleccion == "2023_Plebiscito":
        col_template = r" @{\hspace{1em}}S[table-format=1.3, table-align-text-post=false]"
    else:
        # Por si agregas otras elecciones en el futuro
        col_template = r" @{\hspace{1em}}S[table-format=1.3, table-align-text-post=false]"

    # --- Cabecera del entorno tabular ---
    tabla.append(
        r"\begin{tabular}{"
        + ("c" if is_alpha else "ll")
        + col_template * len(columnas_validas)
        + r"}"
    )
    tabla.append(r"\toprule")

    if is_alpha:
        tabla.append(
            r"\multicolumn{1}{c}{\makecell{Variable\\latente}} & \multicolumn{"
            + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\"
        )
        tabla.append(
            r"\cmidrule(lr){2-" + str(1 + len(columnas_validas)) + r"}"
        )
        tabla.append(
            r" & " + " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) + r" \\"
        )
    else:
        # Extraer edad y género
        edades = []
        generos = []
        for idx in df_mean.index:
            partes = idx.strip().split()
            edad = " ".join(partes[:-1])
            genero = partes[-1]
            edades.append(edad)
            generos.append(genero)

        df_mean["Edad"] = edades
        df_mean["Genero"] = generos
        df_pval["Edad"] = edades
        df_pval["Genero"] = generos

        df_mean["Edad_num"] = df_mean["Edad"].str.extract(r"(\d+)").astype(int)
        df_mean = df_mean.sort_values(by=["Genero", "Edad_num"])
        df_pval = df_pval.loc[df_mean.index]

        tabla.append(r"\multicolumn{2}{c}{Grupo Dem.} & \multicolumn{" + str(len(columnas_validas)) + r"}{c}{" + nombre_columna + r"} \\")
        tabla.append(r"\cmidrule(lr){1-2} \cmidrule(lr){3-" + str(2 + len(columnas_validas)) + r"}")
        tabla.append(r"Sexo & Edad & " + " & ".join(r"\phantom{0}\text{" + ab + r"}\phantom{0}" for ab in abrevs) + r" \\")

    tabla.append(r"\midrule")

    if is_alpha:
        for idx, row in df_mean.iterrows():
            # indice a numero
            idx =int(idx)
            idx += 1
            # indice a string
            idx = str(idx)
            fila = [f"{idx}"]
            for col in columnas_validas:
                val = row[col]
                pval = df_pval.loc[row.name, col]
                sig = obtener_significancia(pval)
                fila.append(f"{val:.3f}{sig}")
            tabla.append(" & ".join(fila) + r" \\")
    else:
        generos_unicos = df_mean["Genero"].unique()
        for i, genero in enumerate(generos_unicos):
            if i == 1:
                tabla.append(r"\midrule")

            grupo = df_mean[df_mean["Genero"] == genero]
            first = True
            for _, row in grupo.iterrows():
                fila = []
                if first:
                    fila.append(r"{\text{" + genero + r"}}")
                    first = False
                else:
                    fila.append("")

                fila.append(row["Edad"])
                for col in columnas_validas:
                    val = row[col]
                    pval = df_pval.loc[row.name, col]
                    sig = obtener_significancia(pval)
                    fila.append(f"{val:.3f}{sig}")
                tabla.append(" & ".join(fila) + r" \\")

    tabla.append(r"\bottomrule")
    tabla.append(r"\end{tabular}")
    tabla.append(f"\\caption{{{caption}}}")
    tabla.append(f"\\label{{{label}}}")
    tabla.append(r"\vspace{0.5em}")
    tabla.append(r"\begin{flushleft}")
    tabla.append(r"\footnotesize Nota: $^{{*}} p<0.1$; $^{{**}} p<0.05$; $^{{***}} p<0.01$")
    tabla.append(r"\end{flushleft}")
    tabla.append(r"\end{table}")

    return "\n".join(tabla)













import matplotlib.patches as patches

def plot_alpha_heatmaps(
    df_mean, df_pval,
    method="PLS", eleccion="2021_Presidencial", groups="ALL",
    atributos_circ=True, distmin=True,
    COD_FOLDER=""
):
    año = eleccion[:4]
    
    # ======= Parámetros de candidatos
    if eleccion == "2021_Presidencial":
        orden_candidatos = [
            "EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"
        ]
        abreviaciones = {
            "EDUARDO ARTES": "ARTÉS", "GABRIEL BORIC": "BORIC", "MARCO ENRIQUEZ-OMINAMI": "MEO",
            "YASNA PROVOSTE": "PROVOSTE", "FRANCO ALDO PARISI": "PARISI", "SEBASTIAN SICHEL": "SICHEL",
            "JOSE ANTONIO KAST": "KAST", "NULO BLANCO": "NULO"
        }
    elif eleccion == "2023_Plebiscito":
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]
        abreviaciones = {
            "A FAVOR": "A FAVOR", "EN CONTRA": "EN CONTRA", "NULO BLANCO": "NULO"
        }
    else:
        raise ValueError("Elección no reconocida")

    # ======= Filtrar candidatos disponibles y renombrar
    candidatos_disponibles = [c for c in orden_candidatos if c in df_mean.index]
    df_mean = df_mean.loc[candidatos_disponibles]
    df_pval = df_pval.loc[candidatos_disponibles]
    df_mean.index = [abreviaciones[c] for c in df_mean.index]
    df_pval.index = [abreviaciones[c] for c in df_pval.index]

    # ======= Colormap continuo
    cmap = sns.color_palette("RdBu_r", as_cmap=True)

    # ======= Crear carpeta de salida
    output_folder = f"{COD_FOLDER}Outputs/{method}_kfold_{eleccion.split('_')[0]}/{str(groups) + '_circ' if atributos_circ else str(groups)}/{'distmin' if distmin else 'distprom'}/"
    os.makedirs(output_folder, exist_ok=True)

    # === HEATMAP 1: α con color de p-valor (continuo)
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.heatmap(
        df_pval, annot=df_mean.round(2), fmt="", cmap=cmap,
        cbar_kws={'label': 'p-valor'}, vmin=0, vmax=1,
        linewidths=0.5, linecolor='white', ax=ax,
        mask=df_mean.isnull(), annot_kws={"size": 8}
    )
    ax.set_title("Valores de α (color según p-valor)", fontsize=14)
    ax.set_xlabel("Variable latente")
    ax.set_ylabel("Candidato")
    plt.tight_layout()
    file1 = f"{output_folder}{method}_{año}_alpha_valores_continuo.png"
    plt.savefig(file1, bbox_inches="tight")
    plt.show()

    # === HEATMAP 2: p-valores (continuo)
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.heatmap(
        df_pval, annot=True, fmt=".3f", cmap=cmap,
        cbar_kws={'label': 'p-valor'}, vmin=0, vmax=1,
        linewidths=0.5, linecolor='white', ax=ax,
        annot_kws={"size": 8}
    )
    ax.set_title("p-valores de α", fontsize=14)
    ax.set_xlabel("Variable latente")
    ax.set_ylabel("Candidato")
    plt.tight_layout()
    file2 = f"{output_folder}{method}_{año}_alpha_pvals_continuo.png"
    plt.savefig(file2, bbox_inches="tight")
    plt.show()

    # === Definir colores discretos por rango de p-valor
    def get_discrete_color(p):
        if p < 0.01:
            return "#2171b5"  # Azul fuerte
        elif p < 0.05:
            return "#c6dbef"  # Celeste
        elif p < 0.1:
            return "#fcbba1"  # Rojo claro
        else:
            return "#cb181d"  # Rojo fuerte

    # Calcular colores discretos solo una vez
    colores_discretos = df_pval.copy().applymap(get_discrete_color)

    # Mapeo de colores para leyenda discreta
    leyenda_colores = [
        ("p < 0.01", "#2171b5"),      # Azul fuerte
        ("0.01 ≤ p < 0.05", "#c6dbef"),  # Celeste
        ("0.05 ≤ p < 0.1", "#fcbba1"),   # Rojo claro
        ("p ≥ 0.1", "#cb181d")        # Rojo fuerte
    ]

    # Función auxiliar para gráficos discretos
    def draw_discrete_heatmap(data, color_map, title, filename, fmt):
        fig, ax = plt.subplots(figsize=(12, 6))
        n_rows, n_cols = data.shape

        for y in range(n_rows):
            for x in range(n_cols):
                value = data.iloc[y, x]
                color = color_map.iloc[y, x]
                ax.add_patch(patches.Rectangle((x, y), 1, 1, color=color))
                ax.text(x + 0.5, y + 0.5, format(value, fmt),
                        ha='center', va='center', fontsize=8, color='black')

        ax.set_xlim(0, n_cols)
        ax.set_ylim(0, n_rows)
        ax.set_xticks([i + 0.5 for i in range(n_cols)])
        ax.set_xticklabels(data.columns, rotation=45, ha='right')
        ax.set_yticks([i + 0.5 for i in range(n_rows)])
        ax.set_yticklabels(data.index)
        ax.invert_yaxis()
        ax.set_title(title, fontsize=14)
        ax.set_xlabel("Variable latente")
        ax.set_ylabel("Candidato")

        # Leyenda personalizada
        from matplotlib.patches import Patch
        handles = [Patch(facecolor=col, edgecolor='black', label=lab) for lab, col in leyenda_colores]
        ax.legend(handles=handles, title="Rango de p-valor", bbox_to_anchor=(1.05, 1), loc='upper left')

        plt.tight_layout()
        plt.savefig(filename, bbox_inches="tight")
        plt.show()

    # === HEATMAP 3: α con color discreto
    file3 = f"{output_folder}{method}_{año}_alpha_valores_discreto.png"
    draw_discrete_heatmap(df_mean, colores_discretos,
                        "Valores de α (color discreto por p-valor)", file3, fmt=".2f")

    # === HEATMAP 4: p-valores con color discreto
    file4 = f"{output_folder}{method}_{año}_alpha_pvals_discreto.png"
    draw_discrete_heatmap(df_pval, colores_discretos,
                        "p-valores de α (color discreto)", file4, fmt=".3f")

    return file1, file2, file3, file4

# Function that calculates p-value per mesa
def p_values_mesas(method='PLS', train_frac=1.0, split_distritos=True, seed_train=0, n_pls_components=None, groups='ALL', 
                  eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=True, circ=True, dummies_circ=True):

    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    # funcion que computa el p-valor
    def compute_p_value(mu, sigma, x0, remove_most_expected=True):
        if remove_most_expected:
            # Calcular la desviación estándar (raíz cuadrada de los elementos diagonales de sigma)
            std = torch.sqrt(torch.diag(sigma))
            # Calcular el valor absoluto de (x0 - mu) / std
            distance = torch.abs((x0 - mu) / std)
            # Encontrar el índice de la componente más esperable (menor distancia estandarizada)
            remove_component = torch.argmin(distance).item()
        else:
            remove_component = None

        if remove_component is not None:
            # assert de que remove_component debe ser un entero entre 0 y n-1
            assert isinstance(remove_component, int), "remove_component debe ser un entero"
            assert 0 <= remove_component < mu.shape[0], "remove_component debe ser un entero entre 0 y n-1"
            # remove the component from mu and sigma
            mu = torch.cat((mu[:remove_component], mu[remove_component+1:]))
            sigma = torch.cat((sigma[:remove_component, :], sigma[remove_component+1:, :]))
            sigma = torch.cat((sigma[:, :remove_component], sigma[:, remove_component+1:]), dim=1)
            x0 = torch.cat((x0[:remove_component], x0[remove_component+1:]))
        
        # print(f'mu.shape: {mu.shape}')
        # exit()
        n = mu.shape[0]
        # print(f'n: {n}')
        # exit()
        # Descomposción de Cholesky
        L = torch.cholesky(sigma + 1e-6 * torch.eye(sigma.shape[0]), upper=False)
        # print(L)
        # exit()
        z0 = torch.linalg.solve(L, x0 - mu)
        # print(f'z0: {z0}')
        # exit()
        a = torch.norm(z0, p=2) + 1e-6
        # print(f'a: {a}')
        # exit()

        # Definir la función gamma y Phi
        # gamma = torch.lgamma
        Phi = torch.distributions.Normal(0, 1).cdf
        # Phi_pdf = lambda x: torch.exp(torch.distributions.Normal(0, 1).log_prob(x))

        # print(a)
        # print(Phi(a))
        # print(Phi_pdf(a))
        # exit()

        # Constante K(n)
        pi = math.pi
        # print(pi)
        # exit()
        # K_n = (pi**(1/2)) / (2**(n/2 - 3/2) * scipy.special.factorial(torch.tensor(n / 2).item()))
        K_n = (pi**(1/2)) / (2**(n/2 - 3/2) * scipy.special.gamma(n / 2))
        # print(K_n)
        # print(f'K_n dtype: {K_n.dtype}')

        # I_odd = (1 - Phi(a)) * (n % 2)

        # Calcular la suma y el producto
        # sum_terms = 0.0
        # for k in range(1, n // 2 + 1):  # k desde 1 hasta ⌊n/2⌋
        #     product = torch.prod(torch.tensor([(n - 2 * i) for i in range(1, k)])) if k > 1 else 1.0
        #     sum_terms += a ** (n - 2 * k) * product

        # I_even = Phi_pdf(a) * sum_terms
        # I_n = I_odd + I_even

        # print(I_n)
        # print(f'I_n dtype: {I_n.dtype}')

        # Calcular la sumatoria
        sumatoria = 0
        for k in range(1, (n // 2) + 1):
            termino = (
                -(n / 2 - 1) * torch.log(torch.tensor(2)) 
                - torch.log(torch.tensor(scipy.special.gamma(torch.tensor(n / 2).item())))
                + (n - 2 * k) * torch.log(a) 
                - a**2 / 2 
            )
            if k > 1:
                termino += sum(torch.log(torch.tensor([n - 2 * i for i in range(1, k)])))
            sumatoria += torch.exp(termino)

        # Término adicional para n impar
        if n % 2 == 1:
            termino_impar = K_n * (1 - Phi(a))
        else:
            termino_impar = 0

        # Calcular p-valor
        p_valor = sumatoria + termino_impar

        # Calcular p-valor
        # p_valor = K_n * I_n
        # print(f'p-valor: {p_valor}')
        # print(f'p_valor dtype: {p_valor.dtype}')
        # exit()

        # print(f'p-valor: {p_valor}')
        # print(f'sumatoria: {sumatoria}')
        # print(f'termino_impar: {termino_impar}')
        # exit()

        # print(p_valor)
        return p_valor

    if method == 'PCA':
        n_pca_components = 44
        # Read files with PCA results, generate filename
        # method = 'PCA'; train_frac = 1.0; split_distritos = True; seed_train = 0; n_pca_components = 44
        filename = generate_filename(method=method,
                                    train_frac=train_frac,
                                    split_distritos=split_distritos,
                                    n_pca_components=n_pca_components,
                                    seed_train=seed_train,
                                    K_folds=1,
                                    k_fold=1,
                                    atributos_circ=atributos_circ)
        # Read the file
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = torch.tensor(results.get('alpha_opt', None), dtype=torch.float64)
        beta = torch.tensor(results.get('beta_opt', None), dtype=torch.float64)

        x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, _, _, df = get_xwve_from_election(regiones_filtro=[], 
                                                                                         atributos_filtro=atributos_filtro, 
                                                                                         built_df=False, 
                                                                                         eleccion='2021_Presidencial', 
                                                                                         estandarizar=False, 
                                                                                         corr_threshold = 0.8, 
                                                                                         n_pca_components=n_pca_components,
                                                                                         groups='ALL',
                                                                                         atributos_circ=atributos_circ)
        
        # x_bc, 46433 x 8
        # w_bg, 46433 x 16
        #v_da, 324 x 44
        # e_bd, 46433 x 324, ordenados alfabéticamente por comuna

        df = df.iloc[:, :29]

        p_dgc = fun_p_full(v_da_torch, alpha, beta)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd_torch, p_dgc, backend='torch')
        B, G, C = p_bgc.shape
        # mu_bc = oe.contract('bg,bgc->bc', w_bg_torch, p_bgc, backend='torch')

        # lista de p-valores
        p_valores = []

        # Calcular mu
        for b in range(B):
            # b = 0
            w_g = w_bg_torch[b] # array de G elementos
            p_gc = p_bgc[b] # matriz de GxC elementos
            Sigma = torch.zeros(size=(C, C), dtype=torch.float64)
            # g = 0
            for g in range(G):
                Sigma += w_g[g] * (torch.diag(p_gc[g]) - torch.einsum('i,j->ij', p_gc[g], p_gc[g]))
            # # g = 1
            # # # Expande w a una dimensión compatible para multiplicación (Gx1)
            # w_expanded = w_g.unsqueeze(1) # Gx1

            # # # Calcula el término de la diagonal para todos los g (GxC)
            # diag_term = torch.diag(p_gc[g, :]) * w_expanded[g, :]
            # # diag_term = p * w_expanded * p  # Esto es equivalente a np.diag(p[g, :]) * w[g]

            # # # Calcula el término del producto externo para todos los g (GxCxC)
            # # outer_term = torch.einsum('ij,ik->ijk', p_gc, p_gc)
            # outer_term = torch.einsum('j,k->jk', p_gc[g], p_gc[g])
            # # outer_term = torch.einsum('ij,ik->ijk', p, p)

            # # # Multiplica el outer_term por w[g] y suma sobre el eje 0 (G)
            # weighted_outer = torch.einsum('i,ijk->jk', w_g, outer_term)
            # # weighted_outer = torch.einsum('i,ijk->jk', w, outer_term)

            # Crear la matriz diagonal para todos los g y sumar la diferencia
            # resultado = torch.diag(torch.sum(diag_term, dim=0)) - weighted_outer
            mu = torch.einsum('gc,g->c', p_gc, w_g)
            # x_0 outcome of multinomial 
            # x0 = torch.tensor([0, 0, 0, 0, 0, 0, 0, 1], dtype=torch.float64) #cambiar esto
            x0 = x_bc_torch[b]
            p_valor = compute_p_value(mu, Sigma, x0, remove_most_expected=True)
            p_valor_numero = p_valor.item()

            p_valores.append(p_valor_numero)

        len(p_valores)
        # Add a column with the p-values in df
        df['p_valor'] = p_valores
        df['log_p_valor'] = np.log10(df['p_valor'])

        # Count the % of mesas with p-value under a threshold
        threshold = 1e-6
        p_valor_menor = df['p_valor'] < threshold
        p_valor_menor = (p_valor_menor.sum() / len(p_valor_menor)) * 100
        print(f'Porcentaje de mesas con p-valor < {threshold}: {p_valor_menor}')

        # Save the DataFrame to a .excel file with the p-values
        df.to_excel(f'{COD_FOLDER}Outputs/PCA_kfold/PCA_p_values.xlsx')

        # Save the DataFrame to a .excel file with the p-values under the threshold
        df_p_valor_menor = df[df['p_valor'] < threshold]
        df_p_valor_menor.to_excel(f'{COD_FOLDER}Outputs/PCA_kfold/PCA_p_values_under_threshold.xlsx')

    elif method == 'PLS':
        # Read files with PCA results, generate filename
        filename = generate_filename(method=method,
                                    train_frac=train_frac,
                                    K_folds=1,
                                    k_fold=1,
                                    split_distritos=split_distritos,
                                    n_pls_components=n_pls_components,
                                    seed_train=seed_train, 
                                    groups=groups, 
                                    eleccion=eleccion,
                                    atributos_circ=atributos_circ,
                                    distmin=distmin,
                                    comuna=comuna,
                                    circ=circ,
                                    dummies_circ=dummies_circ)
        
        # Read the file
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = torch.tensor(results.get('alpha_opt', None), dtype=torch.float64)
        beta = torch.tensor(results.get('beta_opt', None), dtype=torch.float64)

        x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, _, _, df = get_xwve_from_election(regiones_filtro=[], 
                                                                                         atributos_filtro=atributos_filtro, 
                                                                                         built_df=False, 
                                                                                         eleccion=eleccion, 
                                                                                         estandarizar=False, 
                                                                                         corr_threshold = 0.8, 
                                                                                         n_pls_components=n_pls_components,
                                                                                         groups=groups,
                                                                                         atributos_circ=atributos_circ,
                                                                                         distmin=distmin)

        if eleccion == '2021_Presidencial':
            df = df.iloc[:, :30]
        elif eleccion == '2023_Plebiscito':
            df = df.iloc[:, :25]

        p_dgc = fun_p_full(v_da_torch, alpha, beta)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd_torch, p_dgc, backend='torch')
        B, G, C = p_bgc.shape
        # mu_bc = oe.contract('bg,bgc->bc', w_bg_torch, p_bgc, backend='torch')

        # lista de p-valores
        p_valores = []

        # Calcular mu
        for b in range(B):
            # b = 0
            # print(f'w_bg_torch: {w_bg_torch}')
            w_g = w_bg_torch[b] # array de G elementos
            p_gc = p_bgc[b] # matriz de GxC elementos
            Sigma = torch.zeros(size=(C, C), dtype=torch.float64)
            # g = 0
            for g in range(G):
                Sigma += w_g[g] * (torch.diag(p_gc[g]) - torch.einsum('i,j->ij', p_gc[g], p_gc[g]))

            # Crear la matriz diagonal para todos los g y sumar la diferencia
            # resultado = torch.diag(torch.sum(diag_term, dim=0)) - weighted_outer
            mu = torch.einsum('gc,g->c', p_gc, w_g)
            
            # x_0 outcome of multinomial 
            x0 = x_bc_torch[b]

            # Calcular x_tilda directamente
            x0_tilda = torch.where(
                x0 >= mu,
                torch.maximum(x0 - 0.5, mu),
                torch.minimum(x0 + 0.5, mu)
            )

            # print(f"x = {x_bc_torch[b]}")
            # print(f"w_g = {w_bg_torch[b]}")
            # print(f"p_gc = {p_gc}")
            # print(f"mu = {mu}")
            # exit(1)
            
            # Sigma = (Sigma + Sigma.T) / 2
            # epsilon = 1e-6  # Un valor pequeño
            # Sigma += epsilon * torch.eye(Sigma.shape[0], dtype=Sigma.dtype)

            # p_valor = compute_p_value(mu, Sigma, mu, remove_most_expected=True)
            # p_valor_numero = p_valor.item()
            # print(f'p-valor: {p_valor_numero}')
            # exit()

            p_valor = compute_p_value(mu, Sigma, x0_tilda, remove_most_expected=True)
            p_valor_numero = p_valor.item()
            # print(f'p-valor: {p_valor_numero}')
            # exit()

            p_valores.append(p_valor_numero)

        # exit()

        len(p_valores)
        # Add a column with the p-values in df
        df['p_valor'] = p_valores
        df['log_p_valor'] = np.log10(df['p_valor'])
        # get max and min p-values
        # max_p_valor = df['p_valor'].max()
        # min_p_valor = df['p_valor'].min()
        # print(f'Maximum p-value: {max_p_valor}')
        # print(f'Minimum p-value: {min_p_valor}')

        # exit()

        # Esperanza

        if eleccion == '2021_Presidencial':
            votos_candidatos = df.iloc[:, 5:13].sum(axis=1)
            grupos_socioeconomicos = df.iloc[:, 14:30].sum(axis=1)
        elif eleccion == '2023_Plebiscito':
            votos_candidatos = df.iloc[:, 5:8].sum(axis=1)
            grupos_socioeconomicos = df.iloc[:, 9:25].sum(axis=1)

        df['Diferencia'] = grupos_socioeconomicos - votos_candidatos

        if eleccion == '2021_Presidencial':
            esperanza = p_bgc * (df.iloc[:, 14:30].values)[:, :, None]
        elif eleccion == '2023_Plebiscito':
            esperanza = p_bgc * (df.iloc[:, 9:25].values)[:, :, None]

        esperanza = esperanza.sum(axis=1)
        # esperanza as numpy array
        esperanza = esperanza.detach().numpy()

        # Paso 1: Redondear al número entero más cercano
        esperanza_entera = np.round(esperanza).astype(int)

        # Paso 2: Ajustar por cada fila para que las sumas coincidan con 'grupos_socioeconomicos'
        ajuste_por_fila = grupos_socioeconomicos - np.sum(esperanza_entera, axis=1)

        # Paso 3: Iterar sobre cada fila para realizar el ajuste
        for i, ajuste in enumerate(ajuste_por_fila):
            ajuste = int(ajuste)  # Convertir ajuste a entero
            if ajuste != 0:
                # Calcular diferencias decimales originales para priorizar el ajuste
                diferencias = esperanza[i] - np.floor(esperanza[i])
                indices = np.argsort(diferencias if ajuste > 0 else -diferencias)

                # Ajustar iterativamente en los índices seleccionados
                for j in range(abs(ajuste)):
                    esperanza_entera[i, indices[j % len(indices)]] += np.sign(ajuste)
        
        # Paso 4: Calcular la diferencia entre la esperanza ajustada y los votos reales
        diferencia = grupos_socioeconomicos - np.sum(esperanza_entera, axis=1)

        if diferencia.max() == 0 and diferencia.min() == 0:
            print("Ajuste exitoso")
        else:
            print("Ajuste no exitoso")
            exit()

        # Proporcion
        proporcion = votos_candidatos / grupos_socioeconomicos
        proporcion = np.array(proporcion)
        # Expandir dimensiones y repetir
        proporcion_expandida = np.tile(proporcion[:, None], (1, C))

        esperanza_entera_ajustada = esperanza_entera * proporcion_expandida

        # Paso 1 Again
        esperanza_entera_ajustada = np.round(esperanza_entera_ajustada).astype(int)

        # Paso 2 Again
        ajuste_por_fila = votos_candidatos - np.sum(esperanza_entera_ajustada, axis=1)

        # Paso 3 Again
        for i, ajuste in enumerate(ajuste_por_fila):
            ajuste = int(ajuste)
            if ajuste != 0:
                diferencias = esperanza_entera_ajustada[i] - np.floor(esperanza_entera_ajustada[i])
                indices = np.argsort(diferencias if ajuste > 0 else -diferencias)
                for j in range(abs(ajuste)):
                    esperanza_entera_ajustada[i, indices[j % len(indices)]] += np.sign(ajuste)

        # Paso 4 Again
        diferencia = votos_candidatos - np.sum(esperanza_entera_ajustada, axis=1)

        if diferencia.max() == 0 and diferencia.min() == 0:
            print("Ajuste exitoso")
        else:
            print("Ajuste no exitoso")
            exit()

        # Agregar votos de esperanza ajustada al DataFrame
        if eleccion == '2021_Presidencial':
            for i, candidato in enumerate(df.columns[5:13]):
                print(f'Agregando votos de {candidato}')
                df[candidato + " Ajustada"] = esperanza_entera_ajustada[:, i]
        elif eleccion == '2023_Plebiscito':
            for i, candidato in enumerate(df.columns[5:8]):
                print(f'Agregando votos de {candidato}')
                df[candidato + " Ajustada"] = esperanza_entera_ajustada[:, i]

        # Restar votos reales de votos de esperanza ajustada
        if eleccion == '2021_Presidencial':
            for candidato in df.columns[5:13]:
                df[candidato + " Diferencia"] = df[candidato] - df[candidato + " Ajustada"]
        elif eleccion == '2023_Plebiscito':
            for candidato in df.columns[5:8]:
                df[candidato + " Diferencia"] = df[candidato] - df[candidato + " Ajustada"]

        # Count the % of mesas with p-value under a threshold
        threshold = 1e-6
        p_valor_menor = df['p_valor'] < threshold
        p_valor_menor = (p_valor_menor.sum() / len(p_valor_menor)) * 100
        print(f'Porcentaje de mesas con p-valor < {threshold}: {p_valor_menor}')

        # Save the DataFrame to a .excel file with the p-values
        if eleccion == '2021_Presidencial':
            df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')
        elif eleccion == '2023_Plebiscito':
            df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')

        # Save the DataFrame to a .excel file with the p-values under the threshold
        df_p_valor_menor = df[df['p_valor'] < threshold]
        if eleccion == '2021_Presidencial':
            df_p_valor_menor.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_under_threshold_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')
        elif eleccion == '2023_Plebiscito':
            df_p_valor_menor.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_under_threshold_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')

        df = df[df['Diferencia'] >= 0]

        # Save the DataFrame to a .excel file with the p-values with positive difference
        if eleccion == '2021_Presidencial':
            df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_positive_difference_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')
        elif eleccion == '2023_Plebiscito':
            df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_positive_difference_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')

    elif method == 'FS':
        fs_etapa = 28
        fs_atributo = 27

        # Read files with PCA results, generate filename

        filename = generate_filename(method=method,
                                    train_frac=train_frac,
                                    K_folds=1,
                                    k_fold=1,
                                    split_distritos=split_distritos,
                                    seed_train=seed_train,
                                    fs_etapa=fs_etapa,
                                    fs_atributo=fs_atributo,
                                    atributos_circ=atributos_circ)
        # Read the file
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = torch.tensor(results.get('alpha_opt', None), dtype=torch.float64)
        beta = torch.tensor(results.get('beta_opt', None), dtype=torch.float64)
        atributos_filtro_subset = results.get('atributos_filtro', None)

        x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, _, _, df = get_xwve_from_election(regiones_filtro=[], 
                                                                                         atributos_filtro=atributos_filtro_subset, 
                                                                                         built_df=False, 
                                                                                         eleccion='2021_Presidencial', 
                                                                                         estandarizar=False, 
                                                                                         corr_threshold = 0.8, 
                                                                                         groups='ALL')

        df = df.iloc[:, :29]

        p_dgc = fun_p_full(v_da_torch, alpha, beta)
        p_bgc = oe.contract('bd,dgc->bgc', e_bd_torch, p_dgc, backend='torch')
        B, G, C = p_bgc.shape
        # mu_bc = oe.contract('bg,bgc->bc', w_bg_torch, p_bgc, backend='torch')

        # lista de p-valores
        p_valores = []

        # Calcular mu
        for b in range(B):
            # b = 0
            w_g = w_bg_torch[b] # array de G elementos
            p_gc = p_bgc[b] # matriz de GxC elementos
            Sigma = torch.zeros(size=(C, C), dtype=torch.float64)
            # g = 0
            for g in range(G):
                Sigma += w_g[g] * (torch.diag(p_gc[g]) - torch.einsum('i,j->ij', p_gc[g], p_gc[g]))

            # Crear la matriz diagonal para todos los g y sumar la diferencia
            # resultado = torch.diag(torch.sum(diag_term, dim=0)) - weighted_outer
            mu = torch.einsum('gc,g->c', p_gc, w_g)
            # x_0 outcome of multinomial 
            x0 = x_bc_torch[b]

            # Sigma = (Sigma + Sigma.T) / 2
            # epsilon = 1e-6  # Un valor pequeño
            # Sigma += epsilon * torch.eye(Sigma.shape[0], dtype=Sigma.dtype)

            p_valor = compute_p_value(mu, Sigma, x0, remove_most_expected=True)
            p_valor_numero = p_valor.item()

            p_valores.append(p_valor_numero)

        len(p_valores)
        # Add a column with the p-values in df
        df['p_valor'] = p_valores
        df['log_p_valor'] = np.log10(df['p_valor'])
        # get max and min p-values
        # max_p_valor = df['p_valor'].max()
        # min_p_valor = df['p_valor'].min()
        # print(f'Maximum p-value: {max_p_valor}')
        # print(f'Minimum p-value: {min_p_valor}')

        # exit()

        # Esperanza

        votos_candidatos = df.iloc[:, 5:13].sum(axis=1)
        grupos_socioeconomicos = df.iloc[:, 13:29].sum(axis=1)

        df['Diferencia'] = grupos_socioeconomicos - votos_candidatos

        esperanza = p_bgc * (df.iloc[:, 13:29].values)[:, :, None]
        esperanza = esperanza.sum(axis=1)
        # esperanza as numpy array
        esperanza = esperanza.detach().numpy()

        # Paso 1: Redondear al número entero más cercano
        esperanza_entera = np.round(esperanza).astype(int)

        # Paso 2: Ajustar por cada fila para que las sumas coincidan con 'grupos_socioeconomicos'
        ajuste_por_fila = grupos_socioeconomicos - np.sum(esperanza_entera, axis=1)

        # Paso 3: Iterar sobre cada fila para realizar el ajuste
        for i, ajuste in enumerate(ajuste_por_fila):
            ajuste = int(ajuste)  # Convertir ajuste a entero
            if ajuste != 0:
                # Calcular diferencias decimales originales para priorizar el ajuste
                diferencias = esperanza[i] - np.floor(esperanza[i])
                indices = np.argsort(diferencias if ajuste > 0 else -diferencias)

                # Ajustar iterativamente en los índices seleccionados
                for j in range(abs(ajuste)):
                    esperanza_entera[i, indices[j % len(indices)]] += np.sign(ajuste)
        
        # Paso 4: Calcular la diferencia entre la esperanza ajustada y los votos reales
        diferencia = grupos_socioeconomicos - np.sum(esperanza_entera, axis=1)

        if diferencia.max() == 0 and diferencia.min() == 0:
            print("Ajuste exitoso")
        else:
            print("Ajuste no exitoso")
            exit()

        # Proporcion
        proporcion = votos_candidatos / grupos_socioeconomicos
        proporcion = np.array(proporcion)
        # Expandir dimensiones y repetir
        proporcion_expandida = np.tile(proporcion[:, None], (1, C))

        esperanza_entera_ajustada = esperanza_entera * proporcion_expandida

        # Paso 1 Again
        esperanza_entera_ajustada = np.round(esperanza_entera_ajustada).astype(int)

        # Paso 2 Again
        ajuste_por_fila = votos_candidatos - np.sum(esperanza_entera_ajustada, axis=1)

        # Paso 3 Again
        for i, ajuste in enumerate(ajuste_por_fila):
            ajuste = int(ajuste)
            if ajuste != 0:
                diferencias = esperanza_entera_ajustada[i] - np.floor(esperanza_entera_ajustada[i])
                indices = np.argsort(diferencias if ajuste > 0 else -diferencias)
                for j in range(abs(ajuste)):
                    esperanza_entera_ajustada[i, indices[j % len(indices)]] += np.sign(ajuste)

        # Paso 4 Again
        diferencia = votos_candidatos - np.sum(esperanza_entera_ajustada, axis=1)

        if diferencia.max() == 0 and diferencia.min() == 0:
            print("Ajuste exitoso")
        else:
            print("Ajuste no exitoso")
            exit()

        # Agregar votos de esperanza ajustada al DataFrame
        for i, candidato in enumerate(df.columns[5:13]):
            print(f'Agregando votos de {candidato}')
            df[candidato + " Ajustada"] = esperanza_entera_ajustada[:, i]

        # Restar votos reales de votos de esperanza ajustada
        for candidato in df.columns[5:13]:
            df[candidato + " Diferencia"] = df[candidato] - df[candidato + " Ajustada"]

        # Count the % of mesas with p-value under a threshold
        threshold = 1e-6
        p_valor_menor = df['p_valor'] < threshold
        p_valor_menor = (p_valor_menor.sum() / len(p_valor_menor)) * 100
        print(f'Porcentaje de mesas con p-valor < {threshold}: {p_valor_menor}')

        # Save the DataFrame to a .excel file with the p-values
        df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold/{method}_p_values.xlsx')

        # Save the DataFrame to a .excel file with the p-values under the threshold
        df_p_valor_menor = df[df['p_valor'] < threshold]
        df_p_valor_menor.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold/{method}_p_values_under_threshold.xlsx')

        df = df[df['Diferencia'] >= 0]

        # Save the DataFrame to a .excel file with the p-values with positive difference
        df.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold/{method}_p_values_positive_difference.xlsx')

    return None

# Function that calculates the correlation between VDA and XBC, for 2021 election
def corr_vda_xbc(eleccion='2021_Presidencial', n_pca_components=0, n_pls_components=0, method='PCA'):

    atributos_filtro = ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje',
                        'ALEJANDRO NAVARRO BRAIN_Porcentaje',
                        'BEATRIZ SANCHEZ MUÑOZ_Porcentaje', 'CAROLINA GOIC BOROEVIC_Porcentaje',
                        'EDUARDO ARTES BRICHETTI_Porcentaje',
                        'JOSE ANTONIO KAST RIST_Porcentaje',
                        'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje',
                        'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje', 'numper', 'n_ocupados',
                        'n_inactivos', 'v27', 'zona_Rural', 'tipohogar_Unipersonal',
                        'tipohogar_Nuclear Monoparental', 'tipohogar_Nuclear Biparental',
                        'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental',
                        'tipohogar_Censal', 'pobreza_Pobres extremos', 'pobreza_No pobres',
                        'v1_No Casa', 'v13_No Propia', 'v20_No Red', 'edad', 'sexo_Mujer',
                        'ecivil_En Pareja', 'ecivil_Soltero', 'o31_No', 'activ_Ocupados',
                        'activ_Desocupados', 'activ_Inactivos', 's28_Sano', 'r1b_En Otra',
                        'r2_En Otra', 'inmigrante_Inmigrante',
                        'etnia_Pertenece a pueblos indígenas', 'ypchtotcor', 'educ_Universidad',
                        'prom_soc8b_com', 'Region_DE ANTOFAGASTA',
                        'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA',
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO',
                        'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 'Region_DE LOS LAGOS',
                        'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA',
                        'Region_DE TARAPACA', 'Region_DE VALPARAISO', 'Region_DEL BIOBIO',
                        'Region_DEL LIBERTADOR GENERAL BERNARDO O\'HIGGINS', 'Region_DEL MAULE',
                        'Region_METROPOLITANA DE SANTIAGO']
    
    x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos, grupos, df = get_xwve_from_election(regiones_filtro=[], 
                                                                                                                      atributos_filtro=atributos_filtro, 
                                                                                                                      built_df=False, 
                                                                                                                      eleccion=eleccion, 
                                                                                                                      estandarizar=False, 
                                                                                                                      corr_threshold = 0.8, 
                                                                                                                      n_pca_components=n_pca_components,
                                                                                                                      n_pls_components=n_pls_components,
                                                                                                                      groups='ALL')

    x_bc = pd.concat([df.iloc[:, 1], df.iloc[:, 5:13]], axis=1) #(46433, 9)
    # Get votes by Comuna
    x_dc = x_bc.groupby('Comuna').sum() #(324, 8)

    # Weight of x_dc
    delta_d = (x_dc.sum(axis=1) / x_dc.sum().sum()).values #(324,)

    # Medias ponderadas
    x_barra_dc = (x_dc.values * delta_d[:, None]).sum(axis=0)  # Media ponderada de votos por candidato
    v_barra_da = (v_da_torch * delta_d[:, None]).sum(axis=0)  # Media ponderada de variables

    # Diferencias respecto a las medias
    x_diff = x_dc.values - x_barra_dc # DxC
    v_diff = (v_da_torch - v_barra_da).numpy() # DxA

    # Numerador de la correlación ponderada
    numerador = (x_diff[:, :, None] * v_diff[:, None, :] * delta_d[:, None, None]).sum(axis=0) # CxA

    # Denominadores
    den_x = np.sqrt((x_diff**2 * delta_d[:, None]).sum(axis=0)) # C
    den_v = np.sqrt((v_diff**2 * delta_d[:, None]).sum(axis=0)) # A

    # Correlación ponderada
    correlacion = numerador / (den_x[:, None] * den_v[None, :])
    correlacion = correlacion.T # AxC

    # Convertir a DataFrame para interpretar resultados
    correlacion_df = pd.DataFrame(correlacion, columns=x_dc.columns, index=v_da_df.columns)

    # Read PCA_alpha_beta_probabilities.xlsx
    df_alpha_beta = pd.read_excel(f'{COD_FOLDER}Outputs/{method}_kfold/{method}_alpha_beta_probabilities.xlsx', sheet_name='Alpha_Probabilities', index_col=0)
    df_alpha_beta = df_alpha_beta.T

    # Normalizar los datos entre 0 y 1
    def normalize(df):
        # return df
        return (df - df.min().min()) / (df.max().max() - df.min().min())

    df1_normalized = normalize(correlacion_df)
    df2_normalized = normalize(df_alpha_beta)

    # Crear figuras para visualizar
    fig, axes = plt.subplots(1, 2, figsize=(12, 6))

    # Heatmap para df1
    sns.heatmap(df1_normalized, cmap='coolwarm', ax=axes[0], cbar=True)
    axes[0].set_title('DF1 - Normalizado')

    # Heatmap para df2
    sns.heatmap(df2_normalized, cmap='coolwarm', ax=axes[1], cbar=True)
    axes[1].set_title('DF2 - Normalizado')

    plt.tight_layout()
    plt.show()

    return None

# Function that creates a heatmap for locales with at least 1 mesa with p-value under a threshold
def heatmap_single_local_p_values(method='PLS', threshold=1e-6, eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, 
                                  distmin=False, comuna=False, circ=False, dummies_circ=False):
    # Ruta del archivo de entrada
    if eleccion == '2021_Presidencial':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    elif eleccion == '2023_Plebiscito':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    # Verifica si el archivo existe
    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    # Leer el DataFrame con los p-valores
    df = pd.read_excel(file_path)

    # Eliminar columna innecesaria
    df = df.drop(columns='Unnamed: 0', errors='ignore')

    # Reemplazar ":" por "" en la columna 'Local'
    df['Local'] = df['Local'].str.replace(':', '')

    # Filtrar locales con al menos una mesa con p-valor bajo el umbral
    df_under_threshold = df[df['p_valor'] < threshold]

    if df_under_threshold.empty:
        print("No hay locales con p-valores por debajo del umbral especificado.")
        return

    # Seleccionar un local arbitrariamente (el primero)
    local_info = df_under_threshold.iloc[0][['Región', 'Comuna', 'Circunscripción electoral', 'Local']]
    region, comuna, circ, local_name = local_info

    # Filtrar datos para el local seleccionado
    local_data = df[
        (df['Región'] == region) &
        (df['Comuna'] == comuna) &
        (df['Circunscripción electoral'] == circ) &
        (df['Local'] == local_name)
    ]

    # Filtrar columnas que terminan en 'H' y 'M'
    columnas_hombres = [col for col in local_data.columns if col.endswith(' H')]
    columnas_mujeres = [col for col in local_data.columns if col.endswith(' M')]

    # Extraer los rangos de edad eliminando el sufijo y ordenarlos correctamente
    edades = sorted(set(col[:-2] for col in columnas_hombres), key=lambda x: int(x.split('-')[0]) if '-' in x else int(x[:-1]))

    # Crear un nuevo DataFrame con las demás columnas
    local_data_sort = local_data.drop(columns=columnas_hombres + columnas_mujeres).copy()

    # Agregar las columnas agrupadas por edad en orden
    for edad in edades:
        local_data_sort[edad] = local_data[f"{edad} H"] + local_data[f"{edad} M"]

    # Reordenar columnas para que las edades estén al final del DataFrame
    columnas_ordenadas = [col for col in local_data_sort.columns if col not in edades] + edades
    local_data_sort = local_data_sort[columnas_ordenadas]

    p_values_df = local_data[['Mesa', 'p_valor']].set_index('Mesa')

    # Transformar a formato largo
    if eleccion == '2021_Presidencial':
        votos_reales_melted = local_data.melt(
            id_vars=['Mesa'],
            value_vars=['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST', 'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO'],
            var_name='Candidato',
            value_name='Votos'
        )
        votos_diferencia_melted = local_data.melt(
            id_vars=['Mesa'],
            value_vars=['EDUARDO ARTES Diferencia', 'FRANCO ALDO PARISI Diferencia', 'GABRIEL BORIC Diferencia', 'JOSE ANTONIO KAST Diferencia', 'MARCO ENRIQUEZ-OMINAMI Diferencia', 'SEBASTIAN SICHEL Diferencia', 'YASNA PROVOSTE Diferencia', 'NULO BLANCO Diferencia'],
            var_name='Candidato',
            value_name='Votos'
        )
        grupos_demograficos_melted = local_data_sort.melt(
            id_vars=['Mesa'],
            value_vars=edades,
            var_name='Grupo demográfico',
            value_name='Votantes'
        )

    elif eleccion == '2023_Plebiscito':
        votos_reales_melted = local_data.melt(
            id_vars=['Mesa'],
            value_vars=['A FAVOR', 'EN CONTRA', 'NULO BLANCO'],
            var_name='Candidato',
            value_name='Votos'
        )

        votos_diferencia_melted = local_data.melt(
            id_vars=['Mesa'],
            value_vars=['A FAVOR Diferencia', 'EN CONTRA Diferencia', 'NULO BLANCO Diferencia'],
            var_name='Candidato',
            value_name='Votos'
        )

        grupos_demograficos_melted = local_data_sort.melt(
            id_vars=['Mesa'],
            value_vars=edades,
            var_name='Grupo demográfico',
            value_name='Votantes'
        )

    # Preparar datos para el heatmap
    heatmap_data_real = votos_reales_melted.pivot(index='Mesa', columns='Candidato', values='Votos')
    heatmap_data_diferencia = votos_diferencia_melted.pivot(index='Mesa', columns='Candidato', values='Votos')
    heatmap_data_demograficos = grupos_demograficos_melted.pivot(index='Mesa', columns='Grupo demográfico', values='Votantes')

    # Crear gradiente de color suave
    cmap_pvalue = sns.light_palette("blue", as_cmap=True, reverse=True)
    cmap_real = sns.light_palette("green", as_cmap=True)
    cmap_diferencia = sns.diverging_palette(240, 0, s=100, l=40, as_cmap=True)
    cmap_grupo = sns.light_palette("purple", as_cmap=True)

    fig, axs = plt.subplots(
        nrows=1, ncols=4,
        figsize=(60, 40),
        gridspec_kw={'width_ratios': [0.6, 2, 2, 2], 
                     'wspace': 0.1}
    )

    # Función para formatear los valores
    def format_value(val):
        if val < 0.00001:
            return f"{val:.1e}"
        else:
            return f"{val:.4f}"

    # Heatmap de p-valores (sin barra de color)
    log_p_values_df = np.log10(p_values_df.replace(0, np.nan))  # Evita log(0)
    # print(log_p_values_df)
    sns.heatmap(
        log_p_values_df,
        cmap=cmap_pvalue,
        ax=axs[0],
        annot=p_values_df.applymap(format_value),
        fmt='',
        cbar=False,
        vmin=-6,
        vmax=0,
        annot_kws={"size": 60},  # Aumentar el tamaño del texto en las casillas
        xticklabels=False,  # Asegura que las mesas se etiqueten
        yticklabels=True,  # Asegura que las mesas se etiqueten   
        linewidths=10,
    )
    axs[0].set_title("p-valores", fontsize=50)
    axs[0].set_ylabel('Mesa', fontsize=50)
    axs[0].set_xlabel('')

    # Aumentar el tamaño de las etiquetas del eje y (mesas)
    # axs[0].tick_params(axis='x', labelsize=0)
    axs[0].tick_params(axis='y', labelsize=50)

    # Heatmap de votos reales
    # Reordenar columnas para que "NULO BLANCO" esté al final
    if "NULO BLANCO" in heatmap_data_real.columns:
        heatmap_data_real = heatmap_data_real[[col for col in heatmap_data_real.columns if col != "NULO BLANCO"] + ["NULO BLANCO"]]

    ax1 = sns.heatmap(
        heatmap_data_real,
        cmap='Reds',
        ax=axs[1],
        annot=True,
        fmt='g',
        cbar=False,
        # cbar_kws={'label': 'Votos Reales'},
        annot_kws={"size": 50},  # Aumentar el tamaño del texto en las casillas
        xticklabels=True,  # Asegura que las mesas se etiqueten
        yticklabels=False,  # Asegura que las mesas se etiqueten
        linewidths=10,
    )
    axs[1].set_title("Votos Reales", fontsize=50)
    axs[1].set_ylabel('')
    if eleccion == '2021_Presidencial':
        axs[1].set_xlabel('\nCandidato', fontsize=50)
    elif eleccion == '2023_Plebiscito':
        axs[1].set_xlabel('\nOpción', fontsize=50)
    axs[1].set_yticks([])  # Elimina los ticks del eje y

    # Aumentar el tamaño de las etiquetas del eje y (mesas)
    if eleccion == '2021_Presidencial':
        axs[1].tick_params(axis='x', labelsize=50)
    elif eleccion == '2023_Plebiscito':
        axs[1].tick_params(axis='x', labelsize=50, rotation=90)

    # Aumentar el tamaño de las etiquetas del eje y (mesas)
    # axs[1].tick_params(axis='x', labelsize=25)
    # axs[1].tick_params(axis='y', labelsize=16)

    # # Acceder a la barra de color y modificar el tamaño de fuente de las etiquetas
    # cbar = ax1.collections[0].colorbar  # Obtén la barra de color
    # cbar.ax.tick_params(labelsize=16)  # Cambia el tamaño de las etiquetas de la barra de color
    
    # # Modificar el tamaño de la etiqueta de la barra de color (el texto 'Votos Reales')
    # cbar.set_label('Votos Reales', fontsize=16)  # Cambia el tamaño de la etiqueta

    # ax1.tick_params(axis='y', labelrotation=90, labelsize=12)

    # Heatmap de votos esperados
    heatmap_data_diferencia.columns = heatmap_data_diferencia.columns.str.replace(' Diferencia', '')
    if "NULO BLANCO" in heatmap_data_diferencia.columns:
        heatmap_data_diferencia = heatmap_data_diferencia[[col for col in heatmap_data_diferencia.columns if col != "NULO BLANCO"] + ["NULO BLANCO"]]
    
    ax2 = sns.heatmap(
        heatmap_data_diferencia,
        cmap='bwr',
        ax=axs[2],
        annot=True,
        fmt='g',
        cbar=False,
        # cbar_kws={'label': 'Votos Reales - Votos Esperados'},
        annot_kws={"size": 50},  # Aumentar el tamaño del texto en las casillas
        xticklabels=True,  # Asegura que las mesas se etiqueten
        yticklabels=False,  # Asegura que las mesas se etiqueten
        linewidths=10,
    )
    axs[2].set_title("Votos Reales - Votos Esperados", fontsize=50)
    axs[2].set_ylabel('')
    if eleccion == '2021_Presidencial':
        axs[2].set_xlabel('\nCandidato', fontsize=50)
    elif eleccion == '2023_Plebiscito':
        axs[2].set_xlabel('\nOpción', fontsize=50)
    axs[2].set_yticks([])  # Elimina los ticks del eje y

    # Aumentar el tamaño de las etiquetas del eje y (mesas)
    if eleccion == '2021_Presidencial':
        axs[2].tick_params(axis='x', labelsize=50)
    elif eleccion == '2023_Plebiscito':
        axs[2].tick_params(axis='x', labelsize=50, rotation=90)

    ax3 = sns.heatmap(
        heatmap_data_demograficos,
        cmap=cmap_grupo,
        ax=axs[3],
        annot=True,
        fmt='g',
        cbar=False,
        # cbar_kws={'label': 'Votos Reales - Votos Esperados'},
        annot_kws={"size": 50},  # Aumentar el tamaño del texto en las casillas
        xticklabels=True,  # Asegura que las mesas se etiqueten
        yticklabels=False,  # Asegura que las mesas se etiqueten
        linewidths=10,
    )
    axs[3].set_title("Grupos demograficos", fontsize=50)
    axs[3].set_ylabel('')
    axs[3].set_xlabel('\nGrupo', fontsize=50)
    axs[3].set_yticks([])  # Elimina los ticks del eje y

    axs[3].tick_params(axis='x', labelsize=50, rotation=90)

    # Aumentar el tamaño de las etiquetas del eje y (mesas)
    # axs[2].tick_params(axis='x', labelsize=25)
    # axs[2].tick_params(axis='y', labelsize=16)

    # ax2.tick_params(axis='y', labelrotation=90, labelsize=12)

    # Acceder a la barra de color y modificar el tamaño de fuente de las etiquetas
    # cbar = ax2.collections[0].colorbar  # Obtén la barra de color
    # cbar.ax.tick_params(labelsize=16)  # Cambia el tamaño de las etiquetas de la barra de color
    
    # # Modificar el tamaño de la etiqueta de la barra de color (el texto 'Votos Reales')
    # cbar.set_label('Votos Reales - Votos Esperados', fontsize=16)  # Cambia el tamaño de la etiqueta

    # Agregar título principal
    plt.suptitle(f"Local: {local_name}\nComuna de: {comuna}", fontsize=90)
    plt.tight_layout(rect=[0, 0, 1, 0.93])  # Ajustar espacio global para título
    plt.show()
    
    return None

def heatmap_all_locals_p_values(method='PLS', threshold=1e-6, eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, distmin=False, 
                                 comuna=False, circ=False, dummies_circ=False):
    import os
    import pandas as pd
    import seaborn as sns
    import numpy as np
    import matplotlib.pyplot as plt

    if eleccion == '2021_Presidencial':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    elif eleccion == '2023_Plebiscito':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    df = pd.read_excel(file_path).drop(columns='Unnamed: 0', errors='ignore')
    df['Local'] = df['Local'].str.replace(':', '')

    df_under_threshold = df[df['p_valor'] < threshold]
    if df_under_threshold.empty:
        print("No hay locales con p-valores por debajo del umbral especificado.")
        return

    unique_locals = df_under_threshold[['Región', 'Comuna', 'Circunscripción electoral', 'Local']].drop_duplicates()

    nombres_con_tildes = {
        "EDUARDO ARTES": "EDUARDO ARTÉS",
        "GABRIEL BORIC": "GABRIEL BORIC",
        "MARCO ENRIQUEZ-OMINAMI": "MARCO ENRÍQUEZ-OMINAMI",
        "YASNA PROVOSTE": "YASNA PROVOSTE",
        "FRANCO ALDO PARISI": "FRANCO ALDO PARISI",
        "SEBASTIAN SICHEL": "SEBASTIÁN SICHEL",
        "JOSE ANTONIO KAST": "JOSÉ ANTONIO KAST",
        "NULO BLANCO": "NULO/BLANCO",
        "A FAVOR": "A FAVOR",
        "EN CONTRA": "EN CONTRA"
    }

    for _, local_info in unique_locals.iterrows():
        region, comuna_, circ_, local_name = local_info

        local_data = df[
            (df['Región'] == region) &
            (df['Comuna'] == comuna_) &
            (df['Circunscripción electoral'] == circ_) &
            (df['Local'] == local_name)
        ]

        columnas_hombres = [col for col in local_data.columns if col.endswith(' H')]
        columnas_mujeres = [col for col in local_data.columns if col.endswith(' M')]
        edades = sorted(set(col[:-2] for col in columnas_hombres), key=lambda x: int(x.split('-')[0]) if '-' in x else int(x[:-1]))

        local_data_sort = local_data.drop(columns=columnas_hombres + columnas_mujeres).copy()
        for edad in edades:
            local_data_sort[edad] = local_data.get(f"{edad} H", 0) + local_data.get(f"{edad} M", 0)

        columnas_ordenadas = [col for col in local_data_sort.columns if col not in edades] + edades
        local_data_sort = local_data_sort[columnas_ordenadas]

        p_values_df = local_data[['Mesa', 'p_valor']].set_index('Mesa')

        # === Melt de votos por elección
        if eleccion == '2021_Presidencial':
            orden_candidatos = ["EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
                                "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"]

            votos_reales_melted = local_data.melt(
                id_vars=['Mesa'], value_vars=orden_candidatos,
                var_name='Candidato', value_name='Votos'
            )
            votos_diferencia_melted = local_data.melt(
                id_vars=['Mesa'], value_vars=[f"{c} Diferencia" for c in orden_candidatos],
                var_name='Candidato', value_name='Votos'
            )
            votos_diferencia_melted['Candidato'] = votos_diferencia_melted['Candidato'].str.replace(' Diferencia', '')

        elif eleccion == '2023_Plebiscito':
            orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]

            votos_reales_melted = local_data.melt(
                id_vars=['Mesa'], value_vars=orden_candidatos,
                var_name='Candidato', value_name='Votos'
            )
            votos_diferencia_melted = local_data.melt(
                id_vars=['Mesa'], value_vars=[f"{c} Diferencia" for c in orden_candidatos],
                var_name='Candidato', value_name='Votos'
            )
            votos_diferencia_melted['Candidato'] = votos_diferencia_melted['Candidato'].str.replace(' Diferencia', '')

        grupos_demograficos_melted = local_data_sort.melt(
            id_vars=['Mesa'], value_vars=edades,
            var_name='Grupo demográfico', value_name='Votantes'
        )

        heatmap_data_real = votos_reales_melted.pivot(index='Mesa', columns='Candidato', values='Votos')
        heatmap_data_diferencia = votos_diferencia_melted.pivot(index='Mesa', columns='Candidato', values='Votos')
        heatmap_data_demograficos = grupos_demograficos_melted.pivot(index='Mesa', columns='Grupo demográfico', values='Votantes')

        # === Ordenar columnas de candidatos según orden predefinido
        heatmap_data_real = heatmap_data_real[[c for c in orden_candidatos if c in heatmap_data_real.columns]]
        heatmap_data_diferencia = heatmap_data_diferencia[[c for c in orden_candidatos if c in heatmap_data_diferencia.columns]]

        # === Colormaps
        cmap_pvalue = sns.light_palette("blue", as_cmap=True, reverse=True)
        cmap_grupo = sns.light_palette("purple", as_cmap=True)

        fig, axs = plt.subplots(nrows=1, ncols=4, figsize=(60, 40),
                                gridspec_kw={'width_ratios': [0.6, 2, 2, 2], 'wspace': 0.1})

        def format_value(val):
            if pd.isna(val):
                return ""
            elif val < 1e-4:
                base, exp = f"{val:.1e}".split("e")
                base = base.replace(".", ",")
                exp = exp.replace("+", "")
                return rf"${base} \cdot 10^{{{int(exp)}}}$"
            else:
                return f"{val:.4f}".replace(".", ",")

        log_p_values_df = np.log10(p_values_df.replace(0, np.nan))
        sns.heatmap(log_p_values_df, cmap=cmap_pvalue, ax=axs[0],
                    annot=p_values_df.applymap(format_value), fmt='',
                    cbar=False, vmin=-6, vmax=0, annot_kws={"size": 50},
                    xticklabels=False, yticklabels=True, linewidths=10)
        axs[0].set_title("p-valores", fontsize=50)
        axs[0].set_ylabel('Mesa', fontsize=50)
        axs[0].tick_params(axis='y', labelsize=50, rotation=0)

        heatmap_data_real.rename(columns=nombres_con_tildes, inplace=True)
        heatmap_data_diferencia.rename(columns=nombres_con_tildes, inplace=True)
        sns.heatmap(heatmap_data_real, cmap='Reds', ax=axs[1], annot=True, fmt='g',
            cbar=False, annot_kws={"size": 50}, xticklabels=True, yticklabels=False, linewidths=10)
        axs[1].set_title("Votos Reales", fontsize=50)
        axs[1].set_xlabel('\nCandidato' if eleccion == '2021_Presidencial' else '\nOpción', fontsize=50)
        axs[1].tick_params(axis='x', labelsize=50, rotation=90)

        sns.heatmap(heatmap_data_diferencia, cmap='bwr', ax=axs[2], annot=True, fmt='g',
            cbar=False, annot_kws={"size": 50}, xticklabels=True, yticklabels=False, linewidths=10)
        axs[2].set_title("Votos Reales - Votos Esperados", fontsize=50)
        axs[2].set_xlabel('\nCandidato' if eleccion == '2021_Presidencial' else '\nOpción', fontsize=50)
        axs[2].tick_params(axis='x', labelsize=50, rotation=90)

        sns.heatmap(heatmap_data_demograficos, cmap=cmap_grupo, ax=axs[3], annot=True, fmt='g',
                    cbar=False, annot_kws={"size": 50}, xticklabels=True, yticklabels=False, linewidths=10)
        axs[3].set_title("Grupos demográficos", fontsize=50)
        axs[3].set_xlabel('\nGrupo', fontsize=50)
        axs[3].tick_params(axis='x', labelsize=50, rotation=90)

        plt.suptitle(f"Local: {local_name}\nComuna de: {comuna_}", fontsize=90)
        plt.subplots_adjust(bottom=0.2, top=0.85)

        output_folder = f"{COD_FOLDER}Outputs/{method}_kfold_{eleccion.split('_')[0]}/{str(groups) + '_circ' if atributos_circ else str(groups)}/{'distmin' if distmin else 'distprom'}/{method}_heatmaps_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}/"
        os.makedirs(output_folder, exist_ok=True)
        plt.savefig(f"{output_folder}{local_name}_heatmap_with_pvalues.png", bbox_inches='tight')
        plt.close()

    print(f"Heatmaps creados para {len(unique_locals)} locales.")
    return None

# Function that calculates percentiles for the p-values in each comuna or local
def estadisticas_p_values(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, distmin=False,
                          comuna=False, circ=False, dummies_circ=False):
    # Read excel file with p-values
    if eleccion == '2021_Presidencial':
        df = pd.read_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')
    elif eleccion == '2023_Plebiscito':
        df = pd.read_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx')
    # Get the percentiles by comuna
    percentiles_comuna = df.groupby('Comuna')['p_valor'].quantile([0.1, 0.25, 0.5, 0.75, 0.9])
    # Pass the percentiles to a DataFrame
    percentiles_comuna = percentiles_comuna.unstack()
    # Save the percentiles to an excel file
    if eleccion == '2021_Presidencial':
        percentiles_comuna.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_percentiles_comuna.xlsx')
    elif eleccion == '2023_Plebiscito':
        percentiles_comuna.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_percentiles_comuna.xlsx')

    # Get the percentiles by local
    llave_local = ['Región', 'Comuna', 'Circunscripción electoral', 'Local']
    percentiles_local = df.groupby(llave_local)['p_valor'].quantile([0.1, 0.25, 0.5, 0.75, 0.9])
    # Pass the percentiles to a DataFrame
    percentiles_local = percentiles_local.unstack()
    # Save the percentiles to an excel file
    if eleccion == '2021_Presidencial':
        percentiles_local.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_percentiles_local.xlsx')
    elif eleccion == '2023_Plebiscito':
        percentiles_local.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_percentiles_local.xlsx')

    return None

# Function that gets val avg and test avg for a specific method and components
def get_val_test_avg(method='PLS', train_frac=0.8, K_folds=4, split_distritos=True, n_pls_components=0, seed_train=0, 
                     fs_etapa=None, fs_atributo=None, groups='ALL', eleccion='2021_Presidencial', atributos_circ=False):

    val_avg =[]
    test_avg = []

    # Read files with the results
    for k_ in range(1, K_folds + 1):
        filename = generate_filename(method=method, 
                                    train_frac=train_frac, 
                                    K_folds=K_folds, 
                                    k_fold=k_, 
                                    split_distritos=split_distritos, 
                                    n_pls_components=n_pls_components, 
                                    seed_train=seed_train,
                                    fs_etapa=fs_etapa, 
                                    fs_atributo=fs_atributo, 
                                    groups=groups, 
                                    eleccion=eleccion,
                                    atributos_circ=atributos_circ)
        # Read the file
        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the val avg and test avg
        likelihood_val = results.get('likelihood_val', None)
        likelihood_test = results.get('likelihood_test', None)

        if likelihood_val is not None and likelihood_test is not None:
            val_avg.append(likelihood_val)
            test_avg.append(likelihood_test)

    # Calculate the average of val and test
    val_avg = np.mean(val_avg)
    test_avg = np.mean(test_avg)

    print(f'Method: {method}, groups: {groups}, eleccion: {eleccion}')
    print(f'Val avg: {val_avg}')
    print(f'Test avg: {test_avg}')

    return None

# Function that plots the % of mesas with p-value under a threshold
def plot_pvalues_scatter(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, distmin=False, comuna=False, 
                         circ=False, dummies_circ=False):
    
    # Ruta del archivo de entrada
    if eleccion == '2021_Presidencial':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    elif eleccion == '2023_Plebiscito':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    # Verifica si el archivo existe
    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    # Leer el DataFrame con los p-valores
    df = pd.read_excel(file_path)

    # Eliminar columna innecesaria
    df = df.drop(columns='Unnamed: 0', errors='ignore')

    # Reemplazar ":" por "" en la columna 'Local'
    df['Local'] = df['Local'].str.replace(':', '')

    # Numero de votos
    if eleccion == '2021_Presidencial':
        grupos = df.columns[14:30]  # Ajustar el rango de columnas según los candidatos
        df['Number_of_votes'] = df[grupos].sum(axis=1)
    elif eleccion == '2023_Plebiscito':
        grupos = df.columns[9:25]
        df['Number_of_votes'] = df[grupos].sum(axis=1)

    # Ajustar límites de la escala logarítmica
    min_p_val = df['p_valor'].min()
    max_p_val = df['p_valor'].max()

    # Establecer un límite inferior más alto si hay valores extremadamente pequeños
    lower_limit = 10 ** (np.floor(np.log10(min_p_val)) - 1)  # Limitar los valores más pequeños para que no se vean en el gráfico

    plt.figure(figsize=(8, 10))
    ax = sns.scatterplot(data=df, x='Number_of_votes', y='p_valor',
                        color="blue", alpha=0.5)

    # ----------------------------------------
    # Escala log y formateo con 10^{-k}
    # ----------------------------------------
    ax.set_yscale("log")
    ax.set_ylim(lower_limit, 1e-2)
    ax.yaxis.set_major_locator(LogLocator(base=10.0, numticks=15))
    ax.yaxis.set_major_formatter(LogFormatterMathtext(base=10.0))
    ax.set_yticks([])

    # Si prefieres que se vean los ticks, comenta la siguiente línea
    # ax.set_yticks([])

    # ----------------------------------------
    # Líneas de umbral y etiquetas
    # ----------------------------------------
    thresholds = [10**(-k) for k in range(10, 81, 10)]   # 1e-10 a 1e-80
    labels = [rf"$10^{{-{k}}}$" for k in range(10, 81, 10)]
    colors = sns.color_palette("RdYlGn", len(thresholds))

    ymin, ymax = ax.get_ylim()
    for thr, label, color in zip(thresholds, labels, colors):
        if ymin <= thr <= ymax:
            ax.axhline(y=thr, color=color, linestyle='dashed', alpha=0.6)
            ax.text(x=df['Number_of_votes'].max(), y=thr, s=label,
                    va="center", ha="left",
                    bbox=dict(facecolor=color, alpha=0.8, edgecolor='black'))

    # ----------------------------------------
    # Etiquetas y resto del formato
    # ----------------------------------------
    ax.set_xlabel("Número de votos")
    ax.set_ylabel("p-valor")
    ax.set_title("p-valores estimados en todas las mesas")
    plt.tight_layout()

    # Guardar el gráfico
    output_folder = f"{COD_FOLDER}Outputs/{method}_kfold_{eleccion.split('_')[0]}/{str(groups) + '_circ' if atributos_circ else str(groups)}/{'distmin' if distmin else 'distprom'}/"
    os.makedirs(output_folder, exist_ok=True)
    plt.savefig(f"{output_folder}{method}_scatter_p_values_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}.png", bbox_inches='tight')

    plt.show()

    return None

# Function that shows how many + or - gets every option
def weird_ballet_box_df(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, distmin=False, comuna=False, 
                        circ=False, dummies_circ=False, threshold=1e-6):
    # Ruta del archivo de entrada
    if eleccion == '2021_Presidencial':
        base_folder = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
    elif eleccion == '2023_Plebiscito':
        base_folder = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'

    file_path = f'{base_folder}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    # Verifica si el archivo existe
    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    # Leer el DataFrame con los p-valores
    df = pd.read_excel(file_path)

    # Eliminar columna innecesaria
    df = df.drop(columns='Unnamed: 0', errors='ignore')

    # Reemplazar ":" por "" en la columna 'Local'
    df['Local'] = df['Local'].str.replace(':', '')

    df_under_threshold = df[df['p_valor'] < threshold]

    if eleccion == '2021_Presidencial':
        df_under_threshold_sim = df_under_threshold[['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa',
                                                     'EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                                     'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                                                     'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                                     'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada',
                                                     'SEBASTIAN SICHEL Ajustada', 'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada',
                                                     'EDUARDO ARTES Diferencia', 'FRANCO ALDO PARISI Diferencia', 'GABRIEL BORIC Diferencia',
                                                     'JOSE ANTONIO KAST Diferencia', 'MARCO ENRIQUEZ-OMINAMI Diferencia', 
                                                     'SEBASTIAN SICHEL Diferencia', 'YASNA PROVOSTE Diferencia', 'NULO BLANCO Diferencia']]

    if eleccion == '2023_Plebiscito':
        df_under_threshold_sim = df_under_threshold[['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa', 
                                                     'A FAVOR', 'EN CONTRA', 'NULO BLANCO', 
                                                     'A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada', 
                                                     'A FAVOR Diferencia', 'EN CONTRA Diferencia', 'NULO BLANCO Diferencia']]

    df_under_threshold_sim = df_under_threshold_sim.drop_duplicates()

    # Cambiar nombre de las columnas "Diferencia" por "Reales - Esperados"
    df_under_threshold_sim.columns = df_under_threshold_sim.columns.str.replace('Diferencia', 'Reales - Esperados')

    # Filtrar las columnas que contienen 'Diferencia' en su nombre
    columns_to_sum = [col for col in df_under_threshold_sim.columns if 'Reales - Esperados' in col]

    # Sumar las columnas seleccionadas a lo largo del eje 0
    df_sum_diferencia = df_under_threshold_sim[columns_to_sum].sum(axis=0)

    # Crear textos
    porcentaje = df_under_threshold.shape[0] / df.shape[0] * 100
    texto1 = f'% of ballot-boxes with p-value under {threshold} is {porcentaje:.2f}%'
    texto2 = (
        f'Number of ballot-boxes with p-value under {threshold} and with a difference in votes for each option:\n'
        f'{df_sum_diferencia.to_string()}'
    )

    print(texto1)
    print(texto2)

    # Guardar en archivo .txt
    output_filename = f'{method}_resumen_pval_{eleccion}_{groups}_threshold_{threshold:.0e}.txt'
    output_path = os.path.join(base_folder, output_filename)

    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(texto1 + '\n\n')
        f.write(texto2 + '\n')

    # Retornar también por si se quiere seguir usando
    return {
        "summary": texto1,
        "details": texto2,
        "suma_diferencias": df_sum_diferencia,
        "output_path": output_path
    }

# Function that shows the differnece in % of votes reales and esperados
def real_and_expected_results(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, distmin=False, comuna=False, 
                              circ=False, dummies_circ=False):
    # Ruta del archivo de entrada
    if eleccion == '2021_Presidencial':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    elif eleccion == '2023_Plebiscito':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    # Verifica si el archivo existe
    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    # Leer el DataFrame con los p-valores
    df = pd.read_excel(file_path)

    # Eliminar columna innecesaria
    df = df.drop(columns='Unnamed: 0', errors='ignore')

    # Reemplazar ":" por "" en la columna 'Local'
    df['Local'] = df['Local'].str.replace(':', '')

    if eleccion == '2021_Presidencial':
        df_sim = df[['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa',
                    'EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                    'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                    'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                    'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                    'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']]

        # A nivel de local: agrupar por 'Local' y sumar los votos
        df_local = df_sim.groupby('Local')[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                                            'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        # Calcular los porcentajes a nivel de local
        df_local['Total Votos Originales Local'] = df_local[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO']].sum(axis=1)
        df_local['Total Votos Ajustados Local'] = df_local[['EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)

        df_local['% EDUARDO ARTES Local'] = df_local['EDUARDO ARTES'] / df_local['Total Votos Originales Local'] * 100
        df_local['% FRANCO ALDO PARISI Local'] = df_local['FRANCO ALDO PARISI'] / df_local['Total Votos Originales Local'] * 100
        df_local['% GABRIEL BORIC Local'] = df_local['GABRIEL BORIC'] / df_local['Total Votos Originales Local'] * 100
        df_local['% JOSE ANTONIO KAST Local'] = df_local['JOSE ANTONIO KAST'] / df_local['Total Votos Originales Local'] * 100
        df_local['% MARCO ENRIQUEZ-OMINAMI Local'] = df_local['MARCO ENRIQUEZ-OMINAMI'] / df_local['Total Votos Originales Local'] * 100
        df_local['% SEBASTIAN SICHEL Local'] = df_local['SEBASTIAN SICHEL'] / df_local['Total Votos Originales Local'] * 100
        df_local['% YASNA PROVOSTE Local'] = df_local['YASNA PROVOSTE'] / df_local['Total Votos Originales Local'] * 100
        df_local['% NULO BLANCO Local'] = df_local['NULO BLANCO'] / df_local['Total Votos Originales Local'] * 100

        df_local['% EDUARDO ARTES Ajustada Local'] = df_local['EDUARDO ARTES Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% FRANCO ALDO PARISI Ajustada Local'] = df_local['FRANCO ALDO PARISI Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% GABRIEL BORIC Ajustada Local'] = df_local['GABRIEL BORIC Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% JOSE ANTONIO KAST Ajustada Local'] = df_local['JOSE ANTONIO KAST Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% MARCO ENRIQUEZ-OMINAMI Ajustada Local'] = df_local['MARCO ENRIQUEZ-OMINAMI Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% SEBASTIAN SICHEL Ajustada Local'] = df_local['SEBASTIAN SICHEL Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% YASNA PROVOSTE Ajustada Local'] = df_local['YASNA PROVOSTE Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% NULO BLANCO Ajustada Local'] = df_local['NULO BLANCO Ajustada'] / df_local['Total Votos Ajustados Local'] * 100

        df_local['Diferencia % EDUARDO ARTES Local'] = df_local['% EDUARDO ARTES Local'] - df_local['% EDUARDO ARTES Ajustada Local']
        df_local['Diferencia % FRANCO ALDO PARISI Local'] = df_local['% FRANCO ALDO PARISI Local'] - df_local['% FRANCO ALDO PARISI Ajustada Local']
        df_local['Diferencia % GABRIEL BORIC Local'] = df_local['% GABRIEL BORIC Local'] - df_local['% GABRIEL BORIC Ajustada Local']
        df_local['Diferencia % JOSE ANTONIO KAST Local'] = df_local['% JOSE ANTONIO KAST Local'] - df_local['% JOSE ANTONIO KAST Ajustada Local']
        df_local['Diferencia % MARCO ENRIQUEZ-OMINAMI Local'] = df_local['% MARCO ENRIQUEZ-OMINAMI Local'] - df_local['% MARCO ENRIQUEZ-OMINAMI Ajustada Local']
        df_local['Diferencia % SEBASTIAN SICHEL Local'] = df_local['% SEBASTIAN SICHEL Local'] - df_local['% SEBASTIAN SICHEL Ajustada Local']
        df_local['Diferencia % YASNA PROVOSTE Local'] = df_local['% YASNA PROVOSTE Local'] - df_local['% YASNA PROVOSTE Ajustada Local']
        df_local['Diferencia % NULO BLANCO Local'] = df_local['% NULO BLANCO Local'] - df_local['% NULO BLANCO Ajustada Local']

        # A nivel de comuna: agrupar por 'Comuna' y sumar los votos
        df_comuna = df_sim.groupby('Comuna')[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                                            'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        df_comuna['Total Votos Originales Comuna'] = df_comuna[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO']].sum(axis=1)
        df_comuna['Total Votos Ajustados Comuna'] = df_comuna[['EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)

        df_comuna['% EDUARDO ARTES Comuna'] = df_comuna['EDUARDO ARTES'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% FRANCO ALDO PARISI Comuna'] = df_comuna['FRANCO ALDO PARISI'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% GABRIEL BORIC Comuna'] = df_comuna['GABRIEL BORIC'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% JOSE ANTONIO KAST Comuna'] = df_comuna['JOSE ANTONIO KAST'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% MARCO ENRIQUEZ-OMINAMI Comuna'] = df_comuna['MARCO ENRIQUEZ-OMINAMI'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% SEBASTIAN SICHEL Comuna'] = df_comuna['SEBASTIAN SICHEL'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% YASNA PROVOSTE Comuna'] = df_comuna['YASNA PROVOSTE'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% NULO BLANCO Comuna'] = df_comuna['NULO BLANCO'] / df_comuna['Total Votos Originales Comuna'] * 100

        df_comuna['% EDUARDO ARTES Ajustada Comuna'] = df_comuna['EDUARDO ARTES Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% FRANCO ALDO PARISI Ajustada Comuna'] = df_comuna['FRANCO ALDO PARISI Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% GABRIEL BORIC Ajustada Comuna'] = df_comuna['GABRIEL BORIC Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% JOSE ANTONIO KAST Ajustada Comuna'] = df_comuna['JOSE ANTONIO KAST Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% MARCO ENRIQUEZ-OMINAMI Ajustada Comuna'] = df_comuna['MARCO ENRIQUEZ-OMINAMI Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% SEBASTIAN SICHEL Ajustada Comuna'] = df_comuna['SEBASTIAN SICHEL Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% YASNA PROVOSTE Ajustada Comuna'] = df_comuna['YASNA PROVOSTE Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% NULO BLANCO Ajustada Comuna'] = df_comuna['NULO BLANCO Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100

        df_comuna['Diferencia % EDUARDO ARTES Comuna'] = df_comuna['% EDUARDO ARTES Comuna'] - df_comuna['% EDUARDO ARTES Ajustada Comuna']
        df_comuna['Diferencia % FRANCO ALDO PARISI Comuna'] = df_comuna['% FRANCO ALDO PARISI Comuna'] - df_comuna['% FRANCO ALDO PARISI Ajustada Comuna']
        df_comuna['Diferencia % GABRIEL BORIC Comuna'] = df_comuna['% GABRIEL BORIC Comuna'] - df_comuna['% GABRIEL BORIC Ajustada Comuna']
        df_comuna['Diferencia % JOSE ANTONIO KAST Comuna'] = df_comuna['% JOSE ANTONIO KAST Comuna'] - df_comuna['% JOSE ANTONIO KAST Ajustada Comuna']
        df_comuna['Diferencia % MARCO ENRIQUEZ-OMINAMI Comuna'] = df_comuna['% MARCO ENRIQUEZ-OMINAMI Comuna'] - df_comuna['% MARCO ENRIQUEZ-OMINAMI Ajustada Comuna']
        df_comuna['Diferencia % SEBASTIAN SICHEL Comuna'] = df_comuna['% SEBASTIAN SICHEL Comuna'] - df_comuna['% SEBASTIAN SICHEL Ajustada Comuna']
        df_comuna['Diferencia % YASNA PROVOSTE Comuna'] = df_comuna['% YASNA PROVOSTE Comuna'] - df_comuna['% YASNA PROVOSTE Ajustada Comuna']
        df_comuna['Diferencia % NULO BLANCO Comuna'] = df_comuna['% NULO BLANCO Comuna'] - df_comuna['% NULO BLANCO Ajustada Comuna']

        # A nivel de región: agrupar por 'Región' y sumar los votos
        df_region = df_sim.groupby('Región')[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                                            'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        df_region['Total Votos Originales Región'] = df_region[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                                            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO']].sum(axis=1)
        df_region['Total Votos Ajustados Región'] = df_region[['EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                                            'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                                            'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)
        
        df_region['% EDUARDO ARTES Región'] = df_region['EDUARDO ARTES'] / df_region['Total Votos Originales Región'] * 100
        df_region['% FRANCO ALDO PARISI Región'] = df_region['FRANCO ALDO PARISI'] / df_region['Total Votos Originales Región'] * 100
        df_region['% GABRIEL BORIC Región'] = df_region['GABRIEL BORIC'] / df_region['Total Votos Originales Región'] * 100
        df_region['% JOSE ANTONIO KAST Región'] = df_region['JOSE ANTONIO KAST'] / df_region['Total Votos Originales Región'] * 100
        df_region['% MARCO ENRIQUEZ-OMINAMI Región'] = df_region['MARCO ENRIQUEZ-OMINAMI'] / df_region['Total Votos Originales Región'] * 100
        df_region['% SEBASTIAN SICHEL Región'] = df_region['SEBASTIAN SICHEL'] / df_region['Total Votos Originales Región'] * 100
        df_region['% YASNA PROVOSTE Región'] = df_region['YASNA PROVOSTE'] / df_region['Total Votos Originales Región'] * 100
        df_region['% NULO BLANCO Región'] = df_region['NULO BLANCO'] / df_region['Total Votos Originales Región'] * 100

        df_region['% EDUARDO ARTES Ajustada Región'] = df_region['EDUARDO ARTES Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% FRANCO ALDO PARISI Ajustada Región'] = df_region['FRANCO ALDO PARISI Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% GABRIEL BORIC Ajustada Región'] = df_region['GABRIEL BORIC Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% JOSE ANTONIO KAST Ajustada Región'] = df_region['JOSE ANTONIO KAST Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% MARCO ENRIQUEZ-OMINAMI Ajustada Región'] = df_region['MARCO ENRIQUEZ-OMINAMI Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% SEBASTIAN SICHEL Ajustada Región'] = df_region['SEBASTIAN SICHEL Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% YASNA PROVOSTE Ajustada Región'] = df_region['YASNA PROVOSTE Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% NULO BLANCO Ajustada Región'] = df_region['NULO BLANCO Ajustada'] / df_region['Total Votos Ajustados Región'] * 100

        df_region['Diferencia % EDUARDO ARTES Región'] = df_region['% EDUARDO ARTES Región'] - df_region['% EDUARDO ARTES Ajustada Región']
        df_region['Diferencia % FRANCO ALDO PARISI Región'] = df_region['% FRANCO ALDO PARISI Región'] - df_region['% FRANCO ALDO PARISI Ajustada Región']
        df_region['Diferencia % GABRIEL BORIC Región'] = df_region['% GABRIEL BORIC Región'] - df_region['% GABRIEL BORIC Ajustada Región']
        df_region['Diferencia % JOSE ANTONIO KAST Región'] = df_region['% JOSE ANTONIO KAST Región'] - df_region['% JOSE ANTONIO KAST Ajustada Región']
        df_region['Diferencia % MARCO ENRIQUEZ-OMINAMI Región'] = df_region['% MARCO ENRIQUEZ-OMINAMI Región'] - df_region['% MARCO ENRIQUEZ-OMINAMI Ajustada Región']
        df_region['Diferencia % SEBASTIAN SICHEL Región'] = df_region['% SEBASTIAN SICHEL Región'] - df_region['% SEBASTIAN SICHEL Ajustada Región']
        df_region['Diferencia % YASNA PROVOSTE Región'] = df_region['% YASNA PROVOSTE Región'] - df_region['% YASNA PROVOSTE Ajustada Región']
        df_region['Diferencia % NULO BLANCO Región'] = df_region['% NULO BLANCO Región'] - df_region['% NULO BLANCO Ajustada Región']

        # A nivel de país: sumar los votos
        df_pais = df_sim[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                        'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO',
                        'EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                        'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                        'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        df_pais['Total Votos Originales País'] = df_pais[['EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
                                                        'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO']].sum()
        df_pais['Total Votos Ajustados País'] = df_pais[['EDUARDO ARTES Ajustada', 'FRANCO ALDO PARISI Ajustada', 'GABRIEL BORIC Ajustada',
                                                        'JOSE ANTONIO KAST Ajustada', 'MARCO ENRIQUEZ-OMINAMI Ajustada', 'SEBASTIAN SICHEL Ajustada',
                                                        'YASNA PROVOSTE Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        df_pais['% EDUARDO ARTES País'] = df_pais['EDUARDO ARTES'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% FRANCO ALDO PARISI País'] = df_pais['FRANCO ALDO PARISI'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% GABRIEL BORIC País'] = df_pais['GABRIEL BORIC'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% JOSE ANTONIO KAST País'] = df_pais['JOSE ANTONIO KAST'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% MARCO ENRIQUEZ-OMINAMI País'] = df_pais['MARCO ENRIQUEZ-OMINAMI'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% SEBASTIAN SICHEL País'] = df_pais['SEBASTIAN SICHEL'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% YASNA PROVOSTE País'] = df_pais['YASNA PROVOSTE'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% NULO BLANCO País'] = df_pais['NULO BLANCO'] / df_pais['Total Votos Originales País'] * 100

        df_pais['% EDUARDO ARTES Ajustada País'] = df_pais['EDUARDO ARTES Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% FRANCO ALDO PARISI Ajustada País'] = df_pais['FRANCO ALDO PARISI Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% GABRIEL BORIC Ajustada País'] = df_pais['GABRIEL BORIC Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% JOSE ANTONIO KAST Ajustada País'] = df_pais['JOSE ANTONIO KAST Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% MARCO ENRIQUEZ-OMINAMI Ajustada País'] = df_pais['MARCO ENRIQUEZ-OMINAMI Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% SEBASTIAN SICHEL Ajustada País'] = df_pais['SEBASTIAN SICHEL Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% YASNA PROVOSTE Ajustada País'] = df_pais['YASNA PROVOSTE Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% NULO BLANCO Ajustada País'] = df_pais['NULO BLANCO Ajustada'] / df_pais['Total Votos Ajustados País'] * 100

        df_pais['Diferencia % EDUARDO ARTES País'] = df_pais['% EDUARDO ARTES País'] - df_pais['% EDUARDO ARTES Ajustada País']
        df_pais['Diferencia % FRANCO ALDO PARISI País'] = df_pais['% FRANCO ALDO PARISI País'] - df_pais['% FRANCO ALDO PARISI Ajustada País']
        df_pais['Diferencia % GABRIEL BORIC País'] = df_pais['% GABRIEL BORIC País'] - df_pais['% GABRIEL BORIC Ajustada País']
        df_pais['Diferencia % JOSE ANTONIO KAST País'] = df_pais['% JOSE ANTONIO KAST País'] - df_pais['% JOSE ANTONIO KAST Ajustada País']
        df_pais['Diferencia % MARCO ENRIQUEZ-OMINAMI País'] = df_pais['% MARCO ENRIQUEZ-OMINAMI País'] - df_pais['% MARCO ENRIQUEZ-OMINAMI Ajustada País']
        df_pais['Diferencia % SEBASTIAN SICHEL País'] = df_pais['% SEBASTIAN SICHEL País'] - df_pais['% SEBASTIAN SICHEL Ajustada País']
        df_pais['Diferencia % YASNA PROVOSTE País'] = df_pais['% YASNA PROVOSTE País'] - df_pais['% YASNA PROVOSTE Ajustada País']
        df_pais['Diferencia % NULO BLANCO País'] = df_pais['% NULO BLANCO País'] - df_pais['% NULO BLANCO Ajustada País']

        # Mostrar los % max y min de cada df
        print(f'Diferencia Max % EDUARDO ARTES Local: {df_local["Diferencia % EDUARDO ARTES Local"].max()}')
        print(f'Diferencia Min % EDUARDO ARTES Local: {df_local["Diferencia % EDUARDO ARTES Local"].min()}')
        print(f'Diferencia Max % FRANCO ALDO PARISI Local: {df_local["Diferencia % FRANCO ALDO PARISI Local"].max()}')
        print(f'Diferencia Min % FRANCO ALDO PARISI Local: {df_local["Diferencia % FRANCO ALDO PARISI Local"].min()}')
        print(f'Diferencia Max % GABRIEL BORIC Local: {df_local["Diferencia % GABRIEL BORIC Local"].max()}')
        print(f'Diferencia Min % GABRIEL BORIC Local: {df_local["Diferencia % GABRIEL BORIC Local"].min()}')
        print(f'Diferencia Max % JOSE ANTONIO KAST Local: {df_local["Diferencia % JOSE ANTONIO KAST Local"].max()}')
        print(f'Diferencia Min % JOSE ANTONIO KAST Local: {df_local["Diferencia % JOSE ANTONIO KAST Local"].min()}')
        print(f'Diferencia Max % MARCO ENRIQUEZ-OMINAMI Local: {df_local["Diferencia % MARCO ENRIQUEZ-OMINAMI Local"].max()}')
        print(f'Diferencia Min % MARCO ENRIQUEZ-OMINAMI Local: {df_local["Diferencia % MARCO ENRIQUEZ-OMINAMI Local"].min()}')
        print(f'Diferencia Max % SEBASTIAN SICHEL Local: {df_local["Diferencia % SEBASTIAN SICHEL Local"].max()}')
        print(f'Diferencia Min % SEBASTIAN SICHEL Local: {df_local["Diferencia % SEBASTIAN SICHEL Local"].min()}')
        print(f'Diferencia Max % YASNA PROVOSTE Local: {df_local["Diferencia % YASNA PROVOSTE Local"].max()}')
        print(f'Diferencia Min % YASNA PROVOSTE Local: {df_local["Diferencia % YASNA PROVOSTE Local"].min()}')
        print(f'Diferencia Max % NULO BLANCO Local: {df_local["Diferencia % NULO BLANCO Local"].max()}')
        print(f'Diferencia Min % NULO BLANCO Local: {df_local["Diferencia % NULO BLANCO Local"].min()}')

        print(f'Diferencia Max % EDUARDO ARTES Comuna: {df_comuna["Diferencia % EDUARDO ARTES Comuna"].max()}')
        print(f'Diferencia Min % EDUARDO ARTES Comuna: {df_comuna["Diferencia % EDUARDO ARTES Comuna"].min()}')
        print(f'Diferencia Max % FRANCO ALDO PARISI Comuna: {df_comuna["Diferencia % FRANCO ALDO PARISI Comuna"].max()}')
        print(f'Diferencia Min % FRANCO ALDO PARISI Comuna: {df_comuna["Diferencia % FRANCO ALDO PARISI Comuna"].min()}')
        print(f'Diferencia Max % GABRIEL BORIC Comuna: {df_comuna["Diferencia % GABRIEL BORIC Comuna"].max()}')
        print(f'Diferencia Min % GABRIEL BORIC Comuna: {df_comuna["Diferencia % GABRIEL BORIC Comuna"].min()}')
        print(f'Diferencia Max % JOSE ANTONIO KAST Comuna: {df_comuna["Diferencia % JOSE ANTONIO KAST Comuna"].max()}')
        print(f'Diferencia Min % JOSE ANTONIO KAST Comuna: {df_comuna["Diferencia % JOSE ANTONIO KAST Comuna"].min()}')
        print(f'Diferencia Max % MARCO ENRIQUEZ-OMINAMI Comuna: {df_comuna["Diferencia % MARCO ENRIQUEZ-OMINAMI Comuna"].max()}')
        print(f'Diferencia Min % MARCO ENRIQUEZ-OMINAMI Comuna: {df_comuna["Diferencia % MARCO ENRIQUEZ-OMINAMI Comuna"].min()}')
        print(f'Diferencia Max % SEBASTIAN SICHEL Comuna: {df_comuna["Diferencia % SEBASTIAN SICHEL Comuna"].max()}')
        print(f'Diferencia Min % SEBASTIAN SICHEL Comuna: {df_comuna["Diferencia % SEBASTIAN SICHEL Comuna"].min()}')
        print(f'Diferencia Max % YASNA PROVOSTE Comuna: {df_comuna["Diferencia % YASNA PROVOSTE Comuna"].max()}')
        print(f'Diferencia Min % YASNA PROVOSTE Comuna: {df_comuna["Diferencia % YASNA PROVOSTE Comuna"].min()}')
        print(f'Diferencia Max % NULO BLANCO Comuna: {df_comuna["Diferencia % NULO BLANCO Comuna"].max()}')
        print(f'Diferencia Min % NULO BLANCO Comuna: {df_comuna["Diferencia % NULO BLANCO Comuna"].min()}')

        print(f'Diferencia Max % EDUARDO ARTES Región: {df_region["Diferencia % EDUARDO ARTES Región"].max()}')
        print(f'Diferencia Min % EDUARDO ARTES Región: {df_region["Diferencia % EDUARDO ARTES Región"].min()}')
        print(f'Diferencia Max % FRANCO ALDO PARISI Región: {df_region["Diferencia % FRANCO ALDO PARISI Región"].max()}')
        print(f'Diferencia Min % FRANCO ALDO PARISI Región: {df_region["Diferencia % FRANCO ALDO PARISI Región"].min()}')
        print(f'Diferencia Max % GABRIEL BORIC Región: {df_region["Diferencia % GABRIEL BORIC Región"].max()}')
        print(f'Diferencia Min % GABRIEL BORIC Región: {df_region["Diferencia % GABRIEL BORIC Región"].min()}')
        print(f'Diferencia Max % JOSE ANTONIO KAST Región: {df_region["Diferencia % JOSE ANTONIO KAST Región"].max()}')
        print(f'Diferencia Min % JOSE ANTONIO KAST Región: {df_region["Diferencia % JOSE ANTONIO KAST Región"].min()}')
        print(f'Diferencia Max % MARCO ENRIQUEZ-OMINAMI Región: {df_region["Diferencia % MARCO ENRIQUEZ-OMINAMI Región"].max()}')
        print(f'Diferencia Min % MARCO ENRIQUEZ-OMINAMI Región: {df_region["Diferencia % MARCO ENRIQUEZ-OMINAMI Región"].min()}')
        print(f'Diferencia Max % SEBASTIAN SICHEL Región: {df_region["Diferencia % SEBASTIAN SICHEL Región"].max()}')
        print(f'Diferencia Min % SEBASTIAN SICHEL Región: {df_region["Diferencia % SEBASTIAN SICHEL Región"].min()}')
        print(f'Diferencia Max % YASNA PROVOSTE Región: {df_region["Diferencia % YASNA PROVOSTE Región"].max()}')
        print(f'Diferencia Min % YASNA PROVOSTE Región: {df_region["Diferencia % YASNA PROVOSTE Región"].min()}')
        print(f'Diferencia Max % NULO BLANCO Región: {df_region["Diferencia % NULO BLANCO Región"].max()}')
        print(f'Diferencia Min % NULO BLANCO Región: {df_region["Diferencia % NULO BLANCO Región"].min()}')

        print(f'Diferencia Max % EDUARDO ARTES País: {df_pais["Diferencia % EDUARDO ARTES País"].max()}')
        print(f'Diferencia Min % EDUARDO ARTES País: {df_pais["Diferencia % EDUARDO ARTES País"].min()}')
        print(f'Diferencia Max % FRANCO ALDO PARISI País: {df_pais["Diferencia % FRANCO ALDO PARISI País"].max()}')
        print(f'Diferencia Min % FRANCO ALDO PARISI País: {df_pais["Diferencia % FRANCO ALDO PARISI País"].min()}')
        print(f'Diferencia Max % GABRIEL BORIC País: {df_pais["Diferencia % GABRIEL BORIC País"].max()}')
        print(f'Diferencia Min % GABRIEL BORIC País: {df_pais["Diferencia % GABRIEL BORIC País"].min()}')
        print(f'Diferencia Max % JOSE ANTONIO KAST País: {df_pais["Diferencia % JOSE ANTONIO KAST País"].max()}')
        print(f'Diferencia Min % JOSE ANTONIO KAST País: {df_pais["Diferencia % JOSE ANTONIO KAST País"].min()}')
        print(f'Diferencia Max % MARCO ENRIQUEZ-OMINAMI País: {df_pais["Diferencia % MARCO ENRIQUEZ-OMINAMI País"].max()}')
        print(f'Diferencia Min % MARCO ENRIQUEZ-OMINAMI País: {df_pais["Diferencia % MARCO ENRIQUEZ-OMINAMI País"].min()}')
        print(f'Diferencia Max % SEBASTIAN SICHEL País: {df_pais["Diferencia % SEBASTIAN SICHEL País"].max()}')
        print(f'Diferencia Min % SEBASTIAN SICHEL País: {df_pais["Diferencia % SEBASTIAN SICHEL País"].min()}')
        print(f'Diferencia Max % YASNA PROVOSTE País: {df_pais["Diferencia % YASNA PROVOSTE País"].max()}')
        print(f'Diferencia Min % YASNA PROVOSTE País: {df_pais["Diferencia % YASNA PROVOSTE País"].min()}')
        print(f'Diferencia Max % NULO BLANCO País: {df_pais["Diferencia % NULO BLANCO País"].max()}')
        print(f'Diferencia Min % NULO BLANCO País: {df_pais["Diferencia % NULO BLANCO País"].min()}')

    elif eleccion == '2023_Plebiscito':
        df_sim = df[['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa', 
                    'A FAVOR', 'EN CONTRA', 'NULO BLANCO', 
                    'A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']]
        
        # A nivel de local: agrupar por 'Local' y sumar los votos
        df_local = df_sim.groupby('Local')[['A FAVOR', 'EN CONTRA', 'NULO BLANCO', 'A FAVOR Ajustada', 
                                            'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum()
        
        # Calcular los porcentajes a nivel de local
        df_local['Total Votos Originales Local'] = df_local[['A FAVOR', 'EN CONTRA', 'NULO BLANCO']].sum(axis=1)
        df_local['Total Votos Ajustados Local'] = df_local[['A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)

        df_local['% A FAVOR Local'] = df_local['A FAVOR'] / df_local['Total Votos Originales Local'] * 100
        df_local['% EN CONTRA Local'] = df_local['EN CONTRA'] / df_local['Total Votos Originales Local'] * 100
        df_local['% NULO BLANCO Local'] = df_local['NULO BLANCO'] / df_local['Total Votos Originales Local'] * 100

        df_local['% A FAVOR Ajustada Local'] = df_local['A FAVOR Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% EN CONTRA Ajustada Local'] = df_local['EN CONTRA Ajustada'] / df_local['Total Votos Ajustados Local'] * 100
        df_local['% NULO BLANCO Ajustada Local'] = df_local['NULO BLANCO Ajustada'] / df_local['Total Votos Ajustados Local'] * 100

        df_local['Diferencia % A FAVOR Local'] = df_local['% A FAVOR Local'] - df_local['% A FAVOR Ajustada Local']
        df_local['Diferencia % EN CONTRA Local'] = df_local['% EN CONTRA Local'] - df_local['% EN CONTRA Ajustada Local']
        df_local['Diferencia % NULO BLANCO Local'] = df_local['% NULO BLANCO Local'] - df_local['% NULO BLANCO Ajustada Local']

        # A nivel de comuna: agrupar por 'Comuna' y sumar los votos
        df_comuna = df_sim.groupby('Comuna')[['A FAVOR', 'EN CONTRA', 'NULO BLANCO', 'A FAVOR Ajustada', 
                                            'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum()

        df_comuna['Total Votos Originales Comuna'] = df_comuna[['A FAVOR', 'EN CONTRA', 'NULO BLANCO']].sum(axis=1)
        df_comuna['Total Votos Ajustados Comuna'] = df_comuna[['A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)

        df_comuna['% A FAVOR Comuna'] = df_comuna['A FAVOR'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% EN CONTRA Comuna'] = df_comuna['EN CONTRA'] / df_comuna['Total Votos Originales Comuna'] * 100
        df_comuna['% NULO BLANCO Comuna'] = df_comuna['NULO BLANCO'] / df_comuna['Total Votos Originales Comuna'] * 100

        df_comuna['% A FAVOR Ajustada Comuna'] = df_comuna['A FAVOR Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% EN CONTRA Ajustada Comuna'] = df_comuna['EN CONTRA Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100
        df_comuna['% NULO BLANCO Ajustada Comuna'] = df_comuna['NULO BLANCO Ajustada'] / df_comuna['Total Votos Ajustados Comuna'] * 100

        df_comuna['Diferencia % A FAVOR Comuna'] = df_comuna['% A FAVOR Comuna'] - df_comuna['% A FAVOR Ajustada Comuna']
        df_comuna['Diferencia % EN CONTRA Comuna'] = df_comuna['% EN CONTRA Comuna'] - df_comuna['% EN CONTRA Ajustada Comuna']
        df_comuna['Diferencia % NULO BLANCO Comuna'] = df_comuna['% NULO BLANCO Comuna'] - df_comuna['% NULO BLANCO Ajustada Comuna']

        # A nivel de región: agrupar por 'Región' y sumar los votos
        df_region = df_sim.groupby('Región')[['A FAVOR', 'EN CONTRA', 'NULO BLANCO', 'A FAVOR Ajustada', 
                                              'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum()

        df_region['Total Votos Originales Región'] = df_region[['A FAVOR', 'EN CONTRA', 'NULO BLANCO']].sum(axis=1)
        df_region['Total Votos Ajustados Región'] = df_region[['A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum(axis=1)

        df_region['% A FAVOR Región'] = df_region['A FAVOR'] / df_region['Total Votos Originales Región'] * 100
        df_region['% EN CONTRA Región'] = df_region['EN CONTRA'] / df_region['Total Votos Originales Región'] * 100
        df_region['% NULO BLANCO Región'] = df_region['NULO BLANCO'] / df_region['Total Votos Originales Región'] * 100

        df_region['% A FAVOR Ajustada Región'] = df_region['A FAVOR Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% EN CONTRA Ajustada Región'] = df_region['EN CONTRA Ajustada'] / df_region['Total Votos Ajustados Región'] * 100
        df_region['% NULO BLANCO Ajustada Región'] = df_region['NULO BLANCO Ajustada'] / df_region['Total Votos Ajustados Región'] * 100

        df_region['Diferencia % A FAVOR Región'] = df_region['% A FAVOR Región'] - df_region['% A FAVOR Ajustada Región']
        df_region['Diferencia % EN CONTRA Región'] = df_region['% EN CONTRA Región'] - df_region['% EN CONTRA Ajustada Región']
        df_region['Diferencia % NULO BLANCO Región'] = df_region['% NULO BLANCO Región'] - df_region['% NULO BLANCO Ajustada Región']

        # A nivel de país: agrupar por la suma total de todas las regiones
        df_pais = df_sim[['A FAVOR', 'EN CONTRA', 'NULO BLANCO', 'A FAVOR Ajustada', 
                          'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum()

        df_pais['Total Votos Originales País'] = df_pais[['A FAVOR', 'EN CONTRA', 'NULO BLANCO']].sum()
        df_pais['Total Votos Ajustados País'] = df_pais[['A FAVOR Ajustada', 'EN CONTRA Ajustada', 'NULO BLANCO Ajustada']].sum()

        df_pais['% A FAVOR País'] = df_pais['A FAVOR'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% EN CONTRA País'] = df_pais['EN CONTRA'] / df_pais['Total Votos Originales País'] * 100
        df_pais['% NULO BLANCO País'] = df_pais['NULO BLANCO'] / df_pais['Total Votos Originales País'] * 100

        df_pais['% A FAVOR Ajustada País'] = df_pais['A FAVOR Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% EN CONTRA Ajustada País'] = df_pais['EN CONTRA Ajustada'] / df_pais['Total Votos Ajustados País'] * 100
        df_pais['% NULO BLANCO Ajustada País'] = df_pais['NULO BLANCO Ajustada'] / df_pais['Total Votos Ajustados País'] * 100

        df_pais['Diferencia % A FAVOR País'] = df_pais['% A FAVOR País'] - df_pais['% A FAVOR Ajustada País']
        df_pais['Diferencia % EN CONTRA País'] = df_pais['% EN CONTRA País'] - df_pais['% EN CONTRA Ajustada País']
        df_pais['Diferencia % NULO BLANCO País'] = df_pais['% NULO BLANCO País'] - df_pais['% NULO BLANCO Ajustada País']

        # Mostrar los % max y minimo de cada df
        print(f'Diferencia Max % A FAVOR Local: {df_local["Diferencia % A FAVOR Local"].max()}')
        print(f'Diferencia Min % A FAVOR Local: {df_local["Diferencia % A FAVOR Local"].min()}')
        print(f'Diferencia Max % EN CONTRA Local: {df_local["Diferencia % EN CONTRA Local"].max()}')
        print(f'Diferencia Min % EN CONTRA Local: {df_local["Diferencia % EN CONTRA Local"].min()}')
        print(f'Diferencia Max % NULO BLANCO Local: {df_local["Diferencia % NULO BLANCO Local"].max()}')
        print(f'Diferencia Min % NULO BLANCO Local: {df_local["Diferencia % NULO BLANCO Local"].min()}')

        print(f'Diferencia Max % A FAVOR Comuna: {df_comuna["Diferencia % A FAVOR Comuna"].max()}')
        print(f'Diferencia Min % A FAVOR Comuna: {df_comuna["Diferencia % A FAVOR Comuna"].min()}')
        print(f'Diferencia Max % EN CONTRA Comuna: {df_comuna["Diferencia % EN CONTRA Comuna"].max()}')
        print(f'Diferencia Min % EN CONTRA Comuna: {df_comuna["Diferencia % EN CONTRA Comuna"].min()}')
        print(f'Diferencia Max % NULO BLANCO Comuna: {df_comuna["Diferencia % NULO BLANCO Comuna"].max()}')
        print(f'Diferencia Min % NULO BLANCO Comuna: {df_comuna["Diferencia % NULO BLANCO Comuna"].min()}')

        print(f'Diferencia Max % A FAVOR Región: {df_region["Diferencia % A FAVOR Región"].max()}')
        print(f'Diferencia Min % A FAVOR Región: {df_region["Diferencia % A FAVOR Región"].min()}')
        print(f'Diferencia Max % EN CONTRA Región: {df_region["Diferencia % EN CONTRA Región"].max()}')
        print(f'Diferencia Min % EN CONTRA Región: {df_region["Diferencia % EN CONTRA Región"].min()}')
        print(f'Diferencia Max % NULO BLANCO Región: {df_region["Diferencia % NULO BLANCO Región"].max()}')
        print(f'Diferencia Min % NULO BLANCO Región: {df_region["Diferencia % NULO BLANCO Región"].min()}')

        print(f'Diferencia Max % A FAVOR País: {df_pais["Diferencia % A FAVOR País"].max()}')
        print(f'Diferencia Min % A FAVOR País: {df_pais["Diferencia % A FAVOR País"].min()}')
        print(f'Diferencia Max % EN CONTRA País: {df_pais["Diferencia % EN CONTRA País"].max()}')
        print(f'Diferencia Min % EN CONTRA País: {df_pais["Diferencia % EN CONTRA País"].min()}')
        print(f'Diferencia Max % NULO BLANCO País: {df_pais["Diferencia % NULO BLANCO País"].max()}')
        print(f'Diferencia Min % NULO BLANCO País: {df_pais["Diferencia % NULO BLANCO País"].min()}')

    # Save the DataFrames to a .excel file
    if eleccion == '2021_Presidencial':
        df_local.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_local.xlsx')
        df_comuna.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_comuna.xlsx')
        df_region.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_region.xlsx')
        df_pais.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_pais.xlsx')
    
    elif eleccion == '2023_Plebiscito':
        df_local.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_local.xlsx')
        df_comuna.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_comuna.xlsx')
        df_region.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_region.xlsx')
        df_pais.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}_df_pais.xlsx')

    return None

def plot_piramide_poblacional_old(method='PLS',
                               eleccion='2021_Presidencial',
                               groups='ALL',
                               atributos_circ=False,
                               distmin=False,
                               comuna=False,
                               circ=False,
                               dummies_circ=False,
                               COD_FOLDER='',
                               nombre_archivo='piramide_poblacional.png',
                               guardar=True):
    """
    Genera (y opcionalmente guarda) una pirámide poblacional basada en porcentajes por grupo etario y sexo,
    utilizando el archivo generado por el modelo PLS.
    """
    elec = eleccion[:4]
    circ_str = f"{groups}_circ" if atributos_circ else str(groups)
    dist_str = "distmin" if distmin else "distprom"
    archivo = f'{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    file_path = os.path.join(COD_FOLDER, f'Outputs/{method}_kfold_{elec}/{circ_str}/{dist_str}/{archivo}')

    if not os.path.exists(file_path):
        print(f"❌ El archivo no existe: {file_path}")
        return
    
    print(f"📊 Generando pirámide poblacional desde: {file_path}")

    df = pd.read_excel(file_path).drop(columns='Unnamed: 0', errors='ignore')
    if 'Local' in df.columns:
        df['Local'] = df['Local'].str.replace(':', '', regex=False)

    # Grupos válidos
    grupos_etarios = ['18-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+']
    columnas_h = [f'{g} H' for g in grupos_etarios if f'{g} H' in df.columns]
    columnas_m = [f'{g} M' for g in grupos_etarios if f'{g} M' in df.columns]
    etiquetas_ordenadas = [g for g in grupos_etarios if f'{g} H' in df.columns and f'{g} M' in df.columns]

    if not columnas_h or not columnas_m:
        print("❌ No se encontraron columnas válidas para hombres y mujeres.")
        return

    suma_h = df[columnas_h].sum()
    suma_m = df[columnas_m].sum()
    total = suma_h.sum() + suma_m.sum()

    pct_h = 100 * suma_h / total
    pct_m = 100 * suma_m / total
    y = range(len(etiquetas_ordenadas))

    # Gráfico
    fig, ax = plt.subplots(figsize=(8, 6))
    ax.barh(y, pct_h, color='#4C72B0', label='Hombres')
    ax.barh(y, -pct_m, color='#DD8452', label='Mujeres')

    ax.set_yticks(y)
    ax.set_yticklabels(etiquetas_ordenadas)
    ax.set_xlabel('Porcentaje (%)', fontsize=15)
    ax.set_title('Pirámide poblacional por grupo etario', fontsize=17)
    ax.legend(loc='upper right', fontsize=13)
    ax.grid(axis='x', linestyle='--', alpha=0.6)

    max_pct = max(pct_h.max(), pct_m.max())
    ax.set_xlim(-max_pct * 1.1, max_pct * 1.1)
    ax.set_xticklabels([abs(int(label)) for label in ax.get_xticks()])

    plt.tight_layout()

    if guardar:
        output_folder = os.path.join(COD_FOLDER, f'Outputs/{method}_kfold_{elec}/{circ_str}/{dist_str}')
        os.makedirs(output_folder, exist_ok=True)
        ruta_guardado = os.path.join(output_folder, nombre_archivo)
        plt.savefig(ruta_guardado, dpi=300, bbox_inches='tight')
        print(f"✅ Gráfico guardado en: {ruta_guardado}")
        plt.close()
    else:
        plt.show()

def plot_piramide_poblacional(method='PLS',
                               eleccion='2021_Presidencial',
                               groups='ALL',
                               atributos_circ=False,
                               distmin=False,
                               comuna=False,
                               circ=False,
                               dummies_circ=False,
                               COD_FOLDER='',
                               nombre_archivo='piramide_poblacional.png',
                               guardar=True):
    """
    Genera (y opcionalmente guarda) una pirámide poblacional basada en porcentajes por grupo etario y sexo,
    utilizando el archivo generado por el modelo PLS.
    """
    elec = eleccion[:4]
    circ_str = f"{groups}_circ" if atributos_circ else str(groups)
    dist_str = "distmin" if distmin else "distprom"
    archivo = f'{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    file_path = os.path.join(COD_FOLDER, f'Outputs/{method}_kfold_{elec}/{circ_str}/{dist_str}/{archivo}')

    if not os.path.exists(file_path):
        print(f"❌ El archivo no existe: {file_path}")
        return

    print(f"📊 Generando pirámide poblacional desde: {file_path}")
    df = pd.read_excel(file_path).drop(columns='Unnamed: 0', errors='ignore')
    if 'Local' in df.columns:
        df['Local'] = df['Local'].str.replace(':', '', regex=False)

    # Grupos válidos
    grupos_etarios = ['18-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+']
    columnas_h = [f'{g} H' for g in grupos_etarios if f'{g} H' in df.columns]
    columnas_m = [f'{g} M' for g in grupos_etarios if f'{g} M' in df.columns]
    etiquetas_ordenadas = [g for g in grupos_etarios if f'{g} H' in df.columns and f'{g} M' in df.columns]

    if not columnas_h or not columnas_m:
        print("❌ No se encontraron columnas válidas para hombres y mujeres.")
        return

    suma_h = df[columnas_h].sum()
    suma_m = df[columnas_m].sum()
    total = suma_h.sum() + suma_m.sum()

    pct_h = 100 * suma_h / total
    pct_m = 100 * suma_m / total
    y = np.arange(len(etiquetas_ordenadas))

    # Gráfico
    fig, ax = plt.subplots(figsize=(8, 6))
    bars_h = ax.barh(y, pct_h, color='#4C72B0', label='Hombres')
    bars_m = ax.barh(y, -pct_m, color='#DD8452', label='Mujeres')

    ax.set_yticks(y)
    ax.set_yticklabels(etiquetas_ordenadas)
    ax.set_xlabel('Porcentaje (%)', fontsize=15)
    ax.set_ylabel('Rango etario', fontsize=15)
    ax.set_title('Pirámide poblacional por grupo etario', fontsize=17)
    ax.legend(loc='upper right', fontsize=13)
    ax.grid(axis='x', linestyle='--', alpha=0.6)

    max_pct = max(pct_h.max(), pct_m.max())
    ax.set_xlim(-max_pct * 1.1, max_pct * 1.1)

    # Mostrar valores absolutos del eje X con un decimal
    ax.set_xticklabels([f"{abs(label):.1f}" for label in ax.get_xticks()])

    # Agregar etiquetas centradas
    ax.bar_label(bars_h, labels=[f"{v:.1f}%" for v in pct_h], label_type="center", fontsize=10, color="white")
    ax.bar_label(bars_m, labels=[f"{v:.1f}%" for v in pct_m], label_type="center", fontsize=10, color="white")

    plt.tight_layout()

    if guardar:
        output_folder = os.path.join(COD_FOLDER, f'Outputs/{method}_kfold_{elec}/{circ_str}/{dist_str}')
        os.makedirs(output_folder, exist_ok=True)
        ruta_guardado = os.path.join(output_folder, nombre_archivo)
        plt.savefig(ruta_guardado, dpi=300, bbox_inches='tight')
        print(f"✅ Gráfico guardado en: {ruta_guardado}")
        plt.close()
    else:
        plt.show()

def generar_tabla_latex_resultados_pais_old(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False,
                                        distmin=False, comuna=False, circ=False, dummies_circ=False, cod_folder='./') -> str:
    # Construir ruta del archivo
    subcarpeta = f"{method}_kfold_2021" if eleccion == '2021_Presidencial' else f"{method}_kfold_2023"
    grupo_carpeta = f"{groups}_circ" if atributos_circ else groups
    dist_carpeta = "distmin" if distmin else "distprom"
    nombre_archivo = f"{method}_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}_df_pais.xlsx"
    file_path = os.path.join(cod_folder, "Outputs", subcarpeta, grupo_carpeta, dist_carpeta, nombre_archivo)

    if not os.path.exists(file_path):
        return f"% ❌ Archivo no encontrado: {file_path}"

    df_pais = pd.read_excel(file_path, index_col=0).squeeze()

    if eleccion == '2021_Presidencial':
        candidatos = [
            'EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO'
        ]
    elif eleccion == '2023_Plebiscito':
        candidatos = ['A FAVOR', 'EN CONTRA', 'NULO BLANCO']
    else:
        raise ValueError("Elección no soportada")

    filas = []
    for c in candidatos:
        pct_real = df_pais[f'% {c} País']
        pct_estimado = df_pais[f'% {c} Ajustada País']
        diferencia = df_pais[f'Diferencia % {c} País']
        filas.append(f"{c} & {pct_estimado:.2f} & {pct_real:.2f} & {diferencia:.2f} \\\\")

    titulo = "Porcentaje de votos estimado vs real a nivel país" + (" (Elección 2021)" if eleccion == '2021_Presidencial' else " (Plebiscito 2023)")

    tabla = r"""
\begin{table}[H]
    \centering
    \caption{""" + titulo + r"""}
    \begin{tabular}{lccc}
        \toprule
        Candidato & Estimado (\%) & Real (\%) & Diferencia (\%) \\
        \midrule
""" + "\n".join(filas) + r"""
        \bottomrule
    \end{tabular}
\end{table}
"""

    print(f"Tabla LaTeX generada para {eleccion} a nivel país.")
    print(tabla)
    return None

def generar_tabla_latex_resultados_pais(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False,
                                        distmin=False, comuna=False, circ=False, dummies_circ=False, cod_folder='./') -> str:
    import os
    import pandas as pd

    def formato_alineado(val: float) -> str:
        val_str = f"{abs(val):.2f}".replace(".", ",")  # No usar $...$ para evitar espacio extra tras la coma

        if val < 0:
            if abs(val) < 10:
                return f"-{val_str}"
        elif val < 10:
            return f"\\phantom{{0}}{val_str}"
        else:
            return val_str

    nombres_mostrar = {
        'EDUARDO ARTES': 'Eduardo Artés',
        'FRANCO ALDO PARISI': 'Franco Aldo Parisi',
        'GABRIEL BORIC': 'Gabriel Boric',
        'JOSE ANTONIO KAST': 'José Antonio Kast',
        'MARCO ENRIQUEZ-OMINAMI': 'Marco Enríquez-Ominami',
        'SEBASTIAN SICHEL': 'Sebastián Sichel',
        'YASNA PROVOSTE': 'Yasna Provoste',
        'NULO BLANCO': 'Nulo/Blanco',
        'A FAVOR': 'A favor',
        'EN CONTRA': 'En contra',
                    }

    subcarpeta = f"{method}_kfold_2021" if eleccion == '2021_Presidencial' else f"{method}_kfold_2023"
    grupo_carpeta = f"{groups}_circ" if atributos_circ else groups
    dist_carpeta = "distmin" if distmin else "distprom"
    nombre_archivo = f"{method}_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}_df_pais.xlsx"
    file_path = os.path.join(cod_folder, "Outputs", subcarpeta, grupo_carpeta, dist_carpeta, nombre_archivo)

    if not os.path.exists(file_path):
        return f"% ❌ Archivo no encontrado: {file_path}"

    df_pais = pd.read_excel(file_path, index_col=0).squeeze()

    if eleccion == '2021_Presidencial':
        candidatos = [
            'EDUARDO ARTES', 'FRANCO ALDO PARISI', 'GABRIEL BORIC', 'JOSE ANTONIO KAST',
            'MARCO ENRIQUEZ-OMINAMI', 'SEBASTIAN SICHEL', 'YASNA PROVOSTE', 'NULO BLANCO'
        ]
    elif eleccion == '2023_Plebiscito':
        candidatos = ['A FAVOR', 'EN CONTRA', 'NULO BLANCO']
    else:
        raise ValueError("Elección no soportada")

    datos = []
    for c in candidatos:
        datos.append({
            'nombre': nombres_mostrar.get(c, c.title()),
            'estimado': df_pais[f'% {c} Ajustada País'],
            'real': df_pais[f'% {c} País'],
            'diferencia': df_pais[f'Diferencia % {c} País']
        })

    datos.sort(key=lambda x: -x['estimado'])

    filas = [
        f"{d['nombre']} & {formato_alineado(d['estimado'])} & {formato_alineado(d['real'])} & {formato_alineado(d['diferencia'])} \\\\"
        for d in datos
            ]
    titulo = "Porcentaje de votos estimado vs real a nivel país" + (" (Elección 2021)" if eleccion == '2021_Presidencial' else " (Plebiscito 2023)")
    label = "tab:resultados_pais_2021" if eleccion == "2021_Presidencial" else "tab:resultados_pais_2023"

    tabla = rf"""
\begin{{table}}[H]
    \centering
    \begin{{tabular}}{{lccc}}
        \toprule
        Candidato & Estimado (\%) & Real (\%) & Diferencia (\%) \\
        \midrule
{chr(10).join(filas)}
        \bottomrule
    \end{{tabular}}
    \caption{{{titulo}}}
    \label{{{label}}}
\end{{table}}
"""

    print(f"Tabla LaTeX generada para {eleccion} a nivel país.")
    print(tabla)
    return None

def analizar_pvalores_excel(
    method: str = "PLS",
    eleccion: str = "2021_Presidencial",
    groups: str = "ALL",
    atributos_circ: bool = False,
    distmin: bool = True,
    comuna: bool = True,
    circ: bool = False,
    dummies_circ: bool = False,
    COD_FOLDER: str = "",
    umbral: float = 0.05,
    nivel: str = "comuna",  # o 'local'
) -> pd.DataFrame:

    # Construir path según la elección
    anio = "2021" if eleccion == "2021_Presidencial" else "2023"
    carpeta = f"{method}_kfold_{anio}"
    subcarpeta = f"{groups + '_circ' if atributos_circ else groups}"
    distancia = "distmin" if distmin else "distprom"
    nombre_archivo = (
        f"{method}_p_values_comuna{'T' if comuna else 'F'}_circ{'T' if circ else 'F'}_dummies{'T' if dummies_circ else 'F'}.xlsx"
    )

    ruta = f"{COD_FOLDER}Outputs/{carpeta}/{subcarpeta}/{distancia}/{nombre_archivo}"

    # Leer el archivo
    df = pd.read_excel(ruta)

    # Normalizar nombres esperados
    df.columns = df.columns.str.strip().str.lower()
    assert all(col in df.columns for col in ['comuna', 'local', 'p_valor']), "Faltan columnas requeridas"

    # Crear columna de grupo
    if nivel == 'comuna':
        df['grupo'] = df['comuna']
    elif nivel == 'local':
        df['grupo'] = df['comuna'] + " - " + df['local']
    else:
        raise ValueError("nivel debe ser 'comuna' o 'local'")

    # Agregar resumen
    resumen = (
        df.groupby('grupo')
        .agg(
            total_mesas=('grupo', 'count'),
            mesas_p_bajo_umbral=('p_valor', lambda x: (x < umbral).sum())
        )
    )
    resumen['porcentaje'] = 100 * resumen['mesas_p_bajo_umbral'] / resumen['total_mesas']
    resumen = resumen.sort_values('mesas_p_bajo_umbral', ascending=False)

    return resumen.reset_index()

def generar_tablas_latex_pvalores_old(
    resumen_df, caption_base, label_base, umbral=0.05, top_n=10
):
    # Inferir si es por comuna o local
    es_local = resumen_df["grupo"].str.contains(" - ").any()
    tipo_grupo = "Local" if es_local else "Comuna"

    # Normalizar nombres: solo primera letra mayúscula
    resumen_df["grupo"] = resumen_df["grupo"].str.title()

    # ===== Tabla por cantidad =====
    resumen_cant = resumen_df.sort_values("mesas_p_bajo_umbral", ascending=False).head(top_n)

    tabla_cant = "\\begin{table}[H]\n\\centering\n\\begin{tabular}{lcc}\n\\toprule\n"
    tabla_cant += f"{tipo_grupo} & Mesas con $p < {umbral}$ & Total Mesas \\\\\n\\midrule\n"
    for _, row in resumen_cant.iterrows():
        tabla_cant += f"{row['grupo']} & {int(row['mesas_p_bajo_umbral'])} & {int(row['total_mesas'])} \\\\\n"
    tabla_cant += "\\bottomrule\n\\end{tabular}\n"
    tabla_cant += f"\\caption{{Cantidad de mesas con $p$-valor menor a {umbral} por {tipo_grupo.lower()}. {caption_base}}}\n"
    tabla_cant += f"\\label{{tab:{label_base}_cant}}\n\\end{{table}}\n"

    # ===== Tabla por porcentaje =====
    resumen_pct = resumen_df.sort_values("porcentaje", ascending=False).head(top_n)

    tabla_pct = "\\begin{table}[H]\n\\centering\n\\begin{tabular}{lcc}\n\\toprule\n"
    tabla_pct += f"{tipo_grupo} & Mesas con $p < {umbral}$ (\\%) & Total Mesas \\\\\n\\midrule\n"
    for _, row in resumen_pct.iterrows():
        tabla_pct += f"{row['grupo']} & {row['porcentaje']:.1f} & {int(row['total_mesas'])} \\\\\n"
    tabla_pct += "\\bottomrule\n\\end{tabular}\n"
    tabla_pct += f"\\caption{{Porcentaje de mesas con $p$-valor menor a {umbral} por {tipo_grupo.lower()}. {caption_base}}}\n"
    tabla_pct += f"\\label{{tab:{label_base}_pct}}\n\\end{{table}}\n"

    return tabla_cant, tabla_pct

def generar_tablas_latex_pvalores(
    resumen_df, caption_base, label_base, umbral=0.05, top_n=10
):
    def formato_umbral_latex(x):
        """Ej: 1e-6 → 10^{-6}"""
        if x < 1e-3:
            exp = int(np.log10(x))
            return fr"10^{{{exp}}}"
        return f"{x:g}"

    def format_miles(num):
        """Ej: 1234 → 1.234"""
        return f"{int(num):,}".replace(",", ".")

    def format_pct(num):
        """Ej: 12.3 → 12,3"""
        return f"{num:.1f}".replace(".", ",")

    umbral_tex = formato_umbral_latex(umbral)

    # Detectar si es por comuna o local
    es_local = resumen_df["grupo"].str.contains(" - ").any()
    tipo_grupo = "Local" if es_local else "Comuna"
    resumen_df["grupo"] = resumen_df["grupo"].str.title()

    # ───── Tabla por cantidad ─────
    resumen_cant = resumen_df.sort_values("mesas_p_bajo_umbral", ascending=False).head(top_n)

    tabla_cant = (
        "\\begin{table}[H]\n\\centering\n"
        "\\begin{tabular}{lrr}\n\\toprule\n"
        f"\\multicolumn{{1}}{{c}}{{\\multirow{{2}}{{*}}{{{tipo_grupo}}}}} & "
        "\\multicolumn{2}{c}{Mesas} \\\\\n"
        "\\cmidrule(lr){2-3}\n"
        "& Total & Outlier \\\\\n"
        "\\midrule\n"
    )
    for _, row in resumen_cant.iterrows():
        tabla_cant += (
            f"{row['grupo']} & {format_miles(row['total_mesas'])} & {format_miles(row['mesas_p_bajo_umbral'])} \\\\\n"
        )
    tabla_cant += (
        "\\bottomrule\n\\end{tabular}\n"
        f"\\caption{{Cantidad de mesas por {tipo_grupo.lower()} con $p < {umbral_tex}$. {caption_base}}}\n"
        f"\\label{{tab:{label_base}_cant}}\n"
        "\\end{table}\n"
    )

    # ───── Tabla por porcentaje ─────
    resumen_pct = resumen_df.sort_values("porcentaje", ascending=False).head(top_n)

    tabla_pct = (
        "\\begin{table}[H]\n\\centering\n"
        "\\begin{tabular}{lrr}\n\\toprule\n"
        f"\\multicolumn{{1}}{{c}}{{\\multirow{{2}}{{*}}{{{tipo_grupo}}}}} & "
        "\\multicolumn{2}{c}{Mesas} \\\\\n"
        "\\cmidrule(lr){2-3}\n"
        "& Total & Outlier \\% \\\\\n"
        "\\midrule\n"
    )
    for _, row in resumen_pct.iterrows():
        tabla_pct += (
            f"{row['grupo']} & {format_miles(row['total_mesas'])} & {format_pct(row['porcentaje'])} \\\\\n"
        )
    tabla_pct += (
        "\\bottomrule\n\\end{tabular}\n"
        f"\\caption{{Porcentaje de mesas por {tipo_grupo.lower()} con $p < {umbral_tex}$. {caption_base}}}\n"
        f"\\label{{tab:{label_base}_pct}}\n"
        "\\end{table}\n"
    )
    return tabla_cant, tabla_pct














# Function that makes a plot of dispersion between p-valor, mesas y votos
def plot_dispersion(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, 
                    distmin=False, comuna=False, circ=False, dummies_circ=False, vmin=-6):

    # Datos p-valor
    if eleccion == '2021_Presidencial':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
    elif eleccion == '2023_Plebiscito':
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'

    # Definir colormap
    cmap_pvalue = sns.light_palette("red", as_cmap=True, reverse=True)

    # Verifica si el archivo existe
    if not os.path.exists(file_path):
        print(f"El archivo {file_path} no existe.")
        return

    # Leer el DataFrame con los p-valores
    df_pvalues = pd.read_excel(file_path)

    # Eliminar columna innecesaria
    df_pvalues = df_pvalues.drop(columns='Unnamed: 0', errors='ignore')

    # Reemplazar ":" por "" en la columna 'Local'
    df_pvalues['Local'] = df_pvalues['Local'].str.replace(':', '')

    # Calcular promedio de p-valor para cada Circunscripcion
    if eleccion == '2021_Presidencial':
        # Agrupar por circunscripción y calcular el promedio del p-valor
        df_pval_avg = df_pvalues.groupby(["Comuna", "Circunscripción electoral"])["p_valor"].mean().reset_index()
        df_pval_avg = df_pval_avg[['Circunscripción electoral', 'p_valor']]
    elif eleccion == '2023_Plebiscito':
        # Agrupar por circunscripción y calcular el promedio del p-valor
        df_pval_avg = df_pvalues.groupby(["Comuna", "Circunscripción electoral", "Local"])["p_valor"].mean().reset_index()
        df_pval_avg = df_pval_avg[['Local', 'p_valor']]

    # Mesas por CE
    if eleccion == '2021_Presidencial':
        df_mesas_count = df_pvalues.groupby("Circunscripción electoral")[["Comuna", "Local", "Mesa"]].nunique().reset_index()
        df_mesas_count = df_mesas_count[['Circunscripción electoral', 'Mesa']]
    elif eleccion == '2023_Plebiscito':
        df_mesas_count = df_pvalues.groupby("Local")[["Comuna", "Circunscripción electoral", "Mesa"]].nunique().reset_index()
        df_mesas_count = df_mesas_count[['Local', 'Mesa']]

    # Diferencia candidato
    # Calcular % de votos de Boric en cada circunscripción
    if eleccion == '2021_Presidencial':
        df_circ = df_pvalues.groupby(["Comuna", "Circunscripción electoral"]).sum().reset_index()
        df_circ['votos_totales'] = df_circ['EDUARDO ARTES'] + df_circ['FRANCO ALDO PARISI'] + df_circ['GABRIEL BORIC'] + df_circ['JOSE ANTONIO KAST'] + df_circ['MARCO ENRIQUEZ-OMINAMI'] + df_circ['SEBASTIAN SICHEL'] + df_circ['YASNA PROVOSTE'] + df_circ['NULO BLANCO']
        df_circ["porcentaje_boric_circ"] = (df_circ["GABRIEL BORIC"] / df_circ["votos_totales"]) * 100

        # Calcular % de votos de Boric en cada comuna
        df_comuna = df_pvalues.groupby("Comuna").sum().reset_index()
        df_comuna['votos_totales'] = df_comuna['EDUARDO ARTES'] + df_comuna['FRANCO ALDO PARISI'] + df_comuna['GABRIEL BORIC'] + df_comuna['JOSE ANTONIO KAST'] + df_comuna['MARCO ENRIQUEZ-OMINAMI'] + df_comuna['SEBASTIAN SICHEL'] + df_comuna['YASNA PROVOSTE'] + df_comuna['NULO BLANCO']
        df_comuna["porcentaje_boric_comuna"] = (df_comuna["GABRIEL BORIC"] / df_comuna["votos_totales"]) * 100

        # Unir ambos resultados
        df_resultado = df_circ.merge(df_comuna[["Comuna", "porcentaje_boric_comuna"]], on="Comuna")

        # Calcular la diferencia
        df_resultado["diferencia"] = df_resultado["porcentaje_boric_circ"] - df_resultado["porcentaje_boric_comuna"]

        # Solo columnas relevantes
        df_resultado = df_resultado[['Comuna', 'Circunscripción electoral', 'votos_totales', 'porcentaje_boric_circ', 'porcentaje_boric_comuna', 'diferencia']]

    elif eleccion == '2023_Plebiscito':
        df_circ = df_pvalues.groupby(["Comuna", "Circunscripción electoral", "Local"]).sum().reset_index()
        df_circ['votos_totales'] = df_circ['A FAVOR'] + df_circ['EN CONTRA'] + df_circ['NULO BLANCO']
        df_circ["porcentaje_favor_circ"] = (df_circ["A FAVOR"] / df_circ["votos_totales"]) * 100

        df_comuna = df_pvalues.groupby(["Comuna"]).sum().reset_index()
        df_comuna['votos_totales'] = df_comuna['A FAVOR'] + df_comuna['EN CONTRA'] + df_comuna['NULO BLANCO']
        df_comuna["porcentaje_favor_comuna"] = (df_comuna["A FAVOR"] / df_comuna["votos_totales"]) * 100

        df_resultado = df_circ.merge(df_comuna[["Comuna", "porcentaje_favor_comuna"]], on="Comuna")

        df_resultado["diferencia"] = df_resultado["porcentaje_favor_circ"] - df_resultado["porcentaje_favor_comuna"]

        df_resultado = df_resultado[['Comuna', 'Circunscripción electoral', 'Local', 'votos_totales', 'porcentaje_favor_circ', 'porcentaje_favor_comuna', 'diferencia']]

    if eleccion == '2021_Presidencial':
        # Unir los datos necesarios
        df_grafico = df_resultado.merge(df_mesas_count, on="Circunscripción electoral").merge(df_pval_avg, on="Circunscripción electoral")
        
        # Aplicar un pequeño jitter a los valores de X para evitar superposición
        df_grafico["total_mesas_jitter"] = df_grafico["Mesa"] + np.random.uniform(-2, 2, len(df_grafico))
        df_grafico["log_p_valor"] = np.log10(df_grafico["p_valor"].replace(0, np.nan))  # Evita log(0)

        plt.figure(figsize=(10, 6))
        scatter = plt.scatter(df_grafico["total_mesas_jitter"], 
                            df_grafico["diferencia"], 
                            c=df_grafico["log_p_valor"], 
                            cmap=cmap_pvalue, 
                            alpha=0.75, 
                            edgecolors="k", 
                            s=30,
                            vmin=vmin, 
                            vmax=0)
        plt.colorbar(scatter, label="Log10 P-valor promedio")
        plt.xscale("log")  # Aplicar escala logarítmica al eje X
        
        plt.xlabel("Logaritmo de la Cantidad de Mesas en la Circunscripción")
        plt.ylabel("Diferencia en % de votos de Boric con el Promedio Comunal")
        plt.title(f'Gráfico de Dispersión 2021 comuna{"T" if comuna else "F"} circ{"T" if circ else "F"} dummies{"T" if dummies_circ else "F"}')
        plt.grid(True, linestyle="--", alpha=0.5)
        plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2021/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Dispersion_graph_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.png')
        plt.show()

    elif eleccion == '2023_Plebiscito':
        # Unir los datos necesarios
        df_grafico = df_resultado.merge(df_mesas_count, on="Local").merge(df_pval_avg, on="Local")

        # Aplicar un pequeño jitter a los valores de X para evitar superposición
        df_grafico["total_mesas_jitter"] = df_grafico["Mesa"] + np.random.uniform(-2, 2, len(df_grafico))
        df_grafico["log_p_valor"] = np.log10(df_grafico["p_valor"].replace(0, np.nan))  # Evita log(0)

        plt.figure(figsize=(10, 6))
        scatter = plt.scatter(df_grafico["total_mesas_jitter"],
                            df_grafico["diferencia"],
                            c=df_grafico["p_valor"],
                            cmap=cmap_pvalue,
                            alpha=0.75,
                            edgecolors="k",
                            s=30,
                            vmin=vmin, 
                            vmax=0)
        
        plt.colorbar(scatter, label="Log10 P-valor promedio")
        plt.xscale("log")  # Aplicar escala logarítmica al eje X

        plt.xlabel("Logaritmo de la Cantidad de Mesas en la Circunscripción")
        plt.ylabel("Diferencia en % de votos de Boric con el Promedio Comunal")
        plt.title(f'Gráfico de Dispersión 2023 comuna{"T" if comuna else "F"} circ{"T" if circ else "F"} dummies{"T" if dummies_circ else "F"}')
        plt.grid(True, linestyle="--", alpha=0.5)
        plt.savefig(f'{COD_FOLDER}Outputs/PLS_kfold_2023/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Dispersion_graph_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.png')
        plt.show()

def plot_dispersion_side_by_side(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, 
                                distmin=False, comuna_opts=[False], circ_opts=[False], dummies_circ_opts=[False],
                                vmin=-6):
    # Definir colormap
    cmap_pvalue = sns.light_palette("red", as_cmap=True, reverse=True)

    # Crear figura y ejes
    num_plots = len(comuna_opts)
    fig, axes = plt.subplots(1, num_plots, figsize=(10 * num_plots, 6), sharey=True)
    if num_plots == 1:
        axes = [axes]
    
    for i, (comuna, circ, dummies_circ) in enumerate(zip(comuna_opts, circ_opts, dummies_circ_opts)):
        # Construcción del path del archivo
        file_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/{method}_p_values_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx'
        
        # Verificar si el archivo existe
        if not os.path.exists(file_path):
            print(f"El archivo {file_path} no existe.")
            return

        # Leer el DataFrame con los p-valores
        df_pvalues = pd.read_excel(file_path)
        df_pvalues.drop(columns='Unnamed: 0', errors='ignore', inplace=True)
        df_pvalues['Local'] = df_pvalues['Local'].str.replace(':', '')

        # Agrupar datos según la elección
        if eleccion == '2021_Presidencial':
            df_pval_avg = df_pvalues.groupby(["Comuna", "Circunscripción electoral"])["p_valor"].mean().reset_index()
            df_pval_avg = df_pval_avg[['Circunscripción electoral', 'p_valor']]
            df_mesas_count = df_pvalues.groupby("Circunscripción electoral")[["Comuna", "Local", "Mesa"]].nunique().reset_index()
            df_mesas_count = df_mesas_count[['Circunscripción electoral', 'Mesa']]
            df_circ = df_pvalues.groupby(["Comuna", "Circunscripción electoral"]).sum().reset_index()
            df_circ['votos_totales'] = df_circ['EDUARDO ARTES'] + df_circ['FRANCO ALDO PARISI'] + df_circ['GABRIEL BORIC'] + df_circ['JOSE ANTONIO KAST'] + df_circ['MARCO ENRIQUEZ-OMINAMI'] + df_circ['SEBASTIAN SICHEL'] + df_circ['YASNA PROVOSTE'] + df_circ['NULO BLANCO']
            df_circ["porcentaje_boric_circ"] = (df_circ["GABRIEL BORIC"] / df_circ["votos_totales"]) * 100

            # Calcular % de votos de Boric en cada comuna
            df_comuna = df_pvalues.groupby("Comuna").sum().reset_index()
            df_comuna['votos_totales'] = df_comuna['EDUARDO ARTES'] + df_comuna['FRANCO ALDO PARISI'] + df_comuna['GABRIEL BORIC'] + df_comuna['JOSE ANTONIO KAST'] + df_comuna['MARCO ENRIQUEZ-OMINAMI'] + df_comuna['SEBASTIAN SICHEL'] + df_comuna['YASNA PROVOSTE'] + df_comuna['NULO BLANCO']
            df_comuna["porcentaje_boric_comuna"] = (df_comuna["GABRIEL BORIC"] / df_comuna["votos_totales"]) * 100

            # Unir ambos resultados
            df_resultado = df_circ.merge(df_comuna[["Comuna", "porcentaje_boric_comuna"]], on="Comuna")

            # Calcular la diferencia
            df_resultado["diferencia"] = df_resultado["porcentaje_boric_circ"] - df_resultado["porcentaje_boric_comuna"]

            # Solo columnas relevantes
            df_resultado = df_resultado[['Comuna', 'Circunscripción electoral', 'votos_totales', 'porcentaje_boric_circ', 'porcentaje_boric_comuna', 'diferencia']]
        elif eleccion == '2023_Plebiscito':
            df_pval_avg = df_pvalues.groupby(["Comuna", "Circunscripción electoral", "Local"])["p_valor"].mean().reset_index()
            df_pval_avg = df_pval_avg[['Local', 'p_valor']]
            df_mesas_count = df_pvalues.groupby("Local")[["Comuna", "Circunscripción electoral", "Mesa"]].nunique().reset_index()
            df_mesas_count = df_mesas_count[['Local', 'Mesa']]
            df_circ = df_pvalues.groupby(["Comuna", "Circunscripción electoral", "Local"]).sum().reset_index()
            df_circ['votos_totales'] = df_circ['A FAVOR'] + df_circ['EN CONTRA'] + df_circ['NULO BLANCO']
            df_circ["porcentaje_favor_circ"] = (df_circ["A FAVOR"] / df_circ["votos_totales"]) * 100

            df_comuna = df_pvalues.groupby(["Comuna"]).sum().reset_index()
            df_comuna['votos_totales'] = df_comuna['A FAVOR'] + df_comuna['EN CONTRA'] + df_comuna['NULO BLANCO']
            df_comuna["porcentaje_favor_comuna"] = (df_comuna["A FAVOR"] / df_comuna["votos_totales"]) * 100

            df_resultado = df_circ.merge(df_comuna[["Comuna", "porcentaje_favor_comuna"]], on="Comuna")

            df_resultado["diferencia"] = df_resultado["porcentaje_favor_circ"] - df_resultado["porcentaje_favor_comuna"]

            df_resultado = df_resultado[['Comuna', 'Circunscripción electoral', 'Local', 'votos_totales', 'porcentaje_favor_circ', 'porcentaje_favor_comuna', 'diferencia']]

        merge_col = "Circunscripción electoral" if eleccion == '2021_Presidencial' else "Local"
        df_grafico = df_resultado.merge(df_mesas_count, on=merge_col).merge(df_pval_avg, on=merge_col)
        np.random.seed(42)
        df_grafico["total_mesas_jitter"] = df_grafico["Mesa"] + np.random.uniform(-2, 2, len(df_grafico))
        df_grafico["log_p_valor"] = np.log10(df_grafico["p_valor"].replace(0, np.nan))
        
        scatter = axes[i].scatter(df_grafico["total_mesas_jitter"], 
                                  df_grafico["diferencia"], 
                                  c=df_grafico["log_p_valor"], 
                                  cmap=cmap_pvalue, 
                                  alpha=0.75, 
                                  edgecolors="k", 
                                  s=30, 
                                  vmin=vmin, 
                                  vmax=0)
        axes[i].set_xscale("log")
        axes[i].set_xlabel("Logaritmo de la Cantidad de Mesas")
        if eleccion == "2021_Presidencial":
            axes[i].set_ylabel("Diferencia en % de votos de Boric con el promedio comunal" if i == 0 else "")
        elif eleccion == "2023_Plebiscito":
            axes[i].set_ylabel("Diferencia en % de votos del A favor con el promedio comunal" if i == 0 else "")
        axes[i].set_title(f'Año {str(eleccion[:4])} Comuna {"T" if comuna else "F"}, Circ {"T" if circ else "F"}, Dummies {"T" if dummies_circ else "F"}')
        axes[i].grid(True, linestyle="--", alpha=0.5)

    cbar_ax = fig.add_axes([0.92, 0.15, 0.02, 0.7])  
    fig.colorbar(scatter, cax=cbar_ax, label="Log10 P-valor promedio")
    plt.tight_layout(rect=[0, 0, 0.9, 1])  

    plt.savefig(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Dispersion_graph_multiple_{eleccion[:4]}.png')
    plt.show()

    return None

# Function that makes a plot showing differences between two models
def plot_pvalue_comparison(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=False, 
                           distmin=False, comuna_opts=[False, False], circ_opts=[False, False], 
                           dummies_circ_opts=[False, False]):
    """
    Genera un gráfico de dispersión comparando los p-valores de dos modelos.
    - Eje X: p-valor promedio del modelo bueno.
    - Eje Y: p-valor promedio del modelo malo.
    - Color: cantidad de mesas (de rojo a blanco).
    """
    
    # Definir colormap de rojo (pocas mesas) a blanco (muchas mesas)
    cmap_red_white = sns.light_palette("red", as_cmap=True, reverse=True)

    # Determinar columnas de agrupación según la elección
    if eleccion == "2021_Presidencial":
        agrupacion = ["Región", "Comuna", "Circunscripción electoral"]
    elif eleccion == "2023_Plebiscito":
        agrupacion = ["Región", "Comuna", "Circunscripción electoral", "Local"]
    else:
        raise ValueError("Elección no reconocida. Debe ser '2021_Presidencial' o '2023_Plebiscito'.")

    # Verificar que se pasaron exactamente dos valores en cada lista
    if len(comuna_opts) != 2 or len(circ_opts) != 2 or len(dummies_circ_opts) != 2:
        raise ValueError("comuna_opts, circ_opts y dummies_circ_opts deben contener exactamente dos valores: uno para el modelo bueno y otro para el modelo malo.")

    # Obtener opciones para el modelo bueno y malo
    comuna_bueno, comuna_malo = comuna_opts
    circ_bueno, circ_malo = circ_opts
    dummies_bueno, dummies_malo = dummies_circ_opts

    # Construcción de paths de los archivos
    base_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'

    file_bueno = f'{base_path}/{method}_p_values_comuna{"T" if comuna_bueno else "F"}_circ{"T" if circ_bueno else "F"}_dummies{"T" if dummies_bueno else "F"}.xlsx'
    file_malo = f'{base_path}/{method}_p_values_comuna{"T" if comuna_malo else "F"}_circ{"T" if circ_malo else "F"}_dummies{"T" if dummies_malo else "F"}.xlsx'

    # Verificar si los archivos existen
    if not os.path.exists(file_bueno) or not os.path.exists(file_malo):
        print(f"Uno de los archivos {file_bueno} o {file_malo} no existe.")
        return

    # Leer los DataFrames
    df_bueno = pd.read_excel(file_bueno)
    df_malo = pd.read_excel(file_malo)

    # Eliminar columna extra si existe
    df_bueno.drop(columns='Unnamed: 0', errors='ignore', inplace=True)
    df_malo.drop(columns='Unnamed: 0', errors='ignore', inplace=True)

    # Agrupar por las columnas definidas y calcular p-valor promedio y cantidad de mesas
    df_bueno_agg = df_bueno.groupby(agrupacion).agg(
        p_valor_promedio=("p_valor", "mean"),
        mesas=("Mesa", "nunique")
    ).reset_index()

    df_malo_agg = df_malo.groupby(agrupacion).agg(
        p_valor_promedio=("p_valor", "mean"),
        mesas=("Mesa", "nunique")
    ).reset_index()

    # Fusionar ambos dataframes en base a las columnas de agrupación
    df_comparacion = df_bueno_agg.merge(df_malo_agg, on=agrupacion, suffixes=("_bueno", "_malo"))

    # Aplicar transformación logarítmica a la cantidad de mesas
    df_comparacion["mesas_log"] = np.log1p(df_comparacion["mesas_bueno"])  # log1p(x) = log(1 + x), evita log(0)
    
    # Crear figura con GridSpec para incluir histogramas
    fig = plt.figure(figsize=(10, 10))
    gs = GridSpec(4, 4, figure=fig, height_ratios=[1, 4, 4, 0.2], width_ratios=[4, 4, 1, 0.2])

    ax_scatter = fig.add_subplot(gs[1:3, 0:2])  # Scatter plot
    ax_histx = fig.add_subplot(gs[0, 0:2], sharex=ax_scatter)  # Histograma X
    ax_histy = fig.add_subplot(gs[1:3, 2], sharey=ax_scatter)  # Histograma Y
    ax_cbar = fig.add_subplot(gs[1:3, 3])  # Barra de color

    # Scatter plot
    scatter = ax_scatter.scatter(
        df_comparacion["p_valor_promedio_bueno"], 
        df_comparacion["p_valor_promedio_malo"], 
        c=df_comparacion["mesas_log"], 
        cmap="Reds",  
        alpha=0.75, 
        edgecolors="k"
    )

    ax_scatter.plot([0, 1], [0, 1], linestyle="--", color="black", alpha=0.7)
    ax_scatter.set_xlabel("p-valor promedio modelo bueno")
    ax_scatter.set_ylabel("p-valor promedio modelo malo")
    ax_scatter.grid(True, linestyle="--", alpha=0.5)

    # Histograma en el eje X
    ax_histx.hist(df_comparacion["p_valor_promedio_bueno"], bins=20, color="red", alpha=0.6)
    ax_histx.set_ylabel("Frecuencia")
    ax_histx.tick_params(axis="x", labelbottom=False)

    # Histograma en el eje Y (horizontal)
    ax_histy.hist(df_comparacion["p_valor_promedio_malo"], bins=20, color="red", alpha=0.6, orientation="horizontal")
    ax_histy.set_xlabel("Frecuencia")
    ax_histy.tick_params(axis="y", labelleft=False)

    # Barra de color
    cbar = plt.colorbar(scatter, cax=ax_cbar)
    cbar.set_label("Cantidad de Mesas")

    # Ajustar etiquetas de la barra de color para mostrar valores originales en lugar de logaritmos
    ticks = np.linspace(df_comparacion["mesas_log"].min(), df_comparacion["mesas_log"].max(), num=6)
    cbar.set_ticks(ticks)
    cbar.set_ticklabels([f"{int(np.expm1(tick))}" for tick in ticks]) 

    # Guardar figura
    plt.savefig(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Comparacion_pval_{eleccion[:4]}.png', dpi=300, bbox_inches="tight")

    plt.show()
    plt.close(fig)

    # scatter = ax.scatter(
    #     df_comparacion["p_valor_promedio_bueno"], 
    #     df_comparacion["p_valor_promedio_malo"], 
    #     c=df_comparacion["mesas_log"], 
    #     cmap="Reds",  # Escala de colores de rojo a blanco
    #     alpha=0.75, 
    #     edgecolors="k"
    # )

    # # Agregar línea diagonal de referencia
    # ax.plot([0, 1], [0, 1], linestyle="--", color="black", alpha=0.7)

    # # Etiquetas y título
    # ax.set_xlabel("p-valor promedio modelo bueno")
    # ax.set_ylabel("p-valor promedio modelo malo")
    # ax.set_title(f'Comparación de Modelos ({eleccion})')
    # ax.grid(True, linestyle="--", alpha=0.5)

    # # Agregar barra de color con etiquetas en escala original
    # cbar = plt.colorbar(scatter, ax=ax)
    # cbar.set_label("Cantidad de Mesas")

    # # Ajustar etiquetas de la barra de color para que muestren valores originales en lugar de logaritmos
    # ticks = np.linspace(df_comparacion["mesas_log"].min(), df_comparacion["mesas_log"].max(), num=6)
    # cbar.set_ticks(ticks)
    # cbar.set_ticklabels([f"{int(np.expm1(tick))}" for tick in ticks])  # Deshacer log1p para mostrar valores originales

    # # Guardar figura
    # plt.savefig(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Comparacion_pval_{eleccion[:4]}.png', dpi=300, bbox_inches="tight")

    # plt.show()
    # plt.close(fig)

    return None

def graph_probability_group_candidate_old(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, groups='ALL', 
                                      eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
                                      dummies_circ=False, fs_etapa=1):
    import matplotlib.pyplot as plt
    import os
    import numpy as np
    import torch
    import pickle
    import pandas as pd

    bootstrap_seeds = list(range(1, 102))
    alpha_list, beta_list = [], []

    for bootstrap_seed in bootstrap_seeds:
        filename = generate_filename(
            method=method,
            train_frac=train_frac,
            K_folds=1,
            k_fold=1,
            split_distritos=split_distritos,
            n_pls_components=n_pls_components if method == "PLS" else None,
            seed_train=seed_train,
            bootstrap_seed=bootstrap_seed,
            fs_etapa=fs_etapa if method == "FS" else None,
            groups=groups,
            eleccion=eleccion,
            atributos_circ=atributos_circ,
            distmin=distmin,
            comuna=comuna,
            circ=circ,
            dummies_circ=dummies_circ
        )

        with open(f'{filename}.pkl', 'rb') as f:
            results = pickle.load(f)

        alpha_list.append(results['alpha_opt'])
        beta_list.append(results['beta_opt'])
        candidatos = results['candidatos']
        grupos = results['grupos']

    candidatos = candidatos[:-1]  # eliminar 'NULO BLANCO' si es redundante
    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    alpha = torch.tensor(np.mean(stacked_alpha, axis=0))
    beta = torch.tensor(np.mean(stacked_beta, axis=0))

    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos_, grupos, df = get_xwve_from_election(
        regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion,
        estandarizar=False, corr_threshold=0.8, n_pca_components=0, n_pls_components=n_pls_components,
        groups=groups, atributos_circ=atributos_circ, distmin=distmin)

    p_dgc = fun_p_full(v_da_torch, alpha, beta)
    pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0)
    numerador = torch.sum(pob_d.view(-1, 1, 1) * p_dgc, dim=0)
    p_gc = numerador / torch.sum(pob_d)

    if eleccion == '2021_Presidencial':
        orden_candidatos = ["EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
                            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"]
    else:
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]

    candidatos_ = np.array([c.strip().upper() for c in candidatos_])
    orden_candidatos = [c.strip().upper() for c in orden_candidatos]
    indices_candidatos = [np.where(candidatos_ == c)[0][0] for c in orden_candidatos if c in candidatos_]
    p_gc = p_gc[:, indices_candidatos]

    df_p_gc = pd.DataFrame(p_gc.numpy(), index=grupos, columns=orden_candidatos)
    agrupaciones = {
        "18-29 H": ["18-19 H", "20-29 H"],
        "18-29 M": ["18-19 M", "20-29 M"],
        "70+ H": ["70-79 H", "80+ H"],
        "70+ M": ["70-79 M", "80+ M"]
    }
    otros = [g for g in grupos if g not in sum(agrupaciones.values(), [])]
    todos_grupos = list(agrupaciones.keys()) + otros

    df_p_gc_agrupado = pd.DataFrame(0.0, index=todos_grupos, columns=orden_candidatos)
    for nuevo, originales in agrupaciones.items():
        df_p_gc_agrupado.loc[nuevo] = df_p_gc.loc[originales].mean()
    for g in otros:
        df_p_gc_agrupado.loc[g] = df_p_gc.loc[g]

    def ordenar_grupos(grupo):
        edad = int(grupo.split('-')[0].split('+')[0])
        return (grupo.endswith("M"), edad)

    df_p_gc_agrupado = df_p_gc_agrupado.loc[sorted(df_p_gc_agrupado.index, key=ordenar_grupos)]
    p_gc = 100 * df_p_gc_agrupado.values
    grupos_ordenados = df_p_gc_agrupado.index.tolist()
    G, C = p_gc.shape

    # Colores aptos para daltónicos
    colormap = plt.colormaps.get_cmap('tab10')
    colores = [colormap(i) for i in range(C)]

    fig, ax = plt.subplots(figsize=(10, 6))
    bottom = np.zeros(G)

    if eleccion == '2021_Presidencial':
        fontsize = 8
    else:
        fontsize = 10

    for j in range(C):
        bars = ax.barh(grupos_ordenados, p_gc[:, j], left=bottom, label=orden_candidatos[j], color=colores[j])
        for i, b in enumerate(bars):
            porcentaje = p_gc[i, j]
            if porcentaje >= 3:
                ax.text(bottom[i] + porcentaje / 2, i, f'{porcentaje:.1f}%', va='center', ha='center',
                        color='white', fontsize=fontsize)
            elif porcentaje > 0:
                ax.text(bottom[i] + porcentaje + 0.5, i, f'{porcentaje:.1f}%', va='center', ha='left',
                        color='black', fontsize=7)
        bottom += p_gc[:, j]

    ax.invert_yaxis()
    ax.set_xlabel("Probabilidad (%)")
    ax.set_ylabel("Grupo")
    ax.set_title("Distribución de Voto por Grupo y Candidato")
    ax.set_xlim(0, 105)  # margen extra para evitar solapamiento
    ax.legend(title="Candidato" if eleccion == '2021_Presidencial' else "Opción",
              loc="center left", bbox_to_anchor=(1.02, 0.5))

    plt.tight_layout()

    output_folder = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
    os.makedirs(output_folder, exist_ok=True)
    plt.savefig(f'{output_folder}/Probability_graph_candidate{eleccion[:4]}.png')
    plt.show()

    return p_gc  # o p_dgc si prefieres

def graph_probability_group_candidate(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, groups='ALL', 
                                      eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
                                      dummies_circ=False, fs_etapa=1, COD_FOLDER=""):
    import matplotlib.pyplot as plt
    import os
    import numpy as np
    import torch
    import pickle
    import pandas as pd

    bootstrap_seeds = list(range(1, 102))
    alpha_list, beta_list = [], []

    for bootstrap_seed in bootstrap_seeds:
        filename = generate_filename(
            method=method,
            train_frac=train_frac,
            K_folds=1,
            k_fold=1,
            split_distritos=split_distritos,
            n_pls_components=n_pls_components if method == "PLS" else None,
            seed_train=seed_train,
            bootstrap_seed=bootstrap_seed,
            fs_etapa=fs_etapa if method == "FS" else None,
            groups=groups,
            eleccion=eleccion,
            atributos_circ=atributos_circ,
            distmin=distmin,
            comuna=comuna,
            circ=circ,
            dummies_circ=dummies_circ
        )

        with open(f'{filename}.pkl', 'rb') as f:
            results = pickle.load(f)

        alpha_list.append(results['alpha_opt'])
        beta_list.append(results['beta_opt'])
        candidatos = results['candidatos']
        grupos = results['grupos']

    candidatos = candidatos[:-1]  # eliminar 'NULO BLANCO' si es redundante
    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    alpha = torch.tensor(np.mean(stacked_alpha, axis=0))
    beta = torch.tensor(np.mean(stacked_beta, axis=0))

    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies
    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos_, grupos, df = get_xwve_from_election(
        regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion,
        estandarizar=False, corr_threshold=0.8, n_pca_components=0, n_pls_components=n_pls_components,
        groups=groups, atributos_circ=atributos_circ, distmin=distmin)

    p_dgc = fun_p_full(v_da_torch, alpha, beta)
    pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0)
    numerador = torch.sum(pob_d.view(-1, 1, 1) * p_dgc, dim=0)
    p_gc = numerador / torch.sum(pob_d)

    if eleccion == '2021_Presidencial':
        orden_candidatos = ["EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
                            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"]
    else:
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]

    candidatos_ = np.array([c.strip().upper() for c in candidatos_])
    orden_candidatos = [c.strip().upper() for c in orden_candidatos]
    indices_candidatos = [np.where(candidatos_ == c)[0][0] for c in orden_candidatos if c in candidatos_]
    p_gc = p_gc[:, indices_candidatos]

    df_p_gc = pd.DataFrame(p_gc.numpy(), index=grupos, columns=orden_candidatos)
    agrupaciones = {
        "18-29 H": ["18-19 H", "20-29 H"],
        "18-29 M": ["18-19 M", "20-29 M"],
        "70+ H": ["70-79 H", "80+ H"],
        "70+ M": ["70-79 M", "80+ M"]
    }
    otros = [g for g in grupos if g not in sum(agrupaciones.values(), [])]
    todos_grupos = list(agrupaciones.keys()) + otros

    df_p_gc_agrupado = pd.DataFrame(0.0, index=todos_grupos, columns=orden_candidatos)
    for nuevo, originales in agrupaciones.items():
        df_p_gc_agrupado.loc[nuevo] = df_p_gc.loc[originales].mean()
    for g in otros:
        df_p_gc_agrupado.loc[g] = df_p_gc.loc[g]

    def ordenar_grupos(grupo):
        edad = int(grupo.split('-')[0].split('+')[0])
        return (grupo.endswith("M"), edad)

    df_p_gc_agrupado = df_p_gc_agrupado.loc[sorted(df_p_gc_agrupado.index, key=ordenar_grupos)]
    df_plot = df_p_gc_agrupado.copy()
    df_plot['Genero'] = df_plot.index.to_series().str.strip().str.extract(r'([HM])$')[0].replace({'H': 'Hombres', 'M': 'Mujeres'})
    df_plot['Edad'] = df_plot.index.str.replace(r' [HM]$', '', regex=True)
    df_long = df_plot.reset_index().melt(id_vars=['Edad', 'Genero'], value_vars=orden_candidatos,
                                         var_name='Candidato', value_name='Probabilidad')
    df_long['Probabilidad'] *= 100

    df_mujeres = df_long[df_long["Genero"] == "Mujeres"].pivot(index="Edad", columns="Candidato", values="Probabilidad").fillna(0)
    df_hombres = df_long[df_long["Genero"] == "Hombres"].pivot(index="Edad", columns="Candidato", values="Probabilidad").fillna(0)

    df_mujeres = df_mujeres[orden_candidatos]
    df_hombres = df_hombres[orden_candidatos]

    edades_ordenadas = sorted(df_hombres.index, key=lambda x: int(x.split('-')[0].replace('+', '')))
    df_mujeres = df_mujeres.loc[edades_ordenadas]
    df_hombres = df_hombres.loc[edades_ordenadas]

    fig, axes = plt.subplots(2, 1, figsize=(25, 30), sharex=True)
    colores = plt.get_cmap("tab10").colors
    candidatos = df_hombres.columns.tolist()

    def formatear_valor_pct(x):
        return f"{x:,.1f}".replace(",", "X").replace(".", ",").replace("X", "")

    label_fontsize = 25
    bar_height = 0.3
    espaciado = 0.5

    for ax, df_, titulo in zip(axes, [df_hombres, df_mujeres], ["Hombres", "Mujeres"]):
        bottom = np.zeros(len(df_))
        y_pos = np.arange(len(df_)) * espaciado
        for i, c in enumerate(candidatos):
            bars = ax.barh(y_pos, df_[c], left=bottom, color=colores[i], label=c, height=bar_height)
            for j, bar in enumerate(bars):
                val = df_[c].iloc[j]
                if val > 3:
                    x_centro = bottom[j] + val / 2
                    y_centro = y_pos[j]
                    ax.text(x_centro, y_centro, formatear_valor_pct(val),
                            va="center", ha="center", color="white", fontsize=label_fontsize)
            bottom += df_[c].values

        ax.set_yticks(y_pos)
        ax.set_yticklabels(df_.index)
        ax.set_title(titulo, fontsize=30)
        ax.set_ylabel("Edad", fontsize=30)
        ax.invert_yaxis()
        ax.tick_params(axis='both', labelsize=25)

    axes[1].set_xlabel("Probabilidad (%)", fontsize=30)
    fig.subplots_adjust(bottom=0.25, hspace=0.07)

    nombres_con_tildes = {
        "EDUARDO ARTES": "EDUARDO ARTÉS",
        "GABRIEL BORIC": "GABRIEL BORIC",
        "MARCO ENRIQUEZ-OMINAMI": "MARCO ENRÍQUEZ-OMINAMI",
        "YASNA PROVOSTE": "YASNA PROVOSTE",
        "FRANCO ALDO PARISI": "FRANCO ALDO PARISI",
        "SEBASTIAN SICHEL": "SEBASTIÁN SICHEL",
        "JOSE ANTONIO KAST": "JOSÉ ANTONIO KAST",
        "NULO BLANCO": "NULO/BLANCO",
        "A FAVOR": "A FAVOR",
        "EN CONTRA": "EN CONTRA"
    }

    handles, raw_labels = axes[0].get_legend_handles_labels()
    labels = [nombres_con_tildes.get(lbl.upper(), lbl.title()) for lbl in raw_labels]
    fig.legend(handles, labels,
               title="Candidato" if eleccion == '2021_Presidencial' else "Opción",
               loc='lower center',
               bbox_to_anchor=(0.5, 0.16) if eleccion == '2021_Presidencial' else (0.5, 0.18),
               ncol=4,
               fontsize=20, title_fontsize=25,
               frameon=True)

    output_folder = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
    os.makedirs(output_folder, exist_ok=True)
    plt.savefig(f'{output_folder}/Facet_probability_graph_candidate_{eleccion[:4]}.png', dpi=300, bbox_inches='tight')
    # plt.show()

    return p_gc

def graph_probability_group_candidate_side_by_side(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, groups='ALL', 
                                                   eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
                                                   dummies_circ=False, fs_etapa=1, COD_FOLDER=""):
    import matplotlib.pyplot as plt
    import os
    import numpy as np
    import torch
    import pickle
    import pandas as pd

    bootstrap_seeds = list(range(1, 102))
    alpha_list, beta_list = [], []

    for bootstrap_seed in bootstrap_seeds:
        filename = generate_filename(
            method=method,
            train_frac=train_frac,
            K_folds=1,
            k_fold=1,
            split_distritos=split_distritos,
            n_pls_components=n_pls_components if method == "PLS" else None,
            seed_train=seed_train,
            bootstrap_seed=bootstrap_seed,
            fs_etapa=fs_etapa if method == "FS" else None,
            groups=groups,
            eleccion=eleccion,
            atributos_circ=atributos_circ,
            distmin=distmin,
            comuna=comuna,
            circ=circ,
            dummies_circ=dummies_circ
        )

        with open(f'{filename}.pkl', 'rb') as f:
            results = pickle.load(f)

        alpha_list.append(results['alpha_opt'])
        beta_list.append(results['beta_opt'])
        candidatos = results['candidatos']
        grupos = results['grupos']

    candidatos = candidatos[:-1]  # eliminar 'NULO BLANCO' si es redundante
    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    alpha = torch.tensor(np.mean(stacked_alpha, axis=0))
    beta = torch.tensor(np.mean(stacked_beta, axis=0))

    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies
    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos_, grupos, df = get_xwve_from_election(
        regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion,
        estandarizar=False, corr_threshold=0.8, n_pca_components=0, n_pls_components=n_pls_components,
        groups=groups, atributos_circ=atributos_circ, distmin=distmin)

    p_dgc = fun_p_full(v_da_torch, alpha, beta)
    pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0)
    numerador = torch.sum(pob_d.view(-1, 1, 1) * p_dgc, dim=0)
    p_gc = numerador / torch.sum(pob_d)

    if eleccion == '2021_Presidencial':
        orden_candidatos = ["EDUARDO ARTES", "GABRIEL BORIC", "MARCO ENRIQUEZ-OMINAMI", "YASNA PROVOSTE",
                            "FRANCO ALDO PARISI", "SEBASTIAN SICHEL", "JOSE ANTONIO KAST", "NULO BLANCO"]
    else:
        orden_candidatos = ["A FAVOR", "EN CONTRA", "NULO BLANCO"]

    candidatos_ = np.array([c.strip().upper() for c in candidatos_])
    orden_candidatos = [c.strip().upper() for c in orden_candidatos]
    indices_candidatos = [np.where(candidatos_ == c)[0][0] for c in orden_candidatos if c in candidatos_]
    p_gc = p_gc[:, indices_candidatos]

    df_p_gc = pd.DataFrame(p_gc.numpy(), index=grupos, columns=orden_candidatos)
    agrupaciones = {
        "18-29 H": ["18-19 H", "20-29 H"],
        "18-29 M": ["18-19 M", "20-29 M"],
        "70+ H": ["70-79 H", "80+ H"],
        "70+ M": ["70-79 M", "80+ M"]
    }
    otros = [g for g in grupos if g not in sum(agrupaciones.values(), [])]
    todos_grupos = list(agrupaciones.keys()) + otros

    df_p_gc_agrupado = pd.DataFrame(0.0, index=todos_grupos, columns=orden_candidatos)
    for nuevo, originales in agrupaciones.items():
        df_p_gc_agrupado.loc[nuevo] = df_p_gc.loc[originales].mean()
    for g in otros:
        df_p_gc_agrupado.loc[g] = df_p_gc.loc[g]

    def ordenar_grupos(grupo):
        edad = int(grupo.split('-')[0].split('+')[0])
        return (grupo.endswith("M"), edad)

    df_p_gc_agrupado = df_p_gc_agrupado.loc[sorted(df_p_gc_agrupado.index, key=ordenar_grupos)]
    df_plot = df_p_gc_agrupado.copy()
    df_plot['Genero'] = df_plot.index.to_series().str.strip().str.extract(r'([HM])$')[0].replace({'H': 'Hombres', 'M': 'Mujeres'})
    df_plot['Edad'] = df_plot.index.str.replace(r' [HM]$', '', regex=True)
    df_long = df_plot.reset_index().melt(id_vars=['Edad', 'Genero'], value_vars=orden_candidatos,
                                         var_name='Candidato', value_name='Probabilidad')
    df_long['Probabilidad'] *= 100

    df_mujeres = df_long[df_long["Genero"] == "Mujeres"].pivot(index="Edad", columns="Candidato", values="Probabilidad").fillna(0)
    df_hombres = df_long[df_long["Genero"] == "Hombres"].pivot(index="Edad", columns="Candidato", values="Probabilidad").fillna(0)

    df_mujeres = df_mujeres[orden_candidatos]
    df_hombres = df_hombres[orden_candidatos]

    edades_ordenadas = sorted(df_hombres.index, key=lambda x: int(x.split('-')[0].replace('+', '')))
    df_mujeres = df_mujeres.loc[edades_ordenadas]
    df_hombres = df_hombres.loc[edades_ordenadas]

    fig, axes = plt.subplots(1, 2, figsize=(30, 15), sharey=True)
    colores = plt.get_cmap("tab10").colors
    candidatos = df_hombres.columns.tolist()

    def formatear_valor_pct(x):
        return f"{x:,.1f}".replace(",", "X").replace(".", ",").replace("X", "")

    label_fontsize = 20
    bar_height = 0.20
    espaciado = 0.35

    for ax, df_, titulo in zip(axes, [df_hombres, df_mujeres], ["Hombres", "Mujeres"]):  # <- orden invertido
        bottom = np.zeros(len(df_))
        y_pos = np.arange(len(df_)) * espaciado
        for i, c in enumerate(candidatos):
            bars = ax.barh(y_pos, df_[c], left=bottom, color=colores[i], label=c, height=bar_height)
            for j, bar in enumerate(bars):
                val = df_[c].iloc[j]
                if val > 3:
                    x_centro = bottom[j] + val / 2
                    y_centro = y_pos[j]
                    ax.text(x_centro, y_centro, formatear_valor_pct(val),
                            va="center", ha="center", color="white", fontsize=label_fontsize)
            bottom += df_[c].values

        ax.set_title(titulo, fontsize=30)
        ax.set_xlabel("Probabilidad (%)", fontsize=30)
        ax.tick_params(axis='both', labelsize=25)

    axes[0].set_yticks(y_pos)
    axes[0].set_yticklabels(df_hombres.index)
    axes[0].invert_yaxis()
    axes[0].set_ylabel("Edad", fontsize=30)

    fig.subplots_adjust(bottom=0.25, wspace=0.1)

    nombres_con_tildes = {
        "EDUARDO ARTES": "EDUARDO ARTÉS",
        "GABRIEL BORIC": "GABRIEL BORIC",
        "MARCO ENRIQUEZ-OMINAMI": "MARCO ENRÍQUEZ-OMINAMI",
        "YASNA PROVOSTE": "YASNA PROVOSTE",
        "FRANCO ALDO PARISI": "FRANCO ALDO PARISI",
        "SEBASTIAN SICHEL": "SEBASTIÁN SICHEL",
        "JOSE ANTONIO KAST": "JOSÉ ANTONIO KAST",
        "NULO BLANCO": "NULO/BLANCO",
        "A FAVOR": "A FAVOR",
        "EN CONTRA": "EN CONTRA"
    }

    handles, raw_labels = axes[1].get_legend_handles_labels()
    labels = [nombres_con_tildes.get(lbl.upper(), lbl.title()) for lbl in raw_labels]
    fig.legend(handles, labels,
               title="Candidato" if eleccion == '2021_Presidencial' else "Opción",
               loc='lower center',
               bbox_to_anchor=(0.5, 0.08),
               ncol=4,
               fontsize=20, title_fontsize=25,
               frameon=True)

    output_folder = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}'
    os.makedirs(output_folder, exist_ok=True)
    plt.savefig(f'{output_folder}/Facet_probability_graph_candidate_{eleccion[:4]}_side_by_side.png', dpi=300, bbox_inches='tight')
    plt.close()

    return p_gc







# Funcion que calcula el impacto en las probabilidades
def analizar_cambios_probabilidades_beta(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, groups='ALL', 
                                      eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, circ=False, 
                                      dummies_circ=False, fs_etapa=1):
    """
    Analiza el impacto de modificar β_{gc} en las probabilidades de todas las combinaciones (G, C).
    """
    # list of bootstrap seeds, from 0 to 100
    bootstrap_seeds = list(range(1,101+1))
    alpha_list = []
    beta_list = []

    # Generate filename and read it
    for bootstrap_seed in bootstrap_seeds:
        if method == 'PLS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac,
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        n_pls_components=n_pls_components, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        groups=groups, 
                                        eleccion=eleccion,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin,
                                        comuna=comuna,
                                        circ=circ,
                                        dummies_circ=dummies_circ
                                        )
            
        elif method == 'FS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac, 
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        fs_etapa=fs_etapa,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin
                                        )

        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = results.get('alpha_opt', None)
        beta = results.get('beta_opt', None)
        candidatos = results.get('candidatos', None)
        grupos = results.get('grupos', None) 

        # Append the alpha and beta to the lists
        if alpha is not None:
            alpha_list.append(alpha)
        if beta is not None:
            beta_list.append(beta)

    # print(f"Candidatos: {candidatos}")
    # Quitar el ultimo candidato
    candidatos = candidatos[:-1]

    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    # Calculate the standard deviation of alpha and beta of bootstrap
    alpha_mean = np.mean(stacked_alpha, axis=0)
    alpha_std = np.std(stacked_alpha, axis=0)
    beta_mean = np.mean(stacked_beta, axis=0)
    beta_std = np.std(stacked_beta, axis=0)
    
    # Get beta
    beta = beta_mean
    # Get alpha
    alpha = alpha_mean
    # Pass both to torch
    beta = torch.tensor(beta)
    alpha = torch.tensor(alpha)
    # Get v_da
    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, v_da_torch, v_da_df, e_bd_torch, e_bd_df, candidatos_, grupos, df = get_xwve_from_election(regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion, 
                                                                                                estandarizar=False, corr_threshold = 0.8, n_pca_components=0, n_pls_components=n_pls_components, groups=groups,
                                                                                                atributos_circ=atributos_circ, distmin=distmin)

    p_dgc = fun_p_full(v_da_torch, alpha, beta)

    pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0) #CxB * BxD = CxD
    D = pob_d.shape[0]

    # Multiplicar pob_d por p_dgc (broadcasting automático en PyTorch)
    numerador = torch.sum(pob_d.view(D, 1, 1) * p_dgc, dim=0)
    # Sumar la población total
    denominador = torch.sum(pob_d)

    # Calcular la matriz final P_gc (G × C)
    p_gc = numerador / denominador
    G, C = p_gc.shape

    # Definir un pequeño cambio en beta_gc
    delta_beta = 0.01

    # Lista para almacenar los resultados de los cambios en probabilidades para todas las combinaciones (G, C)
    changes_p_list = []

    # Iterar sobre todas las combinaciones de (g, c) para modificar β_{gc}
    for g_target in range(G):
        for c_target in range(C):
            # Tensor temporal para almacenar los cambios en probabilidades
            delta_p_gc = np.zeros_like(p_gc)

            for g in range(G):
                for c in range(C):
                    if g == g_target and c == c_target:
                        delta_p_gc[g,c] = delta_beta * (p_gc[g, c] * (1 - p_gc[g, c]))
                    elif g == g_target and c != c_target:
                        delta_p_gc[g,c] = -delta_beta * (p_gc[g, c] * p_gc[g_target, c_target])

                    # Guardar resultados en lista estructurada
                    changes_p_list.append({
                        "Grupo_Target": grupos[g_target],
                        "Candidato_Target": candidatos_[c_target],
                        "Grupo_Affected": grupos[g],
                        "Candidato_Affected": candidatos_[c],
                        "Cambio_Probabilidad": delta_p_gc[g,c]
                    })

    # Convertir la lista en un DataFrame
    df_changes_p = pd.DataFrame(changes_p_list)

    # Guardar el DataFrame en un archivo excel
    df_changes_p.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Cambio_Probabilidad_{eleccion[:4]}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx', index=False)

    # Definir un pequeño cambio en p_gc
    delta_p = 0.01
    
    # Lista para almacenar los resultados de los cambios en beta para todas las combinaciones (G, C)
    changes_beta_only = []

    # Iterar sobre todas las combinaciones de (g, c) para modificar β_{gc}
    for g_target in range(G):
        for c_target in range(C):
            # Calcular cambios en beta para la combinación específica (g_target, c_target)
            delta_beta_same = np.zeros_like(p_gc)
            delta_beta_diff = np.zeros_like(p_gc)

            for g in range(G):
                for c in range(C):
                    if g == g_target and c == c_target:
                        if p_gc[g, c] * (1 - p_gc[g, c]) != 0:
                            delta_beta_same[g, c] = delta_p / (p_gc[g, c] * (1 - p_gc[g, c]))
                        else:
                            delta_beta_same[g, c] = np.nan
                    elif g == g_target and c != c_target:
                        if p_gc[g, c] * p_gc[g_target, c_target] != 0:
                            delta_beta_diff[g, c] = delta_p / (-p_gc[g, c] * p_gc[g_target, c_target])
                        else:
                            delta_beta_diff[g, c] = np.nan

                    # Guardar resultados en lista estructurada
                    changes_beta_only.append({
                        "Grupo_Target": grupos[g_target],
                        "Candidato_Target": candidatos_[c_target],
                        "Grupo_Affected": grupos[g],
                        "Candidato_Affected": candidatos_[c],
                        "Cambio_Beta_Mismo_GC": delta_beta_same[g, c],
                        "Cambio_Beta_Mismo_G_Dif_C": delta_beta_diff[g, c]
                    })

    # Convertir la lista en un DataFrame
    df_changes_beta_only = pd.DataFrame(changes_beta_only)

    # Guardar el DataFrame en un archivo excel
    df_changes_beta_only.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Cambio_Beta_{eleccion[:4]}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx', index=False)

    return None

def analizar_cambios_probabilidades_alpha(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, 
                                          groups='ALL', eleccion='2021_Presidencial', atributos_circ=False, distmin=False, comuna=False, 
                                          circ=False, dummies_circ=False, fs_etapa=1):

    # 1) Get p_dgc
    # list of bootstrap seeds, from 0 to 100
    bootstrap_seeds = list(range(1,101+1))
    alpha_list = []
    beta_list = []

    # Generate filename and read it
    for bootstrap_seed in bootstrap_seeds:
        if method == 'PLS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac,
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        n_pls_components=n_pls_components, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        groups=groups, 
                                        eleccion=eleccion,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin,
                                        comuna=comuna,
                                        circ=circ,
                                        dummies_circ=dummies_circ
                                        )
            
        elif method == 'FS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac, 
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        fs_etapa=fs_etapa,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin
                                        )

        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = results.get('alpha_opt', None)
        beta = results.get('beta_opt', None)
        candidatos = results.get('candidatos', None)
        grupos = results.get('grupos', None) 

        # Append the alpha and beta to the lists
        if alpha is not None:
            alpha_list.append(alpha)
        if beta is not None:
            beta_list.append(beta)

    # print(f"Candidatos: {candidatos}")
    # Quitar el ultimo candidato
    # candidatos = candidatos[:-1]

    stacked_alpha = np.stack(alpha_list, axis=0)
    stacked_beta = np.stack(beta_list, axis=0)

    # Calculate the standard deviation of alpha and beta of bootstrap
    alpha_mean = np.mean(stacked_alpha, axis=0)
    alpha_std = np.std(stacked_alpha, axis=0)
    beta_mean = np.mean(stacked_beta, axis=0)
    beta_std = np.std(stacked_beta, axis=0)
    
    # Get beta
    beta = beta_mean
    # 1.1) Get alpha
    alpha = alpha_mean
    # Pass both to torch
    beta_gc = torch.tensor(beta)
    alpha_cl = torch.tensor(alpha)
    # Get v_da
    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, u_dl_torch, u_dl_df, e_bd_torch, e_bd_df, candidatos_, _, _, pls_weights_df = get_xwve_from_election(regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion, 
                                                                                                                                        estandarizar=False, corr_threshold = 0.8, n_pca_components=0, n_pls_components=n_pls_components, groups=groups,
                                                                                                                                        atributos_circ=atributos_circ, distmin=distmin, return_pls_weights=True)

    p_dgc = fun_p_full(u_dl_torch, alpha_cl, beta_gc)

    pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0) #CxB * BxD = CxD -> D

    # 2) Get weights of PLS if method is PLS
    xi_al = pls_weights_df.values
    xi_al = torch.tensor(xi_al)

    # 3) Get sd of variables original [PENDIENTE]
    llave_mesa = ['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa']
    
    if eleccion == '2021_Presidencial': 
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', sheet_name='Votación en Chile', skiprows = 6)

        votes = preprocess_string_columns(votes)

        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes['Primer apellido'] = votes['Primer apellido'].fillna('') #.apply(lambda x: x.strip().replace('"',''))
        # create a column with the full name of the candidate
        votes['CANDIDATO'] = votes['Nombres'] + ' ' + votes['Primer apellido']
        votes['CANDIDATO'] = votes['CANDIDATO'].apply(lambda x: x.strip())

        # only add CANDIDATO if PRIMER APELLIDO is not empty
        votes.loc[votes['Primer apellido'] == '', 'CANDIDATO'] = votes['Nombres']
        candidatos = [c for c in votes['CANDIDATO'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        # print(candidatos)
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='CANDIDATO', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', skiprows=6, sheet_name = 'Descripción votantes en Chile')
        
        electors = preprocess_string_columns(electors)

        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')
        
        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box

        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2021_20250521.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2021.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal

        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        atributos = atributos.dropna()
        atributos = preprocess_string_columns(atributos)

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')
        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Circunscripción electoral'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Circunscripción electoral'], prefix='Circunscripcion')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Circunscripcion_ZUNIGA'])

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # Get v_da
        v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
        v_da_df = v_da_df.sort_index()
        v_da = v_da_df.values

        # Obtener desviacion estandar de las variables originales
        std_da = np.std(v_da_df, axis=0)
    
    if eleccion == '2023_Plebiscito':
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', sheet_name='Votación en Chile', skiprows = 6)
        votes = preprocess_string_columns(votes)
        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')
        votes['Opciones'] = votes['Opciones'].apply(lambda x: x.strip())
        candidatos = [c for c in votes['Opciones'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='Opciones', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', skiprows=6, sheet_name='Descripción votantes en Chile')
        electors = preprocess_string_columns(electors)
        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box
        
        # v_da
        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2023_20250523.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2023.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        atributos = atributos.dropna()
        atributos = preprocess_string_columns(atributos)

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')

        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Local'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')

        df['Local'] = df['Local'] + ' ' + df['Comuna'] + ' ' + df['Región']

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Local'], prefix='Local')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP TALCA DEL MAULE'])

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # Get v_da
        v_da_df = df[['Local'] + atributos_filtro].drop_duplicates().set_index('Local')
        v_da_df = v_da_df.sort_index()
        v_da = v_da_df.values

        # Obtener desviacion estandar de las variables originales
        std_da = np.std(v_da_df, axis=0)

    sigma_a = std_da.shape
    # pasar a torch
    sigma_a = torch.tensor(sigma_a)

    # 4) Calcular el impacto de modificar alpha
    # Crear fila de ceros con shape (1, L)
    zeros_row = torch.zeros(1, alpha_cl.shape[1])
    # Concatenar la fila de ceros a la matriz original
    alpha_cl = torch.cat((alpha_cl, zeros_row), dim=0)  # Se concatena en la dimensión 0

    # (1) Suma en k: sum_k p_{dgc} * alpha_cl
    sum_term = torch.einsum("dgc,cl->dgl", p_dgc, alpha_cl)  # Suma en C, obteniendo DxGxL

    # (2) Resta interna: (alpha_cl - sum_k p_{dgc} alpha_cl)
    parenthesis_term = alpha_cl.unsqueeze(0).unsqueeze(0) - sum_term.unsqueeze(2)  # DxGxCxL

    # (3) Multiplicación por p_dgc
    weighted_term = p_dgc.unsqueeze(-1) * parenthesis_term  # DxGxCxL

    # (4) Suma sobre l'
    sum_l_prime = torch.einsum("dgcl,al->dgca", weighted_term, xi_al)  # Suma sobre L, obteniendo DxGxCxA

    # (5) División por σ_a
    result = sum_l_prime / sigma_a.unsqueeze(0).unsqueeze(0).unsqueeze(0)  # DxGxCxA
    
    # Calcular variacion
    w_dg = torch.matmul(e_bd_torch.T, w_bg_torch)  # (D, G) ← suma de mesas B en cada distrito D

    # Expandir w_dg para broadcasting con result (D, G, C, A)
    w_dg_expanded = w_dg.unsqueeze(-1).unsqueeze(-1)  # (D, G, 1, 1)

    # Calcular el numerador (suma ponderada de derivadas)
    numerador = (w_dg_expanded * result).sum(dim=(0, 1))  # Suma sobre D y G → (C, A)

    # Calcular el denominador (total de votantes en cada distrito y grupo)
    denominador = w_dg_expanded.sum(dim=(0, 1))  # (1, 1)

    # Calcular el impacto promedio ponderado
    impacto_promedio_ponderado = (numerador / denominador) * 100  # (C, A)

    # Convertir el tensor a un numpy array
    impacto_numpy = impacto_promedio_ponderado.numpy()

    # Crear DataFrame con candidatos como filas y atributos como columnas
    df_impacto = pd.DataFrame(impacto_numpy, index=candidatos, columns=atributos_filtro).T

    # Guardar el DataFrame en un archivo excel
    df_impacto.to_excel(f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/Impacto_Alpha_{eleccion[:4]}_comuna{"T" if comuna else "F"}_circ{"T" if circ else "F"}_dummies{"T" if dummies_circ else "F"}.xlsx', index=True)

    return None

def analizar_cambios_probabilidades_alpha_bootstrap(method="PLS", train_frac=0.8, split_distritos=False, n_pls_components=10, seed_train=42, 
                                                    groups='ALL', eleccion='2021_Presidencial', atributos_circ=False, distmin=False, 
                                                    comuna=False, circ=False, dummies_circ=False, fs_etapa=1):

    # Get v_da
    if eleccion == '2021_Presidencial' and not atributos_circ:
        atributos_filtro = atributos_filtro_2021
    elif eleccion == '2021_Presidencial' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2021_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2021_dummies

    elif eleccion == '2023_Plebiscito' and not atributos_circ:
        atributos_filtro = atributos_filtro_2023
    elif eleccion == '2023_Plebiscito' and atributos_circ:
        if comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ_dummies
        elif comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_circ
        elif comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna_dummies
        elif not comuna and circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ_dummies
        elif comuna and not circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_comuna
        elif not comuna and circ and not dummies_circ:
            atributos_filtro = atributos_filtro_2023_circ
        elif not comuna and not circ and dummies_circ:
            atributos_filtro = atributos_filtro_2023_dummies

    x_bc_torch, w_bg_torch, u_dl_torch, u_dl_df, e_bd_torch, e_bd_df, candidatos_, _, _, pls_weights_df = get_xwve_from_election(regiones_filtro=[], atributos_filtro=atributos_filtro, built_df=False, eleccion=eleccion, 
                                                                                                                            estandarizar=False, corr_threshold = 0.8, n_pca_components=0, n_pls_components=n_pls_components, groups=groups,
                                                                                                                            atributos_circ=atributos_circ, distmin=distmin, return_pls_weights=True)

    # pob_d = torch.mm(x_bc_torch.T, e_bd_torch).sum(axis=0) #CxB * BxD = CxD -> D
    xi_al = pls_weights_df.values
    xi_al = torch.tensor(xi_al)

    # Calcular variacion
    w_dg = torch.matmul(e_bd_torch.T, w_bg_torch)  # (D, G) ← suma de mesas B en cada distrito D
    # Expandir w_dg para broadcasting con result (D, G, C, A)
    w_dg_expanded = w_dg.unsqueeze(-1).unsqueeze(-1)  # (D, G, 1, 1)
    # Calcular el denominador (total de votantes en cada distrito y grupo)
    denominador = w_dg_expanded.sum(dim=(0, 1))  # (1, 1)
    llave_mesa = ['Región', 'Comuna', 'Circunscripción electoral', 'Local', 'Mesa']
    
    if eleccion == '2021_Presidencial': 
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', sheet_name='Votación en Chile', skiprows = 6)

        votes = preprocess_string_columns(votes)

        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes['Primer apellido'] = votes['Primer apellido'].fillna('') #.apply(lambda x: x.strip().replace('"',''))
        # create a column with the full name of the candidate
        votes['CANDIDATO'] = votes['Nombres'] + ' ' + votes['Primer apellido']
        votes['CANDIDATO'] = votes['CANDIDATO'].apply(lambda x: x.strip())

        # only add CANDIDATO if PRIMER APELLIDO is not empty
        votes.loc[votes['Primer apellido'] == '', 'CANDIDATO'] = votes['Nombres']
        candidatos = [c for c in votes['CANDIDATO'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        # print(candidatos)
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='CANDIDATO', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2021_11_Presidencial_1V_Datos_Eleccion.xlsx', skiprows=6, sheet_name = 'Descripción votantes en Chile')
        
        electors = preprocess_string_columns(electors)

        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')
        
        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box

        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2021_20250521.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2021.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal

        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        atributos = atributos.dropna()
        atributos = preprocess_string_columns(atributos)

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')
        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Circunscripción electoral'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Circunscripción electoral'], prefix='Circunscripcion')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Circunscripcion_ZUNIGA'])

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # Get v_da
        v_da_df = df[['Circunscripción electoral'] + atributos_filtro].drop_duplicates().set_index('Circunscripción electoral')
        v_da_df = v_da_df.sort_index()
        v_da = v_da_df.values

        # Obtener desviacion estandar de las variables originales
        sigma_a = np.std(v_da_df, axis=0)
    
    if eleccion == '2023_Plebiscito':
        votes = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', sheet_name='Votación en Chile', skiprows = 6)
        votes = preprocess_string_columns(votes)
        votes['Comuna'] = votes['Comuna'].replace('CALERA', 'LA CALERA')
        votes['Comuna'] = votes['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        votes['Comuna'] = votes['Comuna'].replace('TREHUACO', 'TREGUACO')
        votes['Comuna'] = votes['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')
        votes['Opciones'] = votes['Opciones'].apply(lambda x: x.strip())
        candidatos = [c for c in votes['Opciones'].unique() if c not in ['VOTOS NULOS', 'VOTOS EN BLANCO']] + ['NULO BLANCO']
        
        # PIVOT
        votes = votes.pivot(index=llave_mesa, columns='Opciones', values='Votos').reset_index()
        votes['NULO BLANCO'] = votes['VOTOS NULOS'] + votes['VOTOS EN BLANCO'] # unir votos nulos y votos en blanco
        votes = votes.drop(columns=['VOTOS NULOS', 'VOTOS EN BLANCO'])
        
        # w_bg
        electors = pd.read_excel(f'{COD_FOLDER}Datos/2023_PlebiscitoConstitucional_DatosPlebiscito.xlsx', skiprows=6, sheet_name='Descripción votantes en Chile')
        electors = preprocess_string_columns(electors)
        electors['Comuna'] = electors['Comuna'].replace('CALERA', 'LA CALERA')
        electors['Comuna'] = electors['Comuna'].replace('CABO DE HORNOS(EX-NAVARINO)', 'CABO DE HORNOS')
        electors['Comuna'] = electors['Comuna'].replace('TREHUACO', 'TREGUACO')
        electors['Comuna'] = electors['Comuna'].replace('MARCHIGUE', 'MARCHIHUE')

        votes2 = electors.groupby(llave_mesa)['Votantes'].sum().reset_index()
        votes = pd.merge(votes, votes2, on=llave_mesa, how='inner')
        votes['DESCUADRE'] = votes['Votantes'] - votes[candidatos].sum(axis=1)
        votes = votes.drop(columns=['Votantes'])

        electors = electors[~((electors['Rango etario'] == '') & (electors['Votantes'] == 0))]
        electors['GRUPO'] = electors['Rango etario'] + ' ' + electors['Sexo'].str[0] # full name of groups
        electors = electors[~electors['GRUPO'].isna()] # remove rows with nan in column GRUPO
        grupos_ = list(np.sort(electors['GRUPO'].unique())) # order groups: first sex then age
        grupos = [g for g in grupos_ if 'H' in g] + [g for g in grupos_ if 'M' in g] 
        electors = electors.groupby(llave_mesa + ['GRUPO']).sum().reset_index() # group by GROUPS, there may be repeated rows (NACIONALIDAD)
        electors = electors.pivot(index = llave_mesa, columns = 'GRUPO', values='Votantes').reset_index() # long to wide
        electors = electors.reindex(llave_mesa + grupos, axis='columns') # reindex with key 
        electors[grupos] =  electors[grupos].fillna(0).astype(int) # fill na for groups who didnt vote in that ballot box
        
        # v_da
        if atributos_circ:
            if distmin:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distmin_2023_20250523.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
            else:
                atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df_distprom_2023.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        else:
            atributos = pd.read_excel(f'{COD_FOLDER}Datos/merged_df.xlsx', sheet_name = 'Sheet1') #datos a nivel comunal
        # Drop Comuna ANTARTICA
        atributos = atributos[atributos['Comuna'] != 'ANTARTICA']
        atributos = atributos.dropna()
        atributos = preprocess_string_columns(atributos)

        # merge dataframes votes, electors and atributos
        df = pd.merge(votes, electors, on=llave_mesa, how='inner')

        if atributos_circ:
            df = pd.merge(df, atributos, on=['Comuna', 'Local'], how='inner')
        else:
            df = pd.merge(df, atributos, on=['Comuna'], how='inner')

        df['Local'] = df['Local'] + ' ' + df['Comuna'] + ' ' + df['Región']

        # Step 1: Create Dummy Variables
        df_dummies = pd.get_dummies(df['Región'], prefix='Region')
        df_dummies_2 = pd.get_dummies(df['Local'], prefix='Local')

        # Convert True/False to 1/0
        df_dummies = df_dummies.astype(int)
        df_dummies_2 = df_dummies_2.astype(int)

        # Step 2: Drop one dummy variable to avoid multicollinearity
        df_dummies = df_dummies.drop(columns=['Region_DE NUBLE'])
        df_dummies_2 = df_dummies_2.drop(columns=['Local_UNIVERSIDAD TECNOLOGICA DE CHILE INACAP TALCA DEL MAULE'])

        # Combine the original DataFrame with the standardized dummy variables
        df = pd.concat([df, df_dummies], axis=1)
        df = pd.concat([df, df_dummies_2], axis=1)

        # Get v_da
        v_da_df = df[['Local'] + atributos_filtro].drop_duplicates().set_index('Local')
        v_da_df = v_da_df.sort_index()
        v_da = v_da_df.values

        # Obtener desviacion estandar de las variables originales
        sigma_a = np.std(v_da_df, axis=0)

    # Show range of variables for each variable of 100 first variables
    # print("Rango de variables:")
    # for i, attr in enumerate(atributos_filtro[:100]):
    #     print(f"{attr}: {np.min(v_da_df.iloc[:, i]):.2f} - {np.max(v_da_df.iloc[:, i]):.2f}")
    # exit()

    sigma_a = torch.tensor(sigma_a)

    # === Definir escalas por atributo SOLO PARA INTERPRETACIÓN ===
    escalas_a = []
    for attr in atributos_filtro:
        if attr.endswith("_Porcentaje"):
            escala = 100.0
        elif attr in [
            "tipohogar_Unipersonal", "tipohogar_Nuclear Monoparental", "tipohogar_Nuclear Biparental",
            "tipohogar_Extenso Monoparental", "tipohogar_Extenso Biparental",
            "pobreza_Pobres no extremos", "pobreza_No pobres", "v13_Propia",
            "ecivil_En Pareja", "o31_Sí", "activ_Ocupados", "activ_Desocupados", "activ_Inactivos",
            "s28_Sano", "sist_salud_Privado", "r1b_En [comuna de ubicación la vivienda]",
            "educ_Universidad", "Frac_Inmigrantes", "Frac_Pueblos", "Frac_Viv_Ocupada",
            "Frac_Viv_Particular", "Frac_Viv_Colectiva", "Frac_Casa", "Frac_Depa",
            "Frac_Pared_Horm", "Frac_Techo_Bueno", "Frac_Techo_Medio", "Frac_Piso_Bueno",
            "Frac_Mat_Aceptable", "Frac_Agua_Aceptable", "Densidad_Poblacion", "zona_Urbano"
        ]:
            escala = 100.0
        elif attr in ["tot_per", "v27", "esc2"]:
            escala = 1.0
        elif attr == "ytotcor":
            escala = 1 / 100000.0
        elif attr in ["prom_lect8b_com", "prom_mate8b_com", "prom_soc8b_com"]:
            escala = 1 / 10.0
        else:
            escala = 1.0
        escalas_a.append(escala)

    escalas_a = np.array(escalas_a)  # para usar en NumPy

    # 1) Get p_dgc
    # list of bootstrap seeds, from 0 to 100
    bootstrap_seeds = list(range(1,101+1))
    impacto_list = []
    numerador_list = []  # NUEVO

    # Generate filename and read it
    for bootstrap_seed in bootstrap_seeds:
        if method == 'PLS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac,
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        n_pls_components=n_pls_components, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        groups=groups, 
                                        eleccion=eleccion,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin,
                                        comuna=comuna,
                                        circ=circ,
                                        dummies_circ=dummies_circ
                                        )
            
        elif method == 'FS':
            filename = generate_filename(method=method, 
                                        train_frac=train_frac, 
                                        K_folds=1,
                                        k_fold=1,
                                        split_distritos=split_distritos, 
                                        seed_train=seed_train, 
                                        bootstrap_seed=bootstrap_seed,
                                        fs_etapa=fs_etapa,
                                        atributos_circ=atributos_circ,
                                        distmin=distmin
                                        )

        file_path = f'{filename}.pkl'
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        f.close()

        # Get the alpha and beta
        alpha = results.get('alpha_opt', None)
        beta = results.get('beta_opt', None)
        candidatos = results.get('candidatos', None)
        grupos = results.get('grupos', None) 

        # Convert alpha and beta to torch tensors
        alpha_cl = torch.tensor(alpha)
        beta_gc = torch.tensor(beta)

        p_dgc = fun_p_full(u_dl_torch, alpha_cl, beta_gc)

        # Crear fila de ceros con shape (1, L)
        zeros_row = torch.zeros(1, alpha_cl.shape[1])
        # Concatenar la fila de ceros a la matriz original
        alpha_cl = torch.cat((alpha_cl, zeros_row), dim=0)  # Se concatena en la dimensión 0

        # (1) Suma en k: sum_k p_{dgc} * alpha_cl
        sum_term = torch.einsum("dgc,cl->dgl", p_dgc, alpha_cl)  # Suma en C, obteniendo DxGxL

        # (2) Resta interna: (alpha_cl - sum_k p_{dgc} alpha_cl)
        parenthesis_term = alpha_cl.unsqueeze(0).unsqueeze(0) - sum_term.unsqueeze(2)  # DxGxCxL

        # (3) Multiplicación por p_dgc
        weighted_term = p_dgc.unsqueeze(-1) * parenthesis_term  # DxGxCxL

        # (4) Suma sobre l'
        sum_l_prime = torch.einsum("dgcl,al->dgca", weighted_term, xi_al)  # Suma sobre L, obteniendo DxGxCxA

        # (5) División por σ_a
        result = sum_l_prime / sigma_a.unsqueeze(0).unsqueeze(0).unsqueeze(0)  # DxGxCxA
    
        # Calcular el numerador (suma ponderada de derivadas)
        numerador = (w_dg_expanded * result).sum(dim=(0, 1))  # Suma sobre D y G → (C, A)

        # Calcular el impacto promedio ponderado
        impacto_promedio_ponderado = (numerador / denominador) * 100  # (C, A)

        impacto_list.append(impacto_promedio_ponderado.numpy())
        numerador_list.append(numerador.numpy())  # NUEVO

    # Convertir la lista de impactos a un array
    impacto_array = np.stack(impacto_list, axis=0)
    numerador_array = np.stack(numerador_list, axis=0)  # NUEVO
    impacto_mean = np.mean(impacto_array, axis=0)
    impacto_std = np.std(impacto_array, axis=0)
    numerador_mean = np.mean(numerador_array, axis=0)  # NUEVO
    
    # Calcular p-valores usando la distribución normal
    p_values = 2 * (1 - norm.cdf(np.abs(impacto_mean / impacto_std)))
    
    # Escalamiento para interpretación
    impacto_mean_scaled = impacto_mean / escalas_a
    impacto_std_scaled = impacto_std / escalas_a

    # Crear DataFrames
    df_mean = pd.DataFrame(impacto_mean, index=candidatos, columns=atributos_filtro).T
    df_std = pd.DataFrame(impacto_std, index=candidatos, columns=atributos_filtro).T
    df_pval = pd.DataFrame(p_values, index=candidatos, columns=atributos_filtro).T
    df_numerador = pd.DataFrame(numerador_mean, index=candidatos, columns=atributos_filtro).T  # NUEVO

    df_mean_scaled = pd.DataFrame(impacto_mean_scaled, index=candidatos, columns=atributos_filtro).T
    df_std_scaled = pd.DataFrame(impacto_std_scaled, index=candidatos, columns=atributos_filtro).T

    df_mean_scaled.index.name = "Impacto medio por unidad interpretable"
    df_pval.index.name = "p-valor"

    # Guardar los resultados
    output_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/'
    os.makedirs(output_path, exist_ok=True)
    output_filename = f'{output_path}/Impacto_Alpha_Resumen.xlsx'

    with pd.ExcelWriter(output_filename) as writer:
        df_mean.to_excel(writer, sheet_name="Impacto_Mean")
        df_std.to_excel(writer, sheet_name="Impacto_Std")
        df_pval.to_excel(writer, sheet_name="Impacto_Pval")
        df_mean_scaled.to_excel(writer, sheet_name=f"Impacto_Mean_escaled")
        df_std_scaled.to_excel(writer, sheet_name=f"Impacto_Std_escaled")
        df_numerador.to_excel(writer, sheet_name="Delta_Votos_Totales")  # NUEVO

        # Página con explicación
        pd.DataFrame({
            "Descripción": [
                f"Los valores en 'Impacto_Mean_escaled' indican el cambio esperado en número de votos por cada unidad en la variable explicativa",
                "Los p-valores indican si ese impacto es estadísticamente significativo.",
                "Los valores se basan en 100 bootstraps del modelo.",
                "La hoja 'Delta_Votos_Totales' muestra el numerador antes de dividir por el total de votantes, es decir, el cambio total esperado en número de votos."
            ]
        }).to_excel(writer, sheet_name="Interpretación", index=False)

    return None

import matplotlib.lines as mlines

def plot_impacto_alpha_resumen(method="PLS", eleccion="2021_Presidencial", groups="ALL",
                                atributos_circ=False, distmin=False, COD_FOLDER="",
                                candidatos=None, variables_mostrar=None, p_valor_umbral=0.05,
                                guardar_figura=True, nombre_archivo="impacto_alpha.png",
                                renombrar_variables=None, nombre_eje_y="Variable explicativa"):
    """
    Genera un gráfico con bandas de error y significancia para múltiples candidatos.
    """

    if not candidatos:
        raise ValueError("Debes pasar al menos un candidato en `candidatos`.")

    # ---------- Parámetro interno: espaciado vertical ----------
    espaciado_y = 0.1  # Puedes probar con 0.4 si quieres aún más compacto

    # ---------- Leer Excel ----------
    output_path = (
        f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/'
        f'{str(groups) + "_circ" if atributos_circ else str(groups)}/'
        f'{"distmin" if distmin else "distprom"}/'
    )
    df_mean = pd.read_excel(f'{output_path}/Impacto_Alpha_Resumen.xlsx',
                            sheet_name="Impacto_Mean_escaled", index_col=0)
    df_std = pd.read_excel(f'{output_path}/Impacto_Alpha_Resumen.xlsx',
                            sheet_name="Impacto_Std_escaled", index_col=0)
    df_pval = pd.read_excel(f'{output_path}/Impacto_Alpha_Resumen.xlsx',
                            sheet_name="Impacto_Pval", index_col=0)

    # ---------- Filtrado y orden ----------
    if variables_mostrar is None:
        variables_mostrar = df_mean.index.to_list()

    orden_ideologico = [
        "EDUARDO ARTES BRICHETTI_Porcentaje",
        "ALEJANDRO NAVARRO BRAIN_Porcentaje",
        "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
        "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
        "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
        "CAROLINA GOIC BOROEVIC_Porcentaje",
        "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
        "JOSE ANTONIO KAST RIST_Porcentaje"
    ]

    variables_mostrar = ([v for v in orden_ideologico if v in variables_mostrar] +
                         [v for v in variables_mostrar if v not in orden_ideologico])

    df_mean = df_mean.loc[variables_mostrar]
    df_std = df_std.loc[variables_mostrar]
    df_pval = df_pval.loc[variables_mostrar]

    variables = df_mean.index.to_list()
    y_base = np.arange(len(variables))
    y_pos = y_base * espaciado_y

    # ---------- Figura ----------
    fig_height = max(6, len(variables) * 0.2 * espaciado_y)
    fig, ax = plt.subplots(figsize=(10, 5))

    cmap = cm.get_cmap("tab10")
    legend_elements = []
    gap = 0.0

    nombres_con_tildes = {
        "EDUARDO ARTES": "EDUARDO ARTÉS",
        "GABRIEL BORIC": "GABRIEL BORIC",
        "MARCO ENRIQUEZ-OMINAMI": "MARCO ENRÍQUEZ-OMINAMI",
        "YASNA PROVOSTE": "YASNA PROVOSTE",
        "FRANCO ALDO PARISI": "FRANCO ALDO PARISI",
        "SEBASTIAN SICHEL": "SEBASTIÁN SICHEL",
        "JOSE ANTONIO KAST": "JOSÉ ANTONIO KAST",
        "NULO BLANCO": "NULO/BLANCO",
        "A FAVOR": "A FAVOR",
        "EN CONTRA": "EN CONTRA"
    }

    for idx, candidato in enumerate(candidatos):
        color = cmap(idx)
        y_offsets = y_pos + gap * (idx - (len(candidatos) - 1) / 2)

        for y, mean, std, pval in zip(y_offsets, df_mean[candidato], df_std[candidato], df_pval[candidato]):
            is_sig = pval <= p_valor_umbral
            ax.hlines(y, mean - 1.96 * std, mean + 1.96 * std,
                      colors=color, linestyles="solid" if is_sig else "dotted", zorder=1)
            ax.scatter(mean, y, facecolors=color if is_sig else "white",
                       edgecolors=color, marker="o", zorder=2)
            # ax.set_ylim(-espaciado_y, y_pos[-1] + espaciado_y)

        legend_elements.extend([
            mlines.Line2D([], [], color=color, marker='o', linestyle='solid', markersize=8,
                          label=f'{nombres_con_tildes.get(candidato.upper(), candidato)} - Significativo', 
                          markerfacecolor=color),
            mlines.Line2D([], [], color=color, marker='o', linestyle='dotted', markersize=8,
                          label=f'{nombres_con_tildes.get(candidato.upper(), candidato)} - No significativo', 
                          markerfacecolor='white')
        ])

    ax.axvline(x=0, color="gray", linestyle="--")

    # ---------- Etiquetas del eje Y ----------
    if renombrar_variables:
        etiquetas = [renombrar_variables.get(var, var) for var in variables]
    else:
        etiquetas = [var.split()[0].split('_')[0].upper() for var in variables]

    ax.set_yticks(y_pos)
    ax.set_yticklabels(etiquetas)
    ax.set_xlabel("Impacto esperado en % de votos")
    ax.set_ylabel(nombre_eje_y)
    formato_latino = mtick.FuncFormatter(lambda x, pos: f"{x:,.1f}".replace(",", "X").replace(".", ",").replace("X", "."))
    ax.xaxis.set_major_formatter(formato_latino)
    ax.grid(False)
    ax.legend(handles=legend_elements, loc="center left", bbox_to_anchor=(1.02, 0.5))

    plt.tight_layout()

    if guardar_figura:
        os.makedirs(output_path, exist_ok=True)
        ruta_salida = os.path.join(output_path, nombre_archivo)
        plt.savefig(ruta_salida, dpi=300, bbox_inches="tight")
        print(f"Figura guardada en: {ruta_salida}")

    plt.show()


def plot_impacto_alpha_resumen_old_v2(method="PLS", eleccion="2021_Presidencial", groups="ALL",
                                atributos_circ=False, distmin=False, COD_FOLDER="", 
                                candidatos=None, variables_mostrar=None, p_valor_umbral=0.05,
                                guardar_figura=True, nombre_archivo="impacto_alpha.png",
                                renombrar_variables=None):
    """
    Genera un gráfico con bandas de error y significancia para múltiples candidatos.
    
    Parámetros:
    - candidatos: lista con los nombres de los candidatos a graficar (columnas del Excel).
    - variables_mostrar: lista con los nombres de variables explicativas (filas) a mostrar.
    - renombrar_variables: diccionario opcional para mostrar nombres personalizados en el eje Y.
    """

    if candidatos is None or len(candidatos) == 0:
        raise ValueError("Debes especificar al menos un candidato en el parámetro `candidatos`.")

    # --- Leer Excel ---
    output_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/'
    output_filename = f'{output_path}/Impacto_Alpha_Resumen.xlsx'

    df_mean = pd.read_excel(output_filename, sheet_name="Impacto_Mean_escaled", index_col=0)
    df_std = pd.read_excel(output_filename, sheet_name="Impacto_Std_escaled", index_col=0)
    df_pval = pd.read_excel(output_filename, sheet_name="Impacto_Pval", index_col=0)

    # Filtrar variables si corresponde
    if variables_mostrar is not None:
        df_mean = df_mean.loc[variables_mostrar]
        df_std = df_std.loc[variables_mostrar]
        df_pval = df_pval.loc[variables_mostrar]

    # Variables y posiciones
    variables = df_mean.index.to_list()
    y_pos = np.arange(len(variables))

    # Colores para cada candidato
    cmap = cm.get_cmap("tab10")
    colores = [cmap(i) for i in range(len(candidatos))]
    gap = 0.15  # desplazamiento vertical entre series

    # Crear figura
    fig, ax = plt.subplots(figsize=(10, max(6, len(variables) * 0.4)))

    legend_elements = []

    for idx, candidato in enumerate(candidatos):
        color = colores[idx]
        y_offsets = y_pos + gap * (idx - (len(candidatos) - 1) / 2)

        for y, mean, std, pval in zip(y_offsets, df_mean[candidato], df_std[candidato], df_pval[candidato]):
            is_sig = pval <= p_valor_umbral
            ax.hlines(y, mean - 1.96*std, mean + 1.96*std, colors=color, linestyles="solid" if is_sig else "dotted", zorder=1)
            ax.scatter(mean, y, facecolors=color if is_sig else "white", edgecolors=color, marker="o", zorder=2)

        # Agregar a la leyenda
        legend_elements.extend([
            mlines.Line2D([], [], color=color, marker='o', linestyle='solid', markersize=8,
                          label=f'{candidato} - Significativo', markerfacecolor=color),
            mlines.Line2D([], [], color=color, marker='o', linestyle='dotted', markersize=8,
                          label=f'{candidato} - No significativo', markerfacecolor='white')
        ])

    # Línea vertical de referencia
    ax.axvline(x=0, color="gray", linestyle="--")

    # Etiquetas de eje Y renombradas si corresponde
    if renombrar_variables:
        etiquetas = [renombrar_variables.get(var, var) for var in variables]
    else:
        etiquetas = variables

    ax.set_yticks(y_pos)
    ax.set_yticklabels(etiquetas)
    ax.set_xlabel("Impacto esperado en % de votos")
    ax.set_ylabel("Variable explicativa")
    ax.set_title("Impacto de variables en votos esperados por candidato")
    ax.grid(False)
    ax.legend(handles=legend_elements, loc="center left", bbox_to_anchor=(1.02, 0.5))

    plt.tight_layout()

    if guardar_figura:
        os.makedirs(output_path, exist_ok=True)
        ruta_salida = os.path.join(output_path, nombre_archivo)
        plt.savefig(ruta_salida, dpi=300, bbox_inches="tight")
        print(f"Figura guardada en: {ruta_salida}")

    plt.show()

def plot_impacto_alpha_resumen_old(method="PLS", eleccion="2021_Presidencial", groups="ALL",
                                atributos_circ=False, distmin=False, COD_FOLDER="", 
                                candidatos=None, variables_mostrar=None, p_valor_umbral=0.05,
                                guardar_figura=True, nombre_archivo="impacto_alpha.png",
                                renombrar_variables=None):
    import os
    import matplotlib.pyplot as plt
    import matplotlib.cm as cm
    import matplotlib.lines as mlines
    import numpy as np
    import pandas as pd

    if candidatos is None or len(candidatos) == 0:
        raise ValueError("Debes especificar al menos un candidato en el parámetro `candidatos`.")

    # --- Leer Excel ---
    output_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/'
    output_filename = f'{output_path}/Impacto_Alpha_Resumen.xlsx'

    df_mean = pd.read_excel(output_filename, sheet_name="Impacto_Mean_escaled", index_col=0)
    df_std = pd.read_excel(output_filename, sheet_name="Impacto_Std_escaled", index_col=0)
    df_pval = pd.read_excel(output_filename, sheet_name="Impacto_Pval", index_col=0)

    if variables_mostrar is not None:
        df_mean = df_mean.loc[variables_mostrar]
        df_std = df_std.loc[variables_mostrar]
        df_pval = df_pval.loc[variables_mostrar]

    variables = df_mean.index.to_list()
    y_pos = np.arange(len(variables))

    cmap = cm.get_cmap("tab10")
    colores = [cmap(i) for i in range(len(candidatos))]
    gap = 0 # 0.15

    fig, ax = plt.subplots(figsize=(10, max(6, len(variables) * 0.4)))
    legend_elements = []

    for idx, candidato in enumerate(candidatos):
        color = colores[idx]
        y_offsets = y_pos + gap * (idx - (len(candidatos) - 1) / 2)

        for y, mean, std, pval in zip(y_offsets, df_mean[candidato], df_std[candidato], df_pval[candidato]):
            is_sig = pval <= p_valor_umbral
            xmin = mean - 2 * std
            xmax = mean + 2 * std
            linestyle = "solid" if is_sig else "dotted"

            # Línea horizontal: intervalo de impacto
            ax.hlines(y, xmin, xmax, colors=color, linestyles=linestyle, zorder=1)
            # Línea vertical: posición del impacto puntual
            ax.vlines(mean, y - 0.07, y + 0.07, colors=color, linestyles=linestyle, zorder=2)

        legend_elements.extend([
            mlines.Line2D([], [], color=color, linestyle='solid', label=f'{candidato} - Significativo'),
            mlines.Line2D([], [], color=color, linestyle='dotted', label=f'{candidato} - No significativo')
        ])

    ax.axvline(x=0, color="gray", linestyle="--")

    if renombrar_variables:
        etiquetas = [renombrar_variables.get(var, var) for var in variables]
    else:
        etiquetas = variables

    ax.set_yticks(y_pos)
    ax.set_yticklabels(etiquetas)
    ax.set_xlabel("Impacto esperado en % de votos")
    ax.set_ylabel("Variable explicativa")
    ax.set_title("Impacto de variables en votos esperados por candidato")
    ax.grid(False)
    ax.legend(handles=legend_elements, loc="center left", bbox_to_anchor=(1.02, 0.5))

    plt.tight_layout()

    if guardar_figura:
        os.makedirs(output_path, exist_ok=True)
        ruta_salida = os.path.join(output_path, nombre_archivo)
        plt.savefig(ruta_salida, dpi=300, bbox_inches="tight")
        print(f"Figura guardada en: {ruta_salida}")

    plt.show()

def generar_tablas_latex_impacto_positivos_significativos(method="PLS", eleccion="2021_Presidencial", groups="ALL",
                                                           atributos_circ=False, distmin=False, COD_FOLDER="",
                                                           candidatos=None, p_valor_umbral=0.1, top_k=10,
                                                           variables_incluir=None, renombrar_variables=None):
    def obtener_significancia(pval):
        if pval < 0.01:
            return r"{$^{***\hspace{0.5cm}}$}"
        elif pval < 0.05:
            return r"{$^{**\hspace{0.5cm}}$}"
        elif pval < 0.1:
            return r"{$^{*\hspace{0.5cm}}$}"
        else:
            return ""

    def escape_latex(text):
        return (text.replace('\\', r'\textbackslash{}')
                .replace('%', r'\%')
                .replace('_', r'\_')
                .replace('&', r'\&')
                .replace('#', r'\#')
                .replace('{', r'\{')
                .replace('}', r'\}'))

    def formatear_valor_latino(x):
        return f"{x:,.3f}".replace(",", "X").replace(".", ",").replace("X", ".")

    if candidatos is None or len(candidatos) == 0:
        raise ValueError("Debes especificar al menos un candidato.")

    # --- Leer Excel ---
    output_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/{str(groups) + "_circ" if atributos_circ else str(groups)}/{"distmin" if distmin else "distprom"}/'
    output_filename = f'{output_path}/Impacto_Alpha_Resumen.xlsx'

    df_mean = pd.read_excel(output_filename, sheet_name="Impacto_Mean_escaled", index_col=0)
    df_pval = pd.read_excel(output_filename, sheet_name="Impacto_Pval", index_col=0)

    # Filtrar por variables permitidas
    if variables_incluir is not None:
        df_mean = df_mean.loc[df_mean.index.intersection(variables_incluir)]
        df_pval = df_pval.loc[df_mean.index]

    for candidato in candidatos:
        mean_c = df_mean[candidato]
        pval_c = df_pval[candidato]

        # Filtrar significativas y positivas
        mask = (pval_c <= p_valor_umbral) & (mean_c > 0)
        mean_c = mean_c[mask]
        pval_c = pval_c[mask]

        # Ordenar por mayor impacto positivo
        orden = mean_c.sort_values(ascending=False).index
        mean_c = mean_c.loc[orden].head(top_k)
        pval_c = pval_c.loc[orden].head(top_k)

        # Imprimir tabla LaTeX
        print(r"\begin{table}[H]")
        print(r"\centering")
        print(r"\begin{tabular}{ll}")
        print(r"\toprule")
        print(r"Variable & Impacto \\")
        print(r"\midrule")

        for var in mean_c.index:
            nombre_variable = renombrar_variables.get(var, var) if renombrar_variables else var
            nombre_variable = escape_latex(nombre_variable)
            val = mean_c[var]
            sig = obtener_significancia(pval_c[var])
            print(f"{nombre_variable} & {formatear_valor_latino(val)}{sig} \\\\")

        print(r"\bottomrule")
        print(r"\end{tabular}")
        print(f"\\caption{{Variables más favorables y significativas para {candidato.title()}.}}")
        label = f"impacto_alpha_pos_{candidato.lower().replace(' ', '_')}"
        print(f"\\label{{tab:{label}}}")
        print(r"\vspace{0.5em}")
        print(r"\begin{flushleft}")
        print(r"\footnotesize Nota: $^{{*}} p<0{.}1$; $^{{**}} p<0{.}05$; $^{{***}} p<0{.}01$")
        print(r"\end{flushleft}")
        print(r"\end{table}")
        print("\n")

def generar_heatmap_impacto_alpha(method="PLS", eleccion="2021_Presidencial", groups="ALL",
                                                 atributos_circ=False, distmin=False, COD_FOLDER="",
                                                 variables_incluir=None, renombrar_variables=None,
                                                 cmap="coolwarm", guardar_figura=True, nombre_archivo="impacto_alpha_heatmap.png"):

    import os
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    import numpy as np
    from PIL import Image

    def obtener_significancia(pval):
        if pval < 0.01:
            return "***"
        elif pval < 0.05:
            return "**"
        elif pval < 0.1:
            return "*"
        else:
            return ""

    def escape_latex(text):
        return (text.replace('\\', r'\textbackslash{}')
                    .replace('%', r'\%')
                    .replace('_', r'\_')
                    .replace('&', r'\&')
                    .replace('#', r'\#')
                    .replace('{', r'\{')
                    .replace('}', r'\}'))

    # === Leer Excel ===
    output_path = f'{COD_FOLDER}Outputs/{method}_kfold_{eleccion[:4]}/' \
                  f'{str(groups) + "_circ" if atributos_circ else str(groups)}/' \
                  f'{"distmin" if distmin else "distprom"}/'
    df_mean = pd.read_excel(f'{output_path}/Impacto_Alpha_Resumen.xlsx', sheet_name="Impacto_Mean_escaled", index_col=0)
    df_pval = pd.read_excel(f'{output_path}/Impacto_Alpha_Resumen.xlsx', sheet_name="Impacto_Pval", index_col=0)

    # Filtrar variables si corresponde
    if variables_incluir is not None:
        df_mean = df_mean.loc[df_mean.index.intersection(variables_incluir)]
        df_pval = df_pval.loc[df_mean.index]

    candidatos = df_mean.columns.tolist()

    # Renombrar candidatos con tildes
    renombrar_candidatos = {
        "EDUARDO ARTES": "EDUARDO ARTÉS",
        "FRANCO ALDO PARISI": "FRANCO ALDO PARISI",  # ya está correcto
        "GABRIEL BORIC": "GABRIEL BORIC",
        "JOSE ANTONIO KAST": "JOSÉ ANTONIO KAST",
        "MARCO ENRIQUEZ-OMINAMI": "MARCO ENRÍQUEZ-OMINAMI",
        "SEBASTIAN SICHEL": "SEBASTIÁN SICHEL",
        "YASNA PROVOSTE": "YASNA PROVOSTE",
        "NULO BLANCO": "NULO / BLANCO"
    }

    df_mean = df_mean.rename(columns=renombrar_candidatos)
    df_pval = df_pval.rename(columns=renombrar_candidatos)
    candidatos = df_mean.columns.tolist()

    # === Renombrar variables (filas del heatmap)
    if renombrar_variables:
        df_mean = df_mean.rename(index=renombrar_variables)
        df_pval = df_pval.rename(index=renombrar_variables)

    # === HEATMAP ===
    altura = len(df_mean) * 0.6 + 3
    ancho = len(candidatos) * 1.6 + 4
    fig, ax = plt.subplots(figsize=(ancho, altura))

    anotaciones = df_mean.copy().astype(str)
    for i in range(df_mean.shape[0]):
        for j in range(df_mean.shape[1]):
            val = df_mean.iloc[i, j]
            pval = df_pval.iloc[i, j]
            sig = obtener_significancia(pval)
            anotaciones.iloc[i, j] = f"{val:.2f}".replace('.', ',') + sig

    sns.heatmap(
        df_mean.astype(float),
        annot=anotaciones,
        fmt="",
        cmap=cmap,
        center=0,
        ax=ax,
        linewidths=0.3,
        # linecolor='gray',
        annot_kws={"fontsize": 15},
        cbar_kws={'label': 'Impacto Alpha'},
        # xticklabels=True,
        # yticklabels=True,
        # square=False  # importante para permitir ajuste vertical
        )
    cbar = ax.collections[0].colorbar
    cbar.ax.yaxis.set_major_formatter(FuncFormatter(lambda x, _: str(round(x, 2)).replace('.', ',')))
    ax.set_aspect("auto")  # fuerza que las celdas no sean cuadradas, sino que se ajusten al espacio
    # Etiquetas más grandes
    ax.tick_params(axis='x', labelsize=10)  # Candidatos
    ax.tick_params(axis='y', labelsize=11)  # Variables
    ax.set_title("Impacto Alpha por Variable y Candidato", fontsize=16)
    plt.xticks(rotation=90)
    plt.yticks(rotation=0)
    plt.tight_layout()

    if guardar_figura:
        os.makedirs(output_path, exist_ok=True)
        
        nombre, extension = os.path.splitext(nombre_archivo)
        año = eleccion[:4]
        nombre_con_año = f"{nombre}_{año}{extension}"
        
        ruta_figura = os.path.join(output_path, nombre_con_año)
        plt.savefig(ruta_figura, dpi=300, bbox_inches="tight")
        print(f"Figura guardada en: {ruta_figura}")

        # División automática de imagen si es muy alta
        imagen = Image.open(ruta_figura)
        ancho_img, alto_img = imagen.size
        if alto_img > 1500:
            mitad = alto_img // 2
            imagen1 = imagen.crop((0, 0, ancho_img, mitad))
            imagen2 = imagen.crop((0, mitad, ancho_img, alto_img))

            ruta_figura_1 = os.path.join(output_path, f"{nombre}_{año}_parte1{extension}")
            ruta_figura_2 = os.path.join(output_path, f"{nombre}_{año}_parte2{extension}")
            imagen1.save(ruta_figura_1)
            imagen2.save(ruta_figura_2)

            print(f"Figura dividida en partes guardadas en: {ruta_figura_1} y {ruta_figura_2}")

    plt.show()

    return None













# Funcion que grafica el likelihood test vs. Ridge lambda beta y lambda alpha
def graph_loss_ridge():
    # Buscar todos los archivos que comienzan con el prefijo especificado
    cod_folder = COD_FOLDER
    files = [f for f in os.listdir(os.path.join(cod_folder, 'Outputs/Ridge/')) if f.startswith('Ridge_') and f.endswith('.pkl')]


    # Listas para almacenar los valores de lambda_beta, lambda_alpha y likelihood_test
    lambda_beta_list = []
    lambda_alpha_list = []
    likelihood_test_list = []


    # Leer cada archivo y extraer los valores necesarios
    for file in files:
        file_path = os.path.join(cod_folder, 'Outputs/Ridge', file)
        
        with open(file_path, 'rb') as f:
            results = pickle.load(f)
        
        # Extraer lambda_beta, lambda_alpha y likelihood_test del diccionario
        lambda_beta = results.get('lambda_beta', None)
        lambda_alpha = results.get('lambda_alpha', None)
        likelihood_test = results.get('likelihood_test', None)
        
        if lambda_beta is not None and lambda_alpha is not None and likelihood_test is not None:
            lambda_beta_list.append(lambda_beta)
            lambda_alpha_list.append(lambda_alpha)
            likelihood_test_list.append(likelihood_test)


    # Crear el gráfico
    fig = plt.figure(figsize=(10, 6))
    ax = fig.add_subplot(111, projection='3d')
    ax.scatter(lambda_beta_list, lambda_alpha_list, likelihood_test_list, c='r', marker='o')
    ax.set_xlabel('lambda_beta')
    ax.set_ylabel('lambda_alpha')
    ax.set_zlabel('likelihood_test')
    plt.title('Likelihood Test vs. Ridge Lambda Beta and Lambda Alpha')
    plt.show()

# Función que calcula la esperanza de la cantidad de votos
def votes_2021(built=False, built_df=False, estandarizar=False):
    # Get the probabilities of the first round of the 2021 election
    # regiones_filtro = ['METROPOLITANA DE SANTIAGO']
    regiones_filtro = []
    # atributos_filtro = ["SEBASTIAN PIÑERA ECHENIQUE_Porcentaje", "ALEJANDRO GUILLIER ALVAREZ_Porcentaje", 
    #                     "BEATRIZ SANCHEZ MUÑOZ_Porcentaje", "prom_mate8b_com"]
    # atributos_filtro = ['Principal_Component_1', 'Principal_Component_2', 'Principal_Component_3', 'Principal_Component_4', 
    #                     'Principal_Component_5', 'Principal_Component_6', 'Principal_Component_7', 'Principal_Component_8', 
    #                     'Principal_Component_9']
    atributos_filtro = ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 
                        'ALEJANDRO NAVARRO BRAIN_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje', 'CAROLINA GOIC BOROEVIC_Porcentaje', 
                        'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje', 
                        'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje', 'tot_hog', 'edad', 'numper', 
                        'n_ocupados', 'n_inactivos', 'ysub2h', 'ysubh', 'yoautcorh', 'v27', 'zona_Rural', 'sexo_Mujer', 'ecivil_En Pareja', 
                        'ecivil_Soltero', 'men18c_Si', 'may60c_Si', 'tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 
                        'tipohogar_Nuclear Biparental', 'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental', 'tipohogar_Censal', 
                        'o31_No', 'o31_No sabe', 'activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos', 'pobreza_Pobres extremos', 
                        'pobreza_No pobres', 's28_Sano', 'sist_salud_Privado', 'r1b_En otra comuna de Chile. Especifique ¿cuál comuna?', 
                        'r2_Aún no nacía', 'r2_En otra comuna de Chile. Especifique ¿cuál comuna?', 'r2_No sabe', 'inmigrante_Inmigrante', 
                        'inmigrante_No sabe', 'etnia_Pertenece a pueblos indígenas', 'v1_No Casa', 'v13_No Legal', 'v20_No Red', 'v23_No', 
                        'prom_soc8b_com', 'Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA', 
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE', 
                        'Region_METROPOLITANA DE SANTIAGO']
    x_bc, w_bg, v_da, e_bd, e_bd_df = get_xwve_from_election(regiones_filtro = regiones_filtro, 
                                                    atributos_filtro = atributos_filtro, 
                                                    built_df = built_df,
                                                    estandarizar = estandarizar,
                                                    pca_= True)
    
    if built:
        beta, alpha = run_P2021_EM(max_iterations=1000)


    else:
        alpha_2021 = pd.read_csv(f'{COD_FOLDER}Datos/Resultados_torch/alpha_torch.csv')
        beta_2021 = pd.read_csv(f'{COD_FOLDER}Datos/Resultados_torch/beta_torch.csv')


        alpha = alpha_2021.values
        beta = beta_2021.values


    alpha = torch.tensor(alpha, dtype=torch.float64)
    beta = torch.tensor(beta, dtype=torch.float64)


    p_2021 = fun_p_full(v_da, alpha, beta).numpy()  # DxGxC
    p_2021_reshape = p_2021.reshape(p_2021.shape[0]*p_2021.shape[1], p_2021.shape[2])


    aux = pd.read_csv(f'{COD_FOLDER}Datos/df_votes_electors_attributes.csv')
    if len(regiones_filtro) > 0:
        aux = aux[aux['Región'].isin(regiones_filtro)]
    else:
        pass


    candidatos = aux.iloc[:, 5:13].columns
    grupos = aux.iloc[:, 13:29].columns
    distrito = aux['Comuna'].unique()


    # Votos simulados
    probabilidades_EM = pd.DataFrame(p_2021_reshape, columns=candidatos)
    # Create a MultiIndex for rows to reflect D and G
    index = pd.MultiIndex.from_product([distrito, grupos], names=['Distrito', 'Grupo'])
    probabilidades_EM.index = index


    dg_columns = ['Comuna'] + [col for col in grupos if col in aux.columns]
    dg = aux[dg_columns]
    dg_grouped = dg.groupby('Comuna', as_index=True).sum()


    # Multiply with the probabilities of the first round of the 2021 election
    dg_grouped_values = dg_grouped.values
    dg_grouped_values = dg_grouped_values.reshape(dg_grouped_values.shape[0]*dg_grouped_values.shape[1], 1)
    expected_value_em = probabilidades_EM.mul(dg_grouped_values, axis=0).round()
    expected_value_em = expected_value_em.groupby(level='Distrito').sum()
    # Save as excel
    expected_value_em.to_excel(f'{COD_FOLDER}Datos/Resultados_torch/votos_simulados_torch.xlsx')
    expected_value_em_perc = expected_value_em.div(expected_value_em.sum(axis=1), axis=0) * 100


    # Votos reales
    dc_columns = ['Comuna'] + [col for col in candidatos if col in aux.columns]
    dc = aux[dc_columns]
    votos_reales = dc.groupby('Comuna', as_index=True).sum()
    # Save as excel
    votos_reales.to_excel(f'{COD_FOLDER}Datos/Resultados_torch/votos_reales_torch.xlsx')
    votos_reales_perc = votos_reales.div(votos_reales.sum(axis=1), axis=0) * 100


    # Difference between the expected value and the real value
    difference = votos_reales_perc - expected_value_em_perc
    difference_abs = difference.abs()
    # votos_comuna = votos_reales.sum(axis=1)
    # difference_perc = (difference_abs.div(votos_comuna, axis=0)) * 100
    # difference_perc = (difference_abs / votos_reales) * 100
    difference_abs.max().max()
    print(difference_abs)
    return None

def test_train_EM(built_df=False, estandarizar=False, pca_=True, max_iterations=100, graph=False, lambda_beta=0.5, lambda_alpha=0.5, save=False):
    regiones_filtro = []
    atributos_filtro = ['ALEJANDRO GUILLIER ALVAREZ_Porcentaje', 'BEATRIZ SANCHEZ MUÑOZ_Porcentaje', 
                        'CAROLINA GOIC BOROEVIC_Porcentaje', 'EDUARDO ARTES BRICHETTI_Porcentaje', 'JOSE ANTONIO KAST RIST_Porcentaje', 
                        'MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje', 'SEBASTIAN PIÑERA ECHENIQUE_Porcentaje', 'tot_hog', 'edad', 'numper', 
                        'n_ocupados', 'n_inactivos', 'ysub2h', 'ysubh', 'yoautcorh', 'v27', 'zona_Rural', 'sexo_Mujer', 'ecivil_En Pareja', 
                        'ecivil_Soltero', 'men18c_Si', 'may60c_Si', 'tipohogar_Unipersonal', 'tipohogar_Nuclear Monoparental', 
                        'tipohogar_Nuclear Biparental', 'tipohogar_Extenso Monoparental', 'tipohogar_Extenso Biparental', 'tipohogar_Censal', 
                        'o31_No', 'o31_No sabe', 'activ_Ocupados', 'activ_Desocupados', 'activ_Inactivos', 'pobreza_Pobres extremos', 
                        'pobreza_No pobres', 's28_Sano', 'sist_salud_Privado', 'r1b_En otra comuna de Chile. Especifique ¿cuál comuna?', 
                        'r2_Aún no nacía', 'r2_En otra comuna de Chile. Especifique ¿cuál comuna?', 'r2_No sabe', 'inmigrante_Inmigrante', 
                        'inmigrante_No sabe', 'etnia_Pertenece a pueblos indígenas', 'v1_No Casa', 'v13_No Legal', 'v20_No Red', 'v23_No', 
                        'prom_soc8b_com', 'Region_DE ANTOFAGASTA', 'Region_DE ARICA Y PARINACOTA', 'Region_DE ATACAMA', 
                        'Region_DE AYSEN DEL GENERAL CARLOS IBANEZ DEL CAMPO', 'Region_DE COQUIMBO', 'Region_DE LA ARAUCANIA', 
                        'Region_DE LOS LAGOS', 'Region_DE LOS RIOS', 'Region_DE MAGALLANES Y DE LA ANTARTICA CHILENA', 'Region_DE TARAPACA', 
                        'Region_DE VALPARAISO', 'Region_DEL BIOBIO', "Region_DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS", 'Region_DEL MAULE', 
                        'Region_METROPOLITANA DE SANTIAGO']
    len(atributos_filtro)
    
    x_bc, w_bg, v_da, e_bd, e_bd_df = get_xwve_from_election(regiones_filtro = regiones_filtro, 
                                                    atributos_filtro = atributos_filtro, 
                                                    built_df = built_df, 
                                                    estandarizar = estandarizar,
                                                    pca_ = pca_)
    
    # Split the data into training and testing sets
    x_bc_train, x_bc_test = train_test_split(x_bc, test_size=0.2, random_state=42)
    w_bg_train, w_bg_test = train_test_split(w_bg, test_size=0.2, random_state=42)
    e_bd_train, e_bd_test = train_test_split(e_bd, test_size=0.2, random_state=42)
    
    start_time = time.time()  # Start timer for sim_election
    beta_opt, alpha_opt = EM_algorithm(x_bc_train, w_bg_train, v_da, e_bd_train, 
                                    max_iterations=max_iterations, tolerance_ab=1e-3, seed=42, graph=graph,
                                    lambda_beta = lambda_beta, lambda_alpha = lambda_alpha)
    
    EM_time = time.time() - start_time  # End timer for sim_election
    print(f"tiempo de EM_algorithm: {EM_time:.2f} segundos")


    if save:
        # Save alpha and beta to CSV files
        alpha_df = pd.DataFrame(alpha_opt)
        beta_df = pd.DataFrame(beta_opt)


        alpha_df.to_csv(f'{COD_FOLDER}Datos/Resultados_torch/alpha_torch_train.csv', index=False)
        beta_df.to_csv(f'{COD_FOLDER}Datos/Resultados_torch/beta_torch_train.csv', index=False)


    else:
        pass


    alpha_opt = torch.tensor(alpha_opt, dtype=torch.float64)
    beta_opt = torch.tensor(beta_opt, dtype=torch.float64)


    likelihood_train, _ = compute_ll(x_bc_train, w_bg_train, v_da, e_bd_train, beta_opt, alpha_opt, verbose=True)
    likelihood_test, _ = compute_ll(x_bc_test, w_bg_test, v_da, e_bd_test, beta_opt, alpha_opt, verbose=True)
    
    return likelihood_test

def lambda_grid_search():
    # Grid search for lambda_alpha and lambda_beta between 0 and 1, with 0.1 of space between values
    lambdas_beta = np.linspace(0, 1, 11)
    lambdas_alpha = np.linspace(0, 1, 11)


    # lambdas_beta = [0.5]
    # lambdas_alpha = [0.5]


    # Time it
    start_time = time.time()
    
    #Dictionary to store the results
    results = {}


    for lambda_beta in lambdas_beta:
        for lambda_alpha in lambdas_alpha:
            print(f"lambda_beta = {lambda_beta}, lambda_alpha = {lambda_alpha}")
            likelihood = test_train_EM(max_iterations=1000, lambda_beta=lambda_beta, lambda_alpha=lambda_alpha)
            likelihood = np.array(likelihood)
            results[(lambda_beta, lambda_alpha)] = likelihood


    # Save the results to a excel file
    results_df = pd.DataFrame(list(results.items()), columns=['lambda', 'likelihood'])
    results_df.to_csv(f'{COD_FOLDER}Datos/Resultados_torch/lambda_grid_search.csv', index=False)


    # Show time
    print(f"Tiempo de búsqueda de lambda: {(time.time() - start_time) / 60:.2f} minutos")


    return results

def show_lambda_grid_search():
    # Leer lambda_grid_search
    results_df = pd.read_csv(f'{COD_FOLDER}Datos/Resultados_torch/lambda_grid_search.csv')
    # Sort the results by likelihood (mayor a menor)
    results_df = results_df.sort_values(by='likelihood', ascending=False)
    print(results_df)

# función que construye la tabla de resultados de bootstrap
def table_results():
    # Leer los resultados de bootstrap
    beta_mean = pd.read_csv(f"{COD_FOLDER}Datos/Resultados_torch/beta_mean_torch.csv")
    beta_std = pd.read_csv(f"{COD_FOLDER}Datos/Resultados_torch/beta_std_torch.csv")
    alpha_mean = pd.read_csv(f"{COD_FOLDER}Datos/Resultados_torch/alpha_mean_torch.csv")
    alpha_std = pd.read_csv(f"{COD_FOLDER}Datos/Resultados_torch/alpha_std_torch.csv")


    # Añadir una columna con 0 para beta
    beta_mean["Nulo/Blanco"] = 0
    beta_std["Nulo/Blanco"] = 0


    #Añadir una fila con 0 para alpha
    alpha_mean.loc[8] = 0
    alpha_std.loc[8] = 0


    # Crear una lista con los nombres de los candidatos
    Candidates = ["Artés", "Parisi", "Boric", "Kast", "MEO", "Sichel", "Provoste", "Nulo/Blanco"]
    Grupos = ['18-19 H', '20-29 H', '30-39 H', '40-49 H', '50-59 H', '60-69 H', '70-79 H', '80+ H',  
              '18-19 M', '20-29 M', '30-39 M', '40-49 M', '50-59 M', '60-69 M', '70-79 M', '80+ M']
    Atributes = ["Pct. Piñera 1V-2017", 'Pct. Guillier 1V-2017', 'Pct. SANCHEZ 1V-2017',"Ptje. SIMCE Mat. 8vo 2019"]


    # Renombrar columnas y filas
    beta_mean.columns = Candidates
    beta_std.columns = Candidates
    beta_mean.index = Grupos
    beta_std.index = Grupos
    alpha_mean.columns = Atributes
    alpha_std.columns = Atributes
    alpha_mean.index = Candidates
    alpha_std.index = Candidates


    # Aplanar los DataFrames en una columna y luego concatenarlos en una sola tabla para beta y para alpha
    beta_mean_flat = beta_mean.stack().reset_index()
    beta_std_flat = beta_std.stack().reset_index()
    alpha_mean_flat = alpha_mean.stack().reset_index()
    alpha_std_flat = alpha_std.stack().reset_index()


    beta_table = pd.merge(beta_mean_flat, beta_std_flat, on=["level_0", "level_1"])
    alpha_table = pd.merge(alpha_mean_flat, alpha_std_flat, on=["level_0", "level_1"])


    # Renombrar columnas
    beta_table.columns = ["Grupo", "Candidato", "Media", "Desviación Estándar"]
    alpha_table.columns = ["Candidato", "Atributo", "Media", "Desviación Estándar"]


    #Guardar las tablas en archivos excel
    beta_table.to_excel(f"{COD_FOLDER}Datos/Resultados_torch/beta_table_torch.xlsx", index=False)
    alpha_table.to_excel(f"{COD_FOLDER}Datos/Resultados_torch/alpha_table_torch.xlsx", index=False)


    # Mostrar las tablas
    print("Beta")
    print(beta_table)
    print("\n\n\n")
    print("Alpha")
    print(alpha_table)


    return None

# funcion que transforma el input numérico de entrada a los valores de los lambda
def argv2lambdas(index_lambdas):
    # create a linspace array givingthe inital and final number and the number of elements
    n_lambda_alpha = 10
    n_lambda_beta = 3
    lambda_alpha_arr = np.linspace(0.1, 1.0, n_lambda_alpha)
    lambda_beta_arr  = np.linspace(0.1, 1.0, n_lambda_beta)
    lambda_alpha = lambda_alpha_arr[int(index_lambdas/n_lambda_beta)]
    lambda_beta = lambda_beta_arr[int(index_lambdas%n_lambda_beta)]
    return lambda_alpha, lambda_beta

# función que prueba la función aegv2lambdas
def test_arg2lambdas():
    for i in range(30):
        lambda_alpha, lambda_beta = argv2lambdas(i)
        print(f"lambda_alpha = {lambda_alpha}, lambda_beta = {lambda_beta}")
    return 0


if __name__ == "__main__":
    # max_iterations=10000; save=True; built_df=False; estandarizar=False; pca_=True; split_distritos=True
    # test_EM(I = 100, D = 10, B = 100, G = 2, C = 2, A = 3, lambda_ = 0.5, 
    #         seed_ab_real = 1, seed_init = None,
    #         max_iterations=1000000, save=False, multinomial=True)
    # Distintos alpha y beta conocidos, partiendo del mismo punto inicial
    # batch_test_EM(  
    #             I_list = [100],
    #             D_list = [10, 25, 50],
    #             B_list = [100],
    #             G_list = [2, 5, 10],
    #             C_list = [2, 4, 8],
    #             A_list = [3, 6, 9],
    #             lambda_list = [0.5],
    #             seed_ab_real_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
    #             seed_init_list = [None],
    #             max_iterations = 1000000,
    #             save = True,
    #             multinomial= True,
    #             )
    # Mismo alpha y beta conocidos, partiendo de distintos puntos iniciales
    # batch_test_EM(  
    #             I_list = [100],
    #             D_list = [10, 25, 50],
    #             B_list = [100],
    #             G_list = [2, 5, 10],
    #             C_list = [2, 4, 8],
    #             A_list = [3, 6, 9],
    #             lambda_list = [0.5],
    #             seed_ab_real_list = [None],
    #             seed_init_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
    #             max_iterations = 1000000,
    #             save = True,
    #             multinomial= True,
    #             )
    
    # build_latex_time_table(
    #                     I_list = [100],
    #                     D_list = [10, 25, 50],
    #                     B_list = [100],
    #                     G_list = [2, 5, 10],
    #                     C_list = [2, 4, 8],
    #                     A_list = [3, 6, 9],
    #                     lambda_list = [0.5],
    #                     seed_ab_real_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
    #                     seed_init_list=[None],
    #                     COD_FOLDER=COD_FOLDER, 
    #                     folder='Outputs/Sim_Election',
    #                     multinomial=True,
    #                     )
    # build_latex_time_table(
    #                     I_list = [100],
    #                     D_list = [10, 25, 50],
    #                     B_list = [100],
    #                     G_list = [2, 5, 10],
    #                     C_list = [2, 4, 8],
    #                     A_list = [3, 6, 9],
    #                     lambda_list = [0.5],
    #                     seed_ab_real_list = [None],
    #                     seed_init_list=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
    #                     COD_FOLDER=COD_FOLDER, 
    #                     folder='Outputs/Sim_Election',
    #                     multinomial=True,
    #                     )
    
    # build_latex_mae_tables_probs(
    #                     I_list=[100], 
    #                     D_list=[10, 25, 50], 
    #                     B_list=[100], 
    #                     G_list=[2, 5, 10], 
    #                     C_list=[2, 4, 8], 
    #                     A_list=[3, 6, 9],
    #                     lambda_list=[0.5], 
    #                     seed_ab_real_list=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 
    #                     seed_init_list=[None], 
    #                     multinomial=True,
    #                     COD_FOLDER="", 
    #                     folder='Outputs/Sim_Election'
    #                     )

    build_latex_distances_between_seeds(
                    I_list=[100], 
                    D_list=[10, 25, 50],
                    B_list=[100], 
                    G_list=[2, 5, 10], 
                    C_list=[2, 4, 8], 
                    A_list=[3, 6, 9],
                    lambda_list=[0.5], 
                    seed_ab_real_list=[0], 
                    seed_init_list=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 
                    multinomial=True,
                    COD_FOLDER="", 
                    folder='Outputs/Sim_Election'
                )

    # 2021_Presidencial
    # 2023_Plebiscito

    renombres = {
        'votos_2017': "Votos 1ra vuelta 2017", 
        'cant_personas': "Cantidad de personas",
        'cond_actividad': "Condición de actividad",
        'dormitorio': "Número de dormitorios",
        'zona': "Urbanidad",
        'tipohogar': "Tipo de hogar",
        'pobreza': "Nivel de pobreza",
        'situacion_vivienda': "Vivienda propia",
        'años_escolaridad': "Años de escolaridad",
        'ecivil': "Estado civil",
        'sist_previsional': "Sistema previsional",
        'salud': "Estado de salud",
        'sist_salud': "Sistema de salud",
        'comuna_madre': "Movilidad",
        'dinero': "Ingresos",
        'nivel_escolaridad': "Nivel de escolaridad",
        'SIMCE': "SIMCE",
        'Frac_Inmigrantes': "Fracción de inmigrantes",
        'Frac_Pueblos': "Fracción de pueblos indígenas",
        'Vivienda_Ocupada': "Vivienda ocupada",
        'Vivienda_Part_Colect': "Viviendas particulares o colectivas",
        'Casa_Depa': "Casa o departamento",
        'Frac_Pared': "Estado de la pared",
        'Frac_Techo': "Estado del techo",
        'Frac_Piso_Bueno': "Estado del piso",
        'Frac_Mat_Aceptable': "Estado de los materiales de construcción",
        'Frac_Agua_Aceptable': "Estado del agua",
        'Densidad_Poblacion': "Densidad de población",
        'regiones': "Regiones"
    }

    # run_P2021_EM_args() # corre el EM con los argumentos dados en la consola
    # run_P2021_EM_args_bootstrap()
    
    # plot_likelihood_pca(save_plots = True, K_folds=4)
    # plot_avg_likelihood_pca(save_plots=True, K_folds=4)
    # plot_likelihood_pls(save_plots = True, K_folds=4)
    # plot_avg_likelihood_pls(n_pls_min=1, n_pls_max=100, train_frac=0.8, split_distritos=True, groups='ALL', eleccion='2021_Presidencial', 
    #                        K_folds=4, atributos_circ=True, distmin=True, save_plots=True, comuna=True, circ=False, dummies_circ=True)
    # combinaciones = [
    # (True, True, True),
    # (True, True, False),
    # (True, False, True),
    # (False, True, True),
    # (True, False, False),
    # (False, True, False),
    # (False, False, True),
    #                 ]

    # latex_code = get_best_pls_latex_table(combinaciones=combinaciones, n_pls_max=100, train_frac=0.8, 
    #                                       split_distritos=True, groups="ALL", eleccion="2021_Presidencial", 
    #                                       K_folds=4, atributos_circ=True, distmin=True)
    # print(latex_code)
    # plot_likelihood_ridge_1(save_plots = True)
    # plot_likelihood_ridge_23(save_plots = True)
    # plot_avg_likelihood_fs(etapas=29, K_folds=4, atributos_circ=True, eleccion='2021_Presidencial', groups='ALL', distmin=True, comuna=True, 
    #                        circ=True, dummies_circ=True, save_plots=True)
    # plot_avg_likelihood_pls_2023(save_plots=True, K_folds=4, groups='ALL')

    # df_resultado = evaluar_aporte_paquetes(
    #                                     carpeta_base=COD_FOLDER,
    #                                     method = "FSRAND", #"FSLOO", "FSRAND"
    #                                     eleccion = "2023_Plebiscito", # 2021_Presidencial, 2023_Plebiscito
    #                                     grupos = "ALL",
    #                                     atributos_circ = True,
    #                                     distmin = True,
    #                                     comuna = True,
    #                                     circ = True,
    #                                     dummies_circ = True,
    #                                     train_frac = 0.8,
    #                                     K_folds = 4,
    #                                     seeds = list(range(1,100+1)),
    #                                     )
    # plot_ll_comparacion_doble(df_resultado, titulo="Impacto de variables en log-verosimilitud",
    #                             guardar=True, nombre_archivo="barras_ll_paquetes_2023_FSRAND.png",
    #                             COD_FOLDER=COD_FOLDER, method="FSRAND",
    #                             eleccion="2023_Plebiscito", distmin=True,
    #                             renombrar_variables = renombres, top_n=100)

    # get_val_test_avg(method='FS', n_pls_components=None, fs_etapa=28, fs_atributo=27)

    # contar_criterio_parada(pca_ = True, ridge_1 = False)
    # generar_tablas_por_razon_parada(razones_parada, base_filename='tabla_ordenada')
    # get_max_likelihood(pca_ = True, ridge_1 = False)
    # get_max_likelihood_sorted(pca_ = False, ridge_1 = False)
    # compare_likelihoods(pca_ = True, ridge_1 = False, train=True)
    # excel_ridge23()
    # best_pca()
    # count_stopping_criterion(method="PCA", train_frac=1, split_distritos=True, n_pca_components=3, 
    #                          seed_train=0)

    # df_alpha_prob, df_beta_prob, df_alpha_mean, df_beta_mean = mean_std_alpha_beta(method='PLS', train_frac=0.8, split_distritos=True, 
    #                                                                                n_pls_components=17, fs_etapa=None, fs_atributo=None, 
    #                                                                                seed_train=0, groups='ALL', eleccion='2023_Plebiscito', 
    #                                                                                atributos_circ=True, distmin=True, comuna=True,
    #                                                                                circ=True, dummies_circ=True)
    
    # print(f"DataFrame de alpha probabilidad: \n{df_alpha_prob}")
    # print(f"DataFrame de alpha media: \n{df_alpha_mean}")
    
    # plot_alpha_heatmaps(
    # df_alpha_mean, df_alpha_prob,
    # method="PLS", eleccion="2023_Plebiscito", groups="ALL",
    # atributos_circ=True, distmin=True,
    # COD_FOLDER=COD_FOLDER)

    # tabla_alpha_valores = generar_tabla_latex_valores(df_alpha_mean,
    #                                                   df_alpha_prob,
    #                                                   "Valores promedio de $\\alpha$. Elección 2021 v2.",
    #                                                   "tab:alpha_mean_2021",
    #                                                   eleccion='2021_Presidencial')
    # print(f"Tabla de valores medios de alpha generada: \n{tabla_alpha_valores}")

    # tabla_alpha_pval = generar_tabla_latex_pvalores(df_alpha_prob,
    #                                                 "P-valores de $\\alpha$. Elección 2023 v2.",
    #                                                 "tab:alpha_pval_2023",
    #                                                 eleccion='2023_Plebiscito')
    # print(f"Tabla de p-valores de alpha generada: \n{tabla_alpha_pval}")

    # tabla_beta_valores = generar_tabla_latex_valores(df_beta_mean,
    #                                                  df_beta_prob,
    #                                                  "Valores promedio de $\\beta$. Elección 2023 v2.", 
    #                                                  "tab:beta_mean_2023",
    #                                                  eleccion='2023_Plebiscito')
    # print(f"Tabla de valores medios de beta generada: \n{tabla_beta_valores}")

    # tabla_beta_pval = generar_tabla_latex_pvalores(df_beta_prob, 
    #                                                "P-valores de $\\beta$. Elección 2023 v2.", 
    #                                                "tab:beta_pval_2023",
    #                                                eleccion='2023_Plebiscito')
    # print(f"Tabla de p-valores de beta generada: \n{tabla_beta_pval}")

    # count_stopping_criterion_fs(train_frac=0.8, split_distritos=True, seed_train=0, etapa=19)
    # best_ll_test_fs(etapas=30, K_folds=4)
    # excel_fs(etapas=29, K_folds=4, eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, comuna=True, circ=True, dummies_circ=True)
    # plot_fs_waterfall_etapas(
    #     etapas=29,
    #     K_folds=4,
    #     eleccion="2023_Plebiscito",
    #     distmin=True,
    #     COD_FOLDER=COD_FOLDER,
    #     titulo="Importancia de las etapas de selección de características",
    #     guardar_figura=True,
    #     nombre_archivo="fs_waterfall_ll_2023.png",
    #     dpi=300,
    #     renombrar_variables=renombres
    # )

    # # highest_likelihood_file_by_stage(etapas=19)
    # alpha_beta2csv()
    # count_stopping_criterion_pca(train_frac=0.8, split_distritos=True, seed_train=0)
    # p_values_mesas(method='PLS', train_frac=1.0, split_distritos=True, seed_train=0, n_pls_components=17, groups='ALL', 
    #               eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, comuna=True, circ=True, dummies_circ=True)
    # corr_vda_xbc(eleccion='2021_Presidencial', n_pca_components=0, n_pls_components=18, method='PLS')
    # heatmap_all_locals_p_values(method='PLS', threshold=1e-6, eleccion='2021_Presidencial', groups='ALL', atributos_circ=True, distmin=True, 
    #                          comuna=True, circ=False, dummies_circ=True)
    # estadisticas_p_values(method='PLS', eleccion='2023_Plebiscito', groups='ALL', atributos_circ=True, distmin=True,
    #                       comuna=True, circ=True, dummies_circ=True)
    # get_val_test_avg(method='PLS', train_frac=0.8, K_folds=4, split_distritos=True, n_pls_components=12, seed_train=0, 
    #                  fs_etapa=None, fs_atributo=None, groups='GENDER', eleccion='2023_Plebiscito')
    # plot_pvalues_scatter(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=True, distmin=True, 
    #                      comuna=True, circ=False, dummies_circ=True)
    # weird_ballet_box_df(method='PLS', eleccion='2023_Plebiscito', groups='ALL', atributos_circ=True, distmin=True, 
    #                     comuna=True, circ=True, dummies_circ=True, threshold=1e-6)

    # real_and_expected_results(method='PLS', eleccion='2023_Plebiscito', groups='ALL', atributos_circ=True, distmin=True, 
    #                           comuna=True, circ=True, dummies_circ=True)
    # plot_piramide_poblacional(method='PLS',
    #                            eleccion='2021_Presidencial',
    #                            groups='ALL',
    #                            atributos_circ=True,
    #                            distmin=True,
    #                            comuna=True,
    #                            circ=False,
    #                            dummies_circ=True,
    #                            COD_FOLDER=COD_FOLDER,
    #                            nombre_archivo='piramide_poblacional_2021.png',
    #                            guardar=True)
    # generar_tabla_latex_resultados_pais(method='PLS', eleccion='2023_Plebiscito', groups='ALL', atributos_circ=True,
    #                                     distmin=True, comuna=True, circ=True, dummies_circ=True, cod_folder=COD_FOLDER)

    # umbral = 1e-6
    # resumen_comuna = analizar_pvalores_excel(
    #                                         method = "PLS",
    #                                         eleccion = "2023_Plebiscito",
    #                                         groups = "ALL",
    #                                         atributos_circ = True,
    #                                         distmin = True,
    #                                         comuna = True,
    #                                         circ = True,
    #                                         dummies_circ = True,
    #                                         COD_FOLDER = COD_FOLDER,
    #                                         umbral = umbral,
    #                                         nivel = "local",  # 'local' o 'comuna'
    #                                         )

    # tabla1, tabla2 = generar_tablas_latex_pvalores(resumen_comuna, caption_base="Elección 2023 v2.", label_base="pval_comunas_2023", 
    #                                                umbral=umbral, top_n=10)
    # print(tabla1)
    # print(tabla2)
    
    # plot_dispersion(method='PLS', eleccion='2023_Plebiscito', groups='ALL', atributos_circ=True, 
    #                 distmin=True, comuna=True, circ=True, dummies_circ=True, vmin=-3)
    # plot_dispersion_side_by_side(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=True, 
    #                             distmin=True, comuna_opts=[True, False], circ_opts=[False, True], dummies_circ_opts=[True, False])
    # plot_pvalue_comparison(method='PLS', eleccion='2021_Presidencial', groups='ALL', atributos_circ=True, 
    #                        distmin=True, comuna_opts=[True, True], circ_opts=[False, True], 
    #                        dummies_circ_opts=[True, False])

    # graph_probability_group_candidate(method="PLS", train_frac=0.8, split_distritos=True, n_pls_components=17, seed_train=0, groups='ALL', 
    #                                   eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, comuna=True, circ=True, 
    #                                   dummies_circ=True, fs_etapa=1)
    # graph_probability_group_candidate_side_by_side(method="PLS", train_frac=0.8, split_distritos=True, n_pls_components=17, seed_train=0, 
    #                                                groups='ALL', eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, 
    #                                                comuna=True, circ=True, dummies_circ=True, fs_etapa=1, COD_FOLDER=COD_FOLDER)
    # analizar_cambios_probabilidades_beta(method="PLS", train_frac=0.8, split_distritos=True, n_pls_components=21, seed_train=0, groups='ALL', 
    #                                   eleccion='2021_Presidencial', atributos_circ=True, distmin=True, comuna=True, circ=False, 
    #                                   dummies_circ=True, fs_etapa=1)
    # analizar_cambios_probabilidades_alpha(method="PLS", train_frac=0.8, split_distritos=True, n_pls_components=17, seed_train=0, 
    #                                       groups='ALL', eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, comuna=True, 
    #                                       circ=True, dummies_circ=True, fs_etapa=1)

    # analizar_cambios_probabilidades_alpha_bootstrap(method="PLS", train_frac=0.8, split_distritos=True, n_pls_components=17, seed_train=0, 
    #                                       groups='ALL', eleccion='2023_Plebiscito', atributos_circ=True, distmin=True, comuna=True, 
    #                                       circ=True, dummies_circ=True, fs_etapa=1)
    
    renombres1 = {
    # "ALEJANDRO GUILLIER ALVAREZ_Porcentaje": "% Votos Alejandro Guillier 2017",
    # "ALEJANDRO NAVARRO BRAIN_Porcentaje": "% Votos Alejandro Navarro 2017",
    # "BEATRIZ SANCHEZ MUÑOZ_Porcentaje": "% Votos Beatriz Sánchez 2017",
    # "CAROLINA GOIC BOROEVIC_Porcentaje": "% Votos Carolina Goic 2017",
    # "EDUARDO ARTES BRICHETTI_Porcentaje": "% Votos Eduardo Artes 2017",
    # "JOSE ANTONIO KAST RIST_Porcentaje": "% Votos José Antonio Kast 2017",
    # "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje": "% Votos Marco Enríquez-Ominami 2017",
    # "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje": "% Votos Sebastián Piñera 2017",
    "ALEJANDRO GUILLIER ALVAREZ_Porcentaje": "Alejandro Guillier",
    "ALEJANDRO NAVARRO BRAIN_Porcentaje": "Alejandro Navarro",
    "BEATRIZ SANCHEZ MUÑOZ_Porcentaje": "Beatriz Sánchez",
    "CAROLINA GOIC BOROEVIC_Porcentaje": "Carolina Goic",
    "EDUARDO ARTES BRICHETTI_Porcentaje": "Eduardo Artés",
    "JOSE ANTONIO KAST RIST_Porcentaje": "José Antonio Kast",
    "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje": "Marco Enríquez-Ominami",
    "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje": "Sebastián Piñera",
    "tot_per": "# Personas en el hogar",
    "v27": "# Dormitorios en el hogar",
    "zona_Urbano": "% de urbanidad",
    "tipohogar_Unipersonal": "% de hogares unipersonales",
    "tipohogar_Nuclear Monoparental": "% de hogares nucleares monoparentales",
    "tipohogar_Nuclear Biparental": "% de hogares nucleares biparentales",
    "tipohogar_Extenso Monoparental": "% de hogares extensos monoparentales",
    "tipohogar_Extenso Biparental" : "% de hogares extensos biparentales",
    "pobreza_Pobres no extremos": "% de hogares pobres no extremos",
    "pobreza_No pobres": "% de hogares no pobres",
    "v13_Propia": "% de hogares donde la vivienda es propia",
    "esc2": "Años de escolaridad",
    "ecivil_En Pareja": "% de personas en pareja",
    "o31_Sí": "% de personas afiliados a sistema previsional",
    "activ_Ocupados": "% de personas trabajando",
    "activ_Desocupados": "% de personas buscando trabajo",
    "activ_Inactivos": "% de personas inactivas",
    "s28_Sano": "% de personas sanas",
    "sist_salud_Privado": "% de personas con sistema de salud privado",
    "r1b_En [comuna de ubicación la vivienda]": "% de personas que no se han mudado",
    "ytotcor": "Ingreso total del hogar (en pesos)",
    "educ_Universidad": "% de personas con educación universitaria",
    "prom_lect8b_com": "Promedio de puntaje de SIMCE Lenguaje",
    "prom_mate8b_com": "Promedio de puntaje de SIMCE Matemáticas",
    "prom_soc8b_com": "Promedio de puntaje de SIMCE Ciencias Sociales",
    "Frac_Inmigrantes": "% de inmigrantes",
    "Frac_Pueblos": "% de pueblos originarios",
    "Frac_Viv_Ocupada": "% de viviendas ocupadas",
    "Frac_Viv_Particular": "% de viviendas particulares",
    "Frac_Viv_Colectiva": "% de viviendas colectivas",
    "Frac_Casa": "% de viviendas que son casas",
    "Frac_Depa": "% de viviendas que son departamentos",
    "Frac_Pared_Horm": "% de viviendas con paredes de hormigón",
    "Frac_Techo_Bueno": "% de viviendas con techo bueno",
    "Frac_Techo_Medio": "% de viviendas con techo medio",
    "Frac_Piso_Bueno": "% de viviendas con piso bueno",
    "Frac_Mat_Aceptable": "% de viviendas con material aceptable",
    "Frac_Agua_Aceptable": "% de viviendas con agua aceptable",
    "Densidad_Poblacion": "Densidad de población"
}

    # plot_impacto_alpha_resumen(method="PLS", 
    #                            eleccion="2023_Plebiscito", # 2021_Presidencial, 2023_Plebiscito
    #                            groups="ALL",
    #                            atributos_circ=True, 
    #                            distmin=True, 
    #                            COD_FOLDER=COD_FOLDER, 
    #                            candidatos=["A FAVOR", "EN CONTRA"], #["GABRIEL BORIC", "JOSE ANTONIO KAST"] ["A FAVOR", "EN CONTRA"]
    #                            p_valor_umbral=0.05,
    #                            guardar_figura=True, 
    #                            nombre_archivo="Impacto_alpha_2023_candidatos.png",
    #                            renombrar_variables=renombres1,
    #                            nombre_eje_y = "% votos elección 2017",
    #                            variables_mostrar = [
    # "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
    # "ALEJANDRO NAVARRO BRAIN_Porcentaje",
    # "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
    # "CAROLINA GOIC BOROEVIC_Porcentaje",
    # "EDUARDO ARTES BRICHETTI_Porcentaje",
    # "JOSE ANTONIO KAST RIST_Porcentaje",
    # "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
    # "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
    # # "tot_per",
    # # "v27",
    # # "zona_Urbano",
    # # "tipohogar_Unipersonal",
    # # "tipohogar_Nuclear Monoparental",
    # # "tipohogar_Nuclear Biparental",
    # # "tipohogar_Extenso Monoparental",
    # # "tipohogar_Extenso Biparental",
    # # "pobreza_Pobres no extremos",
    # # "pobreza_No pobres",
    # # "v13_Propia",
    # # "esc2",
    # # "ecivil_En Pareja",
    # # "o31_Sí",
    # # "activ_Ocupados",
    # # "activ_Desocupados",
    # # "activ_Inactivos",
    # # "s28_Sano",
    # # "sist_salud_Privado",
    # # "r1b_En [comuna de ubicación la vivienda]",
    # # "ytotcor",
    # # "educ_Universidad",
    # # "prom_lect8b_com",
    # # "prom_mate8b_com",
    # # "prom_soc8b_com",
    # # "Frac_Inmigrantes",
    # # "Frac_Pueblos",
    # # "Frac_Viv_Ocupada",
    # # "Frac_Viv_Particular",
    # # "Frac_Viv_Colectiva",
    # # "Frac_Casa",
    # # "Frac_Depa",
    # # "Frac_Pared_Horm",
    # # "Frac_Techo_Bueno",
    # # "Frac_Techo_Medio",
    # # "Frac_Piso_Bueno",
    # # "Frac_Mat_Aceptable",
    # # "Frac_Agua_Aceptable",
    # # "Densidad_Poblacion"
    # ])

    renombres2 = {
    "ALEJANDRO GUILLIER ALVAREZ_Porcentaje": "% Votos Alejandro Guillier 2017",
    "ALEJANDRO NAVARRO BRAIN_Porcentaje": "% Votos Alejandro Navarro 2017",
    "BEATRIZ SANCHEZ MUÑOZ_Porcentaje": "% Votos Beatriz Sánchez 2017",
    "CAROLINA GOIC BOROEVIC_Porcentaje": "% Votos Carolina Goic 2017",
    "EDUARDO ARTES BRICHETTI_Porcentaje": "% Votos Eduardo Artés 2017",
    "JOSE ANTONIO KAST RIST_Porcentaje": "% Votos José Antonio Kast 2017",
    "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje": "% Votos Marco Enríquez-Ominami 2017",
    "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje": "% Votos Sebastián Piñera 2017",
    "tot_per": "# Personas en el hogar",
    "v27": "# Dormitorios en el hogar",
    "zona_Urbano": "% de urbanidad",
    "tipohogar_Unipersonal": "% de hogares unipersonales",
    "tipohogar_Nuclear Monoparental": "% de hogares nucleares monoparentales",
    "tipohogar_Nuclear Biparental": "% de hogares nucleares biparentales",
    "tipohogar_Extenso Monoparental": "% de hogares extensos monoparentales",
    "tipohogar_Extenso Biparental" : "% de hogares extensos biparentales",
    "pobreza_Pobres no extremos": "% de hogares pobres no extremos",
    "pobreza_No pobres": "% de hogares no pobres",
    "v13_Propia": "% de hogares donde la vivienda es propia",
    "esc2": "Años de escolaridad",
    "ecivil_En Pareja": "% de personas en pareja",
    "o31_Sí": "% de personas afiliados a sistema previsional",
    "activ_Ocupados": "% de personas trabajando",
    "activ_Desocupados": "% de personas buscando trabajo",
    "activ_Inactivos": "% de personas inactivas",
    "s28_Sano": "% de personas sanas",
    "sist_salud_Privado": "% de personas con sistema de salud privado",
    "r1b_En [comuna de ubicación la vivienda]": "% de personas que no se han mudado",
    "ytotcor": "Ingreso total del hogar (en pesos)",
    "educ_Universidad": "% de personas con educación universitaria",
    "prom_lect8b_com": "Promedio de puntaje de SIMCE Lenguaje",
    "prom_mate8b_com": "Promedio de puntaje de SIMCE Matemáticas",
    "prom_soc8b_com": "Promedio de puntaje de SIMCE Ciencias Sociales",
    "Frac_Inmigrantes": "% de inmigrantes",
    "Frac_Pueblos": "% de pueblos originarios",
    "Frac_Viv_Ocupada": "% de viviendas ocupadas",
    "Frac_Viv_Particular": "% de viviendas particulares",
    "Frac_Viv_Colectiva": "% de viviendas colectivas",
    "Frac_Casa": "% de viviendas que son casas",
    "Frac_Depa": "% de viviendas que son departamentos",
    "Frac_Pared_Horm": "% de viviendas con paredes de hormigón",
    "Frac_Techo_Bueno": "% de viviendas con techo bueno",
    "Frac_Techo_Medio": "% de viviendas con techo medio",
    "Frac_Piso_Bueno": "% de viviendas con piso bueno",
    "Frac_Mat_Aceptable": "% de viviendas con material aceptable",
    "Frac_Agua_Aceptable": "% de viviendas con agua aceptable",
    "Densidad_Poblacion": "Densidad de población"
}

#     generar_tablas_latex_impacto_positivos_significativos(method="PLS", eleccion="2021_Presidencial", groups="ALL",
#                                                            atributos_circ=True, distmin=True, COD_FOLDER=COD_FOLDER,
#                                                            candidatos=["SEBASTIAN SICHEL"], p_valor_umbral=0.05, top_k=10,
#                                                            renombrar_variables=renombres2,
#                                                            variables_incluir=[
#     "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
#     "ALEJANDRO NAVARRO BRAIN_Porcentaje",
#     "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
#     "CAROLINA GOIC BOROEVIC_Porcentaje",
#     "EDUARDO ARTES BRICHETTI_Porcentaje",
#     "JOSE ANTONIO KAST RIST_Porcentaje",
#     "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
#     "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
#     "tot_per",
#     "v27",
#     "zona_Urbano",
#     "tipohogar_Unipersonal",
#     "tipohogar_Nuclear Monoparental",
#     "tipohogar_Nuclear Biparental",
#     "tipohogar_Extenso Monoparental",
#     "tipohogar_Extenso Biparental",
#     "pobreza_Pobres no extremos",
#     "pobreza_No pobres",
#     "v13_Propia",
#     "esc2",
#     "ecivil_En Pareja",
#     "o31_Sí",
#     "activ_Ocupados",
#     "activ_Desocupados",
#     "activ_Inactivos",
#     "s28_Sano",
#     "sist_salud_Privado",
#     "r1b_En [comuna de ubicación la vivienda]",
#     "ytotcor",
#     "educ_Universidad",
#     "prom_lect8b_com",
#     "prom_mate8b_com",
#     "prom_soc8b_com",
#     "Frac_Inmigrantes",
#     "Frac_Pueblos",
#     "Frac_Viv_Ocupada",
#     "Frac_Viv_Particular",
#     "Frac_Viv_Colectiva",
#     "Frac_Casa",
#     "Frac_Depa",
#     "Frac_Pared_Horm",
#     "Frac_Techo_Bueno",
#     "Frac_Techo_Medio",
#     "Frac_Piso_Bueno",
#     "Frac_Mat_Aceptable",
#     "Frac_Agua_Aceptable",
#     "Densidad_Poblacion"
# ])

#     generar_heatmap_impacto_alpha(method="PLS", eleccion="2023_Plebiscito", groups="ALL",
#                                                  atributos_circ=True, distmin=True, COD_FOLDER=COD_FOLDER,
#                                                  renombrar_variables=renombres2,
#                                                  variables_incluir=[
#     "ALEJANDRO GUILLIER ALVAREZ_Porcentaje",
#     "ALEJANDRO NAVARRO BRAIN_Porcentaje",
#     "BEATRIZ SANCHEZ MUÑOZ_Porcentaje",
#     "CAROLINA GOIC BOROEVIC_Porcentaje",
#     "EDUARDO ARTES BRICHETTI_Porcentaje",
#     "JOSE ANTONIO KAST RIST_Porcentaje",
#     "MARCO ENRIQUEZ-OMINAMI GUMUCIO_Porcentaje",
#     "SEBASTIAN PIÑERA ECHENIQUE_Porcentaje",
#     "tot_per",
#     "v27",
#     "zona_Urbano",
#     "tipohogar_Unipersonal",
#     "tipohogar_Nuclear Monoparental",
#     "tipohogar_Nuclear Biparental",
#     "tipohogar_Extenso Monoparental",
#     "tipohogar_Extenso Biparental",
#     "pobreza_Pobres no extremos",
#     "pobreza_No pobres",
#     "v13_Propia",
#     "esc2",
#     "ecivil_En Pareja",
#     "o31_Sí",
#     "activ_Ocupados",
#     "activ_Desocupados",
#     "activ_Inactivos",
#     "s28_Sano",
#     "sist_salud_Privado",
#     "r1b_En [comuna de ubicación la vivienda]",
#     "ytotcor",
#     "educ_Universidad",
#     "prom_lect8b_com",
#     "prom_mate8b_com",
#     "prom_soc8b_com",
#     "Frac_Inmigrantes",
#     "Frac_Pueblos",
#     "Frac_Viv_Ocupada",
#     "Frac_Viv_Particular",
#     "Frac_Viv_Colectiva",
#     "Frac_Casa",
#     "Frac_Depa",
#     "Frac_Pared_Horm",
#     "Frac_Techo_Bueno",
#     "Frac_Techo_Medio",
#     "Frac_Piso_Bueno",
#     "Frac_Mat_Aceptable",
#     "Frac_Agua_Aceptable",
#     "Densidad_Poblacion"
# ])
    
    #votes_2021(built = False, built_df = False, estandarizar = False) # get the difference between the expected value and the real value of the 2021 election
    #test_train_EM(built_df=False, estandarizar=False, pca_= True, max_iterations=1000, graph=False, save=False)
    #lambda_grid_search()
    #show_lambda_grid_search
    #table_alpha_beta()
    #bootstrap_EM(num_iterations=10, max_iterations=1000, sample_size=None, save=True)
    #table_results()

# para PCA sobre todo el data set
# python3 EM_pytorch_kfold.py pca 1.0 T 44 1 1
# python3.11 EM_pytorch_kfold.py pca 0.8 T 1 5 1
# python3.11 EM_pytorch.py pca 0.8 T 5
# python3.11 EM_pytorch.py fs 0.8 T 0000
# python3.11 EM_pytorch.py fs 0.8 T 0100
# python3.11 EM_pytorch.py fs 0.8 T 0200


# Mejor PCA con bootstrap
# python3.11 EM_pytorch.py pca 1 T 3 0


# Mejor FS con bootstrap
# python3.11 EM_pytorch.py fs 1 T 16 0
# python3 EM_pytorch_kfold.py


# Graficos PCA
# python3.11 EM_pytorch_kfold.py pca 0.8 T 44 5 1


# python3.11 EM_pytorch.py ridge1 0.5 T 56
# python3 EM_pytorch_kfold.py pca 0.8 T 5
# python3 EM_pytorch.py pca 0.8 T 5 7
# /opt/homebrew/bin/python3.9 EM_pytorch.py ridge1 0.8 T 59
# /opt/homebrew/bin/python3.9 EM_pytorch.py ridge1 0.5 T 56
# /opt/homebrew/bin/python3.9 EM_pytorch.py ridge23 0.8 T 5
# /opt/homebrew/bin/python3.9 EM_pytorch.py 1
# /opt/homebrew/bin/python3.9 -m line_profiler 
# profiling
# paso 1: 
# kernprof -l EM.py
# paso 2: 
# /opt/homebrew/bin/python3.9 -m line_profiler EM.py.lprof
# /opt/homebrew/bin/python3.9 -m line_profiler EM.py.lprof
